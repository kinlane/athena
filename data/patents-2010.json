
[{
	"name": "Access control differentiation in trusted computer system",
	"summary": "",
	"abstract": "A trusted computer system that offers Linuxu00ae compatibility and supports contemporary hardware speeds. It is designed to require no porting of common applications which run on Linux, to be easy to develop for, and to allow the use of a wide variety of modern development tools. The system is further designed to meet or exceed the Common Criteria EAL-5 or higher rating through incorporation of required security features, as well as a very high level of assurance for handling data at a wide range of sensitivity (e.g., classification) levels in a wide range of operational environments. This is achieved through the implementation of a well-layered operating system which has been designed from the ground up to enforce security, but which also supports Linux operating system functions and methods.",
	"url": null,
	"owner": "",
	"publication_number": "07765595",
	"publication_date": "2010-07-27",
	"application_number": "11512180",
	"application_date": "2006-08-30",
	"tags": null,
	"slug": "access-control-differentiation-in-trusted-computer-system",
	"match_type": "description"
},
{
	"name": "Access point object depositable on a web page and useful for initiating communication between depositing user and buddy",
	"summary": "",
	"abstract": "Wablet is a real time messaging platform that allows people to communicate with each other over the Internet. Unlike current methods of Internet communication, contact can be established and maintained without disclosing personal identity or permanent contact information such as an email address, IM handle, phone number or first and last name. Thus, communication can be undertaken without binding any user to any instant messaging system, and can be accessed over the web from any browser on any desktop platform without downloading or installing a client side application. In essence, Wablet acts as form of online calling card that allows instant communication from any web page, comment on a page, email signature, or URL. such that internet communication and contact with strangers is enabled by providing mechanisms to represent contextual online identity and reputation in the form of a digital caller ID that can be presented in order to initiate contact.",
	"url": null,
	"owner": "",
	"publication_number": "07822821",
	"publication_date": "2010-10-26",
	"application_number": "11488925",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": "access-point-object-depositable-on-a-web-page-and-useful-for-initiating-communication-between-depositing-user-and-buddy",
	"match_type": "description"
},
{
	"name": "Active path navigation system",
	"summary": "",
	"abstract": "A method for navigating within a multi-level hierarchical collapsing menu structure is disclosed. Each level in the menu structure contains plural items, each item being at least one of a function, a pointer to a location, and a pointer to another level. The method of the present invention includes a step of providing a graphical user menu system displaying the items of a given level and enabling selection thereof, wherein access of the given level requires sequential access of each of the levels preceding the given level in the hierarchy. An Active Path is dynamically constructed as a sequence of active links as items are selected using the graphical user menu system, with one active link corresponding to each of the items selected. The active links provide direct access to a function corresponding level or menu item without the need to navigate using the graphical user menu system.",
	"url": null,
	"owner": "",
	"publication_number": "07725836",
	"publication_date": "2010-05-25",
	"application_number": "11687646",
	"application_date": "2007-03-17",
	"tags": null,
	"slug": "active-path-navigation-system",
	"match_type": "description"
},
{
	"name": "Adaptation to device-capability based on device characteristics",
	"summary": "",
	"abstract": "The invention is a flexible and adaptive application framework and method for providing media services via an interactive media services client device coupled to a programmable media services server device. A method of the preferred embodiment of the invention includes distributing or partitioning computation, data storage, and/or data transmission between the server and client devices to flexibly adapt to and take advantage of the available computing and/or network resources.",
	"url": null,
	"owner": "",
	"publication_number": "07814174",
	"publication_date": "2010-10-12",
	"application_number": "11758046",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "adaptation-to-devicecapability-based-on-device-characteristics",
	"match_type": "description"
},
{
	"name": "Apparatus and method for biometric database management system",
	"summary": "",
	"abstract": "A method and system for constructing a database management system for managing biometric data is disclosed. The disclosed system receives data from another database or from and enrollment process, encodes the data with an encoding plug-in, and stores the encoded data in a biometric data storage. The data may be enhanced before being stored. Incoming target data likewise is encoded using an encoding plug-in and may be pre-processed, and is sent to a matching algorithm that is either built-in or a plug-in algorithm. Further processing may occur after application of the matching algorithm. The disclosed database management system can be used not only for biometric database, but also for other similar types of data management.",
	"url": null,
	"owner": "",
	"publication_number": "07689005",
	"publication_date": "2010-03-30",
	"application_number": "11064266",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": "apparatus-and-method-for-biometric-database-management-system",
	"match_type": "description"
},
{
	"name": "Apparatus and process for conjunctive normal form processing",
	"summary": "",
	"abstract": "A method for analyzing system-problems, comprising the steps of: accepting from a user an input describing a system having a problem; parsing the user input to create a boolean representation of the system, the boolean representation comprising a series of equations; determining that the boolean representation comprises an unsatisfiable series of equations; for each equation in the series of equations, performing the steps of: creating a modified series of equations by removing the equation from the series of equations; and determining if the modified series of equations is satisfiable, and, if the modified series of equations is satisfiable, deriving a solution wording from the removed equation.",
	"url": null,
	"owner": "",
	"publication_number": "07644058",
	"publication_date": "2010-01-05",
	"application_number": "11788800",
	"application_date": "2007-04-20",
	"tags": null,
	"slug": "apparatus-and-process-for-conjunctive-normal-form-processing",
	"match_type": "description"
},
{
	"name": "Apparatus for compact internetworked wireless integrated network sensors (WINS)",
	"summary": "",
	"abstract": "The Wireless Integrated Network Sensor Next Generation (WINS NG) nodes provide distributed network and Internet access to sensors, controls, and processors that are deeply embedded in equipment, facilities, and the environment. The WINS NG network is a new monitoring and control capability for applications in transportation, manufacturing, health care, environmental monitoring, and safety and security. The WINS NG nodes combine microsensor technology, low power distributed signal processing, low power computation, and low power, low cost wireless and/or wired networking capability in a compact system. The WINS NG networks provide sensing, local control, remote reconfigurability, and embedded intelligent systems in structures, materials, and environments.",
	"url": null,
	"owner": "",
	"publication_number": "07797367",
	"publication_date": "2010-09-14",
	"application_number": "09684387",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": "apparatus-for-compact-internetworked-wireless-integrated-network-sensors-wins",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for decentralized data conversion",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed for decentralized data conversion. The present invention includes providing a server configured to be accessible over the Internet and receiving a payment from a user through a payment gateway module, the gateway module operated by the server. Additionally, the invention includes receiving a data source over the Internet into the server, transforming data in the data source to create converted data adapted to a target, the transformation directed by one or more integration objects configured to perform conversion steps, the integration objects in a hierarchical structure defining an order of execution, the transformation controlled by the server, and returning the transformed data over the Internet from the server. The present invention allows customers who would otherwise be unable to access powerful data conversion tools to convert data at a reasonable cost.",
	"url": null,
	"owner": "",
	"publication_number": "07661103",
	"publication_date": "2010-02-09",
	"application_number": "11566035",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": "apparatus-system-and-method-for-decentralized-data-conversion",
	"match_type": "description"
},
{
	"name": "Architecture for mobile IPv6 applications over IPv4",
	"summary": "",
	"abstract": "Mobile clients can execute IPv6 applications in an IPv4 environment without the need for any specialized IPv6 hardware or upgrades to the network infrastructure. The architecture provides a seamless, disruption-free connectivity experience for mobile clients. Mobile clients are automatically connected to other mobile clients irrespective of their network connectively, whether wireless, wire line, IPv4, IPv6, public or private. Mobile clients communicate with other mobile clients using a secure, end-to-end IPv6 tunnel. This creates a persistent VPN connection between two clients using software.",
	"url": null,
	"owner": "",
	"publication_number": "07810149",
	"publication_date": "2010-10-05",
	"application_number": "11468281",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "architecture-for-mobile-ipv6-applications-over-ipv4",
	"match_type": "description"
},
{
	"name": "Brand mapping",
	"summary": "",
	"abstract": "A user uses a portable electronic device to select an image representative of a brand. In response to the user's selection of the image representative of the brand, the device automatically presents the user with an image of a map that indicates a current location of the device and shows one or more images representative of brand purchase sites where the selected brand may be accessed by the user.",
	"url": null,
	"owner": "",
	"publication_number": "07768395",
	"publication_date": "2010-08-03",
	"application_number": "11758392",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "brand-mapping",
	"match_type": "description"
},
{
	"name": "Computer-hardware, life-extension apparatus and method",
	"summary": "",
	"abstract": "A computer hardware life-extension apparatus and method is disclosed to circumvent hardware-dependent software installation locks, imposed by selected software packages, which may artificially enforce compliance with a minimum set of hardware requirements before allowing installation. Various techniques may be used to circumvent the artificial hardware locks, thereby effectively extending the useful life, and delaying the forced obsolescence, of selected computer hardware. An apparatus and method in accordance with the invention may be used to extend the life of a wide variety of computer hardware, including but not limited to processors, main memory, secondary storage devices, and the like.",
	"url": null,
	"owner": "",
	"publication_number": "07779407",
	"publication_date": "2010-08-17",
	"application_number": "10158353",
	"application_date": "2002-05-29",
	"tags": null,
	"slug": "computerhardware-lifeextension-apparatus-and-method",
	"match_type": "description"
},
{
	"name": "Configuration engine",
	"summary": "",
	"abstract": "In a distributed computing, object oriented, component based framework, some components may be capable of running some tasks, incapable of running others and capable of running still others, but obtaining only sub-optimal results. Components may already be assigned tasks, and have insufficient capacity remaining to execute additional tasks. A configuration manager seeks to rectify this. The configuration manager gathers information stored in a configuration template associated with each of the components, interrogates the components about their current status and compares the results to a dynamic plan developed by a tasking engine. The configuration engine then assigns tasks to processor managers based on the results obtained by the configuration manager.",
	"url": null,
	"owner": "",
	"publication_number": "07765521",
	"publication_date": "2010-07-27",
	"application_number": "10303268",
	"application_date": "2002-11-25",
	"tags": null,
	"slug": "configuration-engine",
	"match_type": "description"
},
{
	"name": "Consistent cluster operational data in a server cluster using a quorum of replicas",
	"summary": "",
	"abstract": "A method and system for increasing server cluster availability by requiring at a minimum only one node and a quorum replica set of replica members to form and operate a cluster. Replica members maintain cluster operational data. A cluster operates when one node possesses a majority of replica members, which ensures that any new or surviving cluster includes consistent cluster operational data via at least one replica member from the immediately prior cluster. Arbitration provides exclusive ownership by one node of the replica members, including at cluster formation, and when the owning node fails. Arbitration uses a fast mutual exclusion algorithm and a reservation mechanism to challenge for and defend the exclusive reservation of each member. A quorum replica set algorithm brings members online and offline with data consistency, including updating unreconciled replica members, and ensures consistent read and update operations.",
	"url": null,
	"owner": "",
	"publication_number": "07774469",
	"publication_date": "2010-08-10",
	"application_number": "11225222",
	"application_date": "2005-09-12",
	"tags": null,
	"slug": "consistent-cluster-operational-data-in-a-server-cluster-using-a-quorum-of-replicas",
	"match_type": "description"
},
{
	"name": "CrystalSym process",
	"summary": "",
	"abstract": "The CrystalSym process is a logical process. It enables users of the process to easily construct symmetric systems of objects within a 3D virtual space. This process utilizes the gamut of the crystallographic 3D space filling symmetry groups of which there are 230, as well as subgroups of these 230 groups. These subgroups include point groups, line groups, frieze groups, plane groups, rod groups and layer groups. It also utilizes a certain class of non-space filling point groups.",
	"url": null,
	"owner": "",
	"publication_number": "07801688",
	"publication_date": "2010-09-21",
	"application_number": "10892026",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": "crystalsym-process",
	"match_type": "description"
},
{
	"name": "Database interface and database analysis system",
	"summary": "",
	"abstract": "A method, system, and computer program product for interactive searching with executable suggestions are provided. The present invention provides a search engine and data management technology that can understand what users are looking for, understand the data in a database, and present immediately useful suggestions for finding the right information. Executable suggestions are presented that enable a user to further narrow or broaden a search intelligently and adaptively in real-time. Each executable suggestion describes a search and corresponding search criteria and provides information on the actual search results a user will obtain according to this search criteria. In one embodiment of the present invention, a system has a suggestion engine and one or more suggestion spaces.",
	"url": null,
	"owner": "",
	"publication_number": "07730008",
	"publication_date": "2010-06-01",
	"application_number": "11179818",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": "database-interface-and-database-analysis-system",
	"match_type": "description"
},
{
	"name": "Deferred processing of continuous metrics",
	"summary": "",
	"abstract": "Network monitoring is performed using a three-tiered distributed computing system architecture, including a data source tier, a portal tier and a client tier. The data source tier monitors the physical data on the network medium using multiple data collection sources connected to the network. The probes analyze network data and generate fundamental metrics that describe attributes of the network data. The portal tier encapsulates the fundamental metrics along with executable processor objects into data containers having a predefined format. The processor objects contain logic that operates on fundamental metrics contained in the data containers in a manner so as to generate new derived metrics or aggregates of metric data. The data containers may be requested by the client tier, which executes the processor objects and provides a user interface for displaying various types of network information derived from the contents of data containers.",
	"url": null,
	"owner": "",
	"publication_number": "07788365",
	"publication_date": "2010-08-31",
	"application_number": "10424361",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": "deferred-processing-of-continuous-metrics",
	"match_type": "description"
},
{
	"name": "Digital content management system and apparatus",
	"summary": "",
	"abstract": "There are provided a digital content management apparatus which further embodies a digital content management apparatus used with a user terminal, and a system which protects the secrets of a digital content. The system and the apparatus are a real time operating system using a micro-kernel, which is incorporated in the digital content management apparatus as an interruption process having high priority. When a user uses the digital content, whether there is an illegitimate usage or not, is watched by interrupting the usage process. In the case where illegitimate usage is carried out, a warning is given or the usage is stopped. The decryption/re-encryption functions of the digital content management apparatus having the decryption/re-encryption functions are not restricted to the inside of the user apparatus. By providing the decryption/re-encryption functions between the networks, the exchange of secret information between different networks is secured. By using this apparatus for converting a crypt algorithm, information exchange is made possible between systems which adopt different algorithms.",
	"url": null,
	"owner": "",
	"publication_number": "07801817",
	"publication_date": "2010-09-21",
	"application_number": "11491400",
	"application_date": "2006-07-20",
	"tags": null,
	"slug": "digital-content-management-system-and-apparatus",
	"match_type": "description"
},
{
	"name": "Display device for use as a computer monitor, having a printer controller and a pagewidth printhead",
	"summary": "",
	"abstract": "A display device for use as a computer monitor, the display device comprising:nn",
	"url": null,
	"owner": "",
	"publication_number": "07672012",
	"publication_date": "2010-03-02",
	"application_number": "10922836",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": "display-device-for-use-as-a-computer-monitor-having-a-printer-controller-and-a-pagewidth-printhead",
	"match_type": "description"
},
{
	"name": "Dynamic associative storage security for long-term memory storage devices",
	"summary": "",
	"abstract": "A hierarchical folder security system for mapping files into and out of alias directories and/or real directories depending on: 1) the directory of the specific file being accessed, 2) the program thread requesting access to a memory storage device (), and 3) the type of access request being made (i.e. load, save, run, etc.). For write access requests (i.e. save, modify, paste, delete, cut, move, rename, etc.), security controller () determines if the requested folder access address () is associated with the requesting program's folder address (). If it is, the file is written at absolute address () on disk platter () through real folder map (). If requested address () is not associated with program folder address (), then an alias directory address is created and the file is written at alias address () through alias folder address map ().",
	"url": null,
	"owner": "",
	"publication_number": "07814554",
	"publication_date": "2010-10-12",
	"application_number": "10983320",
	"application_date": "2004-11-06",
	"tags": null,
	"slug": "dynamic-associative-storage-security-for-longterm-memory-storage-devices",
	"match_type": "description"
},
{
	"name": "Efficient handling of work requests in a network interface device",
	"summary": "",
	"abstract": "A method for communication includes inputting from a host processor to a network interface device a sequence of work requests indicative of operations to be carried out by the network interface device with respect to a plurality of the connections. The device looks ahead through the sequence in order to identify at least first and second operations that are to be carried out with respect to one of the connections in response to first and second work requests, respectively, wherein the second work request does not immediately follow the first work request in the sequence. The device loads the context data for the one of the connections from a host memory into a context cache, and performs at least the first and second operations sequentially while the context data are held in the cache.",
	"url": null,
	"owner": "",
	"publication_number": "07688838",
	"publication_date": "2010-03-30",
	"application_number": "11416919",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": "efficient-handling-of-work-requests-in-a-network-interface-device",
	"match_type": "description"
},
{
	"name": "Efficient object storage for zone rendering",
	"summary": "",
	"abstract": "Similar, contiguous primitives are stored as a single primitive in zone rendering bins. A primitive packet used in the bin is allowed to vary in length and the currently open type of primitive is recorded on a per-bin basis. A special code is used to specify a variable number of subsequent indices. With this mechanism, the hardware is able to start outputting and replicating primitive commands into bin lists on the fly without requiring the buffering of the entire primitive. Given the variable nature of the primitive instruction, multiple similar/sequential primitives can be concatenated using a single primitive command header.",
	"url": null,
	"owner": "",
	"publication_number": "07791601",
	"publication_date": "2010-09-07",
	"application_number": "11897738",
	"application_date": "2007-08-31",
	"tags": null,
	"slug": "efficient-object-storage-for-zone-rendering",
	"match_type": "description"
},
{
	"name": "Electronic record management system",
	"summary": "",
	"abstract": "A method, apparatus, and article of manufacture for managing electronic records on a computer network is provided. The method provides the steps of creating an electronic tag that uniquely identifies an electronic record, storing the electronic tag, and distributing the electronic record. The method further performs the steps of analyzing a network user's workstation specifications, analyzing a network user's user profile, and generating a reference code, wherein the electronic tag is generated from information analyzed in the network user's workstation specification, the network user's user profile and the reference code.",
	"url": null,
	"owner": "",
	"publication_number": "07689563",
	"publication_date": "2010-03-30",
	"application_number": "09175589",
	"application_date": "1998-10-20",
	"tags": null,
	"slug": "electronic-record-management-system",
	"match_type": "description"
},
{
	"name": "Enhanced data tip system and method",
	"summary": "",
	"abstract": "Displaying data sub-items corresponding to a cursor-selected object displayed on a computer screen involves determining that a cursor is positioned to point at an object on the computer screen, loading the cursor-selected object, evaluating the cursor-selected object to determine it has a fixed value, has related data sub-items or if the related data sub-items are capable of expansion into lower-tier sub-items. The values for the object and the related data sub-items are assembled and displayed in a window that indicates the values of the object and the related data sub-items along with an indication of a presence of lower-tier sub-items which can in turn be further examined.",
	"url": null,
	"owner": "",
	"publication_number": "07779356",
	"publication_date": "2010-08-17",
	"application_number": "10723824",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": "enhanced-data-tip-system-and-method",
	"match_type": "description"
},
{
	"name": "File transfer system for direct transfer between computers",
	"summary": "",
	"abstract": "A file authentication requesting device that stores a computer program for requesting authentication of files in digital systems, the device comprises a confirmation request system that generates a request for a confirmation receipt from a third party authenticator authenticating the attributes of a file; a transferring system that transfers attributes of at least one file to be authenticated to the third party authenticator from the device that requested the confirmation; and a receiving system that receives the confirmation receipt comprising authenticated file attributes, after authentication by the third party authenticator; wherein, at least one file authentication is received from the third party authenticator. Corresponding processing devices, media, systems and methods are also provided.",
	"url": null,
	"owner": "",
	"publication_number": "07810144",
	"publication_date": "2010-10-05",
	"application_number": "12384736",
	"application_date": "2009-04-07",
	"tags": null,
	"slug": "file-transfer-system-for-direct-transfer-between-computers",
	"match_type": "description"
},
{
	"name": "Flexible request and response communications interfaces",
	"summary": "",
	"abstract": "Methods and systems for database storage allowing subscriber entities to create specialized interfaces for storing different classes of information based on subscribed-defined categories and parameters, allowing for efficient search and retrieval of the information by users using the subscriber-defined categories and parameters. A method for processing a search request comprises receiving from a user a set of search terms, retrieving from a database a set of records satisfying the search terms, sending the search terms to one or more suppliers as indicated by supplier links associated with the records, receiving a set of results from the one or more suppliers, and sending the set of results to the user. A method for information storage comprises sending an interface to a supplier over a network, receiving from the supplier a supplier-defined category, a set of supplier-defined parameters associated with the category, and a supplier link, and adding a record comprising the category, the supplier link, and the set of parameters to a database, thereby allowing the database to be searched for the supplier as a provider according to the category and the parameters, and allowing the supplier to be queried via the supplier link for results according to the category and the parameters.",
	"url": null,
	"owner": "",
	"publication_number": "07788250",
	"publication_date": "2010-08-31",
	"application_number": "11833867",
	"application_date": "2007-08-03",
	"tags": null,
	"slug": "flexible-request-and-response-communications-interfaces",
	"match_type": "description"
},
{
	"name": "Hyperlinked media objects in personal video recording",
	"summary": "",
	"abstract": "Systems and methods of utilizing hyperlinks in connection with video services are disclosed. One such method includes receiving a video program having a start time. This method also includes receiving, before the start time, a media object associated with the video program. This method also includes storing the media object, and displaying the media object and the video program on a screen.",
	"url": null,
	"owner": "",
	"publication_number": "07793330",
	"publication_date": "2010-09-07",
	"application_number": "12388731",
	"application_date": "2009-02-19",
	"tags": null,
	"slug": "hyperlinked-media-objects-in-personal-video-recording",
	"match_type": "description"
},
{
	"name": "Integrated online job recruitment system",
	"summary": "",
	"abstract": "The present invention provides an easy to use system and method for assisting job seekers in locating job opportunities and applying for the same using an online connectivity protocol which is simple to use and highly efficient in terms of time consumption. The system identifies and extracts keywords from the job postings in an accessible job database to create a keyword targeted list that excludes common words and phrases. The keyword targeted list is then processed to form a keyword targeted prefix list which in turn is inserted into a search engine. Upon appropriate query by a potential job seeker, the search engine returns its results while giving prominent placement to one or more job postings sponsored by a recruiter. An interested job seeker clicks on the sponsored job posting is directed to the job details through a website mediated application programming interface.",
	"url": null,
	"owner": "",
	"publication_number": "07653567",
	"publication_date": "2010-01-26",
	"application_number": "11525343",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "integrated-online-job-recruitment-system",
	"match_type": "abstract"
},
{
	"name": "Integrating applications in multiple languages",
	"summary": "",
	"abstract": "A method, system, and computer readable medium for integrating applications in multiple languages comprises receiving properties related to an application in an original language, importing source files related to the application, receiving classes related to the source files, mapping data types related to the classes, receiving properties related to an application in a target language, and generating integration classes related to the data types.",
	"url": null,
	"owner": "",
	"publication_number": "07797688",
	"publication_date": "2010-09-14",
	"application_number": "11086101",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": "integrating-applications-in-multiple-languages",
	"match_type": "description"
},
{
	"name": "Memory storage using a look-up table",
	"summary": "",
	"abstract": "Data is stored in a flash or other memory using a look-up table, which includes a plurality of data elements, to encode and decode the data. An amount of charge to be stored in each memory cell is calibrated to correspond to one of the data elements in the look-up table. Data is retrieved from the memory by decoding using the look-up table. The amount of charge in the memory cells is determined, for example, by reading a voltage level from the cell. The charge or voltage level is matched to a corresponding one of the data elements in the look-up table.",
	"url": null,
	"owner": "",
	"publication_number": "07653779",
	"publication_date": "2010-01-26",
	"application_number": "12365772",
	"application_date": "2009-02-04",
	"tags": null,
	"slug": "memory-storage-using-a-lookup-table",
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating, configuring and displaying a widget to display user-generated highlights",
	"summary": "",
	"abstract": "A method and system for enabling the display of portions of internet documents that have been highlighted by users of a highlighting service are disclosed. Accordingly, a highlighting service includes a web portal with a web page providing users with a snippet of code, which, when inserted into an internet document, causes the internet document to display highlights from the highlighting service. The snippet of code can be configured to query the highlighting service for highlights that were made by certain users, or, highlights made on documents from certain domains, and so forth. The code associated with the user interface object displaying the highlights can e configured to periodically query the highlighting service to retrieve up-to-date highlights, thereby dynamically changing the highlights appearing on a web page or internet document.",
	"url": null,
	"owner": "",
	"publication_number": "07844891",
	"publication_date": "2010-11-30",
	"application_number": "11766792",
	"application_date": "2007-06-21",
	"tags": null,
	"slug": "method-and-apparatus-for-creating-configuring-and-displaying-a-widget-to-display-usergenerated-highlights",
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a language independent document abstract",
	"summary": "",
	"abstract": "A method of extracting significant phrases from one or more documents stored in a computer-readable medium. A sequence of words is read from the one or more documents and a score is determined for each word in the sequence based on the length of the word. The score for each word in the sequence is compared against a threshold score. The sequence of words is indicated to be a significant phrase if the number of words in the sequences that have a score greater than the threshold score equals or exceeds a predetermined number. A sentence containing the sequence of words is retrieved from the document, if the sequence of words is a significant phrase. An abstract of the document is searched to determine if the sentence has been previously included in the abstract. If not, the sentence is added to the abstract.",
	"url": null,
	"owner": "",
	"publication_number": "07792667",
	"publication_date": "2010-09-07",
	"application_number": "12239495",
	"application_date": "2008-09-26",
	"tags": null,
	"slug": "method-and-apparatus-for-generating-a-language-independent-document-abstract",
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a website using a multi-dimensional description of the website",
	"summary": "",
	"abstract": "A technique for generating a web site in accordance with received data entry by: determining at least one characteristic of at least one web site dimension of the web site based on the data entry; generating a multi-dimensional description of the web site based on the determined characteristics; retrieving web site data according to the generated multi-dimensional description of the web site; and generating the web site based upon the generated multi-dimensional description of the web site and the retrieved web site data.",
	"url": null,
	"owner": "",
	"publication_number": "07779352",
	"publication_date": "2010-08-17",
	"application_number": "09651906",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": "method-and-apparatus-for-generating-a-website-using-a-multidimensional-description-of-the-website",
	"match_type": "description"
},
{
	"name": "Method and apparatus for improving the transcription accuracy of speech recognition software",
	"summary": "",
	"abstract": "A virtual vocabulary database is provided for use with a with a particular user database as part of a speech recognition system. Vocabulary elements within the virtual database are imported from the user database and are tagged to include numerical data corresponding to the historical use of the vocabulary element within the user database. For each speech input, potential vocabulary element matches from the speech recognition system are provided to the virtual database software which creates virtual sub-vocabularies from the criteria according to predefined criteria templates. The software then applies vocabulary element weighting adjustments according to the virtual sub-vocabulary weightings and applies the adjustment to the default weighting provided by the speech recognition system. The modified weightings are returned with the associated vocabulary elements to the speech engine for selection of an appropriate match to the input speech.",
	"url": null,
	"owner": "",
	"publication_number": "07805299",
	"publication_date": "2010-09-28",
	"application_number": "11584904",
	"application_date": "2006-10-23",
	"tags": null,
	"slug": "method-and-apparatus-for-improving-the-transcription-accuracy-of-speech-recognition-software",
	"match_type": "description"
},
{
	"name": "Method and apparatus for improving the transcription accuracy of speech recognition software",
	"summary": "",
	"abstract": "The present invention involves an enhanced method for operating a speech recognition system in which sequential vocabularies are loaded for comparison to the input speech. Form each sequential vocabulary a subset of candidate vocabulary elements are selected for matching, the probability match scores of each of the selected candidate vocabulary elements is weighted by a weighting factor that is dependant on the particular vocabulary from which the vocabulary elements are selected. As each set of candidate vocabulary elements is selected from the next sequential vocabulary, the selected set is combined with the set of previously selected and weighted vocabulary elements, which is then further weighted according to the weighting criteria of the then active vocabulary. At the end of the sequential vocabulary selection grouping process, the final, sequentially weighted match scores for the candidate vocabulary elements are arranged and an appropriate match to the input speech is presented.",
	"url": null,
	"owner": "",
	"publication_number": "07809565",
	"publication_date": "2010-10-05",
	"application_number": "11510435",
	"application_date": "2006-08-25",
	"tags": null,
	"slug": "method-and-apparatus-for-improving-the-transcription-accuracy-of-speech-recognition-software",
	"match_type": "description"
},
{
	"name": "Method and apparatus for partial updating of client interfaces",
	"summary": "",
	"abstract": "A method and apparatus for partial updating of client interfaces in a client-server environment. The client updates the corresponding server-side through a middleware u201cengine.u201d Individual interface element change requests may be queued. Programmatically defined events may trigger processing of the change request queue on the client, resulting in partial updating of an interface container, such as a Web page or XML document, in the client interface context. Processing may occur on the server, where resultant client update requests are likewise queued. Alternative programmatically defined events may trigger the return of the server change queue to the client. Only those elements of the interface container affected by changes in the queue are updated. This partial updating method replaces the need for refreshing an entire interface, thus affording a more desktop-like look and feel.",
	"url": null,
	"owner": "",
	"publication_number": "07805523",
	"publication_date": "2010-09-28",
	"application_number": "11067481",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "method-and-apparatus-for-partial-updating-of-client-interfaces",
	"match_type": "description"
},
{
	"name": "Method and apparatus for replicating a panoplex onto a storage medium from a master",
	"summary": "",
	"abstract": "An apparatus and method for obtaining a storage medium with a deeply customizable set of installed content. Soft assets (e.g., programs, songs, videos, etc.) that form the content are selected from among a much larger set of preinstalled soft assets previously stored on storage media, such as disk drives. In some embodiments, based on a user's selections, the non-selected assets are permanently erased from a storage medium, while the remaining assets are available as installed (wherein substantially no further processing is required to install them). In some embodiments, a new device uses the storage medium to provide its user with a fully functional device without the need to separately install the soft assets from a plurality of sources (e.g., from program-distribution CDROMS and the like). Some embodiments include the storage medium having the soft assets installed, and including a program that elicits selections from a user and erases non-selected assets.",
	"url": null,
	"owner": "",
	"publication_number": "07712094",
	"publication_date": "2010-05-04",
	"application_number": "11428359",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "method-and-apparatus-for-replicating-a-panoplex-onto-a-storage-medium-from-a-master",
	"match_type": "description"
},
{
	"name": "Method and apparatus to secure a computing environment",
	"summary": "",
	"abstract": "A method and apparatus for a surround security system is provided. The surround security system is embodied on a computer readable medium and includes a packet enforcement engine to screen packets to and from the network and a TCP/IP stack, an application enforcement engine to screen packets to and from the TCP/IP stack and applications on the computer system, a file monitor to verify integrity of files on the computer system and a vulnerability scanner to ensure that the computer system complies with a set level of security. The surround security system provides security which protects accesses through the TCP/IP stack for applications, and an operating system of the computer system.",
	"url": null,
	"owner": "",
	"publication_number": "07797752",
	"publication_date": "2010-09-14",
	"application_number": "10739552",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": "method-and-apparatus-to-secure-a-computing-environment",
	"match_type": "description"
},
{
	"name": "Method and system for facilitating the integration of a plurality of dissimilar systems",
	"summary": "",
	"abstract": "The present invention is related to a method and system for facilitating the integration of a plurality of dissimilar systems by allowing networks of integration framework installations and/or other compatible B2B servers to inter-operate across corporate enterprise boundaries to integrate the disparate systems operating within each corporate enterprise.",
	"url": null,
	"owner": "",
	"publication_number": "07797452",
	"publication_date": "2010-09-14",
	"application_number": "11523078",
	"application_date": "2006-09-19",
	"tags": null,
	"slug": "method-and-system-for-facilitating-the-integration-of-a-plurality-of-dissimilar-systems",
	"match_type": "description"
},
{
	"name": "Method and system for mobile services",
	"summary": "",
	"abstract": "A method for providing mobile services, such as mobile financial services, includes providing a wireless handset or other device as an adjunct access device for a user account. The device is assigned a unique identification number, such as an MDN, MEID, or both. The unique identification number is associated with the account and in an exemplary embodiment, comprises at least a portion of the account number(s) with the service provider. Transactions are conducted with the handset access device and enhanced multi-factor and biometric security authentication may be provided. Handset voice, data, or other usage is settled and billed within the financial account. The service provider is able to download software, advertising, or content applications to the adjunct device and maintains the capability to disable the device. In a further aspect, a system for the execution of mobile transactions is provided.",
	"url": null,
	"owner": "",
	"publication_number": "07766223",
	"publication_date": "2010-08-03",
	"application_number": "12263865",
	"application_date": "2008-11-03",
	"tags": null,
	"slug": "method-and-system-for-mobile-services",
	"match_type": "description"
},
{
	"name": "Method and system for optimal pricing and allocation with allotments",
	"summary": "",
	"abstract": "A method and system for the determination of optimal pricing and allocation of securities in an open, competitive environment. The method and system may also be used in developing pre-markets of other items that are difficult to price and allocate in a competitive manner, such as the underwriting/securitization of contracts for property; future revenue/earning streams from an asset and/or group of assets; underwritten insurance portfolios, intellectual property and other goods and services. The system of price optimization and allocation is accomplished by interactive feedback of information using a display and including competitive participation of individual members of the public (and/or their agents) or institutional buyers over a data network e.g., the Internet, uncovering the nature and identification of demand in a self-organizing fashion. Demand emerges through participants' interaction with the system and with each other, via a graphically-supported, interactive reservation process. Indications of interest (e.g., bids) may be treated as an allotment.",
	"url": null,
	"owner": "",
	"publication_number": "07676423",
	"publication_date": "2010-03-09",
	"application_number": "11653129",
	"application_date": "2007-01-12",
	"tags": null,
	"slug": "method-and-system-for-optimal-pricing-and-allocation-with-allotments",
	"match_type": "description"
},
{
	"name": "Method and system for providing power management for an integrated gigabit ethernet controller",
	"summary": "",
	"abstract": "Certain aspects of a system for controlling power for a network interface controller device may comprise a precision voltage comparator that may instantaneously detect ramp up of a main voltage corresponding to a main voltage source in order to control the network interface controller device. A power monitor may detect when a threshold voltage of the main voltage is reached during the ramp up. A main voltage source switch and an auxiliary voltage source switch may switch an output from an auxiliary voltage to the main voltage source without the switches being simultaneously on. The power monitor may determine whether the main voltage is ramping up in excess of a determined rate and if so, may decrease a rate at which the main voltage ramps up. A current limiter and/or the power monitor may monitor and limit an inrush current caused during main voltage ramp up.",
	"url": null,
	"owner": "",
	"publication_number": "07689852",
	"publication_date": "2010-03-30",
	"application_number": "10887068",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": "method-and-system-for-providing-power-management-for-an-integrated-gigabit-ethernet-controller",
	"match_type": "description"
},
{
	"name": "Method and system for requesting a reservation for a set of equity instruments to be offered",
	"summary": "",
	"abstract": "A method and system for the determination of optimal pricing and allocation of securities in an open, competitive environment. The method and system may also be used in developing pre-markets of other items that are difficult to price and allocate in a competitive manner, such as the underwriting/securitization of contracts for property; future revenue/earning streams from an asset and/or group of assets; underwritten insurance portfolios, intellectual property and other goods and services. The system of price optimization and allocation is accomplished by interactive feedback of information using a display and including competitive participation of individual members of the public (and/or their agents) or institutional buyers over a data network e.g., the Internet, uncovering the nature and identification of demand in a self-organizing fashion. Demand emerges through participants' interaction with the system and with each other, via a graphically-supported, interactive reservation process. Multiple types of units (e.g., maturities of a term series bond offering) may be sold in one offering.",
	"url": null,
	"owner": "",
	"publication_number": "07693779",
	"publication_date": "2010-04-06",
	"application_number": "11652761",
	"application_date": "2007-01-12",
	"tags": null,
	"slug": "method-and-system-for-requesting-a-reservation-for-a-set-of-equity-instruments-to-be-offered",
	"match_type": "description"
},
{
	"name": "Method for distributing content to a user station",
	"summary": "",
	"abstract": "A method for controlling a user station configured for communications with a multiplicity of independently-operated data sources via a non-proprietary network includes steps for providing a user interface to enable a user at the user station to select multiple ones of the multiplicity of independently-operated data object sources to be polled; automatically polling each of the selected data object sources in order to determine availability of desired data at each of the selected data object sources; and automatically transporting desired data determined to be available from each of the selected data object sources to the user station. Software and a user station for implementing the method are also described.",
	"url": null,
	"owner": "",
	"publication_number": "07653687",
	"publication_date": "2010-01-26",
	"application_number": "11696542",
	"application_date": "2007-06-08",
	"tags": null,
	"slug": "method-for-distributing-content-to-a-user-station",
	"match_type": "description"
},
{
	"name": "Method for internetworked hybrid wireless integrated network sensors (WINS)",
	"summary": "",
	"abstract": "The Wireless Integrated Network Sensor Next Generation (WINS NG) nodes provide distributed network and Internet access to sensors, controls, and processors that are deeply embedded in equipment, facilities, and the environment. The WINS NG network is a new monitoring and control capability for applications in transportation, manufacturing, health care, environmental monitoring, and safety and security. The WINS NG nodes combine microsensor technology, low power distributed signal processing, low power computation, and low power, low cost wireless and/or wired networking capability in a compact system. The WINS NG networks provide sensing, local control, remote reconfigurability, and embedded intelligent systems in structures, materials, and environments.",
	"url": null,
	"owner": "",
	"publication_number": "07844687",
	"publication_date": "2010-11-30",
	"application_number": "09684742",
	"application_date": "2000-10-04",
	"tags": null,
	"slug": "method-for-internetworked-hybrid-wireless-integrated-network-sensors-wins",
	"match_type": "description"
},
{
	"name": "Method of student course and space scheduling",
	"summary": "",
	"abstract": "A method of determining student demand for academic courses during a variety of time periods and a method of scheduling the student demand for academic courses for academic programs of study is provided, the method being operated on a computer system.",
	"url": null,
	"owner": "",
	"publication_number": "07805107",
	"publication_date": "2010-09-28",
	"application_number": "11124751",
	"application_date": "2005-05-09",
	"tags": null,
	"slug": "method-of-student-course-and-space-scheduling",
	"match_type": "description"
},
{
	"name": "Method, device, and system for completing on-line financial transaction",
	"summary": "",
	"abstract": "A method for conducting a secure transaction over a network includes the steps of receiving a price and a transaction identifier from a merchant, the transaction identifier identifying a purchase selection made by a user, receiving a user identifier from a user, receiving a financial institution selection from the user, initiating a communication session with the selected financial institution, receiving a financial-institution user-identifier from the user, communicating the financial-institution user-identifier to the selected financial institution, communicating to the selected financial institution a request to transfer funds, receiving the funds from the selected financial institution, and sending the funds to the merchant.",
	"url": null,
	"owner": "",
	"publication_number": "07720764",
	"publication_date": "2010-05-18",
	"application_number": "12024581",
	"application_date": "2008-02-01",
	"tags": null,
	"slug": "method-device-and-system-for-completing-online-financial-transaction",
	"match_type": "description"
},
{
	"name": "Method, system and message structure for electronically exchanging medical information",
	"summary": "",
	"abstract": "The present invention relates to a message structure for electronically exchanging medical information between applications utilizing disparate medical coding systems and record architectures, the message structure comprising an optional storyline keyword that sets the context for one or more subsequent statements, each of which statements comprise a genre selected from a set of genre keywords representing message categories, a subject, comprising either a natural language string of one or more words or a nested statement, and, optionally, one or more parametrized predicates comprising a context joiner selected from a set of context joiner keywords, and a parameter comprising a natural language string of one or more words or a nested statement.",
	"url": null,
	"owner": "",
	"publication_number": "07752035",
	"publication_date": "2010-07-06",
	"application_number": "11299561",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "method-system-and-message-structure-for-electronically-exchanging-medical-information",
	"match_type": "description"
},
{
	"name": "Method, system and process for data encryption and transmission",
	"summary": "",
	"abstract": "A system, process and method for data encryption and transmission are disclosed. By adopting the paradigm of a pre-paid self addressed express envelope end-users will interact with this invention in much the same way they interact with traditional delivery systems. They simply provide the content, and delivery takes place without any further user intervention. The encryption is a u201csoftware applianceu201d. This software already knows the identity of the sender and the receiver and the encryption key that is to be used; all it needs from the user is the information which is to be securely transported.",
	"url": null,
	"owner": "",
	"publication_number": "07844813",
	"publication_date": "2010-11-30",
	"application_number": "10196061",
	"application_date": "2002-07-15",
	"tags": null,
	"slug": "method-system-and-process-for-data-encryption-and-transmission",
	"match_type": "description"
},
{
	"name": "Methods and apparatus of sharing graphics data of multiple instances of interactive application",
	"summary": "",
	"abstract": "The present invention presents systems and methods for running interactive applications such as video games remotely over broadband network by an interactive application host system. In accordance with the present invention, interactive applications such as video games can be hosted and executed remotely by one or multiple interactive application hosts in native mode or using emulation or other similar binary execution technique. An interactive application host system can use dedicated graphics rendering apparatus inter-connected with the interactive application host(s) for rendering or compressing frames of multiple interactive applications. A graphics rendering apparatus can cache the graphics data received from the interactive application host(s) and share graphics data among multiple instances of interactive application from the same interactive application host or from different interactive application hosts.",
	"url": null,
	"owner": "",
	"publication_number": "07830388",
	"publication_date": "2010-11-09",
	"application_number": "11670968",
	"application_date": "2007-02-03",
	"tags": null,
	"slug": "methods-and-apparatus-of-sharing-graphics-data-of-multiple-instances-of-interactive-application",
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07856296",
	"publication_date": "2010-12-21",
	"application_number": "11981238",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "model-train-control-system",
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07711458",
	"publication_date": "2010-05-04",
	"application_number": "11981275",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "model-train-control-system",
	"match_type": "description"
},
{
	"name": "Model train control system",
	"summary": "",
	"abstract": "A system which operates a digitally controlled model railroad transmitting a first command from a first client program to a resident external controlling interface through a first communications transport. A second command is transmitted from a second client program to the resident external controlling interface through a second communications transport. The first command and the second command are received by the resident external controlling interface which queues the first and second commands. The resident external controlling interface sends third and fourth commands representative of the first and second commands, respectively, to a digital command station for execution on the digitally controlled model railroad.",
	"url": null,
	"owner": "",
	"publication_number": "07818102",
	"publication_date": "2010-10-19",
	"application_number": "11981320",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "model-train-control-system",
	"match_type": "description"
},
{
	"name": "Multi-port network interface device with shared processing resources",
	"summary": "",
	"abstract": "A network interface device includes a bus interface that communicates over a bus with a host processor and memory, and a network interface, including at least first and second physical ports, which are coupled to send and receive data packets carrying data over a packet network. A protocol processor includes a single transmit processing pipeline and a single receive processing pipeline, which are coupled between the bus interface and the network interface so as to convey the data between both of the first and second physical ports of the network interface and the memory via the bus interface while performing protocol offload processing on the data packets.",
	"url": null,
	"owner": "",
	"publication_number": "07835380",
	"publication_date": "2010-11-16",
	"application_number": "11416677",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": "multiport-network-interface-device-with-shared-processing-resources",
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07761417",
	"publication_date": "2010-07-20",
	"application_number": "11831758",
	"application_date": "2007-07-31",
	"tags": null,
	"slug": "networkextensible-reconfigurable-media-appliance",
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07743025",
	"publication_date": "2010-06-22",
	"application_number": "11836668",
	"application_date": "2007-08-09",
	"tags": null,
	"slug": "networkextensible-reconfigurable-media-appliance",
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07805405",
	"publication_date": "2010-09-28",
	"application_number": "12238686",
	"application_date": "2008-09-26",
	"tags": null,
	"slug": "networkextensible-reconfigurable-media-appliance",
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliance",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07831555",
	"publication_date": "2010-11-09",
	"application_number": "11934712",
	"application_date": "2007-11-02",
	"tags": null,
	"slug": "networkextensible-reconfigurable-media-appliance",
	"match_type": "description"
},
{
	"name": "Network-extensible reconfigurable media appliances",
	"summary": "",
	"abstract": "Extensible reconfigurable media appliance for security and entertainment captures images digitally for storage. Digital effects and filters are applied to incoming video stream on-the-fly or to video data stored in memory. Digital effects and filters are dynamically stored, modified, updated or deleted, providing extensible reconfigurable effects studio. Digital media appliance communicates wirelessly with other media appliances, computers, security systems, video storage, email, chat, cellular services or PDAs to provide seamless integration of captured video stream.",
	"url": null,
	"owner": "",
	"publication_number": "07805404",
	"publication_date": "2010-09-28",
	"application_number": "11934678",
	"application_date": "2007-11-02",
	"tags": null,
	"slug": "networkextensible-reconfigurable-media-appliances",
	"match_type": "description"
},
{
	"name": "Networked computing using objects",
	"summary": "",
	"abstract": "A system for networked computing using objects, each object comprising: enablement data, a first identity arrangement for holding a first identity indicating a host or provider () of said object (), and a second identity arrangement for holding a second identity of a remote entity (client ) establishing a relationship with said object via a network (). Such a system supports network based computing and interactions between remote objects, including desktop-like behavior in which such remote objects are represented by desktop-like icons on a user terminal device.",
	"url": null,
	"owner": "",
	"publication_number": "07752335",
	"publication_date": "2010-07-06",
	"application_number": "10537429",
	"application_date": "2003-12-03",
	"tags": null,
	"slug": "networked-computing-using-objects",
	"match_type": "description"
},
{
	"name": "Object-oriented processing of markup",
	"summary": "",
	"abstract": "An application-specific client for object-oriented processing of markup includes a model object and a plurality of element objects. The model object is configured to respond to client requests including construct-element, accept-root-element, and accept-root-text. The element objects are configured to respond to client requests including accept-attribute, accept-element, and accept-text. Responses to requests contain application-specific processing as necessary. A driver generates client requests in response to processing of XML markup. An RSS client processes markup describing syndicated web content to HTML markup.",
	"url": null,
	"owner": "",
	"publication_number": "07844956",
	"publication_date": "2010-11-30",
	"application_number": "11286914",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": "objectoriented-processing-of-markup",
	"match_type": "description"
},
{
	"name": "Open wireless architecture (OWA) medium access control (MAC) processing architecture for future mobile terminal",
	"summary": "",
	"abstract": "A software architecture for future open wireless architecture (OWA) mobile terminal providing an open and secured software platform supporting various wireless air interfaces with multi-dimensional mobility handovers and maximized spectrum efficiency for the truly service-oriented fixed, mobile and wireless communications convergence.",
	"url": null,
	"owner": "",
	"publication_number": "07822065",
	"publication_date": "2010-10-26",
	"application_number": "11620694",
	"application_date": "2007-01-07",
	"tags": null,
	"slug": "open-wireless-architecture-owa-medium-access-control-mac-processing-architecture-for-future-mobile-terminal",
	"match_type": "description"
},
{
	"name": "Organizational data analysis and management",
	"summary": "",
	"abstract": "Organizational data analysis and management are described, including evaluating an item comprising the organizational data, the item being created in a first application and having a first format, associating the item with the matter based on a type or a classification, and configuring the copy of the item for presentation in an interface associated with a second application using a second format, the copy of the item being configured for selection from within the second application in the first format.",
	"url": null,
	"owner": "",
	"publication_number": "07747605",
	"publication_date": "2010-06-29",
	"application_number": "11406197",
	"application_date": "2006-04-17",
	"tags": null,
	"slug": "organizational-data-analysis-and-management",
	"match_type": "description"
},
{
	"name": "Patent-related tools and methodology for use in the merger and acquisition process",
	"summary": "",
	"abstract": "The present invention is related to patent-related tools, and methodologies involving those tools, for assisting in all stages of the merger and acquisition process. The IPAM server may be used in conjunction with the tools and methodologies to aid in the merger and acquisition process. These tools or methods include, but are not limited to, a topographic map, a technology classification, a SIC classification, a radar diagram, a patent citation tree, a citation root tree, a citation count report, a citation frequency graph, a citation frequency report, a patent count/year, an application count/year, a patent aging graph, a U.S. primary class/subclass, an international patent class, an assignee patent count report by primary class/subclass, a patent count graph by number of patents, a top assignees primary class/subclass by percent of total, a months to issue patents, a features grouping, a document annotation, an inventor patent count/assignee, an inventor patent count graph, and inventor data.",
	"url": null,
	"owner": "",
	"publication_number": "07716060",
	"publication_date": "2010-05-11",
	"application_number": "09790897",
	"application_date": "2001-02-23",
	"tags": null,
	"slug": "patentrelated-tools-and-methodology-for-use-in-the-merger-and-acquisition-process",
	"match_type": "description"
},
{
	"name": "Portable communication device and method of use",
	"summary": "",
	"abstract": "A portable communication device and method of use is provided. In one embodiment, the method of using a handheld mobile telephone includes capturing a plurality of images via an image input device; storing the plurality of images in a memory, receiving a first speech input, identifying command information in said first speech input; retrieving information from memory based, at least in part, on the command information. The method may further include generating a request related to an article of commerce that includes, at least in part, the information retrieved from memory, determining a destination for transmitting the request, and wirelessly transmitting said request through a mobile telephone network to the destination.",
	"url": null,
	"owner": "",
	"publication_number": "07725360",
	"publication_date": "2010-05-25",
	"application_number": "11556430",
	"application_date": "2006-11-03",
	"tags": null,
	"slug": "portable-communication-device-and-method-of-use",
	"match_type": "description"
},
{
	"name": "Signature search architecture for programmable intelligent search memory",
	"summary": "",
	"abstract": "Memory architecture provides capabilities for high performance content search. The architecture creates an innovative memory that can be programmed with content search rules which are used by the memory to evaluate presented content for matching with the programmed rules. Content search rules include of regular expressions which are compiled to finite state automata (FSA) and further include of patterns of strings a first set of which are compiled to a compressed signature database and a second set of which are compiled into FSAs. The finite state automata are then programmed in Programmable Intelligent Search Memory (PRISM) programmable FSA rule blocks and the compressed signature database is programmed in the PRISM signature search engines for evaluating content with the content search rules. A compiler compiles the content search rules for evaluation by PRISM memory. When the content being searched matches any of the rules programmed in the Programmable Intelligent Search Memory (PRISM), action(s) associated with the matched rule(s) are taken.",
	"url": null,
	"owner": "",
	"publication_number": "07831606",
	"publication_date": "2010-11-09",
	"application_number": "11952103",
	"application_date": "2007-12-06",
	"tags": null,
	"slug": "signature-search-architecture-for-programmable-intelligent-search-memory",
	"match_type": "description"
},
{
	"name": "System and method for adaptive video processing with coordinated resource allocation",
	"summary": "",
	"abstract": "An embodiment of the present invention provides a system and method for adaptive video decoding. A method for adaptive video decoding includes determining whether a resource constrained mode is to be initiated, and responsive to a determination that the resource constrained mode is to be initiated, initiating the resource constrained mode, including foregoing the decoding of portions of received video input. For example, adaptive video decoding may include foregoing the decompression and reconstruction of selected video frames during intervals of high demand for memory and/or bus bandwidth resources.",
	"url": null,
	"owner": "",
	"publication_number": "07796691",
	"publication_date": "2010-09-14",
	"application_number": "10854874",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "system-and-method-for-adaptive-video-processing-with-coordinated-resource-allocation",
	"match_type": "description"
},
{
	"name": "System and method for automatic remote notification at predetermined times or events",
	"summary": "",
	"abstract": "The present invention provides a system and method for automatic remote notification that includes eliciting and receiving, into a server, triggering information from a client, wherein the triggering information includes specifications of a first communication to be sent, a destination for the first communication, and a first triggering event for sending the first communication, receiving arming information from the client and arming the sending of the first communication to be sent based on the triggering information, and conditionally sending the first communication from the server to the first destination based on occurrence of the first triggering event. The specification of the destination for the first communication includes an electronic address of a first communications device of a person, the specification of the first triggering event includes information that defines an amount of time, and the arming includes starting a timer that triggers upon elapse of the amount of time.",
	"url": null,
	"owner": "",
	"publication_number": "07818420",
	"publication_date": "2010-10-19",
	"application_number": "11845034",
	"application_date": "2007-08-24",
	"tags": null,
	"slug": "system-and-method-for-automatic-remote-notification-at-predetermined-times-or-events",
	"match_type": "description"
},
{
	"name": "System and method for automatically configuring remote computer",
	"summary": "",
	"abstract": "A system and method for automatically configuring a remote computer to establish a VPN connection with a network is disclosed. According to the system and method, a configuration generator determines information necessary for the remote computer to establish the VPN connection, and generate an executable file to be run the remote computer. When run on the remote computer, the executable file automatically updates the remote computer's configuration settings so as to enable it to establish the connection with the network. The information required by the configuration generator can either be extracted from a database automatically, or can be keyed in by a network administrator.",
	"url": null,
	"owner": "",
	"publication_number": "07844718",
	"publication_date": "2010-11-30",
	"application_number": "11709355",
	"application_date": "2007-02-22",
	"tags": null,
	"slug": "system-and-method-for-automatically-configuring-remote-computer",
	"match_type": "description"
},
{
	"name": "System and method for flexibly managing heterogeneous message delivery",
	"summary": "",
	"abstract": "A system and method for flexibly managing heterogeneous message delivery. A message is queued. The message includes an identifier and content in intermediate format pending delivery through type-specific message interfaces. The delivery of the message to a recipient is managed with the message cast into one of a plurality of message types. The identifier is formatted and the content of the message is structured from the intermediate format into one such message type for the recipient. The message is sent to the recipient via the message interface corresponding to the selected message type. The delivery of the message is tracked by monitoring an acknowledgement of a receipt of the message by the recipient. An alternate message type available is selected upon non-acknowledgment of message receipt.",
	"url": null,
	"owner": "",
	"publication_number": "07734705",
	"publication_date": "2010-06-08",
	"application_number": "11524722",
	"application_date": "2006-09-20",
	"tags": null,
	"slug": "system-and-method-for-flexibly-managing-heterogeneous-message-delivery",
	"match_type": "description"
},
{
	"name": "System and method for in-context authoring of alternate content for non-textual objects",
	"summary": "",
	"abstract": "A system and method for enabling in-context authoring of alternate content for one or more non-textual objects is presented. An electronic document containing content that includes at least one non-textual object is accessed. In-context editing of alternate content corresponding to the non-textual object is facilitated. The alternate content is presented contextually co-located with the content located proximate to a physical placement of the non-textual object. Editing operations are performed on the alternate content in response to editing commands. A system and method for enabling in-context authoring of alternate content for one or more non-textual objects is also presented. An electronic document containing content is accessed. In-context editing of alternate content corresponding to a non-textual object is facilitated. A segment of the content is selected. The non-textual object is obtained from a data source and substituted for the content segment, which is stored as the alternate content for the non-textual object.",
	"url": null,
	"owner": "",
	"publication_number": "07676746",
	"publication_date": "2010-03-09",
	"application_number": "11345217",
	"application_date": "2006-02-01",
	"tags": null,
	"slug": "system-and-method-for-incontext-authoring-of-alternate-content-for-nontextual-objects",
	"match_type": "description"
},
{
	"name": "System and method for increasing data throughput using thread scheduling",
	"summary": "",
	"abstract": "A system and method for delivering data from a device driver to an application increases the usage of synchronous processing (fast I/O mode) of data requests from the application by utilizing thread scheduling to enhance the likelihood that the requested data are available for immediate delivery to the application. If the amount of data in a data queue for storing data ready for delivery is low, the thread scheduling of the system is modified to promote the thread of the device driver to give it the opportunity to place more data in the data queue for consumption by the application. The promotion of the thread of the device driver may be done by switching from the application thread to another thread (not necessarily the device driver thread), boosting the device driver's priority, and/or lowering the priority of the application, etc.",
	"url": null,
	"owner": "",
	"publication_number": "07690003",
	"publication_date": "2010-03-30",
	"application_number": "10652709",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": "system-and-method-for-increasing-data-throughput-using-thread-scheduling",
	"match_type": "description"
},
{
	"name": "System and method for producing merchandise for a virtual environment",
	"summary": "",
	"abstract": "A system and method are provided for producing customized merchandise for a user based upon a character within a virtual environment, by retrieving character data representing a player character within a game and converting the character data into merchandise attributes. The merchandise attributes are then used to create instructions for producing an item of customized merchandise.",
	"url": null,
	"owner": "",
	"publication_number": "07761339",
	"publication_date": "2010-07-20",
	"application_number": "11056902",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": "system-and-method-for-producing-merchandise-for-a-virtual-environment",
	"match_type": "description"
},
{
	"name": "System and method for providing common operators across multiple applications",
	"summary": "",
	"abstract": "A system and technique for managing and manipulating data objects, and more particularly data files, of different types utilizing a common user interface. The system allows management of folders and files across many different file types native to many different source applications, such as operating system files, document management system files, photo storage applications, electronic computer aided drawing vaults and the like. The system initializes by requesting an operations list including file information which the system uses to map source application commands to predetermined common commands associated with the system. The system also uses the operations list to display folders and files using native icons and to query the user using text associated with the underlying source application, allowing for ease of file management across a broad array of file applications and types.",
	"url": null,
	"owner": "",
	"publication_number": "07814054",
	"publication_date": "2010-10-12",
	"application_number": "12080703",
	"application_date": "2008-04-03",
	"tags": null,
	"slug": "system-and-method-for-providing-common-operators-across-multiple-applications",
	"match_type": "description"
},
{
	"name": "System and unified setting interface for configuring network manageable devices",
	"summary": "",
	"abstract": "A unified setting interface that enables a management application to configure network manageable devices, regardless of their type or manufacturer. Configuration of a network manageable device requires that certain information be provided to the network manageable device. For different types of devices from different manufacturers, this information and its format can vary. A management application using the unified setting interface does not require the individual interfaces for configuring network manageable devices from different manufacturers.",
	"url": null,
	"owner": "",
	"publication_number": "07668944",
	"publication_date": "2010-02-23",
	"application_number": "10986831",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": "system-and-unified-setting-interface-for-configuring-network-manageable-devices",
	"match_type": "description"
},
{
	"name": "System for processing and using electronic documents",
	"summary": "",
	"abstract": "The illustrative embodiments provide a system and method for processing a document. A data storage unit is provided to store data corresponding to the document, several documents processed at a previous time, and a set of rules. A rule in the set of rules may include a rule identifier, a directive to proceed to a second rule based on a condition, a specification of a data component, the specification configured to include a data component identifier, a data component attribute, and a directive to proceed to a second specification of a second data component based on a second condition. A rules-based engine is provided that may communicate with the data storage unit and may execute a rule in the set of rules. The set of rules may include rules for parsing, validating, identifying, relating, selecting, extracting, transforming, generating, analyzing, error correcting, reporting, and sending.",
	"url": null,
	"owner": "",
	"publication_number": "07778982",
	"publication_date": "2010-08-17",
	"application_number": "11903071",
	"application_date": "2007-09-20",
	"tags": null,
	"slug": "system-for-processing-and-using-electronic-documents",
	"match_type": "description"
},
{
	"name": "System, method, and computer readable medium for integrating an original application with a remote application",
	"summary": "",
	"abstract": "A method, system, and computer readable medium for integrating an original application with a remote application comprises generating adapter classes related to the original application, generating proxy classes related to the remote application, wherein the proxy classes are adapted to communicate with the adapter classes, generating data types related to the remote application, wherein the data types related to the remote application are equivalent to data types related to the original application, and generating streamers related to the remote application, wherein the streamers related to the remote application are adapted to be utilized by the proxy classes.",
	"url": null,
	"owner": "",
	"publication_number": "07861212",
	"publication_date": "2010-12-28",
	"application_number": "11086121",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": "system-method-and-computer-readable-medium-for-integrating-an-original-application-with-a-remote-application",
	"match_type": "description"
},
{
	"name": "Tax deduction revaluation system",
	"summary": "",
	"abstract": "A method and system for calculating a tax credit obtains a tax function T(A), a value for deduction (D), and a value for an income amount (A) at which a computation is based. The method and system computes a tax credit C=k(T(A)u2212T(Au2212(Du2212C))). The calculation may be done non-recursively or recursively by calculating values C=k(T(A)u2212T(Au2212(Du2212C))).",
	"url": null,
	"owner": "",
	"publication_number": "07769662",
	"publication_date": "2010-08-03",
	"application_number": "11503212",
	"application_date": "2006-08-14",
	"tags": null,
	"slug": "tax-deduction-revaluation-system",
	"match_type": "description"
},
{
	"name": "Techniques for delivering personalized content with a real-time routing network",
	"summary": "",
	"abstract": "Techniques for dynamically updating a live object with personalized content for clients are provided. The techniques include receiving a first message from a source including a first identifier and a second identifier. The first identifier may be unique to a client. The second identifier may be generic across many clients. The first message includes information for updating a property of a live object associated with the second identifier. A client specific to the first identifier may be identified. A second message may then be routed through a network to the client. The second message may include the first identifier and the second identifier and also may contain information for updating a property of the live object associated with the second identifier. The client may receive the second message and may be capable of causing an update of the property of the live object associated with the second identifier.",
	"url": null,
	"owner": "",
	"publication_number": "07814225",
	"publication_date": "2010-10-12",
	"application_number": "11515233",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": "techniques-for-delivering-personalized-content-with-a-realtime-routing-network",
	"match_type": "description"
},
{
	"name": "Touch tone voice internet service",
	"summary": "",
	"abstract": "A method for touch tone voice internet service includes the steps of remotely retrieving a document including HTML tags, converting selected text in the document to speech, and enumerating links in the text document. The method further includes the steps of accepting touch tone input to designate one of the links as a selected link, and retrieving a second document specified by the selected link. As an example, the document may be a Hypertext Markup Language (HTML) document or an email message.",
	"url": null,
	"owner": "",
	"publication_number": "07770104",
	"publication_date": "2010-08-03",
	"application_number": "10770200",
	"application_date": "2004-02-02",
	"tags": null,
	"slug": "touch-tone-voice-internet-service",
	"match_type": "description"
},
{
	"name": "Transmitting secondary portions of a webpage as a voice response signal in response to a lack of response by a user",
	"summary": "",
	"abstract": "A method of facilitating access to the Internet involving vocal and aural navigation, selection and rendering of Internet content. Visual Internet content is selected and rendered to produce information in amounts appropriate for representation in concise aural form to facilitate vocal selection and navigation based upon such aural representation.",
	"url": null,
	"owner": "",
	"publication_number": "07712020",
	"publication_date": "2010-05-04",
	"application_number": "10104430",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": "transmitting-secondary-portions-of-a-webpage-as-a-voice-response-signal-in-response-to-a-lack-of-response-by-a-user",
	"match_type": "description"
},
{
	"name": "Trunk branch repeated transaction index for property valuation",
	"summary": "",
	"abstract": "A repeated transaction index (RTI) for estimation of a home price index (HPI) that controls for systematic bias. Purchase transaction records are used to estimate an HPI for areas large enough to have sufficient transaction data. Bias is removed from non-purchase transaction records using the HPI. All available data is used to estimate a localized HPI that pertains to smaller geographical areas (e.g., zip codes, neighborhoods, etc.) after correction of the biases in the non-purchase transaction records.",
	"url": null,
	"owner": "",
	"publication_number": "07765125",
	"publication_date": "2010-07-27",
	"application_number": "11033979",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": "trunk-branch-repeated-transaction-index-for-property-valuation",
	"match_type": "description"
},
{
	"name": "Vehicle control interface",
	"summary": "",
	"abstract": "Briefly, in accordance with one or more embodiments, one or more vehicle system nay be transferred via a control unit and/or an order confirmation may be communicated via the control unit.",
	"url": null,
	"owner": "",
	"publication_number": "07818097",
	"publication_date": "2010-10-19",
	"application_number": "11464119",
	"application_date": "2006-08-11",
	"tags": null,
	"slug": "vehicle-control-interface",
	"match_type": "description"
},
{
	"name": "Vertical desktop printer",
	"summary": "",
	"abstract": "A desktop printer having a relatively small u201cfootprintu201d on a desktop is provided. It has a base and a print engine connected together by a substantially vertically extending body of the printer. A media supply and collector are provided on surfaces of the body so as to be substantially vertically disposed, where the media is supplied to the print engine for printing from the supply and is delivered to the collector after printing.",
	"url": null,
	"owner": "",
	"publication_number": "07686446",
	"publication_date": "2010-03-30",
	"application_number": "11014727",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": "vertical-desktop-printer",
	"match_type": "description"
},
{
	"name": "Virtual supercomputer",
	"summary": "",
	"abstract": "The virtual supercomputer is an apparatus, system and method for generating information processing solutions to complex and/or high-demand/high-performance computing problems, without the need for costly, dedicated hardware supercomputers, and in a manner far more efficient than simple grid or multiprocessor network approaches. The virtual supercomputer consists of a reconfigurable virtual hardware processor, an associated operating system, and a set of operations and procedures that allow the architecture of the system to be easily tailored and adapted to specific problems or classes of problems in a way that such tailored solutions will perform on a variety of hardware architectures, while retaining the benefits of a tailored solution that is designed to exploit the specific and often changing information processing features and demands of the problem at hand.",
	"url": null,
	"owner": "",
	"publication_number": "07774191",
	"publication_date": "2010-08-10",
	"application_number": "10821582",
	"application_date": "2004-04-09",
	"tags": null,
	"slug": "virtual-supercomputer",
	"match_type": "description"
},
{
	"name": "Voice message transmission and retrieval",
	"summary": "",
	"abstract": "A method and system for storing, transmitting and retrieving an audio message is disclosed herein. The invention allows a recipient to access a voice message sent by a sender by clicking on an access key in a SMS text sent to the recipient's phone. The SMS text preferably provides information on the sender and the length of the voice message. Once the recipient accesses the message, another SMS text is sent to the sender providing information on the when and how much of the voice message was communicated to the recipient. The voice message is preferably stored at a server of the system.",
	"url": null,
	"owner": "",
	"publication_number": "07746987",
	"publication_date": "2010-06-29",
	"application_number": "12758009",
	"application_date": "2010-04-11",
	"tags": null,
	"slug": "voice-message-transmission-and-retrieval",
	"match_type": "description"
},
{
	"name": "Voice-activity detection based on far-end and near-end statistics",
	"summary": "",
	"abstract": "Methods and apparatus of managing a communication system, wherein a decision regarding a level of activity at a first end is made based at least in part on the level of activity at the second end. In one embodiment, the energy level of a first-end audio signal is measured. The first end is declared voice-active if the first-end energy level is greater than or equal to a first threshold value. The first end is declared voice-inactive if the first-end energy level is less than the first threshold value. To determine the value of the first threshold value, the energy level of a second-end audio signal is measured. If the second-end energy level is greater than or equal to a second threshold value, the second end is declared voice-active, in which case the first threshold is maintained at a relatively high level. If the second-end energy level is less than the second threshold value, the second end is declared voice-inactive, in which case the first threshold is maintained at a relatively lower level.",
	"url": null,
	"owner": "",
	"publication_number": "07835311",
	"publication_date": "2010-11-16",
	"application_number": "11846399",
	"application_date": "2007-08-28",
	"tags": null,
	"slug": "voiceactivity-detection-based-on-farend-and-nearend-statistics",
	"match_type": "description"
},
{
	"name": "Electronic mail system with functionality to include both private and public messages in a communication",
	"summary": "",
	"abstract": "An e-mail system is disclosed that overcomes many deficiencies of, but is backward compatible with, existing e-mail systems. Embodiments of the system may include various features, including but not limited to: (1) secure transfer of e-mail messages, without the need for users to replace existing e-mail clients or to change e-mail addresses; (2) tracking of all actions performed in connection with an e-mail transmission; (3) the ability for a recipient to view information about an e-mail message, optionally including information about how other addressees have responded to it, before deciding whether to retrieve the e-mail message; (4) the aggregation of entire e-mail conversations into a single threaded view; (5) the ability to include both private and public messages in a single e-mail communication; (6) sender control over downstream actions performed in connection with an e-mail message; (7) flexible control over cryptographic methods used to encrypt emails messages for storage.",
	"url": null,
	"owner": "0733660 B.C. Ltd.",
	"publication_number": "07730142",
	"publication_date": "2010-06-01",
	"application_number": "11427915",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "electronic-mail-system-with-functionality-to-include-both-private-and-public-messages-in-a-communication",
	"match_type": "description"
},
{
	"name": "Secure electronic mail system with configurable cryptographic engine",
	"summary": "",
	"abstract": "An e-mail system is disclosed that overcomes many deficiencies of, but is backward compatible with, existing e-mail systems. Embodiments of the system may include various features, including but not limited to: (1) secure transfer of e-mail messages, without the need for users to replace existing e-mail clients or to change e-mail addresses; (2) tracking of all actions performed in connection with an e-mail transmission; (3) the ability for a recipient to view information about an e-mail message, optionally including information about how other addressees have responded to it, before deciding whether to retrieve the e-mail message; (4) the aggregation of entire e-mail conversations into a single threaded view; (5) the ability to include both private and public messages in a single e-mail communication; (6) sender control over downstream actions performed in connection with an e-mail message; (7) flexible control over cryptographic methods used to encrypt emails messages for storage.",
	"url": null,
	"owner": "0733660 B.C. Ltd.",
	"publication_number": "07822820",
	"publication_date": "2010-10-26",
	"application_number": "11427943",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "secure-electronic-mail-system-with-configurable-cryptographic-engine",
	"match_type": "description"
},
{
	"name": "Web inspection calibration system and related methods",
	"summary": "",
	"abstract": "Systems and methods for calibrating a web inspection system.",
	"url": null,
	"owner": "3M Innovative Properties Company",
	"publication_number": "07773226",
	"publication_date": "2010-08-10",
	"application_number": "12133487",
	"application_date": "2008-06-05",
	"tags": null,
	"slug": "web-inspection-calibration-system-and-related-methods",
	"match_type": "description"
},
{
	"name": "Data entry for personal computing devices",
	"summary": "",
	"abstract": "In one aspect, the user can rapidly enter and search for text using a data entry system through a combination of entering one or more characters on a digitally displayed keyboard with a pointing device and using a search list to obtain a list of completion candidates. The user can activate the search list to obtain a list of completion candidates at any time while entering a partial text entry with the data entry system. When the search list is active, a list of completion candidates is displayed on a graphical user interface for the user to select from and the user can perform one of several actions. When the user deactivates the search list, the user can continue adding to or modifying the current partial text entry being entered, and may re-invoke the search list to further search for completion candidates based on the modified partial text entry.",
	"url": null,
	"owner": "602531 British Columbia Ltd.",
	"publication_number": "07681124",
	"publication_date": "2010-03-16",
	"application_number": "11134810",
	"application_date": "2005-05-19",
	"tags": null,
	"slug": "data-entry-for-personal-computing-devices",
	"match_type": "description"
},
{
	"name": "Data entry for personal computing devices",
	"summary": "",
	"abstract": "A method, system and computer-readable media for supporting text entry on a personal computing device by activating automated searching to search for completion candidates which are based on a partial text entry received from a user. The completion candidates are displayed in a search list. The user may select a completion candidate from among the completion candidates in the search list to correspondingly modify the partial text entry, or the user may decline all of the completion candidates displayed in the search list and terminate the automated searching. The system may further provide a digital keyboard for use in entering text.",
	"url": null,
	"owner": "602531 British Columbia Ltd.",
	"publication_number": "07716579",
	"publication_date": "2010-05-11",
	"application_number": "11133770",
	"application_date": "2005-05-19",
	"tags": null,
	"slug": "data-entry-for-personal-computing-devices",
	"match_type": "description"
},
{
	"name": "System and method to resolve an identity interactively",
	"summary": "",
	"abstract": "A system and method for resolving an identity includes a security console, which displays security information regarding a secure network. The security information includes at least a first identity used to access the secure network. An operator selects the first identity, and the security console sends it to a resolver. The resolver connects with an identity server to find an access session record with an identity matching the first identity. A second identity is extracted from this record, and the resolver returns a result that includes the second identity. The security console displays the second identity; The first identity can be a user identity of a user, where the second identity is corresponding host identity, or vise versa. In this manner, an efficient interface to security information is provided to an operator, where the operator may resolve a user/host identity to a host/user identity interactively.",
	"url": null,
	"owner": "A10 Networks, Inc.",
	"publication_number": "07647635",
	"publication_date": "2010-01-12",
	"application_number": "11592473",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "system-and-method-to-resolve-an-identity-interactively",
	"match_type": "description"
},
{
	"name": "Providing location-based auto-complete functionality",
	"summary": "",
	"abstract": "Common search queries can be provided to a mobile device that are associated with a current location of a mobile device. Once a location of a mobile device is determined, common search queries associated with the location can be automatically transmitted to the mobile device. The queries can be used to update an auto-complete function for partial queries or strings entered by a user of the mobile device.",
	"url": null,
	"owner": "A9.com, Inc.",
	"publication_number": "07774003",
	"publication_date": "2010-08-10",
	"application_number": "12502963",
	"application_date": "2009-07-14",
	"tags": null,
	"slug": "providing-locationbased-autocomplete-functionality",
	"match_type": "description"
},
{
	"name": "Providing location-based search information",
	"summary": "",
	"abstract": "Common search queries can be provided that are associated with a location. A location of a mobile device can be determined, and common search queries associated with the location can be transmitted to the mobile device. A user of the mobile device is able to execute the common search queries from the mobile device.",
	"url": null,
	"owner": "A9.com, Inc.",
	"publication_number": "07774002",
	"publication_date": "2010-08-10",
	"application_number": "12493720",
	"application_date": "2009-06-29",
	"tags": null,
	"slug": "providing-locationbased-search-information",
	"match_type": "description"
},
{
	"name": "System for storing and presenting sensor and spectrum data for batch processes",
	"summary": "",
	"abstract": "A system for monitoring and controlling a batch process. The system includes a control system that is operable to control the batch process and to receive measured process variables of the batch process. An analyzer analyzes a material sample from the batch process and generates array data representative of the composition of the material sample. An analyzer controller is operable to collect the array data from the analyzer and the measured process variables from the control system. A software data server running on a computer is operable to retrieve the array data and the measured process variables from the analyzer controller. A software information management system running on the computer is operable to receive the measured process variables and the array data from the data server and to store the measured process variables and the array data in a database in an associated manner.",
	"url": null,
	"owner": "ABB Inc.",
	"publication_number": "07756657",
	"publication_date": "2010-07-13",
	"application_number": "11939696",
	"application_date": "2007-11-14",
	"tags": null,
	"slug": "system-for-storing-and-presenting-sensor-and-spectrum-data-for-batch-processes",
	"match_type": "description"
},
{
	"name": "Method for re-imaging a computer system",
	"summary": "",
	"abstract": "The present disclosure relates generally to systems and methods for re-imaging a computer system. In one example, a method is provided for replacing an active system of a computer with a new image. The method may include copying files from the new image into a re-imaging directory on the active system. Processes of the active system that are not needed to keep the active system in a functioning state may be stopped. Files are moved from a top level space of the active system into a temporary directory after stopping the processes, and files from the re-imaging directory are moved into the top level space. The active system is then rebooted.",
	"url": null,
	"owner": "Absolute Software Corporation",
	"publication_number": "07818557",
	"publication_date": "2010-10-19",
	"application_number": "11439711",
	"application_date": "2006-05-24",
	"tags": null,
	"slug": "method-for-reimaging-a-computer-system",
	"match_type": "description"
},
{
	"name": "Security module having a secondary agent in coordination with a host agent",
	"summary": "",
	"abstract": "The invention is directed to a security module deployed in a host device, which provides a secondary agent that operates in coordination with the host agent in the host device, but operates independent of the host operating system of the host device to independently access an existing communication network interface in the host device or a separate dedicated network interface, if available. In one aspect, the present invention enables robust theft recovery and asset tracking services. The system comprises a monitoring center; one or more monitored devices; a security module in the monitored devices; and one or more active communications networks. Monitored devices may be stand alone devices, such as computers (e.g., portable or desktop computers), or a device or a subsystem included in a system. A monitored device comprises a security module, a host agent and software to support the host agent that runs in the monitored device's OS.",
	"url": null,
	"owner": "Absolute Software Corporation",
	"publication_number": "07818803",
	"publication_date": "2010-10-19",
	"application_number": "12009317",
	"application_date": "2008-01-16",
	"tags": null,
	"slug": "security-module-having-a-secondary-agent-in-coordination-with-a-host-agent",
	"match_type": "description"
},
{
	"name": "Network-based child support framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for providing a network-based child financial support framework. First, a database is maintained including information on a received financial support payment utilizing a network. Further, general information is provided relating to the financial support payment utilizing the network. The calculation of a proper amount of the financial support payment may also be allowed based on a profile a user. Still yet, a history associated with the financial support payment is displayed.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07716059",
	"publication_date": "2010-05-11",
	"application_number": "09560665",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": "networkbased-child-support-framework",
	"match_type": "description"
},
{
	"name": "Retrieving documents over a network with a wireless communication device",
	"summary": "",
	"abstract": "A computing system is provided that comprises a portable, hand-held computer comprising a display and a plurality of cursor control keys; and a proxy server coupled to the portable computer by a data link. A proxy server is also coupled to at least one remote server on the Internet. The portable computer is adapted to activate a menu comprised of a plurality of entries. Each entry corresponds to at least one mark-up language file to be accessed by the user. The method disclosed herein provides a shorthand way of requesting mark-up language files using one hand and a minimal number of keystrokes. Once the proxy server receives the file, it separates the file into viewable segments and sends the first viewable segment to the portable computer.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07711854",
	"publication_date": "2010-05-04",
	"application_number": "10071936",
	"application_date": "2002-02-07",
	"tags": null,
	"slug": "retrieving-documents-over-a-network-with-a-wireless-communication-device",
	"match_type": "description"
},
{
	"name": "Runtime program analysis tool for a simulation engine",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized video and graphics used to simulate real-world environment and interactions. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system includes tools for analysis and display of a presentation as it is presented.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07660778",
	"publication_date": "2010-02-09",
	"application_number": "09868664",
	"application_date": "1999-02-08",
	"tags": null,
	"slug": "runtime-program-analysis-tool-for-a-simulation-engine",
	"match_type": "description"
},
{
	"name": "Runtime program regression analysis tool for a simulation engine",
	"summary": "",
	"abstract": "A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a business opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. Multiple u201ccorrectu201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. The system includes tools for analysis, logging and display of regression analysis information for a presentation as it is presented.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07818275",
	"publication_date": "2010-10-19",
	"application_number": "12197786",
	"application_date": "2008-08-25",
	"tags": null,
	"slug": "runtime-program-regression-analysis-tool-for-a-simulation-engine",
	"match_type": "description"
},
{
	"name": "Scheduling and planning maintenance and service in a network-based supply chain environment",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for administrating a network-based supply chain on a network. Operation of entities is monitored. Entities include server processes, disk space, memory availability, CPU utilization, access time to a server, and/or a number of connections in a network-based supply chain. Items including merchandising content, currency exchange rates, tax rates, and/or pricing in the network-based supply chain are updated at predetermined intervals. In addition, external data stored separately from the network-based supply chain is synchronized with internal data stored on the network-based supply chain. Contact information received from users of the network-based supply chain is also managed. Users include service providers and manufacturer utilizing the network-based supply chain. The items are altered based on profiles of the users of the network-based supply chain.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07716077",
	"publication_date": "2010-05-11",
	"application_number": "09444889",
	"application_date": "1999-11-22",
	"tags": null,
	"slug": "scheduling-and-planning-maintenance-and-service-in-a-networkbased-supply-chain-environment",
	"match_type": "description"
},
{
	"name": "Transforming a submitted image of a person based on a condition of the person",
	"summary": "",
	"abstract": "Apparatuses, computer media, and methods for altering a submitted image of a person. The submitted image is transformed in accordance with associated data regarding the person's condition. Global data may be processed by a statistical process to obtain cluster information, and the transformation parameter is then determined from cluster information. The transformation parameter is then applied to a portion of the submitted image to render a transformed image. A transformation parameter may include a texture alteration parameter, a hair descriptive parameter, or a reshaping parameter. An error measure may be determined that gauges a discrepancy between a transformed image and an actual image. A transformation model is subsequently reconfigured with a modified model in order to reduce the error measure. Also, the transformation model may be trained to reduce an error measure for the transformed image.",
	"url": null,
	"owner": "Accenture Global Services GmbH",
	"publication_number": "07792379",
	"publication_date": "2010-09-07",
	"application_number": "11671751",
	"application_date": "2007-02-06",
	"tags": null,
	"slug": "transforming-a-submitted-image-of-a-person-based-on-a-condition-of-the-person",
	"match_type": "description"
},
{
	"name": "Automation tool for providing access to an electronic database for business intelligence",
	"summary": "",
	"abstract": "A method for providing access to an electronic database for business intelligence is provided. The method includes receiving a request to create a new universe to interface with the electronic database to access the electronic database for business intelligence, receiving an input of a first set of universe details to populate the new universe, executing at least a first application macro to populate the new universe with the received first set of universe details by calling a business intelligence application to create the new universe with the populated first set of universe details; and providing the created new universe as a metadata layer that interfaces with the electronic database to provide access to the electronic database.",
	"url": null,
	"owner": "Accenture Global Services Limited",
	"publication_number": "07831630",
	"publication_date": "2010-11-09",
	"application_number": "11779514",
	"application_date": "2007-07-18",
	"tags": null,
	"slug": "automation-tool-for-providing-access-to-an-electronic-database-for-business-intelligence",
	"match_type": "description"
},
{
	"name": "Navigating a software project respository",
	"summary": "",
	"abstract": "A system for analyzing a document in a repository is provided. The system receives a document that includes data and a document type. The document type has an associated physical structure. The system determines a logical structure of the document based in part on the data and selects a subset of the data based on at least one of the group including the associated physical structure and the logical structure. The system also stores a document segment that includes the selected subset of the data.",
	"url": null,
	"owner": "Accenture Global Services Limited",
	"publication_number": "07853556",
	"publication_date": "2010-12-14",
	"application_number": "12150974",
	"application_date": "2008-05-02",
	"tags": null,
	"slug": "navigating-a-software-project-respository",
	"match_type": "description"
},
{
	"name": "Account and customer creation in an on-line banking model",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for account and customer creation in an online banking model. An application is received from a customer. The application includes information relating to the user and also documentation relating to the user. A first computer is utilized to create a profile for the customer based on the application received from the customer. The first computer is also utilized to create an account for the customer. Information relating to the created profile and account is transmitted from the first computer to a second computer where a notification is generated. The notification indicates that the account has been created. The notification is transmitted from the second computer to the customer utilizing a network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07813983",
	"publication_date": "2010-10-12",
	"application_number": "12043528",
	"application_date": "2008-03-06",
	"tags": null,
	"slug": "account-and-customer-creation-in-an-online-banking-model",
	"match_type": "description"
},
{
	"name": "System for calculating a support payment in a network-based child support framework",
	"summary": "",
	"abstract": "The present disclosure provides for calculating an amount of child support. First, data is received relating to at least one of a non-custodial parent and a custodial parent utilizing a network. The data may include income, number of children, basic support, insurance premium, child care cost, and/or additional expenses. During use, an amount of child support due based on the received data. Such calculated amount of child support due is displayed utilizing the network.",
	"url": null,
	"owner": "Accenture LLP",
	"publication_number": "07814011",
	"publication_date": "2010-10-12",
	"application_number": "09561615",
	"application_date": "2000-04-27",
	"tags": null,
	"slug": "system-for-calculating-a-support-payment-in-a-networkbased-child-support-framework",
	"match_type": "description"
},
{
	"name": "Method and apparatus for integrating phone and PDA user interfaces on a single processor",
	"summary": "",
	"abstract": "Separate processors, a PDA processor, and a baseband processor are maintained in a PDA having an integrated telephone device. The PDA processor runs PDA related programs and a user interface for the telephone device. A link between the PDA processor and baseband processor transfers data and commands from the user interface to a phone control program executing on the baseband processor. The base band processor is connected to the telephone device, and the phone control program controls operation of the telephone device. The separation of processors reduces vulnerability of the telephone device to hacker rogue applications that invade or program crashes that occur on the PDA processor.",
	"url": null,
	"owner": "Access Systems Americas, Inc.",
	"publication_number": "07813486",
	"publication_date": "2010-10-12",
	"application_number": "11301568",
	"application_date": "2005-12-13",
	"tags": null,
	"slug": "method-and-apparatus-for-integrating-phone-and-pda-user-interfaces-on-a-single-processor",
	"match_type": "description"
},
{
	"name": "Synchronization of computer databases using caching agents",
	"summary": "",
	"abstract": "A method and system for synchronization of computer databases using caching agents. In one embodiment, information is accessed from a first database. The information is stored into a persistent store, which may be a permanent media, such as a magnetic disk. The information is retrieved from the persistent store. Such retrieval may be in close time proximity to the storing, or the retrieval may be at a substantially different time from the storing. The synchronization is completed by updating a second database with the information retrieved by the caching agent from the persistent store. As an advantageous result, synchronization of computer databases is more efficient due to an optimized storage format for the information as well as maximum bandwidth access. As a further beneficial result, if a database is not present at the time of synchronization, embodiments of the present invention may enable synchronization capabilities unavailable under the prior art.",
	"url": null,
	"owner": "Access Systems Americas, Inc.",
	"publication_number": "07814053",
	"publication_date": "2010-10-12",
	"application_number": "10242344",
	"application_date": "2002-09-11",
	"tags": null,
	"slug": "synchronization-of-computer-databases-using-caching-agents",
	"match_type": "description"
},
{
	"name": "System and method for real time account and account number generation using origination APIS",
	"summary": "",
	"abstract": "A system and method generate an account in real time in accordance with an application programming interface (API). The API contains parameter descriptions listing universal resource locator (URL) parameters associated with items. A format for implementing an http request to transmit data to in compliance with the defined format is disclosed. A transparent mode for transmitting a response to an http request transmitting data provides for the transmission of an extensible markup language (XML) formatted file communicating an outcome to the request.",
	"url": null,
	"owner": "Accountnow, Inc.",
	"publication_number": "07849010",
	"publication_date": "2010-12-07",
	"application_number": "12187284",
	"application_date": "2008-08-06",
	"tags": null,
	"slug": "system-and-method-for-real-time-account-and-account-number-generation-using-origination-apis",
	"match_type": "abstract"
},
{
	"name": "Method and system for controlling media sessions in networks that use communication protocols with distinct signaling and media channels",
	"summary": "",
	"abstract": "A media control system (MCS) enforces media control policies on systems that conform to the relevant protocol specifications (such as SIP and SDP), for example, by interpreting and potentially modifying or destroying the SDP offers embedded in the SIP signaling messages that traverse it. This enables the MCS to exercise control over SIP-associated media sessions without necessarily inserting itself into the media streams themselves. The MCS can enforce media control policies that are based either directly on information that is explicitly contained in SDP message bodies or on secondary information that can be derived from information that is contained in the SDP messages.",
	"url": null,
	"owner": "Acme Packet, Inc.",
	"publication_number": "07796603",
	"publication_date": "2010-09-14",
	"application_number": "10905646",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": "method-and-system-for-controlling-media-sessions-in-networks-that-use-communication-protocols-with-distinct-signaling-and-media-channels",
	"match_type": "description"
},
{
	"name": "Method and system for establishing a communications pipe between a personal security device and a remote computer system",
	"summary": "",
	"abstract": "The present invention provides a method and a system for establishing a communications path (the u201cpipeu201d ) over a communications network () between a Personal Security Device (PSD ) and a Remote Computer System () without requiring means for converting high-level messages such as API-level messages to PSD-formatted messages such as APDU-formatted messages (and inversely) to be installed on a local Client () in which a PSD () is connected.",
	"url": null,
	"owner": "Activcard Ireland, Limited",
	"publication_number": "07853789",
	"publication_date": "2010-12-14",
	"application_number": "10476416",
	"application_date": "2002-04-09",
	"tags": null,
	"slug": "method-and-system-for-establishing-a-communications-pipe-between-a-personal-security-device-and-a-remote-computer-system",
	"match_type": "description"
},
{
	"name": "Method, system, personal security device and computer program product for cryptographically secured biometric authentication",
	"summary": "",
	"abstract": "A system is used for authorizing access to a Personal Security Device. This system comprises a Personal Security Device  and another device  which is in functional communication with said Personal Security Device. Said Personal Security Device comprises identification information retrieval data and a biometric authentication application  which transfers said identification information retrieval data to said other device  in response to an identified match between biometric data sent by said other device and a predetermined biometric reference. Said other device  comprises a security executive application  for retrieving an Identification Information with at least said identification information retrieval data, thus generating a retrieved Identification Information, and transferring said retrieved Identification Information to said Personal Security Device . Said Personal Security Device comprises a security executive application  for authorizing access in response to an identified match between said transferred retrieved Identification Information and a predetermined Identification Information stored in said Personal Security Device.",
	"url": null,
	"owner": "ActivIdentity, Inc.",
	"publication_number": "07787661",
	"publication_date": "2010-08-31",
	"application_number": "11391473",
	"application_date": "2006-03-29",
	"tags": null,
	"slug": "method-system-personal-security-device-and-computer-program-product-for-cryptographically-secured-biometric-authentication",
	"match_type": "description"
},
{
	"name": "Secure digital credential sharing arrangement",
	"summary": "",
	"abstract": "A secure and transparent digital credential sharing arrangement which utilizes one or more cryptographic levels of indirection to obfuscate a sharing entity's credentials from those entities authorized to share the credentials. A security policy table is provided which allows the sharing entity to selectively authorize or revoke digital credential sharing among a plurality of entities. Various embodiments of the invention provide for secure storage and retrieval of digital credentials from security tokens such as smart cards. The secure sharing arrangement may be implemented in hierarchical or non-hierarchical embodiments as desired.",
	"url": null,
	"owner": "ActivIdentity, Inc.",
	"publication_number": "07802293",
	"publication_date": "2010-09-21",
	"application_number": "11397710",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": "secure-digital-credential-sharing-arrangement",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for implementing a custom driver for accessing a data source",
	"summary": "",
	"abstract": "Methods and apparatus for supporting an additional data source in a system adapted for processing data from one or more data sources are disclosed. A design-time driver for the additional data source is obtained, where the design-time driver supports the definition of data including one or more fields of the additional data source to retrieve from the additional data source. In addition, a run-time driver for the additional data source is obtained, where the run-time driver supports retrieval of data corresponding to the one or more fields from the additional data source and where the run-time driver has a second application programming interface. The design-time driver is executed via a first application programming interface, where the first application programming interface enables definition of the data including the one or more fields to be retrieved from the additional data source. The data is then retrieved from the additional data source via the run-time driver using the second application programming interface.",
	"url": null,
	"owner": "Actuate Corporation",
	"publication_number": "07831633",
	"publication_date": "2010-11-09",
	"application_number": "11021081",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": "methods-and-apparatus-for-implementing-a-custom-driver-for-accessing-a-data-source",
	"match_type": "abstract"
},
{
	"name": "Location-aware fitness training device, methods, and program products that support real-time interactive communication and automated route generation",
	"summary": "",
	"abstract": "A portable fitness device includes a global positioning system (GPS) receiver that receives GPS signals, a wireless wide-area network transmitter supporting communication over-the-air to a wireless communication network, and a processing unit coupled to the GPS receiver and the wireless wide-area network transmitter. The processing unit receives the time-stamped waypoints from the GPS receiver and determines athletic performance information and route information from the time-stamped waypoints. The processing unit further outputs at least one of the athletic performance information and the route information to the wireless communication network during a human fitness activity via the wireless wide-area network transmitter.",
	"url": null,
	"owner": "adidas AG",
	"publication_number": "07805149",
	"publication_date": "2010-09-28",
	"application_number": "11857862",
	"application_date": "2007-09-19",
	"tags": null,
	"slug": "locationaware-fitness-training-device-methods-and-program-products-that-support-realtime-interactive-communication-and-automated-route-generation",
	"match_type": "description"
},
{
	"name": "Wireless device, program products and methods of using a wireless device to deliver services",
	"summary": "",
	"abstract": "In at least one embodiment, a mobile device detects proximity to a point on a route and determines whether an audio track is associated with the point. In response to detecting that the mobile device is proximate to the point and a determination that an audio track is associated with the point, the mobile device presents the audio track.",
	"url": null,
	"owner": "adidas AG",
	"publication_number": "07805150",
	"publication_date": "2010-09-28",
	"application_number": "11931967",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "wireless-device-program-products-and-methods-of-using-a-wireless-device-to-deliver-services",
	"match_type": "description"
},
{
	"name": "Wireless device, program products and methods of using a wireless device to deliver services",
	"summary": "",
	"abstract": "In at least one embodiment, a plurality of raw time-stamped waypoints describing a geographical route are received. The plurality of raw time-stamped waypoints are filtered based upon at least one of a set including a threshold distance between pairs of the plurality of raw time-stamped waypoints and a velocity indicated by pairs of the plurality of raw time-stamped waypoints. A smoothed route is generated by modifying at least some of the filtered plurality of raw time-stamped waypoints. The smoothed route is stored in data storage.",
	"url": null,
	"owner": "adidas AG",
	"publication_number": "07706815",
	"publication_date": "2010-04-27",
	"application_number": "11931725",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "wireless-device-program-products-and-methods-of-using-a-wireless-device-to-deliver-services",
	"match_type": "description"
},
{
	"name": "Anti-aliased rendering",
	"summary": "",
	"abstract": "Methods, systems and apparatus, including computer program products, for anti-aliased rendering. A plurality of objects is received. Each object in the plurality of objects is depth-ordered. Each object is rendered from back to front into a plurality of pixels. Each pixel in the plurality of pixels has a respective color value. The rendering includes selecting an object from the plurality of objects. Respective alpha values are determined for first pixels in the plurality of pixels based on coverage of the first pixels by the selected object. The respective color value of each of the first pixels is attenuated based on the respective alpha values. The respective color value of each of the first pixels is added to based on the respective alpha values and one or more color properties associated with the selected object.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07733354",
	"publication_date": "2010-06-08",
	"application_number": "11756522",
	"application_date": "2007-05-31",
	"tags": null,
	"slug": "antialiased-rendering",
	"match_type": "description"
},
{
	"name": "Calculating shadow from area light sources using a spatially varying blur radius",
	"summary": "",
	"abstract": "Shadows from physical lights have a penumbra region, in which the light is only partially hidden from the shadow acceptor. The intensity of light in this region may be calculated using an approximation of the amount of light visible. For example a fragment or pixel shader program execution on a GPU may generate a shadow from a light source using the light intensities for each pixel being rendered. Per-pixel shadow density information may be projected from the shadow caster onto the shadow acceptor. A penumbra map may contain both depth information and light attenuation information for the shadow acceptor. This information may be blurred using a fragment or pixel shader on a GPU to determine an average shadow density for a pixel being rendered.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07817823",
	"publication_date": "2010-10-19",
	"application_number": "11741554",
	"application_date": "2007-04-27",
	"tags": null,
	"slug": "calculating-shadow-from-area-light-sources-using-a-spatially-varying-blur-radius",
	"match_type": "description"
},
{
	"name": "Community based digital content auditing and streaming",
	"summary": "",
	"abstract": "In one embodiment, a system and method is illustrated and includes receiving auditing data relating to a piece of digital content, associating the auditing data with the piece of digital content to create audited digital content, receiving a content request pertaining to the audited digital content from a requester, checking a permission associated with the audited digital content, the permission to determine an exchange basis upon which the audited digital content is provided to the requester, and where the exchange basis defines the condition upon which the audited digital content may be accessed, and providing the audited digital content to the requester according to the exchange basis.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07797352",
	"publication_date": "2010-09-14",
	"application_number": "11820586",
	"application_date": "2007-06-19",
	"tags": null,
	"slug": "community-based-digital-content-auditing-and-streaming",
	"match_type": "description"
},
{
	"name": "Conversion of data for two or three dimensional geometric entities",
	"summary": "",
	"abstract": "A method for transmission of data for two or three dimensional geometrical entities uses a computer system, for modeling and/or manipulation of geometrical entities. The computer system comprises at least one program for modeling and/or manipulation and at least one display program, the at least one modeling and/or manipulation program transmits the data associated with the geometrical entities for display to the at least one display program, by calling up display functions located within the at least one display program. An exporting program for data associated with geometrical entities is substituted in at least one of the at least one display programs, the exporting program having the same display functions as the at least one display program.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07747570",
	"publication_date": "2010-06-29",
	"application_number": "11539553",
	"application_date": "2006-10-06",
	"tags": null,
	"slug": "conversion-of-data-for-two-or-three-dimensional-geometric-entities",
	"match_type": "description"
},
{
	"name": "Faster loading of extension-based applications using caching",
	"summary": "",
	"abstract": "Disclosed herein are methods for efficient loading of extensions or u201cplug insu201d into a host software program. In a preferred embodiment, extensions registered with the host software program are loaded when the host program is first initialized. During their loading, changes that the various extensions make to the host program are recorded in a cache file, including graphical changes to the user interface and non-graphical changes. Later, when the host program is again initialized, the cache file is read in lieu of loading the extensions, with the affect that it appears to the user that the extensions' functionality are fully present in the host application, although in reality the extensions are not yet loaded. Instead, the extensions are loaded when and if they are called, either by the user or automatically by the computer. This saves time upon host program initialization as the extensions, once cached, need not be loaded until they are called.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07735076",
	"publication_date": "2010-06-08",
	"application_number": "10966951",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": "faster-loading-of-extensionbased-applications-using-caching",
	"match_type": "description"
},
{
	"name": "Merging images to form a panoramic image",
	"summary": "",
	"abstract": "Methods, systems, and apparatus, including computer program products, for merging images of segments of a view. Methods include: receiving, from a network, a first image representing a first segment of the view and a second image representing a second segment of the view; determining the position of the second segment of the view relative to the first segment of the view; blending the first image with the second image based on the determined position of the second segment relative to the first segment to form a panoramic image of the view; and transmitting the panoramic image over the network.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07646932",
	"publication_date": "2010-01-12",
	"application_number": "12127755",
	"application_date": "2008-05-27",
	"tags": null,
	"slug": "merging-images-to-form-a-panoramic-image",
	"match_type": "description"
},
{
	"name": "Playback of content on portable devices",
	"summary": "",
	"abstract": "A computer-implemented method includes identifying encoded content to be presented. The method also includes loading the content into a content player. The content player is configured to dynamically identify a local decoder that is operable to decode the content. The method further includes providing the identified content to the local decoder during playback of the content; and presenting the decoded content.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07761602",
	"publication_date": "2010-07-20",
	"application_number": "11945251",
	"application_date": "2007-11-26",
	"tags": null,
	"slug": "playback-of-content-on-portable-devices",
	"match_type": "description"
},
{
	"name": "Rendering text in a brew device",
	"summary": "",
	"abstract": "Methods, systems and program products for hiding the presentation of a first input field that would obscure the presentation of a distinct second input field on a display device. User input directed to the second input field is accepted and provided the first input field instead of to the second input field. The contents of the first input field are copied to the second input field. The presentation of the second input field is updated on the display device to include the copied contents.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07743339",
	"publication_date": "2010-06-22",
	"application_number": "11670333",
	"application_date": "2007-02-01",
	"tags": null,
	"slug": "rendering-text-in-a-brew-device",
	"match_type": "description"
},
{
	"name": "Simplified user interface navigation",
	"summary": "",
	"abstract": "Methods, systems, and apparatus, including computer program products, for user interface navigation. A method includes receiving first input indicating a first cursor navigation direction in a first visual area of a graphical user interface, the first visual area presenting one or more first content type indicators that are destinations for cursor navigation, selecting a next content type indicator based on the first cursor navigation direction and presenting a second visual area such that the next content type indicator is not visible but one or more other content type indicators are visible. The method includes presenting in the second visual area one or more content thumbnails that are destinations for cursor navigation in the second visual area, receiving second input indicating a second cursor navigation direction in the second visual area, and changing the second visual area to include a next content thumbnail based on the second cursor navigation direction.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07823076",
	"publication_date": "2010-10-26",
	"application_number": "11777600",
	"application_date": "2007-07-13",
	"tags": null,
	"slug": "simplified-user-interface-navigation",
	"match_type": "description"
},
{
	"name": "Streaming media seek",
	"summary": "",
	"abstract": "Streaming media technology includes a back buffer configured to begin at a stream frame most recently played by the streaming media player. The back buffer continues, for each played frame of the stream, for a length determined by a nominal fill and an offset. In some embodiments, the offset is determined in runtime. In some embodiments the runtime-determined offset is determined by the position of a keyframe in the vicinity of the nominal fill. The keyframe in the vicinity of the nominal fill can be a keyframe next earlier, next later, or nearest in the stream to the location of the nominal fill.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07702805",
	"publication_date": "2010-04-20",
	"application_number": "12575230",
	"application_date": "2009-10-07",
	"tags": null,
	"slug": "streaming-media-seek",
	"match_type": "description"
},
{
	"name": "System and method for implementing graphics processing unit shader programs using snippets",
	"summary": "",
	"abstract": "Shader programs that execute on graphics processing units (GPUs), such as vertex and pixel shaders may be generated by defining individual shader snippets. Each snippet may represent and/or specifies a particular shader operation. In one embodiment, each snippet may indicate a particular vertex shader operation, a particular pixel (or fragment) shader operation, or both. Various combinations of these snippets may then be combined to create more complex shader programs. A shader snippet framework may be configured to receive information specifying individual snippets, as well as the combinations of snippets representing various shader programs. The framework may define such shader programs using only the identifiers for the various snippets and thus a shader program, as described herein, may not include any actual code, but instead may refer to an ordered list of snippets. At runtime, the snippets are then instantiated and executed to execute the shader program.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07750913",
	"publication_date": "2010-07-06",
	"application_number": "11586269",
	"application_date": "2006-10-24",
	"tags": null,
	"slug": "system-and-method-for-implementing-graphics-processing-unit-shader-programs-using-snippets",
	"match_type": "description"
},
{
	"name": "System and method of building and using hierarchical knowledge structures",
	"summary": "",
	"abstract": "The present disclosure includes systems and techniques relating to building and using hierarchical knowledge structures. In general, embodiments of the invention feature a computer program product and a method including receiving a first ontology including initial categories, an indication of sample data for a given category of the initial categories, and an indication of symbolic knowledge for the given category; and populating the first ontology with new features to form a second ontology, the populating comprising determining the new features from the sample data using a statistical machine learning process and retaining the new features and the symbolic knowledge within the second ontology in association with the given category. In another aspect, embodiments of the invention feature a knowledge management system including a hierarchical knowledge structure that categorizes information according to cognitive and semantic qualities within a knowledge domain.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07644052",
	"publication_date": "2010-01-05",
	"application_number": "11368130",
	"application_date": "2006-03-03",
	"tags": null,
	"slug": "system-and-method-of-building-and-using-hierarchical-knowledge-structures",
	"match_type": "description"
},
{
	"name": "Transparency group computation on a graphics processing unit",
	"summary": "",
	"abstract": "A new transparency group may be rendered and blended with other, previously rendered, transparency groups, by using the Porter-Duff algebra available on the GPU even though the transparency groups include pre-multiplied color and alpha information. Additionally, the number of copies of the back buffer (the image information for the previously rendered transparency groups) required to properly render, blend and combine the new transparency group into the image information of previously rendered transparency groups may be minimized.",
	"url": null,
	"owner": "Adobe Systems Incorporated",
	"publication_number": "07750922",
	"publication_date": "2010-07-06",
	"application_number": "11557749",
	"application_date": "2006-11-08",
	"tags": null,
	"slug": "transparency-group-computation-on-a-graphics-processing-unit",
	"match_type": "description"
},
{
	"name": "Panel presentation",
	"summary": "",
	"abstract": "Panel presentation is described, including presenting a foreground panel over a background panel, detecting an input associated with the background panel, the input being configured to invoke the background panel, and rendering the foreground panel and the background panel in a substantially similar region of an interface, the foreground panel and the background panel being rendered without modifying the foreground panel.",
	"url": null,
	"owner": "Adobe Systems, Incorporated",
	"publication_number": "07673251",
	"publication_date": "2010-03-02",
	"application_number": "11541852",
	"application_date": "2006-10-02",
	"tags": null,
	"slug": "panel-presentation",
	"match_type": "description"
},
{
	"name": "Node-to node messaging transceiver network with dynamic routing and configuring",
	"summary": "",
	"abstract": "The invention is a system operating on a reference frequency. The system comprises a plurality of at least three nodes. Each node hands off a message received from another node to a subsequent node. Each of the nodes comprises a transceiver receiving a message on the reference frequency from another node and transmitting the received message on the reference frequency to a subsequent node, and a controller controlling operation of the transceiver to receive the message transmitted by another node and to transmit the received message to a subsequent node.",
	"url": null,
	"owner": "AFX Technology Group International, Inc.",
	"publication_number": "07653394",
	"publication_date": "2010-01-26",
	"application_number": "11144176",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": "nodeto-node-messaging-transceiver-network-with-dynamic-routing-and-configuring",
	"match_type": "description"
},
{
	"name": "Method and system for data retrieval from heterogeneous data sources",
	"summary": "",
	"abstract": "A system and a method for specifying and configuring, together with categorising and classifying, heterogeneous types of multiple data sources is disclosed. The system and method also retrieve search results in accordance with search requests and conditions from at least one of the multiple data sources, for example a relational database management system (RDBMS), a light-weight directory access protocol (LDAP), an extensible mark-up language database (XMLDB), extensible mark-up language (XML) files, hypertext mark-up language (HTML) files, or TEXT files, through an application programming interface (API), or a web service interface such as a simple object access protocol (SOAP).",
	"url": null,
	"owner": "Agency for Science, Technology and Research",
	"publication_number": "07707168",
	"publication_date": "2010-04-27",
	"application_number": "10915732",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": "method-and-system-for-data-retrieval-from-heterogeneous-data-sources",
	"match_type": "abstract"
},
{
	"name": "Methods and apparatus for performing in-service upgrade of software in network processor",
	"summary": "",
	"abstract": "Improved techniques are disclosed for performing an in-service upgrade of software associated with a network or packet processor. By way of example, a method of performing an in-service upgrade of code, storable in a memory associated with a packet processor and executable on the packet processor, from a first code version to a second code version, includes the following steps. A first step includes preparing for the upgrade by generating one or more write operations to effectuate the code upgrade from the first code version to the second code version. A second step includes updating the code from the first code version to the second code version by propagating the one or more write operations to the packet processor. A third step includes cleaning up after the updating step by reclaiming one or more memory locations available after the update step. As such, the storage of only a single version of the code in the memory associated with the packet processor is required.",
	"url": null,
	"owner": "Agere Systems Inc.",
	"publication_number": "07802245",
	"publication_date": "2010-09-21",
	"application_number": "11412915",
	"application_date": "2006-04-27",
	"tags": null,
	"slug": "methods-and-apparatus-for-performing-inservice-upgrade-of-software-in-network-processor",
	"match_type": "description"
},
{
	"name": "Method and system for analysis of array-based, comparative-hybridization data",
	"summary": "",
	"abstract": "Embodiments of the present invention include methods and systems for analysis of comparative genomic hybridization (u201cCGHu201d) data, including CGH data obtained from microarray experiments.",
	"url": null,
	"owner": "Agilent Technologies, Inc.",
	"publication_number": "07660675",
	"publication_date": "2010-02-09",
	"application_number": "11492472",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": "method-and-system-for-analysis-of-arraybased-comparativehybridization-data",
	"match_type": "description"
},
{
	"name": "Dynamic content assembly on edge-of-network servers in a content delivery network",
	"summary": "",
	"abstract": "The present invention enables a content provider to dynamically assemble content at the edge of the Internet, preferably on content delivery network (CDN) edge servers. Preferably, the content provider leverages an u201cedge side includeu201d (ESI) markup language that is used to define Web page fragments for dynamic assembly at the edge. Dynamic assembly improves site performance by catching the objects that comprise dynamically generated pages at the edge of the Internet, close to the end user. The content provider designs and develops the business logic to form and assemble the pages, for example, by using the ESI language within its development environment. Instead of being assembled by an application/web server in a centralized data center, the application/web server sends a page template and content fragments to a CDN edge server where the page is assembled. Each content fragment can have its own cacheability profile to manage the u201cfreshnessu201d of the content. Once a user requests a page (template), the edge server examines its cache for the included fragments and assembles the page on-the-fly.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07752258",
	"publication_date": "2010-07-06",
	"application_number": "10481405",
	"application_date": "2001-08-20",
	"tags": null,
	"slug": "dynamic-content-assembly-on-edgeofnetwork-servers-in-a-content-delivery-network",
	"match_type": "description"
},
{
	"name": "Managing web tier session state objects in a content delivery network (CDN)",
	"summary": "",
	"abstract": "Business applications running on a content delivery network (CDN) having a distributed application framework can create, access and modify state for each client. Over time, a single client may desire to access a given application on different CDN edge servers within the same region and even across different regions. Each time, the application may need to access the latest u201cstateu201d of the client even if the state was last modified by an application on a different server. A difficulty arises when a process or a machine that last modified the state dies or is temporarily or permanently unavailable. The present invention provides techniques for migrating session state data across CDN servers in a manner transparent to the user. A distributed application thus can access a latest u201cstateu201d of a client even if the state was last modified by an application instance executing on a different CDN server, including a nearby (in-region) or a remote (out-of-region) server.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07765304",
	"publication_date": "2010-07-27",
	"application_number": "11834042",
	"application_date": "2007-08-06",
	"tags": null,
	"slug": "managing-web-tier-session-state-objects-in-a-content-delivery-network-cdn",
	"match_type": "description"
},
{
	"name": "Method and apparatus for measuring stream availability, quality and performance",
	"summary": "",
	"abstract": "A streaming measurement agent designed to experience, measure, and report on a media stream as an actual end user would experience the stream. Preferably, agent resides transparently within a streaming media player itself so that it can monitor stream packet flows within the player as the measured streams are being played. In an illustrative embodiment, the agent comprises a performance monitoring module (PMM), which is software that resides in an interface between an existing core module and a renderer of a media player. The agent PMM intercepts each useful packet as it goes from the core to the renderer and, as a result, it is able to compute quality metrics about the playback. The agent functions u201ctransparentlyu201d to the media player by presenting the core with an application programming interface (API) that emulates the API that the renderer normally presents to the core. Thus, when the core believes it is calling the renderer, it is actually calling the agent PMM, which can then receive all the packets from the core and process them. After computing relevant performance metrics using the packets it receives, the agent PMM calls the renderer. A set of performance agents can be managed by a service provider to enable a content provider to determine how a stream is perceived by end users.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07725576",
	"publication_date": "2010-05-25",
	"application_number": "11368835",
	"application_date": "2006-03-06",
	"tags": null,
	"slug": "method-and-apparatus-for-measuring-stream-availability-quality-and-performance",
	"match_type": "abstract"
},
{
	"name": "Network performance monitoring in a content delivery service",
	"summary": "",
	"abstract": "A network architecture or framework that supports hosting and content distribution on a truly global scale allows a Content Provider to replicate and serve its most popular content at an unlimited number of points throughout the world. The inventive framework comprises a set of servers operating in a distributed manner. The actual content to be served is preferably supported on a set of hosting servers (sometimes referred to as ghost servers). This content comprises HTML page objects that, conventionally, are served from a Content Provider site. A base HTML document portion of a Web page is served from the Content Provider's site while one or more embedded objects for the page are served from the hosting servers, preferably, those hosting servers near the client machine. By serving the base HTML document from the Content Provider's site, the Content Provider maintains control over the content.",
	"url": null,
	"owner": "Akamai Technologies, Inc.",
	"publication_number": "07716367",
	"publication_date": "2010-05-11",
	"application_number": "10779691",
	"application_date": "2004-02-18",
	"tags": null,
	"slug": "network-performance-monitoring-in-a-content-delivery-service",
	"match_type": "description"
},
{
	"name": "Fast database replication",
	"summary": "",
	"abstract": "The invention relates to a method for updating a remote data base with sets of data of a master data base system. The sets of data are forwarded to an intermediate data base, and the intermediate data base and the remote data base system are coupled by means of a synchronisation protocol. The protocol ensures, that the remote data base is reliably updated, wherein said master data base and said intermediate data base are logically independent data bases each part of a unique data base system controlled by a unique data base management, and also to master data base system therefore.",
	"url": null,
	"owner": "Alcatel",
	"publication_number": "07788224",
	"publication_date": "2010-08-31",
	"application_number": "10939882",
	"application_date": "2004-09-14",
	"tags": null,
	"slug": "fast-database-replication",
	"match_type": "description"
},
{
	"name": "Client-based integration of PBX and messaging systems",
	"summary": "",
	"abstract": "This invention integrates instant messaging, presence, and other collaborative capabilities with conventional PBX functionality through use of a PBX-Messaging Integration Client (PMIC). The invention in its several embodiments features a method and system for using the PMIC-based computer interface to perform off-hook/on-hook presence notification for a PBX phone, establish media sessions concurrent with PBX telephonic communication, execute custom call treatment in conjunction with a PBX phone, implement call transfer capability between a PBX phone and numerous other devices, and provide PBX call control. The PBX is generally enabled with computer telephony integration (CTI) and, depending on the embodiment, a Voice-over-Internet Protocol (VoIP) such as Session Initiation Protocol (SIP). The invention empowers enterprise workers with a diverse, unified and integrated set of both PBX functions and SIP-based collaboration tools.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07804949",
	"publication_date": "2010-09-28",
	"application_number": "10750795",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": "clientbased-integration-of-pbx-and-messaging-systems",
	"match_type": "description"
},
{
	"name": "Dynamic contact list management system and method",
	"summary": "",
	"abstract": "A dynamic contact list management (DCLM) method and system operable in a communications network environment. In one embodiment, upon receiving a communication request from an originating party over a first network towards a networked party, a query is generated for determining and locating an IM address associated with the originating party. Upon establishing presence awareness between the originating party and the networked party, the IM address of the originating party is added to a contact list database associated with the networked party. The IM address, which is persistent at least for the duration of a first communication session established responsive to the communication request, may be used for engaging in a second communication session between the parties.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07675903",
	"publication_date": "2010-03-09",
	"application_number": "10963242",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": "dynamic-contact-list-management-system-and-method",
	"match_type": "description"
},
{
	"name": "Policy calendar",
	"summary": "",
	"abstract": "A calendar tool displays policies that are scheduled to function in managed networks. The tool allows the network administrator to select and view individual scheduled policies, many individual scheduled policies or scheduled policy suites. The calendar identifies the different scheduled policies as rectilinear colored blocks of time on a calendar. These blocks will open their properties forms when double selected. Overlaps of scheduled policies and gaps between scheduled policies can be identified visually on the calendar because they are displayed in two distinct blocks of color which are different from any other colored block displayed. The administrator/user can see all policies that contribute to an overlap by simply selecting on the particular overlap. The user can see calendar information either in a weekly or daily format.",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07710999",
	"publication_date": "2010-05-04",
	"application_number": "11411968",
	"application_date": "2006-04-27",
	"tags": null,
	"slug": "policy-calendar",
	"match_type": "description"
},
{
	"name": "System and method for providing traffic flow control in a communication network",
	"summary": "",
	"abstract": "The present invention provides a system and method for establishing a data transmission rate in a communication network for data transmission from a first communication module to a second communication module. Generally, the method comprises: (a) reading at the first module a predetermined data reception rate limit of the second module; and (b) for the data at the first module to be transmitted to the second module, establishing a first module data transmission rate in dependence upon the predetermined data reception rate limit read in step (a).",
	"url": null,
	"owner": "Alcatel Lucent",
	"publication_number": "07675855",
	"publication_date": "2010-03-09",
	"application_number": "10348912",
	"application_date": "2003-01-23",
	"tags": null,
	"slug": "system-and-method-for-providing-traffic-flow-control-in-a-communication-network",
	"match_type": "description"
},
{
	"name": "Network system having an extensible forwarding plane",
	"summary": "",
	"abstract": "A platform for seamlessly hosts a plurality of disparate types of packet processing applications. One or more applications are loaded onto a service card on the platform. A programmable path structure is included that maps a logical path for processing of the packets through one or more of the plurality of service cards according to characteristics of the packets. Multiple path structures may be programmed into the platform to offer different service paths for different types of packets.",
	"url": null,
	"owner": "Alcatel-Lucent",
	"publication_number": "07843914",
	"publication_date": "2010-11-30",
	"application_number": "11824565",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": "network-system-having-an-extensible-forwarding-plane",
	"match_type": "description"
},
{
	"name": "Data based over the air provisioning for wireless services",
	"summary": "",
	"abstract": "A wireless service provider recognizes a data transmission from a wireless user as a request to provision the mobile terminal and become a subscriber by an over the air process. An Internet protocol provisioning server automatically transmits a text-based message to be displayed on the user's equipment identifying information to be provided by the user for provisioning. In response the user transmits a reply text-based message to the server supplying the requested information. The server stores this information for utilization in provisioning the required infrastructure facilities. Provisioning data required to be stored in the user's equipment is downloaded to the user's equipment. This process permits an over the air provisioning to be accomplished without requiring the use of a voice channel between the user and a customer service representative of the wireless service provider.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07787825",
	"publication_date": "2010-08-31",
	"application_number": "10328893",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": "data-based-over-the-air-provisioning-for-wireless-services",
	"match_type": "description"
},
{
	"name": "Dynamic virtual private network system and methods",
	"summary": "",
	"abstract": "A system and method for dynamically managing Virtual Private Networks (VPNs) in a manner enabling subscriber access to VPN services on an as needed basis.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07818409",
	"publication_date": "2010-10-19",
	"application_number": "10053801",
	"application_date": "2002-01-22",
	"tags": null,
	"slug": "dynamic-virtual-private-network-system-and-methods",
	"match_type": "description"
},
{
	"name": "Method and apparatus for preventing bridging of secure networks and insecure networks",
	"summary": "",
	"abstract": "The invention comprises a method and apparatus for preventing a bridge between a secure network and an insecure network. Specifically, the method comprises monitoring a network device supporting a secure network connection for an attempt to establish an insecure network connection, and terminating the secure network connection in response to detecting the attempt to establish the insecure network connection, where the secure network connection comprises a network layer connection.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07735118",
	"publication_date": "2010-06-08",
	"application_number": "11052260",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": "method-and-apparatus-for-preventing-bridging-of-secure-networks-and-insecure-networks",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing quality of service level in broadband communications systems",
	"summary": "",
	"abstract": "An access terminal having user applications identified by product keys used to determine a QoS level to be granted to invoked user applications for the establishment of connections by an access network. The access terminal invokes the user applications, identifies the product key of the invoked user applications and determines a quality of service (QoS) level to which the invoked user applications are to be granted. The user applications may be formed into preferred and non-preferred categories with preferred user applications generally having a higher QoS than the non-preferred user applications. Access network connections using a high QoS are established from the preferred user applications to preferred servers of the access network. Connections from the non-preferred user applications are extended, using a lower QoS, by the access network to servers of a public data network.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07652990",
	"publication_date": "2010-01-26",
	"application_number": "11288537",
	"application_date": "2005-11-29",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-quality-of-service-level-in-broadband-communications-systems",
	"match_type": "description"
},
{
	"name": "Method and network for providing service blending to a subscriber",
	"summary": "",
	"abstract": "A method and communication network for providing a subscriber with a blend of services of the communication network delivered to the subscriber through a telephone and services delivered to the subscriber through a TV delivery system in communication with the network. Upon receipt of a message from a calling party, a service broker function may be configured to execute service package information associated with services of the TV delivery system subscription to include obtaining and delivering caller ID information of the calling party. The service broker function may be configured to alter the message request to generate a modified message request in respect to information affecting alerting of the subscriber's phone. The modified message is sent to the subscriber's phone so that, while information of the calling party is displayed on the TV delivery system, alerting of the phone is modified.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07693270",
	"publication_date": "2010-04-06",
	"application_number": "11357144",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": "method-and-network-for-providing-service-blending-to-a-subscriber",
	"match_type": "description"
},
{
	"name": "Provision of location-based services utilizing user movement statistics",
	"summary": "",
	"abstract": "Location-based services are provided in a communication system comprising at least a portion of at least one wireless network. One aspect of the invention relates to generation of user movement statistics that may be utilized to facilitate the development of targeted marketing campaigns or other types of message delivery. In this aspect, the user movement statistics are generated based on location and profile information for mobile user devices, and delivery of at least one message to a given one of the mobile user devices is controlled based on the user movement statistics. The user movement statistics may comprise, for example, information sufficient to determine approximately how many users having particular designated characteristics are likely to be in a given location at a given time, and may be utilized to determine prices charged for delivery of messages to the mobile user devices.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07756534",
	"publication_date": "2010-07-13",
	"application_number": "11437166",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": "provision-of-locationbased-services-utilizing-user-movement-statistics",
	"match_type": "description"
},
{
	"name": "Reverse lookup of mobile location",
	"summary": "",
	"abstract": "Location-based services are provided in a communication system comprising at least a portion of at least one wireless network. In one aspect of the invention, particular ones of a plurality of mobile user devices associated with a wireless network are identified for which sufficient location-indicative information is available from which a general location of said devices can be inferred without performing actual location measurements for said devices. The delivery of location queries to the identified mobile user devices is prevented, such that a number of location queries required for provision of a given location-based service is reduced relative to a number of location queries which would otherwise be required without the delivery prevention.",
	"url": null,
	"owner": "Alcatel-Lucent USA Inc.",
	"publication_number": "07840222",
	"publication_date": "2010-11-23",
	"application_number": "11437153",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": "reverse-lookup-of-mobile-location",
	"match_type": "description"
},
{
	"name": "Wireless sensing node powered by energy conversion from sensed system",
	"summary": "",
	"abstract": "A sensing system for sensing conditions or characteristics associated with a process or thing. The sensing system includes one or more energy converters and a sensor, which are coupled to the process or thing. A node is coupled to the sensor and the energy-converter, and the node is powered by output from the energy converter. In a more specific embodiment, the node includes a controller that implements one or more routines for selectively powering a wireless transmitter of the node based on a predetermined condition. The predetermined condition may specify that sensor output values are within a predetermined range or are below or above a predetermined threshold. Alternatively, the predetermined condition may specify that electrical energy output from the energy converter is below a predetermined threshold. A remote computer may be wirelessly connected to node and may include software and/or hardware that is adapted to process information output by the sensor and relayed to the computer via the node.",
	"url": null,
	"owner": "Alcoa Technical Center",
	"publication_number": "07768425",
	"publication_date": "2010-08-03",
	"application_number": "12269756",
	"application_date": "2008-11-12",
	"tags": null,
	"slug": "wireless-sensing-node-powered-by-energy-conversion-from-sensed-system",
	"match_type": "description"
},
{
	"name": "Hardware acceleration of functional factoring",
	"summary": "",
	"abstract": "A hardware accelerator factors functions during the compilation of a user design. The hardware accelerator includes cofactor units, each adapted to determine a cofactor of a function in response to a specified factorization and a set of input values. The factorization specifies the constant function inputs and varying function inputs. Each cofactor unit determines the cofactor of the function in response to a different constant value. The hardware accelerator operates all of the cofactor units simultaneously to determine some or all of the cofactors of a function for a factorization in parallel. Signature generators determine attributes of the cofactors. A signature analyzer uses these attributes to identify identical cofactors, constant cofactors, and inverse cofactors. The signature analyzer returns potentially optimal factorizations to compilation software applications for possible incorporation into user designs. The hardware accelerator may be implemented using a programmable device, such as the FPGA or other programmable device.",
	"url": null,
	"owner": "Altera Corporation",
	"publication_number": "07797667",
	"publication_date": "2010-09-14",
	"application_number": "12628230",
	"application_date": "2009-12-01",
	"tags": null,
	"slug": "hardware-acceleration-of-functional-factoring",
	"match_type": "description"
},
{
	"name": "Distributed storage system with web services client interface",
	"summary": "",
	"abstract": "A distributed, web-services based storage system. A system may include a web services interface configured to receive, according to a web services protocol, a given client request for access to a given data object, the request including a key value corresponding to the object. The system may also include storage nodes configured to store replicas of the objects, where each replica is accessible via a respective unique locator value, and a keymap instance configured to store a respective keymap entry for each object. For the given object, the respective keymap entry includes the key value and each locator value corresponding to replicas of the object. A coordinator may receive the given client request from the web services interface, responsively access the keymap instance to identify locator values corresponding to the key value and, for a particular locator value, retrieve a corresponding replica from a corresponding storage node.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07716180",
	"publication_date": "2010-05-11",
	"application_number": "11371304",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "distributed-storage-system-with-web-services-client-interface",
	"match_type": "description"
},
{
	"name": "Dynamic object replication within a distributed storage system",
	"summary": "",
	"abstract": "Dynamic object replication in distributed storage systems. A system may implement a web services interface, storage nodes, storage node selection logic and a coordinator. The web services interface may be configured to receive, according to a web services protocol, client requests to store data objects including a given client request to store a given one of the data objects. The storage nodes may be configured to store replicas of the data objects. The storage node selection logic may be configured to dynamically determine a write plan for storing replicas of the given data object to corresponding storage nodes, where the write plan is dynamically determined according to current state information of the storage nodes. The coordinator may be configured to receive the client requests from the web services interface, and for the given client request, to store the replicas of the given data object to the corresponding storage nodes according to the write plan.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07778972",
	"publication_date": "2010-08-17",
	"application_number": "11370664",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "dynamic-object-replication-within-a-distributed-storage-system",
	"match_type": "description"
},
{
	"name": "Executing programs based on user-specified constraints",
	"summary": "",
	"abstract": "Techniques are described for managing execution of programs on multiple computing systems, such as based at least in part of user-specified constraints. For example, constraints related to execution of a program may be based on a desired relative location of a host computing system to execute a copy of the program with respect to an indicated target (e.g., computing systems executing other copies of the program or copies of another indicated program), on particular geographic locations, and/or on factors not based on location (e.g., cost of use of a particular computing system, capabilities available from a particular computing system, etc.). Some or all of the multiple computing systems may be part of a program execution service for executing multiple programs on behalf of multiple users, and each may provide multiple virtual machines that are each capable of executing one or more programs for one or more users.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07792944",
	"publication_date": "2010-09-07",
	"application_number": "11851345",
	"application_date": "2007-09-06",
	"tags": null,
	"slug": "executing-programs-based-on-userspecified-constraints",
	"match_type": "description"
},
{
	"name": "Hybrid machine/human computing arrangement",
	"summary": "",
	"abstract": "A hybrid machine/human computing arrangement which advantageously involves humans to assist a computer to solve particular tasks, allowing the computer to solve the tasks more efficiently. In one embodiment, a computer system decomposes a task, such as, for example, image or speech comparison, into subtasks for human performance, and requests the performances. The computer system programmatically conveys the request to a central coordinating server of the hybrid machine/human computing arrangement, which in turn dispatches the subtasks to personal computers operated by the humans. The humans perform the subtasks and provide the results back to the server, which receives the responses, and generates a result for the task based at least in part on the results of the human performances.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07801756",
	"publication_date": "2010-09-21",
	"application_number": "11618385",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": "hybrid-machinehuman-computing-arrangement",
	"match_type": "description"
},
{
	"name": "Keymap service architecture for a distributed storage system",
	"summary": "",
	"abstract": "A keymap service architecture for a distributed storage system. A system may implement storage nodes configured to store replicas of data objects, where each of the replicas is accessible via a respective locator value, and keymap instances each configured to store keymap entries corresponding respectively to the data objects. A given keymap entry may indicate a mapping from a given key value corresponding to a given data object to each respective locator value of its replicas. Each of the keymap instances may store a replica of the given keymap entry and may index its respective stored keymap entries within a respective index data structure including hierarchically arranged index nodes corresponding to keymap entries. For a given keymap entry having a given corresponding index node, each tag value associated with each ancestor of the given corresponding index node may be a prefix of the given key value.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07647329",
	"publication_date": "2010-01-12",
	"application_number": "11370353",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "keymap-service-architecture-for-a-distributed-storage-system",
	"match_type": "description"
},
{
	"name": "Managing communications between computing nodes",
	"summary": "",
	"abstract": "Techniques are described for managing communications between multiple intercommunicating computing nodes, such as multiple virtual machine nodes hosted on one or more physical computing machines or systems. In some situations, users may specify groups of computing nodes and optionally associated access policies for use in the managing of the communications for those groups, such as by specifying which source nodes are allowed to transmit data to particular destinations nodes. In addition, determinations of whether initiated data transmissions from source nodes to destination nodes are authorized may be dynamically negotiated for and recorded for later use in automatically authorizing future such data transmissions without negotiation. This abstract is provided to comply with rules requiring an abstract, and it is submitted with the intention that it will not be used to interpret or limit the scope or meaning of the claims.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07801128",
	"publication_date": "2010-09-21",
	"application_number": "11394595",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "managing-communications-between-computing-nodes",
	"match_type": "description"
},
{
	"name": "Method and apparatus for a searchable data service",
	"summary": "",
	"abstract": "Method and apparatus for a searchable data service are described. The searchable data service may be implemented as a Web service with a Web service interface that allows the storage of locators and other attributes associated with entities stored in a data store in a searchable index. The attributes may be expressed as {name, value} pairs. The interface may allow client applications to query the searchable index to retrieve locators for entities in the backend data store according to the attributes associated with each locator. Search speed may be automatically optimized using, for example, indexes, query planning, and parallelism. The searchable data service provides a searchable index and is not a data store per se. The searchable data service separates searching and indexing of data from the actual storage of the data.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07801912",
	"publication_date": "2010-09-21",
	"application_number": "11392482",
	"application_date": "2006-03-29",
	"tags": null,
	"slug": "method-and-apparatus-for-a-searchable-data-service",
	"match_type": "description"
},
{
	"name": "Method and apparatus for message correction in a transaction authorization service",
	"summary": "",
	"abstract": "A transaction processing and authorization service. A transaction initiation message received from a source entity by the service may include one or more errors. The service may, in response to receiving an incorrect transaction initiation message, contact the source entity via a second communications channel and allow the source entity to correct the faulty transaction initiation message during the communication session. The service may allow the source entity to correct only incorrect or missing portions of the transaction initiation message, and thus the source entity may not be required to re-enter the entire message. Correction of the transaction initiation message may be performed as part of an authorization contact from the service to the source entity on a communications channel, and thus the correction may not require any extra communications attempts or sessions between the service and the source entity.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07729989",
	"publication_date": "2010-06-01",
	"application_number": "11858002",
	"application_date": "2007-09-19",
	"tags": null,
	"slug": "method-and-apparatus-for-message-correction-in-a-transaction-authorization-service",
	"match_type": "description"
},
{
	"name": "Method and system for associating keywords with online content sources",
	"summary": "",
	"abstract": "A method and system for associating keywords with online content sources. According to one embodiment, a method may include identifying a result set including one or more of a plurality of online content sources, wherein each of the included one or more online content sources satisfies a keyword query including one or more keywords. The method may further include, for a given one of the online content sources included in the result set, identifying one or more aggregate paths including the given online content source, wherein a given one of the one or more aggregate paths includes one or more navigation paths among the plurality of online content sources, and in response to detecting a selection of a particular online content source from one of the identified aggregate paths, associating the one or more keywords included in the keyword query with the particular online content source.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07831582",
	"publication_date": "2010-11-09",
	"application_number": "11321697",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "method-and-system-for-associating-keywords-with-online-content-sources",
	"match_type": "description"
},
{
	"name": "Method and system for automated comparison of items",
	"summary": "",
	"abstract": "An automated method and system for providing an item comparison includes identifying a first item and a set of one or more other items for comparison with the first item, prioritizing attributes of the first item and the other items, and providing the item comparison with prioritized attributes to a user. Identifying comparable items may involve a multiple step process in which a candidate set of items is first selected for possible comparison with the first item, and thereafter selecting one or more items from the candidate set for comparison. Prioritizing the attributes of the items may include measuring like attributes of the items against each other and arranging the attributes to appear in an order according to the degree the like attributes distinguish the items from each other. A modified item comparison may be prepared and provided in accordance with user feedback.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07752077",
	"publication_date": "2010-07-06",
	"application_number": "11041522",
	"application_date": "2005-01-21",
	"tags": null,
	"slug": "method-and-system-for-automated-comparison-of-items",
	"match_type": "description"
},
{
	"name": "Method and system for determining and notifying users of undesirable network content",
	"summary": "",
	"abstract": "A method and system for determining and notifying users of undesirable network content are disclosed. According to one embodiment, a method may include detecting an adverse content event corresponding to a given network information source, where the adverse content event occurs dependent upon activity of a given user with respect to the given network information source. The method may also include reporting the adverse content event with respect to the given network information source, detecting a reference to the given network information source on behalf of a particular user, and in response to detecting the reference, retrieving an indication corresponding to the given network information source, where the indication is determined dependent upon adverse content events reported with respect to the given network information source. The method may further include notifying the particular user of possible undesirable content with respect to the given network information source dependent upon the indication.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07797421",
	"publication_date": "2010-09-14",
	"application_number": "11611696",
	"application_date": "2006-12-15",
	"tags": null,
	"slug": "method-and-system-for-determining-and-notifying-users-of-undesirable-network-content",
	"match_type": "description"
},
{
	"name": "Method and system for determining interest levels of online content navigation paths",
	"summary": "",
	"abstract": "A method and system for determining interest levels of online content navigation paths. A method may include determining each of a plurality of navigation paths among a plurality of online content sources, and for each of the navigation paths, determining a corresponding path weight, where a given corresponding path weight is indicative of user activity along a corresponding navigation path. The method may further include identifying a particular aggregate path within the online content sources, where the particular path includes some of the navigation paths, where an aggregate path weight corresponding to the particular path is dependent upon the path weights corresponding to the navigation paths included in the particular path, and where the aggregate path weight satisfies an optimization criterion relative to other aggregate paths. A given navigation path included in the particular aggregate path may correspond to a possible user traversal from a first to a second online content source.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07774335",
	"publication_date": "2010-08-10",
	"application_number": "11321890",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "method-and-system-for-determining-interest-levels-of-online-content-navigation-paths",
	"match_type": "description"
},
{
	"name": "Method and system for determining interest spaces among online content sources",
	"summary": "",
	"abstract": "A method and system for determining interest spaces among online content sources. According to one embodiment, a method may include generating a representation of a network of online content sources, where the representation reflects navigation paths and respective navigation path weights among the online content sources, and where the navigation path weights are indicative of user activity among the online content sources. The method may further include generating one or more interest spaces of the network dependent upon the navigation paths and respective navigation path weights, where each interest space includes at least a subset of the online content sources.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07860895",
	"publication_date": "2010-12-28",
	"application_number": "11321895",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "method-and-system-for-determining-interest-spaces-among-online-content-sources",
	"match_type": "description"
},
{
	"name": "Method and system for dynamic pricing of web services utilization",
	"summary": "",
	"abstract": "A method and system for dynamic pricing of web services utilization. According to one embodiment, a method may include dynamically predicting utilization of a web services computing resource that is expected to occur during a given interval of time, and dependent upon the dynamically predicted utilization, setting a price associated with utilization of the web services computing resource occurring during the given interval of time. The method may further include providing the price to a customer.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07743001",
	"publication_date": "2010-06-22",
	"application_number": "11158190",
	"application_date": "2005-06-21",
	"tags": null,
	"slug": "method-and-system-for-dynamic-pricing-of-web-services-utilization",
	"match_type": "description"
},
{
	"name": "Method and system for occurrence frequency-based scaling of navigation path weights among online content sources",
	"summary": "",
	"abstract": "A method and system for scaling navigation path weights among online content sources. A method may include determining a first probability of users traversing a first navigation path from a first to a second online content source, dependent upon a ratio of traversals of the first navigation path and traversals of all navigation paths to the second online content source. The method may also include determining a second probability of users traversing navigation paths from the first online content source to any of the online content sources, dependent upon a ratio of the plurality of online content sources to which navigation paths from the first online content source exist and a total number of the plurality of online content sources. The method may further include generating from the probabilities a scaling factor indicative of a strength of the first navigation path relative to other navigation paths among the online content sources.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07660815",
	"publication_date": "2010-02-09",
	"application_number": "11478783",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "method-and-system-for-occurrence-frequencybased-scaling-of-navigation-path-weights-among-online-content-sources",
	"match_type": "description"
},
{
	"name": "Providing a reliable backing store for block data storage",
	"summary": "",
	"abstract": "Techniques are described for managing access of executing programs to non-local block data storage. In some situations, a block data storage service uses multiple server storage systems to reliably store copies of network-accessible block data storage volumes that may be used by programs executing on other physical computing systems, and at least some stored data for some volumes may also be stored on remote archival storage systems. A group of multiple server block data storage systems that store block data volumes may in some situations be co-located at a data center, and programs that use volumes stored there may execute on other computing systems at that data center, while the archival storage systems may be located outside the data center. The data stored on the archival storage systems may be used in various ways, including to reduce the amount of data stored in at least some volume copies.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07831682",
	"publication_date": "2010-11-09",
	"application_number": "12188944",
	"application_date": "2008-08-08",
	"tags": null,
	"slug": "providing-a-reliable-backing-store-for-block-data-storage",
	"match_type": "description"
},
{
	"name": "Search and indexing on a user device",
	"summary": "",
	"abstract": "Search may be performed on a user device, such as a handheld electronic book reader device. A search query term may be received. Text of a collection of electronic items stored in memory of the user device may be searched for the queried term. Search results may be returned identifying locations in the electronic items at which the queried term appears.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07716224",
	"publication_date": "2010-05-11",
	"application_number": "11763349",
	"application_date": "2007-06-14",
	"tags": null,
	"slug": "search-and-indexing-on-a-user-device",
	"match_type": "description"
},
{
	"name": "System and method for providing export services to merchants",
	"summary": "",
	"abstract": "A fulfillment services provider may offer export services to merchants, including generation of required export documentation; calculation, collection, and remittance of customs duties; and transportation via an international carrier. Such export services may be offered through a registration service, and may be integrated with other fulfillment services provided to registered merchants (e.g., domestic order fulfillment and/or warehousing of inventory), or may be offered to merchants that do not receive other fulfillment services from the provider. Export services may be provided to merchants who certify that all registered or specified items may be legally exported to all (or specified) international destinations, or the provider may verify compliance to export regulations on behalf of registered merchants. The provider may assume the role of Principal Party in Interest for registered merchants or the merchants may retain this role. Registration and provision of export services may be implemented in one or more software modules.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07853480",
	"publication_date": "2010-12-14",
	"application_number": "11751433",
	"application_date": "2007-05-21",
	"tags": null,
	"slug": "system-and-method-for-providing-export-services-to-merchants",
	"match_type": "description"
},
{
	"name": "System and method for providing high availability data",
	"summary": "",
	"abstract": "A computer-implemented data processing system and method writes a first plurality of copies of a data set at a first plurality of hosts and reads a second plurality of copies of the data set at a second plurality of hosts. The first and second pluralities of copies may be overlapping and the first and second pluralities of hosts may be overlapping. A hashing function may be used to select the first and second pluralities of hosts. Version histories for each of the first copies of the data set may also written at the first plurality of hosts and read at the second plurality of hosts. The version histories for the second copies of the data set may be compared and causal between the second copies of the data set may be evaluated based on the version histories for the second copies of the data set.",
	"url": null,
	"owner": "Amazon Technologies, Inc.",
	"publication_number": "07707136",
	"publication_date": "2010-04-27",
	"application_number": "11394648",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "system-and-method-for-providing-high-availability-data",
	"match_type": "description"
},
{
	"name": "Consumer behaviors at lender level",
	"summary": "",
	"abstract": "The present invention generally relates to financial data processing, and in particular it relates to lender credit scoring, lender profiling, lender behavior analysis and modeling. More specifically, it relates to rating lenders based on data derived from their respective consumers. Also, the present invention relates to rating consumer lenders based on the predicted spend capacity of their consumers.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07844544",
	"publication_date": "2010-11-30",
	"application_number": "12058306",
	"application_date": "2008-03-28",
	"tags": null,
	"slug": "consumer-behaviors-at-lender-level",
	"match_type": "description"
},
{
	"name": "Consumer behaviors at lender level",
	"summary": "",
	"abstract": "The present invention generally relates to financial data processing, and in particular it relates to lender credit scoring, lender profiling, lender behavior analysis and modeling. More specifically, it relates to rating lenders based on data derived from their respective consumers. Also, the present invention relates to rating consumer lenders based on the predicted spend capacity of their consumers.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07805363",
	"publication_date": "2010-09-28",
	"application_number": "12058254",
	"application_date": "2008-03-28",
	"tags": null,
	"slug": "consumer-behaviors-at-lender-level",
	"match_type": "description"
},
{
	"name": "Credit score and scorecard development",
	"summary": "",
	"abstract": "Share of Wallet (u201cSOWu201d) is a modeling approach that utilizes various data sources to provide outputs that describe a consumers spending capability, tradeline history including balance transfers, and balance information. These outputs can be appended to data profiles of customers and prospects and can be utilized to support decisions involving prospecting, new applicant evaluation, and customer management across the lifecycle. The outputs can be used as attributes to consider in developing a credit bureau scorecard.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07840484",
	"publication_date": "2010-11-23",
	"application_number": "11169769",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "credit-score-and-scorecard-development",
	"match_type": "description"
},
{
	"name": "Method and apparatus for development and use of a credit score based on spend capacity",
	"summary": "",
	"abstract": "Share of Wallet (u201cSOWu201d) is a modeling approach that utilizes various data sources to provide outputs that describe a consumers spending capability, tradeline history including balance transfers, and balance information. These outputs can be appended to data profiles of customers and prospects and can be utilized to support decisions involving prospecting, new applicant evaluation, and customer management across the lifecycle. A SOW score focusing on a consumer's spending capability can be used in the same manner as a credit bureau score.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07814004",
	"publication_date": "2010-10-12",
	"application_number": "11169779",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "method-and-apparatus-for-development-and-use-of-a-credit-score-based-on-spend-capacity",
	"match_type": "description"
},
{
	"name": "Method and apparatus for estimating the spend capacity of consumers",
	"summary": "",
	"abstract": "Time series consumer spending data, point-in-time balance information, internal customer financial data and consumer panel information provides input to a model for consumer spend behavior on plastic instruments or other financial accounts, from which approximations of spending ability may be reliably identified and utilized to promote additional consumer spending.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07788147",
	"publication_date": "2010-08-31",
	"application_number": "10978298",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "method-and-apparatus-for-estimating-the-spend-capacity-of-consumers",
	"match_type": "description"
},
{
	"name": "Method and apparatus for estimating the spend capacity of consumers",
	"summary": "",
	"abstract": "Time series consumer spending data, point-in-time balance information, internal customer financial data and consumer panel information provides input to a model for consumer spend behavior on plastic instruments or other financial accounts, from which approximations of spending ability may be reliably identified and utilized to promote additional consumer spending.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07788152",
	"publication_date": "2010-08-31",
	"application_number": "12368817",
	"application_date": "2009-02-10",
	"tags": null,
	"slug": "method-and-apparatus-for-estimating-the-spend-capacity-of-consumers",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for creating markup language documents",
	"summary": "",
	"abstract": "A method for generating markup language documents, e.g., XML documents, uses a code generator that creates programs configured to create dynamic XML documents at run time, avoiding many of the complexities arising from the use of conventional u201cXML GENERATEu201d statements. In one embodiment, this process involves (1) creating a template document using a markup language, wherein the template document includes a set of tags associated with the markup language documents; (2) parsing the template document to determine a working storage structure corresponding to the tags in the template document; and (3) generating an application program in the programming language (e.g., COBOL), wherein the application program includes a definition of the working storage structure, and is configured to generate, during run-time, a markup language document corresponding to the original template document.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07681118",
	"publication_date": "2010-03-16",
	"application_number": "10906020",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": "methods-and-apparatus-for-creating-markup-language-documents",
	"match_type": "description"
},
{
	"name": "System and method for obtaining a markup language template through reversing engineering",
	"summary": "",
	"abstract": "Process for reverse engineering a program application written in a legacy programming language (e.g., COBOL), where the program application was specifically designed using a markup language template so as to process documents in the markup language. The process involves extracting from the program application, line by line, content fragments of the original markup language template and reassembling them to obtain the original template.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07747942",
	"publication_date": "2010-06-29",
	"application_number": "11311622",
	"application_date": "2005-12-20",
	"tags": null,
	"slug": "system-and-method-for-obtaining-a-markup-language-template-through-reversing-engineering",
	"match_type": "description"
},
{
	"name": "System and method for processing trip requests",
	"summary": "",
	"abstract": "A system and method for planning trips and for processing trip requests that utilizes a centralized network for facilitating travel reservations and/or services. The system and method allow for the integration of various and disparate travel related applications to enable sophisticated travel booking processes. In various embodiments, a translation server is used to aggregate data from disparate sources and optimal travel arrangements are provided responsive to the data.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07761314",
	"publication_date": "2010-07-20",
	"application_number": "11468237",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "system-and-method-for-processing-trip-requests",
	"match_type": "description"
},
{
	"name": "System and method for processing trip requests",
	"summary": "",
	"abstract": "A system and method for planning trips and for processing trip requests that utilizes a centralized network for facilitating travel reservations and/or services. The system includes multi-purpose point of service terminals that provide a plurality of modules for various travel related applications such as an integrated e-mail booking module, a computer telephony integration module, a super passenger name record database, a customer database, a trip planning module, a customer relationship management module, a workflow module, and a low fare search module.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07805323",
	"publication_date": "2010-09-28",
	"application_number": "10347105",
	"application_date": "2003-01-17",
	"tags": null,
	"slug": "system-and-method-for-processing-trip-requests",
	"match_type": "description"
},
{
	"name": "System and method for processing trip requests",
	"summary": "",
	"abstract": "A system and method for planning trips and for processing trip requests that utilizes a centralized network for facilitating travel reservations and/or services. The system includes multi-purpose point of service terminals that provide a plurality of modules for various travel related applications such as an integrated e-mail booking module, a computer telephony integration module, a super passenger name record database, a customer database, a trip planning module, a customer relationship management module, a workflow module, and a low fare search module.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07788117",
	"publication_date": "2010-08-31",
	"application_number": "11468228",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "system-and-method-for-processing-trip-requests",
	"match_type": "description"
},
{
	"name": "System and method for processing trip requests",
	"summary": "",
	"abstract": "A system and method for planning trips and for processing trip requests that utilizes a centralized network for facilitating travel reservations and/or services. The system includes multi-purpose point of service terminals that provide a plurality of modules for various travel related applications such as an integrated e-mail booking module, a computer telephony integration module, a super passenger name record database, a customer database, a trip planning module, a customer relationship management module, a workflow module, and a low fare search module.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07809592",
	"publication_date": "2010-10-05",
	"application_number": "11468241",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "system-and-method-for-processing-trip-requests",
	"match_type": "description"
},
{
	"name": "Total structural risk model",
	"summary": "",
	"abstract": "The present invention generally relates to financial data processing, and in particular it relates to credit scoring, consumer profiling, consumer behavior analysis and modeling. More specifically, it relates to risk modeling using the inputs of credit bureau data, size of wallet data, and, optionally, internal data.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07814008",
	"publication_date": "2010-10-12",
	"application_number": "12040786",
	"application_date": "2008-02-29",
	"tags": null,
	"slug": "total-structural-risk-model",
	"match_type": "description"
},
{
	"name": "Total structural risk model",
	"summary": "",
	"abstract": "The present invention generally relates to financial data processing, and in particular it relates to credit scoring, consumer profiling, consumer behavior analysis and modeling. More specifically, it relates to risk modeling using the inputs of credit bureau data, size of wallet data, and, optionally, internal data.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07849004",
	"publication_date": "2010-12-07",
	"application_number": "12040757",
	"application_date": "2008-02-29",
	"tags": null,
	"slug": "total-structural-risk-model",
	"match_type": "description"
},
{
	"name": "Total structural risk model",
	"summary": "",
	"abstract": "The present invention generally relates to financial data processing, and in particular it relates to credit scoring, consumer profiling, consumer behavior analysis and modeling. More specifically, it relates to risk modeling using the inputs of credit bureau data, size of wallet data, and, optionally, internal data.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07853520",
	"publication_date": "2010-12-14",
	"application_number": "12040802",
	"application_date": "2008-02-29",
	"tags": null,
	"slug": "total-structural-risk-model",
	"match_type": "description"
},
{
	"name": "Using commercial share of wallet in private equity investments",
	"summary": "",
	"abstract": "Commercial size of spending wallet (u201cCSoSWu201d) is the total business spend of a business including cash but excluding bartered items. Commercial share of wallet (u201cCSoWu201d) is the portion of the spending wallet that is captured by a particular financial company. A modeling approach utilizes various data sources to provide outputs that describe a company's spend capacity. Private equity firms and other investors of small businesses can use the CSoW/CSoSW modeling approach to more accurately evaluate small and privately held companies, both during investment and for evaluating prospective investments. Over-the-counter securities trading systems can also use this modeling approach to provide more accurate information and/or rankings of listed companies to their customers.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07822665",
	"publication_date": "2010-10-26",
	"application_number": "11497521",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": "using-commercial-share-of-wallet-in-private-equity-investments",
	"match_type": "description"
},
{
	"name": "Using commercial share of wallet to rate investments",
	"summary": "",
	"abstract": "Commercial size of spending wallet (u201cCSoSWu201d) is the total business spend of a business including cash but excluding bartered items. Commercial share of wallet (u201cCSoWu201d) is the portion of the spending wallet that is captured by a particular financial company. A modeling approach utilizes various data sources to provide outputs that describe a company's spend capacity. A mutual fund rating company can use this CSoW/CSoSW modeling approach to predict the performance of funds that invest in a particular industry or sector. In addition, since mutual funds often provide guidelines for selecting stocks, rating companies can use this modeling approach to predict the performance of companies in a fund's portfolio.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07844534",
	"publication_date": "2010-11-30",
	"application_number": "12833741",
	"application_date": "2010-07-09",
	"tags": null,
	"slug": "using-commercial-share-of-wallet-to-rate-investments",
	"match_type": "description"
},
{
	"name": "Using commercial share of wallet to rate investments",
	"summary": "",
	"abstract": "Commercial size of spending wallet (u201cCSoSWu201d) is the total business spend of a business including cash but excluding bartered items. Commercial share of wallet (u201cCSoWu201d) is the portion of the spending wallet that is captured by a particular financial company. A modeling approach utilizes various data sources to provide outputs that describe a company's spend capacity. A mutual fund rating company can use this CSoW/CSoSW modeling approach to predict the performance of funds that invest in a particular industry or sector. In addition, since mutual funds often provide guidelines for selecting stocks, rating companies can use this modeling approach to predict the performance of companies in a fund's portfolio.",
	"url": null,
	"owner": "American Express Travel Related Services Company, Inc.",
	"publication_number": "07792732",
	"publication_date": "2010-09-07",
	"application_number": "11497562",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": "using-commercial-share-of-wallet-to-rate-investments",
	"match_type": "description"
},
{
	"name": "Redirection gateway",
	"summary": "",
	"abstract": "A redirection gateway is provided that bridges connections between redirection server computers and redirection client computers. The redirection gateway communicates with a redirection gateway client executing on a redirection client computer. In response to receiving a request from the redirection gateway client application, the redirection gateway establishes a connection to a redirection server application. The redirection gateway client application then causes an appropriate redirection client application for connecting to the redirection server application to be executed. The redirection gateway client application also instructs the redirection client application to connect to the redirection gateway. Once a connection between the redirection gateway and the redirection client application has been established, the redirection gateway bridges its connection to the redirection server application with its connection to the redirection client application.",
	"url": null,
	"owner": "American Megatrends, Inc.",
	"publication_number": "07673056",
	"publication_date": "2010-03-02",
	"application_number": "11768969",
	"application_date": "2007-06-27",
	"tags": null,
	"slug": "redirection-gateway",
	"match_type": "description"
},
{
	"name": "User interface providing UPS information",
	"summary": "",
	"abstract": "A system and method are provided for notifying a user about the occurrence of at least one predetermined event associated with an uninterruptible power supply (UPS) in operable communication with the system. The system comprises a worker module and a user interface module. The worker module determines whether the predetermined event has occurred and, responsive to said determination, the user interface module generates an user interface providing information relating to an operating parameter of the UPS. The user interface comprises at least one of a graphical portion and an alphanumeric portion.",
	"url": null,
	"owner": "American Power Conversion Corporation",
	"publication_number": "07703046",
	"publication_date": "2010-04-20",
	"application_number": "10042910",
	"application_date": "2002-01-09",
	"tags": null,
	"slug": "user-interface-providing-ups-information",
	"match_type": "description"
},
{
	"name": "Electronic commerce transactions within a marketing system that may contain a membership buying opportunity",
	"summary": "",
	"abstract": "The present invention is directed to a system and method for providing complete electronic commerce (u201cE-Commerceu201d) transactions and solutions for a marketing company's products via the World Wide Web, including facilities for signing up new customers and recruiting, training and supporting new Independent Business Owners through an interactive online process. In another aspect, the present invention relates to the combination of a marketing business with a membership buying opportunity using both electronic commerce and face-to-face transactions. The present invention is also directed to a system and method for combining a marketing business with a membership buying opportunity, so that Independent Business Owners participating in the marketing plan can introduce customers to a membership buying opportunity and earn bonuses or commissions based on the purchases by those members, while Members in the buying opportunity can consume products or, at their option, qualify to become Independent Business Owners.",
	"url": null,
	"owner": "Amway Corp.",
	"publication_number": "07778884",
	"publication_date": "2010-08-17",
	"application_number": "11453624",
	"application_date": "2006-06-15",
	"tags": null,
	"slug": "electronic-commerce-transactions-within-a-marketing-system-that-may-contain-a-membership-buying-opportunity",
	"match_type": "description"
},
{
	"name": "Internet control system communication protocol, method and computer program",
	"summary": "",
	"abstract": "A control system, method and computer program are provided for communicating control information in a control system. The control system includes a master controller and a plurality of devices. Each of the plurality of devices have a number of channels. Each channel has an identifying number and a plurality of channel states. The method includes at least initially directing one or more messages sent to and from each device to the master controller, sending a first type of control message from the master controller to respective devices, and sending a second type of control message and a third type of control message from the master controller to respective devices. A control message of the first type directs the respective device to place one of its channels in a specified channel state. A control message of the second type directs the respective device to set the level of a specified parameter to a certain value, and a control message of the third type comprises a character string of variable length.",
	"url": null,
	"owner": "AMX LLC",
	"publication_number": "07673030",
	"publication_date": "2010-03-02",
	"application_number": "11601041",
	"application_date": "2006-11-17",
	"tags": null,
	"slug": "internet-control-system-communication-protocol-method-and-computer-program",
	"match_type": "description"
},
{
	"name": "Altering keyword-based requests for content",
	"summary": "",
	"abstract": "Systems and methods are provided for increasing user response to advertisements from advertisement suppliers obtained in response to keywords. In one embodiment, a method includes identifying a base request from an advertisement requester; identifying a first and second keyword associated with the base request, the first and second keyword having both previously been used in advertisement requests to a first advertisement supplier; ranking the first keyword and the second keyword based on a user response history for each of the first keyword and second keyword; and identifying the higher ranked of the first keyword and the second keyword to be used to dynamically alter the base request to form an altered request to be sent to the first advertisement supplier.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07813959",
	"publication_date": "2010-10-12",
	"application_number": "11390868",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": "altering-keywordbased-requests-for-content",
	"match_type": "description"
},
{
	"name": "Altering keyword-based requests for content",
	"summary": "",
	"abstract": "Systems and methods are provided for increasing user response to advertisements. Methods include identifying a base request from an advertisement requester, identifying a first keyword and a second keyword associated with the base request, ranking the first keyword and the second keyword based on a user response history associated with the first keyword and the second keyword, and identifying the higher ranked of the first keyword and the second keyword to be used to dynamically alter the base request.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07809605",
	"publication_date": "2010-10-05",
	"application_number": "11391019",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": "altering-keywordbased-requests-for-content",
	"match_type": "description"
},
{
	"name": "Method and system for protection of electronic digital content",
	"summary": "",
	"abstract": "A computer-implemented method of protecting content includes receiving a request from a user to access the content. The user is enabled to perceive the content based on the request received from the user. The user is prevented from capturing the content when perception of the content is enabled. The method may be performed by a Java applet running in a network environment.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07774857",
	"publication_date": "2010-08-10",
	"application_number": "11949148",
	"application_date": "2007-12-03",
	"tags": null,
	"slug": "method-and-system-for-protection-of-electronic-digital-content",
	"match_type": "description"
},
{
	"name": "Passive personalization of lists",
	"summary": "",
	"abstract": "Personalizing communications typically includes accessing status information for instant messaging sessions involving an instant messaging identity and passively configuring a buddy group associated with the instant messaging identity to persistently reflect a list of participant identities from instant messaging sessions in which the instant messaging identity recently participated. The buddy group may be configured without action from the instant messaging identity. The list of participant identities may be maintained persistently beyond logout of the instant messaging identity. The list of participant identities may be maintained independent of a device used for the instant messaging sessions during which the list was created such that the buddy group is accessible from one or more different devices.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07765484",
	"publication_date": "2010-07-27",
	"application_number": "10134437",
	"application_date": "2002-04-30",
	"tags": null,
	"slug": "passive-personalization-of-lists",
	"match_type": "description"
},
{
	"name": "Presentation of content items based on dynamic monitoring of real-time context",
	"summary": "",
	"abstract": "The present invention provides systems and methods for providing real-time context-based content items to a user client system. Methods include dynamically monitoring a user client system to determine a real-time context of the user client system based on one or more of identifying one or more content keywords of an application operating on the user client system and/or one or more system capabilities of the user client system. One or more content items can be presented and changed based on changes detected in the real-time context of the user client system.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07707226",
	"publication_date": "2010-04-27",
	"application_number": "11668261",
	"application_date": "2007-01-29",
	"tags": null,
	"slug": "presentation-of-content-items-based-on-dynamic-monitoring-of-realtime-context",
	"match_type": "description"
},
{
	"name": "Targeted geographical condition notification of users based on a geographic location and device types or software of the users",
	"summary": "",
	"abstract": "A method for transmitting data to one or more users of a communications system by establishing a connection with one or more users; designating targeting rules applicable to online users; acquiring context information of online users; applying the targeting rules to the context information to identify targeted online users; and sending data to the targeted online users.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07703611",
	"publication_date": "2010-04-27",
	"application_number": "09842024",
	"application_date": "2001-04-26",
	"tags": null,
	"slug": "targeted-geographical-condition-notification-of-users-based-on-a-geographic-location-and-device-types-or-software-of-the-users",
	"match_type": "description"
},
{
	"name": "Throttling electronic communications from one or more senders",
	"summary": "",
	"abstract": "A number and/or frequency of electronic data communications received from a sender or group of senders during a period of time may be monitored (e.g., counted). When more than a threshold number of electronic communications are communicated by the sender during the period of time, an ability of the sender to communicate messages may be affected.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07788329",
	"publication_date": "2010-08-31",
	"application_number": "11330340",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": "throttling-electronic-communications-from-one-or-more-senders",
	"match_type": "description"
},
{
	"name": "Voice over internet protocol application development framework",
	"summary": "",
	"abstract": "Applying services to calls involving subscribers to a telephony services provider includes receiving an indication of a call placed to or from a first call participant. The indication is received by a telephony services provider over a first signaling path of the call that is established between the telephony services provider and a first telephony proxy server that is controlled by a telephony infrastructure provider. Control signals configured to affect a voice path of the call that is established between the first telephony proxy server and a second telephony proxy server also controlled by the telephony infrastructure provider but associated with a second call participant are identified. The identified control signals are sent to the first telephony proxy server over the first signaling path and to the second telephony proxy server over a second signaling path that is established between the telephony services provider and the second telephony proxy server.",
	"url": null,
	"owner": "AOL Inc.",
	"publication_number": "07760707",
	"publication_date": "2010-07-20",
	"application_number": "11020679",
	"application_date": "2004-12-27",
	"tags": null,
	"slug": "voice-over-internet-protocol-application-development-framework",
	"match_type": "description"
},
{
	"name": "Systems and methods for viewing three dimensional virtual slides",
	"summary": "",
	"abstract": "Systems and methods for retrieving, manipulating, and viewing 3D image objects from 3D virtual microscope slide images are provided. An image library module provides access to the imagery data in a 3D virtual slide and constructs 3D image objects that are coextensive with the 3D virtual slide or a 3D sub-portion thereof. From within the 3D image object, cross layer planar views spanning various depths of the 3D virtual slide are constructed as well as 3D prisms and other shaped image areas. The image library module allows a 3D image object to be sliced into horizontal and vertical views, skewed cross layer views and regular and irregular shaped 3D image areas for viewing by a user.",
	"url": null,
	"owner": "Aperio Technologies, Incorporated",
	"publication_number": "07787674",
	"publication_date": "2010-08-31",
	"application_number": "11341097",
	"application_date": "2006-01-27",
	"tags": null,
	"slug": "systems-and-methods-for-viewing-three-dimensional-virtual-slides",
	"match_type": "description"
},
{
	"name": "Application programming interfaces for scrolling operations",
	"summary": "",
	"abstract": "At least certain embodiments of the present disclosure include an environment with user interface software interacting with a software application. A method for operating through an application programming interface (API) in this environment includes transferring a set bounce call. The method further includes setting at least one of maximum and minimum bounce values. The set bounce call causes a bounce of a scrolled region in an opposite direction of a scroll based on a region past an edge of the scrolled region being visible in a display region at the end of the scroll.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07844915",
	"publication_date": "2010-11-30",
	"application_number": "11620717",
	"application_date": "2007-01-07",
	"tags": null,
	"slug": "application-programming-interfaces-for-scrolling-operations",
	"match_type": "name"
},
{
	"name": "Application-based backup-restore of electronic information",
	"summary": "",
	"abstract": "Systems and methods for storing and restoring backup data. One method includes receiving, while a current view of an application is displayed in a user interface, a first user input requesting a history view associated with the current view of the application. The history view is displayed in response to the first user input, the history view including at least a first visual representation of an earlier version of the current view of the application, the earlier version including a first element. A second user input is received while the history view is displayed. The second user input requesting that the current view of the application be modified according to the earlier version, at least with regard to the first element. The current view of the application is modified in response to the second user input according to the earlier version, at least with regard to the first element.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07860839",
	"publication_date": "2010-12-28",
	"application_number": "11499250",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": "applicationbased-backuprestore-of-electronic-information",
	"match_type": "description"
},
{
	"name": "Execution control for processor tasks",
	"summary": "",
	"abstract": "Method, system and means are provided for simultaneous activation/deactivation of a set of tasks by a processor, each of the tasks normally executed in a sequential fashion by one or more processors. A list of tasks to be activated/deactivated is stored, including the timing relationship for the activation process. The list is then implemented as frame numbers for activation and requested state in the actual task list. The executing processor compares the requested state to the actual state for each task, and if different, compares the value of the activation frame with the current frame. If the current frame equals or exceeds the activation frame, then the requested active state is transferred to the actual state.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07805727",
	"publication_date": "2010-09-28",
	"application_number": "11198674",
	"application_date": "2005-08-04",
	"tags": null,
	"slug": "execution-control-for-processor-tasks",
	"match_type": "description"
},
{
	"name": "Handheld computer having dynamic network transport selection according to a media type of a request",
	"summary": "",
	"abstract": "A method for dynamic network transport selection is described. An indication from a user of a client device is received, to fetch over a data network media of a predefined type. One of a number of network transport physical layers in the client device is automatically assigned, based on a number of stored, ranked media types and network transport physical layer types, for use in fetching the media over the data network. Other embodiments are also described and claimed.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07840685",
	"publication_date": "2010-11-23",
	"application_number": "11620700",
	"application_date": "2007-01-07",
	"tags": null,
	"slug": "handheld-computer-having-dynamic-network-transport-selection-according-to-a-media-type-of-a-request",
	"match_type": "description"
},
{
	"name": "Image capture using display device as light source",
	"summary": "",
	"abstract": "A digital image capture system and method uses a display device to illuminate a target with light for improved image capture under poor lighting conditions. Various characteristics of the flash (e.g., brightness, color, duration, etc.) can be adjusted to improve image capture. Users are provided with feedback (e.g., live video feed, audio and/or visual countdowns, etc.) to assist them in preparing for image capture. The captured images are seamlessly integrated with existing applications (e.g., video conferencing, instant text messaging, etc.).",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07663691",
	"publication_date": "2010-02-16",
	"application_number": "11249130",
	"application_date": "2005-10-11",
	"tags": null,
	"slug": "image-capture-using-display-device-as-light-source",
	"match_type": "description"
},
{
	"name": "Immediate search feedback",
	"summary": "",
	"abstract": "Providing immediate search feedback is disclosed. Search input is received within a search field of a web browser application. Based on characteristics of the search input, a determination is made whether to automatically submit a query to a search engine. In one aspect, the query is automatically submitted to the search engine. The query is based on the received first search input. Results are displayed within the web browser application, the results web page returned from the query submitted to the search engine.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07788248",
	"publication_date": "2010-08-31",
	"application_number": "11076473",
	"application_date": "2005-03-08",
	"tags": null,
	"slug": "immediate-search-feedback",
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing electronic messages",
	"summary": "",
	"abstract": "Methods and apparatuses for processing electronic messages are described herein. In one aspect of the invention, for an outgoing message addressed to a mail address of a recipient, the mail client determines whether is an alternative messaging system available to the mail address of the recipient. If there is an alternative messaging system available, the mail client determines whether the recipient's alternative messaging system is online. If so, the mail client sends the mail message to the recipient via the alternative messaging system. Otherwise, the mail client sends the message via normal mail system. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07836136",
	"publication_date": "2010-11-16",
	"application_number": "11496865",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": "method-and-apparatus-for-processing-electronic-messages",
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing electronic messages",
	"summary": "",
	"abstract": "Methods and apparatuses for processing electronic messages are described herein. In one aspect of the invention, for an outgoing message addressed to a mail address of a recipient, the mail client determines whether is an alternative messaging system available to the mail address of the recipient. If there is an alternative messaging system available, the mail client determines whether the recipient's alternative messaging system is online. If so, the mail client sends the mail message to the recipient via the alternative messaging system. Otherwise, the mail client sends the message via normal mail system. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07765263",
	"publication_date": "2010-07-27",
	"application_number": "10741948",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": "method-and-apparatus-for-processing-electronic-messages",
	"match_type": "description"
},
{
	"name": "Method and system for seamlessly accessing remotely stored files",
	"summary": "",
	"abstract": "A system and method by which users via programs on one computer may seamlessly access files remotely stored on other computers that run a well known file access protocol. An operating system extension and an application level network access program are provided. The operating system extension receives file system requests for remote files from the operating system that were issued according to a well known application program interface. The operating system extension forwards the remote file system request to the network access program. The network access program reformats the request according to a well known application level network protocol extension and sends it over a network to a remote computer system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07693962",
	"publication_date": "2010-04-06",
	"application_number": "10994007",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": "method-and-system-for-seamlessly-accessing-remotely-stored-files",
	"match_type": "description"
},
{
	"name": "Method for embedding object codes in source codes",
	"summary": "",
	"abstract": "Methods for embedding codes executable in a first system having a first microprocessor into codes executable in a second system having a second microprocessor are described herein. In one aspect of the invention, an exemplary method includes providing first codes having a routine, the first codes being compilable to be executed in the first system, and compiling the first codes, resulting in second codes; the second codes comprising opcodes of the routine executable by the first system, which convert the second codes into third codes automatically, the third codes being compilable to be executed by the second system; this is followed by compiling the third codes, resulting in the fourth codes being executable in the second system, and linking the fourth codes, generating an executable image and executing the executable image in the second system. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07694289",
	"publication_date": "2010-04-06",
	"application_number": "11295239",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": "method-for-embedding-object-codes-in-source-codes",
	"match_type": "description"
},
{
	"name": "Multi-repository display system using separate presentation, adaption and access layers",
	"summary": "",
	"abstract": "A software object display system using an adaptation layer to obtain information concerning a number of software objects is described. The adaptation layer communicates to a presentation layer which produces a display for the software objects. The adaptation layer isolates the presentation layer from the details of the structures of the software objects to be displayed. The adaptation layer provides a standard set of data to the presentation layer for the presentation layer to display.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07669145",
	"publication_date": "2010-02-23",
	"application_number": "10251942",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": "multirepository-display-system-using-separate-presentation-adaption-and-access-layers",
	"match_type": "description"
},
{
	"name": "Reversing execution of instructions in a debugger",
	"summary": "",
	"abstract": "A method can include receiving navigational debug input from a debugger interface including input to traverse input code in a plurality of modes; in response to receiving the navigational debug input, a) saving state of a program being executed in a corresponding debugger, including creating a child process from a currently executing process, and b) executing a portion of the program, wherein executing the portion of the program comprises suspending the created child process, and continuing to execute the currently executing process; receiving input to reverse execution of the portion of the program; and restoring the saved state of the program, wherein restoring the saved state of the program comprises suspending the currently executing process and activating the suspended child process. The navigation input can include input to single-step, step over a function, step into a function or set a breakpoint in programming code running within the corresponding debugger.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07836430",
	"publication_date": "2010-11-16",
	"application_number": "11490703",
	"application_date": "2006-07-21",
	"tags": null,
	"slug": "reversing-execution-of-instructions-in-a-debugger",
	"match_type": "description"
},
{
	"name": "Run-time code injection to perform checks",
	"summary": "",
	"abstract": "A digital rights management system permits an application owner to cause code to be injected into the application's run-time instruction stream so as to restrict execution of that application to specific hardware platforms. In a first phase, an authorizing entity (e.g., an application owner or platform manufacturer) authorizes one or more applications to execute on a given hardware platform. Later, during application run-time, code is injected that performs periodic checks are made to determine if the application continues to run on the previously authorized hardware platform. If a periodic check fails, at least part of the application's execution string is terminatedu2014effectively rendering the application non-usable. The periodic check is transparent to the user and difficult to circumvent.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07694341",
	"publication_date": "2010-04-06",
	"application_number": "11207045",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": "runtime-code-injection-to-perform-checks",
	"match_type": "description"
},
{
	"name": "Sequence grabber for audio content",
	"summary": "",
	"abstract": "An audio context object gathers multiple channels of audio data from an audio device and stores each channel of data separately in a ring buffer. Clients of the audio context can request any number of channels of data at any interval from the audio context. Multiple clients can share the same audio device. The ring buffer used by the audio context object stores the channels of audio data in a two-dimensional array such that each channel of audio data is stored in contiguous memory.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07774077",
	"publication_date": "2010-08-10",
	"application_number": "11158482",
	"application_date": "2005-06-21",
	"tags": null,
	"slug": "sequence-grabber-for-audio-content",
	"match_type": "description"
},
{
	"name": "Snapback user interface for accessing different document pages directly without going through intermediate pages",
	"summary": "",
	"abstract": "A user interface and methods for accessing document presentations are described herein. In one aspect of the invention, an exemplary method of the invention allows a user to directly snapback to a previous accessed document presentation without having to select from a menu of items or go through the intermediate pages. In this method, when a first document presentation is accessed, a first location of the first document presentation is recorded, automatically or manually. Subsequently, when a sequence of additional document presentations originated from the first document presentation is accessed, in response to a first input, without having to select from a menu of items, the first document presentation is directly retrieved from a recorded first location and displayed in a window. In one particular embodiment, a second document presentation is accessed and a second location of the second document presentation is recorded, where the recordation of the second location resets or supercedes the recordation of the first location. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07823054",
	"publication_date": "2010-10-26",
	"application_number": "11644162",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "snapback-user-interface-for-accessing-different-document-pages-directly-without-going-through-intermediate-pages",
	"match_type": "description"
},
{
	"name": "System and method for interfacing index based and iterator based application programming interfaces",
	"summary": "",
	"abstract": "A system and method for interfacing index based and iterator based file management routines. In general, the disclosed system maintains an iterator cache having multiple iterators. Each active iterator is associated with a most recently used directory entry. Upon receiving an index based request, the iterator closest to the index based request is identified. If the index based request is closer to the top of the directory than it is to the closest active iterator, the directory entries are sequentially examined beginning at the top of the directory with the first entry. Otherwise, the system deternines whether the index based request is located above or below the closest iterator. If the index based request is above the closest iterator, the system steps backward beginning with the directory entry associated with the closest iterator until the directory entry associated with the index based request is located. If the closest iterator is located below the closest iterator, the system steps forward through the directory entries beginning with the directory entry associated with the closest iterator until the requested directory entry is located.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07769785",
	"publication_date": "2010-08-03",
	"application_number": "11172077",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": "system-and-method-for-interfacing-index-based-and-iterator-based-application-programming-interfaces",
	"match_type": "name"
},
{
	"name": "System and method for RAW image processing",
	"summary": "",
	"abstract": "An automated RAW image processing method and system are disclosed. A RAW image and metadata related to the RAW image are obtained from a digital camera or other source. The RAW image and the related metadata are automatically processed using an Operating System service of a processing device to produce a resulting image in an absolute color space. The resulting image is then made available to an application program executing on the processing device through an application program interface with the Operating System service.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07773127",
	"publication_date": "2010-08-10",
	"application_number": "11756906",
	"application_date": "2007-06-01",
	"tags": null,
	"slug": "system-and-method-for-raw-image-processing",
	"match_type": "description"
},
{
	"name": "System and method for raw image processing using conversion matrix interpolated from predetermined camera characterization matrices",
	"summary": "",
	"abstract": "An automated RAW image processing method and system are disclosed. A computer receives a RAW image and metadata from a camera and interpolates an interpolated image from the RAW image so that the interpolated image is in a first color space. Predefined characterization matrices associated with the camera are obtained. Each of the characteristic matrices is associated with a different illuminant. A conversion matrix is interpolated from the characterization matrices and a white balance of the RAW image. The interpolated image is converted with the conversion matrix into a second color space. A resulting image in a rendered color space is produced from the converted image, and the resulting image is made available to an application program.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07835569",
	"publication_date": "2010-11-16",
	"application_number": "11549627",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "system-and-method-for-raw-image-processing-using-conversion-matrix-interpolated-from-predetermined-camera-characterization-matrices",
	"match_type": "description"
},
{
	"name": "Unified interest layer for user interface",
	"summary": "",
	"abstract": "A user-activatable dashboard (also referred to as a unified interest layer) contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time, causing the dashboard to temporarily replace the existing user interface display on the user's screen. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07793232",
	"publication_date": "2010-09-07",
	"application_number": "11370743",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": "unified-interest-layer-for-user-interface",
	"match_type": "description"
},
{
	"name": "Unified interest layer for user interface",
	"summary": "",
	"abstract": "A user-activatable dashboard (also referred to as a unified interest layer) contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time, causing the dashboard to temporarily replace the existing user interface display on the user's screen. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07761800",
	"publication_date": "2010-07-20",
	"application_number": "11166802",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": "unified-interest-layer-for-user-interface",
	"match_type": "description"
},
{
	"name": "User interface element with auxiliary function",
	"summary": "",
	"abstract": "A user-activatable dashboard (also referred to as a unified interest layer) contains any number of user interface elements, referred to herein as u201cwidgets,u201d for quick access by a user. In response to a command from a user, the dashboard is invoked and the widgets are shown on the screen. The user can activate the dashboard at any time, causing the dashboard to temporarily replace the existing user interface display on the user's screen. Once the dashboard has been activated, the user can interact with any or all of the widgets, and can configure the dashboard by adding, deleting, moving, or configuring individual widgets as desired. When the user wishes to return to the normal user interface he or she was working with, the user issues a command causing the dashboard to be dismissed. Once the dashboard has been dismissed, the previous user interface state is restored, allowing the user to resume normal interactions with the operating system.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07793222",
	"publication_date": "2010-09-07",
	"application_number": "12353937",
	"application_date": "2009-01-14",
	"tags": null,
	"slug": "user-interface-element-with-auxiliary-function",
	"match_type": "description"
},
{
	"name": "Window server event taps",
	"summary": "",
	"abstract": "Methods, devices and an associated application programming interface are described that permits a user to register event tap routines (u201cETRsu201d) with an application such as, for example, a window server application. Event tap routines permit events such as human interface device events to be processed at multiple points and in a manner not provided during normal window server operations. Event tap routines may effect passive or active event responses. Passive ETRs may merely record the occurrence of an event or the time between successive events without modifying or altering the event's processing sequence within a window server. Active ETRs, on the other hand, effect some programmatic response to an event. For example, active ETRs may modify the state of an event, delete the event, create one or more additional events or cause the event to be processed u201cout of sequenceu201d by the window server application.",
	"url": null,
	"owner": "Apple Inc.",
	"publication_number": "07818755",
	"publication_date": "2010-10-19",
	"application_number": "11020875",
	"application_date": "2004-12-22",
	"tags": null,
	"slug": "window-server-event-taps",
	"match_type": "abstract"
},
{
	"name": "Generating a format translator",
	"summary": "",
	"abstract": "Generating code is disclosed. A specification of one or more translation patterns is received. The one or more translation patterns are used to generate at least a portion of code associated with a translator. Using the one or more translation patterns to generate at least a portion of code associated with the translator results in the translator being configured to create a target object model. Creating the target object model includes populating one or more elements of the target object model in a processing order at least in part associated with an order of elements in the one or more translation patterns.",
	"url": null,
	"owner": "Apple, Inc.",
	"publication_number": "07774746",
	"publication_date": "2010-08-10",
	"application_number": "11407559",
	"application_date": "2006-04-19",
	"tags": null,
	"slug": "generating-a-format-translator",
	"match_type": "description"
},
{
	"name": "System and method for creating target byte code",
	"summary": "",
	"abstract": "A system and method for converting byte code of a first type into byte code of a second type. Byte code of a first type is received as input. The first byte code is converted into constituent byte code data elements that can comprise any logical unit or grouping of at least a portion of a software application. The first byte code data elements are mapped to data elements of a second byte code type. The second byte code data elements are assembled into a resulting second byte code.",
	"url": null,
	"owner": "Aptana, Inc.",
	"publication_number": "07707547",
	"publication_date": "2010-04-27",
	"application_number": "11373014",
	"application_date": "2006-03-10",
	"tags": null,
	"slug": "system-and-method-for-creating-target-byte-code",
	"match_type": "description"
},
{
	"name": "System and method for creating target byte code",
	"summary": "",
	"abstract": "A system and method for converting byte code of a first type into byte code of a second type. Byte code of a first type and markup language code are received as inputs. The first byte code is converted into constituent byte code data elements that can comprise any logical unit or grouping of at least a portion of a software application. The markup language code is converted into constituent markup language data elements that can comprise individual markup language tags and references to data or functionality in the first byte code. The first byte code data elements and markup language data elements are mapped to data elements of a second byte code type. The second byte code data elements are assembled into a resulting second byte code.",
	"url": null,
	"owner": "Aptana, Inc.",
	"publication_number": "07844958",
	"publication_date": "2010-11-30",
	"application_number": "11372685",
	"application_date": "2006-03-10",
	"tags": null,
	"slug": "system-and-method-for-creating-target-byte-code",
	"match_type": "description"
},
{
	"name": "Audio-visual navigation and communication dynamic memory architectures",
	"summary": "",
	"abstract": "Buffering data associated with a spatial publishing object data store at a buffer distance proximate a user presence in a spatial publishing object space. The buffer distance comprises a measure based at least in part on: capacity of a communications path between the data store and the user platform; availability of memory at the user platform; movement of a user presence through the space; traffic in the communications path; processing resources available; amount of objects within a distance of the user presence; amount of objects in the space; type of objects; proximity of objects to the user presence; and rate of the user presence movement in the space. Movement of the user presence in the space buffers data such that data for a proximate object is available in the buffer for presenting to the user when the user's presence is a predetermined distance from the proximate object.",
	"url": null,
	"owner": "AQ Media, Inc.",
	"publication_number": "07797402",
	"publication_date": "2010-09-14",
	"application_number": "12239333",
	"application_date": "2008-09-26",
	"tags": null,
	"slug": "audiovisual-navigation-and-communication-dynamic-memory-architectures",
	"match_type": "description"
},
{
	"name": "System and method for managing data in multiple bills of material over a network",
	"summary": "",
	"abstract": "A system for managing a bill of materials includes a data structure having at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field. In another aspect, the system for managing a bill of materials includes a database having a single namespace, and at least one record with a primary key data field, an owner data field for indicating the owner of the record, the owner data field including data representative of one of a plurality of owners, and at least one other data field.",
	"url": null,
	"owner": "Arena Solutions, Inc.",
	"publication_number": "07801916",
	"publication_date": "2010-09-21",
	"application_number": "12577590",
	"application_date": "2009-10-12",
	"tags": null,
	"slug": "system-and-method-for-managing-data-in-multiple-bills-of-material-over-a-network",
	"match_type": "description"
},
{
	"name": "Internet based highway traffic advisory system",
	"summary": "",
	"abstract": "A real time traffic control system that includes a plurality of roadside sensors and variable message displays arrayed along the highway connected to the Internet, and communicating with a central computer using the Internet. Each roadside device includes a modem and has a unique internet address. The central computer is programmed to create on demand a plurality of individual virtual communication ports, each of the ports corresponding to each of the unique device addresses, whereby said computer communicates in a quasi-simultaneous manner with all of the roadside devices.",
	"url": null,
	"owner": "ASTI Transportation Systems, Inc.",
	"publication_number": "07650228",
	"publication_date": "2010-01-19",
	"application_number": "11342064",
	"application_date": "2006-01-26",
	"tags": null,
	"slug": "internet-based-highway-traffic-advisory-system",
	"match_type": "description"
},
{
	"name": "Enhanced capture, management and distribution of live presentations",
	"summary": "",
	"abstract": "Techniques are provided for converting live presentations into electronic media and managing captured media assets for distribution. An exemplary system includes capture devices that capture media assets of live presentations comprising a session, including image data of sequentially presented visual aids accompanying the live presentations and audio data. Each capture device has an interface for real-time image data marking of the image data for identification of individual images and session marking of the image data for demarcation of individual presentations of the session. A centralized device processes the captured media assets and automatically divides the captured media assets into discrete files associated with the individual presentations based on the session markings. An administrative tool manages the processed media assets to produce modified presentations and enables modification of the visual aid images identified by the image data markings. A production device formats the modified presentations for distribution on distribution media.",
	"url": null,
	"owner": "Astute Technology, LLC",
	"publication_number": "07689898",
	"publication_date": "2010-03-30",
	"application_number": "11580092",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "enhanced-capture-management-and-distribution-of-live-presentations",
	"match_type": "description"
},
{
	"name": "Electronic vulnerability and reliability assessment",
	"summary": "",
	"abstract": "Systems for providing information on system vulnerabilities include a database populated with descriptive system information and a database structure configured as a hierarchical plurality of database pages configured to include element vulnerability information and links to related database pages. A rule processor module is configured to provide rules for cycling through the database structure to match keywords, such as keywords provided by user input, and descriptive system information from the database with element vulnerability information from the database structure. Other systems and methods are also provided.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07735142",
	"publication_date": "2010-06-08",
	"application_number": "11768055",
	"application_date": "2007-06-25",
	"tags": null,
	"slug": "electronic-vulnerability-and-reliability-assessment",
	"match_type": "description"
},
{
	"name": "Extended virtual user-to-network interface with ATM network",
	"summary": "",
	"abstract": "Communication between a source and a destination is dynamically established. A connection request is received. The connection request is based on a request transmitted over a best-effort path from the source. A network connection is established having a specified quality of service (QoS) based on the request between the source and the destination. Data for a first application is transmitted over the network connection and data for a second application is transmitted over the best-effort path.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07839866",
	"publication_date": "2010-11-23",
	"application_number": "12057581",
	"application_date": "2008-03-28",
	"tags": null,
	"slug": "extended-virtual-usertonetwork-interface-with-atm-network",
	"match_type": "description"
},
{
	"name": "Integrated wireless and wireline billing and services management",
	"summary": "",
	"abstract": "Methods and systems are provided for integrating billing and services management systems across disparate telecommunications systems including wireless systems and local and long distance wireline systems. Wireless and wireline services may be charged to and billed under one periodic billing. A rollover management system is employed for managing units of call usage that may be u201crolled overu201d from a present usage period to a subsequent usage period. An integrated services settlement system is provided which is operable for apportioning revenue associated with utilization of the wireless carrier's services to the wireless carrier and for apportioning revenue associated with the wireline carrier's services to the wireline carrier. An integrated telecommunications services ordering system is provided that is operable to synchronize subscriber orders between the subscriber's wireless and wireline carriers.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07644038",
	"publication_date": "2010-01-05",
	"application_number": "10655558",
	"application_date": "2003-09-04",
	"tags": null,
	"slug": "integrated-wireless-and-wireline-billing-and-services-management",
	"match_type": "description"
},
{
	"name": "Method, system, and storage medium for providing automated purchasing and delivery services",
	"summary": "",
	"abstract": "Embodiments of the invention relate to a method, system, and storage medium for providing automated purchasing and delivery services. The method includes performing analysis of electronic activities conducted by a network user, inferring an intent to execute a transaction by the network user, and executing the transaction on behalf of the network user. The analysis includes comparing the electronic activities with previously-conducted electronic activities, and applying user-defined policies to the electronic activities.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07797196",
	"publication_date": "2010-09-14",
	"application_number": "10689133",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": "method-system-and-storage-medium-for-providing-automated-purchasing-and-delivery-services",
	"match_type": "description"
},
{
	"name": "Methods and apparatus to detect border gateway protocol session failures",
	"summary": "",
	"abstract": "Methods and apparatus to detect border gateway protocol (BGP) session failures are disclosed. A disclosed example apparatus comprises a database interface to obtain provisioned configuration information for a provider edge (PE) router, a BGP engine to receive one or more BGP messages from a route reflector, the one or more BGP messages representing a list of active routes for the PE router, and a session analyzer to compare the list of active routes with the provisioned configuration information to determine whether a provisioned route is not present in the list of active routes, and to declare a BGP session failure when the provisioned route is not present in the list of active routes.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07804781",
	"publication_date": "2010-09-28",
	"application_number": "12275055",
	"application_date": "2008-11-20",
	"tags": null,
	"slug": "methods-and-apparatus-to-detect-border-gateway-protocol-session-failures",
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for providing application services to a user",
	"summary": "",
	"abstract": "Computing device executed application services are provided to a user using a plurality of application service providing modules, each of which provides a subset of the application services to the user. A request received form the user is translated to one or more needs to be satisfied. One or more of the application service providing modules required for satisfying the need(s) is identified. Execution of actions by the identified application service providing module(s) to satisfy the need(s) is scheduled.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07735091",
	"publication_date": "2010-06-08",
	"application_number": "10924072",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": "methods-systems-and-computer-program-products-for-providing-application-services-to-a-user",
	"match_type": "description"
},
{
	"name": "Network-based voice activated auto-attendant service with B2B connectors",
	"summary": "",
	"abstract": "A network-based voice activated auto-attendant service is disclosed. In a particular embodiment, a data processor is provided that can construct an enterprise voice directory by executing instructions to encrypt eXtended Markup Language (XML)-based files using an encryption key issued by a voice activated auto-attendant service provider network to form encrypted XML-based files. The instructions are further to store the encrypted XML-based files in a manner that is accessible to the voice activated auto-attendant service provider network, and to create the enterprise voice directory based on the encrypted XML-based files. The enterprise voice directory is configured to provide run-time access to the voice activated auto-attendant service provider network.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07848509",
	"publication_date": "2010-12-07",
	"application_number": "12167925",
	"application_date": "2008-07-03",
	"tags": null,
	"slug": "networkbased-voice-activated-autoattendant-service-with-b2b-connectors",
	"match_type": "description"
},
{
	"name": "Repair of network communication files",
	"summary": "",
	"abstract": "Embodiments of the present disclosure provide method and devices for repairing computer files that impair network communications. In this regard, one embodiment of such a method, among others, can be broadly summarized by the following steps: extracting information corresponding to settings for network communications from a local resource file, wherein the local resource file is embedded within an application executed by a computer for repairing the files impairing network communication on the computer; and replacing information within a registry of the computer with at least a portion of the extracted information, wherein the replaced information includes settings pertaining to facilitation of network communications on the computer. Other methods and devices are also provided.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07730359",
	"publication_date": "2010-06-01",
	"application_number": "11232643",
	"application_date": "2005-09-22",
	"tags": null,
	"slug": "repair-of-network-communication-files",
	"match_type": "description"
},
{
	"name": "Smart call delivery with GIS integration",
	"summary": "",
	"abstract": "A method of delivering a call to a called party's device. The method includes receiving a call directed to a wireline device and validating that a telephone number of the wireline device is associated with a telephone number of a wireless device. The method also includes transmitting a message to the wireless device, delivering the call to the wireline device when a return message is not received from the wireless device, and determining a location of the wireless device when a return message is received from the wireless device. The method further includes comparing the location of the wireless device with a location of the wireline device, delivering the call to the wireless device when the location of the wireless device is not within a predefined vicinity of the location of the wireline device, and delivering the call to the wireline device when the location of the wireless device is within a predefined vicinity of the location of the wireline device.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07668559",
	"publication_date": "2010-02-23",
	"application_number": "11296734",
	"application_date": "2005-12-07",
	"tags": null,
	"slug": "smart-call-delivery-with-gis-integration",
	"match_type": "description"
},
{
	"name": "System and method for providing a communications service in distributed computing environment",
	"summary": "",
	"abstract": "A broker of the present invention enables distributed applications to communicate with a server in distributed computing environment. The broker receives from a client a request to execute a transaction. The broker receives input parameters including input data. The broker uses a routing service to locate the server. The broker then establishes a communications connection to the server and forwards the input data. The transaction is executed and the broker receives a response from the server. The broker forwards the response to the client. The broker can segment the input data before forwarding the input data to the server. If the response is in multiple segments, the broker can combine the multiple segments into one string before forwarding the response to the client. Further, the broker may receive requests from multiple clients via multiple communications connections. The broker then consolidates the multiple communications connections and establishes one communications connection to the server.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07673053",
	"publication_date": "2010-03-02",
	"application_number": "10231258",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": "system-and-method-for-providing-a-communications-service-in-distributed-computing-environment",
	"match_type": "description"
},
{
	"name": "Systems, methods, and computer-readable media for providing information regarding communication systems",
	"summary": "",
	"abstract": "Methods, systems, and computer-readable media for accessing information regarding a communication system from a plurality of information sources and providing a consolidated view of the information are provided. A first request to access information regarding the communication system is received. In response to receiving the first request, the information regarding the communication system is retrieved from a plurality of information systems, and a portion of the information retrieved from a first information system of the plurality of information systems is displayed. A second request is received to access a portion of the information retrieved from a second information system of the plurality of information systems including promotional information associated with the communication system. In response to receiving the second request, the portion of the information retrieved from the second information system of the plurality of information systems is displayed.",
	"url": null,
	"owner": "AT&T Intellectual Property I, L.P.",
	"publication_number": "07836092",
	"publication_date": "2010-11-16",
	"application_number": "11609731",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": "systems-methods-and-computerreadable-media-for-providing-information-regarding-communication-systems",
	"match_type": "description"
},
{
	"name": "Methods and apparatus to provide a telephone system configuration interface",
	"summary": "",
	"abstract": "Methods and apparatus for a telephone customer to configure telephone service for multiple users at a single location associated with the customer. The location has at least two telephones, at least two phone numbers and a voice mail box. The telephone customer is visually provided an option to assign one of the phone numbers to one of the telephones. The telephone customer is visually provided an option to assign each of the multiple users exclusive access to at least one of the telephone numbers via their account identifier. The telephone customer is visually provided the option to, for each of the multiple users, allow access or deny access via their account identifier to the voicemail box.",
	"url": null,
	"owner": "AT&T Intellectual Property I, LP",
	"publication_number": "07787602",
	"publication_date": "2010-08-31",
	"application_number": "11530578",
	"application_date": "2006-09-11",
	"tags": null,
	"slug": "methods-and-apparatus-to-provide-a-telephone-system-configuration-interface",
	"match_type": "description"
},
{
	"name": "Control of optical connections in an optical network",
	"summary": "",
	"abstract": "A method for lightpath restoration in a reconfigurable optical network comprises the steps of naming each network addressable element in said reconfigurable optical network, determining current topology in said reconfigurable optical network, determining current resources in said reconfigurable optical network, requesting establishment of a lightpath, requesting reservation of restoration capacity, allocating the lightpath, and reserving the restoration capacity. Also disclosed is a method for lightpath restoration that comprises the steps of reserving restoration capacity, detecting transmission failures in the reconfigurable optical network, handling exceptions as a 10 result of transmission failures, and allocating transmission capacity.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07742395",
	"publication_date": "2010-06-22",
	"application_number": "11237576",
	"application_date": "2005-09-28",
	"tags": null,
	"slug": "control-of-optical-connections-in-an-optical-network",
	"match_type": "description"
},
{
	"name": "Method and apparatus for adjusting a network device configuration change distribution schedule",
	"summary": "",
	"abstract": "The invention comprises a method and apparatus for adjusting a distribution schedule controlling distribution of network device configuration changes associated with a plurality of network devices. Specifically, the method comprises determining a distribution status of the distribution of network device configuration changes, comparing the distribution status to the distribution schedule, and adjusting the distribution schedule in response to a difference between the distribution schedule and the distribution status.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07848256",
	"publication_date": "2010-12-07",
	"application_number": "12132456",
	"application_date": "2008-06-03",
	"tags": null,
	"slug": "method-and-apparatus-for-adjusting-a-network-device-configuration-change-distribution-schedule",
	"match_type": "description"
},
{
	"name": "Method and apparatus for routing information over optical and electrical pathways",
	"summary": "",
	"abstract": "A system and method of routing communication signals is provided. A first technique uses a packet switched device that operates using Internet Protocol, the packet switched device determines one or more commands based on a routing request to establish, maintain, restore or breakdown one or more communication paths and a circuit switched device that provides physical switching between a plurality of ports based on the one or more commands from the packet switched device. A second technique for expediting error condition information is also provided. As various error conditions are recognized, information relating to the error conditions is provided directly to the packet switched device to enable the packet switched device to restore communications with minimal delay.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07796580",
	"publication_date": "2010-09-14",
	"application_number": "11214329",
	"application_date": "2005-08-29",
	"tags": null,
	"slug": "method-and-apparatus-for-routing-information-over-optical-and-electrical-pathways",
	"match_type": "description"
},
{
	"name": "Method and device for detecting computer intrusion",
	"summary": "",
	"abstract": "A method and device for detecting intrusion on a computer system utilizes a target server running software that is executed for a client only upon receiving authorization from a monitoring server to execute the software. When an attempt to execute software on the target server by a client is not authorized, monitoring server notifies the system administrator of the unauthorized attempt.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07797744",
	"publication_date": "2010-09-14",
	"application_number": "10463817",
	"application_date": "2003-06-17",
	"tags": null,
	"slug": "method-and-device-for-detecting-computer-intrusion",
	"match_type": "description"
},
{
	"name": "Method and device for detecting computer network intrusions",
	"summary": "",
	"abstract": "A method and device for detecting intrusion on a network utilizes a target server running software that is executed for a network client only upon receiving authorization from a monitoring server to execute the software. When an attempt to execute software on the target server by a client is not authorized, monitoring server notifies the system administrator of the unauthorized attempt.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07823203",
	"publication_date": "2010-10-26",
	"application_number": "10461932",
	"application_date": "2003-06-13",
	"tags": null,
	"slug": "method-and-device-for-detecting-computer-network-intrusions",
	"match_type": "description"
},
{
	"name": "Method for billing IP broadband subscribers",
	"summary": "",
	"abstract": "A method of billing a variable bit rate communication between a first terminal and a distant terminal to a broadband subscriber permits changing billing parameters during a call in real time in response to user inputs including user requested changes in quality of service, changes in data rate and changes in preferred service provider. A variable bit rate communication to be billed has a variable quality of service related to the degree of utilization of a plurality of different networks. The billing method comprises the steps of i.) receiving user identification data at a first terminal and data representing a required bit rate and a default quality of service selected by the user, ii.) verifying the user identification data to be associated with the broadband service subscriber, iii.) determining least cost alternative network resources available for achieving the communication at the user selected default quality of service and the required bit rate, iv.) determining cost data associated with the network resources, v.) outputting to the user a least cost for the communication according to their selected default quality of service and alternative least cost network resources, vi.) coupling the first terminal and the distant terminal via the least cost determined network resources at the default quality of service and the required bit rate responsive to user authorization and vii.) billing for the communication at the default quality of service and according to the required bit rate after the termination of the communication.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07760711",
	"publication_date": "2010-07-20",
	"application_number": "11903310",
	"application_date": "2007-09-21",
	"tags": null,
	"slug": "method-for-billing-ip-broadband-subscribers",
	"match_type": "description"
},
{
	"name": "Method for embedded integrated end-to-end testing",
	"summary": "",
	"abstract": "A method and system for automated testing of a system such as a billing module in a telecommunication system is disclosed. In a first embodiment, test APIs, scenarios and configuration information are embedded into the module itself in a way such that, when testing is desired, tests may be conducted without any need for a dedicated test environment. Tests can be run from within the module itself, thereby eliminating the risk, expense and time required to use external testing systems and data to test the module. In another embodiment, operational data such as live operational orders are wrapped in test headers and are used as input data for testing purposes within the billing module. In this embodiment, test APIs may be embedded into all modules of an operational support system so that complete system end-to-end testing is possible without the use of dedicated external test equipment and processes.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07844870",
	"publication_date": "2010-11-30",
	"application_number": "12358557",
	"application_date": "2009-01-23",
	"tags": null,
	"slug": "method-for-embedded-integrated-endtoend-testing",
	"match_type": "description"
},
{
	"name": "Network monitoring method and system",
	"summary": "",
	"abstract": "The present invention permits a network operator to maintain a timely view of changes to an operational packet-switched network. In an exemplary embodiment, the method includes subscribing to routing protocol messages received from a plurality of network elements participating in a routing protocol in the packet-switched network. Then, the routing protocol messages from the network elements are received without participating in the routing protocol. Subsequently, the method detects deviations from normal operation of the packet-switched network using the routing protocol messages received from the network elements.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07860024",
	"publication_date": "2010-12-28",
	"application_number": "10248241",
	"application_date": "2002-12-30",
	"tags": null,
	"slug": "network-monitoring-method-and-system",
	"match_type": "description"
},
{
	"name": "Packet-switched network topology tracking method and system",
	"summary": "",
	"abstract": "The present invention permits a network operator to maintain a timely view of changes to an operational packet-switched network.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07835303",
	"publication_date": "2010-11-16",
	"application_number": "11695352",
	"application_date": "2007-04-02",
	"tags": null,
	"slug": "packetswitched-network-topology-tracking-method-and-system",
	"match_type": "description"
},
{
	"name": "Protected IP telephony calls using encryption",
	"summary": "",
	"abstract": "Communication information transmitted in the broadband communication system may be in a packet format and secured using encryption techniques, for example encryption software, including a means for providing an initial security key and updated security keys to the various pieces of communication equipment located throughout the broadband communication system. When communication equipment, for example a gateway, is first registered with, for example, an IP central station, the IP central station assigns an initial encryption key to the gateway that is assigned and retained by a server, for example a call manager server, and the gateway (e.g., broadband residential gateway). This initial encryption key may be used to establish a secure two way communication between two pieces of communication equipment as an originating point communication equipment and a terminating point communication equipment.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07734908",
	"publication_date": "2010-06-08",
	"application_number": "10973754",
	"application_date": "2004-10-26",
	"tags": null,
	"slug": "protected-ip-telephony-calls-using-encryption",
	"match_type": "description"
},
{
	"name": "Systems and methods for regularly approximating context-free grammars through transformation",
	"summary": "",
	"abstract": "Context-free grammars generally comprise a large number of rules, where each rule defines how a string of symbols is generated from a different series of symbols. While techniques for creating finite-state automata from the rules of context-free grammars exist, these techniques require an input grammar to be strongly regular. Systems and methods that convert the rules of a context-free grammar into a strongly regular grammar include transforming each input rule into a set of output rules that approximate the input rule. The output rules are all right- or left-linear and are strongly regular. In various exemplary embodiments, the output rules are output in a specific format that specifies, for each rule, the left-hand non-terminal symbol, a single right-hand non-terminal symbol, and zero, one or more terminal symbols. If the input context-free grammar rule is weighted, the weight of that rule is distributed and assigned to the output rules.",
	"url": null,
	"owner": "AT&T Intellectual Property II, L.P.",
	"publication_number": "07716041",
	"publication_date": "2010-05-11",
	"application_number": "11857128",
	"application_date": "2007-09-18",
	"tags": null,
	"slug": "systems-and-methods-for-regularly-approximating-contextfree-grammars-through-transformation",
	"match_type": "description"
},
{
	"name": "System and method for password protecting a distribution list",
	"summary": "",
	"abstract": "A method for password protecting a subscriber-created distribution list in a wireless network includes receiving in a wireless network a subscriber-created password and a distribution list of a plurality of destination addresses, storing the distribution list and the subscriber-created password in a data structure within the wireless network, associating the subscriber-created password with the distribution list, and limiting access to the distribution list based on the subscriber-created password.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07793334",
	"publication_date": "2010-09-07",
	"application_number": "10299934",
	"application_date": "2002-11-18",
	"tags": null,
	"slug": "system-and-method-for-password-protecting-a-distribution-list",
	"match_type": "description"
},
{
	"name": "System and method of providing intelligent cell reselection for delay sensitive data applications",
	"summary": "",
	"abstract": "A mobile station for receiving delay-sensitive data from a wireless communications network is provided with a data buffer and cell reselection controller. The data buffer receives data from the network and stores the data for communication to a delay-sensitive data application. The cell reselection controller selectively inhibits cell reselection in order to meet requirements of the delay-sensitive data application. By intelligently controlling cell reselection, delay sensitive data may be received in a more reliable fashion, thereby increasing performance of the data application.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07689221",
	"publication_date": "2010-03-30",
	"application_number": "10946776",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": "system-and-method-of-providing-intelligent-cell-reselection-for-delay-sensitive-data-applications",
	"match_type": "description"
},
{
	"name": "System for the centralized storage of wireless customer information",
	"summary": "",
	"abstract": "A system for storing subscriber information in a centralized location includes a processor, memory coupled to the processor, and a data storage device coupled to the processor. The data storage device includes a subscriber profile portion for storing personal information about a subscriber. The subscriber profile portion includes a subscriber identification portion for storing an identification string. The subscriber profile portion is associated with an account type portion for storing account information, a portal portion for storing portal information, and an account status portion for storing account status information. The data storage device further includes a subscription portion for storing subscription information. The subscription portion is associated with a device portion for storing device information, a services portion for storing services information, and a mobile subscription portion for storing mobile subscription information.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07831240",
	"publication_date": "2010-11-09",
	"application_number": "12273528",
	"application_date": "2008-11-18",
	"tags": null,
	"slug": "system-for-the-centralized-storage-of-wireless-customer-information",
	"match_type": "description"
},
{
	"name": "Terminal-based server for location tracking",
	"summary": "",
	"abstract": "A mobile terminal device that facilitates location services (LCS) in a cellular network. The system, as embodied in a mobile terminal device, comprises a mobile communications component that communicates wireless signals, and a location services component embodied in the mobile communication component to provide positioning information. A location request is received by the mobile terminal device and processed using the LCS server to activate trigger events. A location-tracking report is autonomously generated for each event and transmitted to the requesting client via MLP or the wireless network signaling protocol.",
	"url": null,
	"owner": "AT&T Mobility II LLC",
	"publication_number": "07660590",
	"publication_date": "2010-02-09",
	"application_number": "10950034",
	"application_date": "2004-09-24",
	"tags": null,
	"slug": "terminalbased-server-for-location-tracking",
	"match_type": "description"
},
{
	"name": "Dynamic load balancing in multiple video processing unit (VPU) systems",
	"summary": "",
	"abstract": "Systems and methods are provided for processing data. The systems and methods include multiple processors that each couple to receive commands and data, where the commands and/or data correspond to frames of video that include multiple pixels. An interlink module is coupled to receive processed data corresponding to the frames from each of the processors. The interlink module divides a first frame into multiple frame portions by dividing pixels of the first frame using at least one balance point. The interlink module dynamically determines a position for the balance point that minimizes differences between the workload of the processors during processing of commands and/or data of one or more subsequent frames.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "07649537",
	"publication_date": "2010-01-19",
	"application_number": "11139893",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "dynamic-load-balancing-in-multiple-video-processing-unit-vpu-systems",
	"match_type": "description"
},
{
	"name": "Multiple video processor unit (VPU) memory mapping",
	"summary": "",
	"abstract": "A system and method for memory mapping in a multiple video processor (multi VPU) system is described. In various embodiments, rendering tasks are shared among multiple VPUs in parallel to provide improved performance and capability with minimal increased cost. In various embodiments, multiple VPUs in a system access each other's local memories to facilitate cooperative video processing. In one embodiment, each VPU in the system has the local memories of each other VPU mapped to its own graphics aperture relocation table (GART) table to facilitate access via a virtual addressing scheme. Each VPU uses the same virtual addresses for this mapping to other VPU local memories. This allows the driver to send exactly the same write commands to each VPU, including the numeric value of the destination address for operations such as writing rendered data. Thus, unique addresses need not be generated for each VPU.",
	"url": null,
	"owner": "ATI Technologies, Inc.",
	"publication_number": "07663635",
	"publication_date": "2010-02-16",
	"application_number": "11139917",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "multiple-video-processor-unit-vpu-memory-mapping",
	"match_type": "description"
},
{
	"name": "Embedded device for implementing a boot process on a host",
	"summary": "",
	"abstract": "An embedded device, for implementing a boot process on a host, is provided. This embedded device includes servers supporting various industry-standard Internet protocols and services related to the boot process. This embedded device also includes a storage medium that stores boot options for multiple Operating Systems (OSs). In addition, this embedded device includes a user-friendly interface for configuring the servers for the boot process.",
	"url": null,
	"owner": "Augmentix Corporation",
	"publication_number": "07650490",
	"publication_date": "2010-01-19",
	"application_number": "11323738",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": "embedded-device-for-implementing-a-boot-process-on-a-host",
	"match_type": "description"
},
{
	"name": "Method and system for rapidly developing and deploying sensor-enabled software applications",
	"summary": "",
	"abstract": "A system for deploying component-based software systems for the implementation of desired sensor data process flows makes use of a toolset of software components specially tailored for building sensor data process flows. In one or more embodiments, the system comprises a front-end application operative to generate system specifications from user input, each system specification defining a desired component-based software system of one or more sensor components and their corresponding configurations in accordance with sensor component class definitions (e.g., the toolset) for a predefined set of sensor components tailored for building desired sensor data process flows. The system further includes a back-end application operative to store the sensor component class definitions for use in instantiating sensor components as needed, receive system specifications, and dynamically build and run the corresponding desired component-based software systems within a run-time environment provided by the back-end application.",
	"url": null,
	"owner": "Augusta Systems, Inc.",
	"publication_number": "07735060",
	"publication_date": "2010-06-08",
	"application_number": "11683761",
	"application_date": "2007-03-08",
	"tags": null,
	"slug": "method-and-system-for-rapidly-developing-and-deploying-sensorenabled-software-applications",
	"match_type": "description"
},
{
	"name": "Graphical representations of associations between devices in a wireless communication network indicating available throughput and channel selection",
	"summary": "",
	"abstract": "A system and method for graphically representing associations between wireless network devices in a way that visually indicates the maximum amount of throughput between the associated devices, as well as a channel that is currently selected for communications between the associated devices. The thickness of a line between the associated devices may indicate the maximum throughput between the devices, whereas the color of the line may indicate the channel on which the associated devices are currently communicating. Other visual characteristics of lines generated between associated devices may be used to visually represent maximum possible throughput and current channel selection. Associations between the devices in the wireless network may be determined by checking a list of associated stations maintained in each access point.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07660263",
	"publication_date": "2010-02-09",
	"application_number": "10855263",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "graphical-representations-of-associations-between-devices-in-a-wireless-communication-network-indicating-available-throughput-and-channel-selection",
	"match_type": "description"
},
{
	"name": "System and method for stateful representation of wireless network devices in a user interface to a wireless communication environment planning and management system",
	"summary": "",
	"abstract": "A system for providing multiple graphical representations for wireless network devices indicating status of the devices. The generated graphical representations of the devices are indicative of radio frequency channels the devices are operating on, as well as whether devices are on, off or in a standby mode. A device in standby mode monitors the wireless network to determine when it can resume normal operation. A menu or other interface construct is generated to enable a user to determine additional properties of the devices, such as addresses. Device representations may also indicate that devices are operating within the wireless network, but do not support one or more functions associated the system for managing the wireless network.",
	"url": null,
	"owner": "Autocell Laboratories, Inc.",
	"publication_number": "07774028",
	"publication_date": "2010-08-10",
	"application_number": "10855671",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "system-and-method-for-stateful-representation-of-wireless-network-devices-in-a-user-interface-to-a-wireless-communication-environment-planning-and-management-system",
	"match_type": "description"
},
{
	"name": "Adaptive bandwidth distribution system for high-performance input/output devices with variable throughput",
	"summary": "",
	"abstract": "A method for issuing shadow requests to manage bandwidth allocation between an application that issues input/output (I/O) operation requests and an I/O device. A bandwidth manager detects the completion of an I/O operation, which includes either a read operation or a write operation. The bandwidth manager calculates a statistical duration for future I/O operations between the application and the I/O device based on throughput statistics related to past I/O operations. The bandwidth manager generates a shadow request for reserving a position in a queue that stores pending I/O requests for the I/O device for a first future I/O operation request from the application and having a duration related to the statistical duration, and inserts the shadow request into the queue. Advantageously, applications that do not make frequent I/O operation requests in advance may still execute I/O operations because bandwidth is reserved for future I/O operation requests via the shadow requests.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07802033",
	"publication_date": "2010-09-21",
	"application_number": "12179529",
	"application_date": "2008-07-24",
	"tags": null,
	"slug": "adaptive-bandwidth-distribution-system-for-highperformance-inputoutput-devices-with-variable-throughput",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing access to drawing information",
	"summary": "",
	"abstract": "A computer implemented system, method, and article of manufacture provide access to a drawing. A server computer has one or more server component applications. One or more drawing files are created by a first drawing application and stored on the server computer. A search server component application executes on the server computer and provides a query engine that allows queries of the one or more drawing files to locate data. A conversion server component application executes on the server computer and dynamically convert the drawing files into a drawing file format viewable by a client application executing on a client compute. The server component applications are further configured to provide the one or more drawing files that have been dynamically converted to the client computer.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07689387",
	"publication_date": "2010-03-30",
	"application_number": "11376820",
	"application_date": "2006-03-16",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-access-to-drawing-information",
	"match_type": "description"
},
{
	"name": "Rendering a simulated vector marker stroke",
	"summary": "",
	"abstract": "An apparatus, method, and article of manufacture are configured to display a vector marker stroke. A stroked fill of vector splines and polygons having faces along the spline are created based on a user input marker stroke. A stencil buffer is created indicating the number of vector faces incident at each pixel. When the number indicates that a pixel has overlapping faces, a pixel shader (that determines an opacity value for the pixel in a mask) is executed as many times as the number. When the number indicates that a pixel has at least one face and is at a beginning or an ending of the stroke, the shader is executed to add to the opacity value. A blur shading operation is executed on each of the pixels. The stroked fill is rendered and a wet color is rendered, using the mask, on top of the stroked fill.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07714866",
	"publication_date": "2010-05-11",
	"application_number": "11458465",
	"application_date": "2006-07-19",
	"tags": null,
	"slug": "rendering-a-simulated-vector-marker-stroke",
	"match_type": "description"
},
{
	"name": "Sampling methods suited for graphics hardware acceleration",
	"summary": "",
	"abstract": "Embodiments of the invention provide sampling methods suited for graphics hardware acceleration. A graphics application may specify a grid of pixels to be rendered. The graphics application may supply a graphics rendering engine with one or more sets of camera parameters. Each set of camera parameters is used to alter the position of the pixel grid relative its original position so that a grid of samples can be generated at the new grid position. The graphics rendering engine then renders a grid of samples at the new grid position. Each sample grid may be used sampled to determine a set of intermediate color values that may be blended together to generate a final color value for each pixel in the pixel grid.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07742060",
	"publication_date": "2010-06-22",
	"application_number": "11534559",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "sampling-methods-suited-for-graphics-hardware-acceleration",
	"match_type": "description"
},
{
	"name": "Security architecture for content management systems",
	"summary": "",
	"abstract": "Embodiments of the invention provide methods, apparatus, and articles of manufacture for providing security architecture for content management systems. An audit log table separates security concerns in framework code from application concerns in application code. Application developers place database access code in stored procedures. Each stored procedure records a unique identifier for each object involved in the database access code into an audit log, for later security checking by framework code. After executing the stored procedure, the framework code determines whether the stored procedure was authorized by checking the audit log and access control lists stored in the database. If not, an access violation error may be returned and the database may be rolled back.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07797339",
	"publication_date": "2010-09-14",
	"application_number": "11420657",
	"application_date": "2006-05-26",
	"tags": null,
	"slug": "security-architecture-for-content-management-systems",
	"match_type": "description"
},
{
	"name": "Synchronized physical and analytical representations of a CAD model",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for providing a computer aided design (CAD) model comprising a plurality of physical elements. An analytical representation of the plurality of physical elements is generated. The analytical representation comprising a plurality of analytical elements corresponding to the physical elements. An association between each analytical element and corresponding physical element is generated such that a modification to one element can be applied to modify a corresponding other.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07761266",
	"publication_date": "2010-07-20",
	"application_number": "11340082",
	"application_date": "2006-01-25",
	"tags": null,
	"slug": "synchronized-physical-and-analytical-representations-of-a-cad-model",
	"match_type": "description"
},
{
	"name": "System for managing the navigational usability of an interactive map",
	"summary": "",
	"abstract": "A graphical user interface for graphically managing the navigational usability of an interactive map is described. In one embodiment, the graphical user interface includes a layer hierarchy having a first layer and a second layer. The graphical user interface also includes a first display range bar associated with the first layer and configured to show a range of map scales at which the first layer is displayed in the digitized map. In addition, the graphical user interface includes a second display range bar associated with the second layer and configured to show a range of map scales at which the second layer is displayed in the digitized map.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07743346",
	"publication_date": "2010-06-22",
	"application_number": "11846496",
	"application_date": "2007-08-28",
	"tags": null,
	"slug": "system-for-managing-the-navigational-usability-of-an-interactive-map",
	"match_type": "description"
},
{
	"name": "Transferring load information and result information between analysis and design software",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for receiving in a Computer Aided Design (CAD) tool result information and load information from a first analysis program, the result information determined by performing an analysis of a plurality of physical elements in a CAD model. And providing one or more of the result information or the load information from the CAD tool to a second analysis program.",
	"url": null,
	"owner": "Autodesk, Inc.",
	"publication_number": "07788068",
	"publication_date": "2010-08-31",
	"application_number": "11345436",
	"application_date": "2006-01-31",
	"tags": null,
	"slug": "transferring-load-information-and-result-information-between-analysis-and-design-software",
	"match_type": "description"
},
{
	"name": "Change speed of voicemail playback depending on context",
	"summary": "",
	"abstract": "A messaging system is provided that includes:nn",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07729478",
	"publication_date": "2010-06-01",
	"application_number": "11105134",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": "change-speed-of-voicemail-playback-depending-on-context",
	"match_type": "description"
},
{
	"name": "Efficient load balancing and heartbeat mechanism for telecommunication endpoints",
	"summary": "",
	"abstract": "The present invention is directed to load balancing call signaling channels at the times that they are established, the use of variable frequency keep alive mechanisms depending on the state of the call signaling channel, and the establishment of a call signaling channel when resources are available or otherwise based on need.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07668100",
	"publication_date": "2010-02-23",
	"application_number": "11170659",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "efficient-load-balancing-and-heartbeat-mechanism-for-telecommunication-endpoints",
	"match_type": "description"
},
{
	"name": "Integrated multi-media communication system",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07808980",
	"publication_date": "2010-10-05",
	"application_number": "11053271",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": "integrated-multimedia-communication-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring of switch resources using resource group definitions",
	"summary": "",
	"abstract": "Resources associated with a communication system switch are monitored by storing information defining one or more resource groups. Each of the resource groups includes multiple identifiers, with each of the identifiers specifying at least one resource to be monitored. A client external to the switch is permitted to select at least one of the resource groups for monitoring. In response to selection of one of the groups by the client, monitoring of the corresponding resources is established on behalf of the client. The resource monitoring may be established, controlled and maintained by a telephony server coupled between the client and the switch. Such a telephony server can preserve monitoring for a resource group, independent of the requests of clients, in order to reduce the amount of execution time needed to set up and tear down monitors for client applications. This is particularly advantageous in call centers or in other client applications that involve monitoring large numbers of switch resources.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07716311",
	"publication_date": "2010-05-11",
	"application_number": "10261433",
	"application_date": "2002-09-30",
	"tags": null,
	"slug": "method-and-apparatus-for-monitoring-of-switch-resources-using-resource-group-definitions",
	"match_type": "description"
},
{
	"name": "Method for storing and retrieving digital ink call logs",
	"summary": "",
	"abstract": "Digital ink is captured using either a digitizer attached to the serial port of the computer or by a tablet computer having a stylus during the detection, capture, storage and association of ink with particular types of information. An ink log stores handwritten notes that are generated during a phone call. Whenever a call is made or received via a regular telephone or an IP Softphone, the number being dialed or that the call is being received from is used in a search to locate a file associated with this number within an ink log. If a file associated with the called or dialed number exists, then the file is retrieved and all prior ink notes associated with this number, including their time stamps, are displayed in a window that is opened. If a file corresponding to the called or dialed number is not present in the ink log, then a new file is created along with an associated blank window, whereby the user can begin u201cinkingu201d into this file. Alternatively, a user may highlight a phone number and view the InkLog for the particular number. Upon a user selecting a View Ink Log category, the ink log is accessed and all notes, drawings, etc. that a user generated in all previous calls that where either made to the number or calls received from this number are displayed.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07797630",
	"publication_date": "2010-09-14",
	"application_number": "11221100",
	"application_date": "2005-09-07",
	"tags": null,
	"slug": "method-for-storing-and-retrieving-digital-ink-call-logs",
	"match_type": "description"
},
{
	"name": "Methods and systems for network traffic security",
	"summary": "",
	"abstract": "The present invention is directed to methods of and systems for adaptive networking that monitors a network resource of a network. The method monitors an application performance. The method categorizes a first subset of traffic of the network. The categories for the first subset include trusted, known to be bad, and suspect. The method determines an action for a second subset of traffic based on the category for the first subset of traffic. Some embodiments provide a system for adaptive networking that includes a first device and traffic that has a first subset and a second subset. The system also includes a first resource and a second resource for the transmission of the traffic. The first device receives the traffic and categorizes the traffic into the first and second subsets. The first device assigns the first subset to the first resource. Some embodiments provide a network device that includes an input for receiving incoming traffic, an output for sending outgoing traffic, a categorization module that categorizes incoming traffic, and a resource assignment module that assigns the categorized traffic for a particular resource. A traffic category for the device includes suspect traffic.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07818805",
	"publication_date": "2010-10-19",
	"application_number": "12284933",
	"application_date": "2008-09-25",
	"tags": null,
	"slug": "methods-and-systems-for-network-traffic-security",
	"match_type": "description"
},
{
	"name": "Networked voicemail",
	"summary": "",
	"abstract": "An integrated messaging system for performing various types of messaging across different types of networks, including integrated user interfaces and administrator interfaces. Embodiments include a communication server that couples among networks of different types, and an interface module that couples to the communication server. The interface module may be hosted on a messaging server of a network. The interface module pulls various user information from the messaging server, including information relevant to at least the network that includes the messaging server. A cache couples to the communication server and to the interface module to hold information from the communication server and/or the user information pulled from messaging server. The interface module directs a message from the messaging server and/or the cache to at least one device on the networks using the user information.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07724880",
	"publication_date": "2010-05-25",
	"application_number": "11053425",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": "networked-voicemail",
	"match_type": "description"
},
{
	"name": "Real time estimation of rolling averages of cumulative data",
	"summary": "",
	"abstract": "The present invention is directed to techniques for determining a value of a cumulative datum during a selected time interval. The disclosed method and system for collecting contact center data includes a plurality of agent and work item queues and a workflow server for distributing work items to available agents; and an event processor, that, for a selected a base time interval for accumulating a cumulative datum, determines a the rolling window that is at least one of equal and greater than the base interval and being an integer multiple of the base interval, and, when the rolling window partly spans a prior base interval, the processor can determine a rolling average for the cumulative datum over the width of the rolling window and, when the roiling window partly spans a prior base interval, the processor can estimate a value for the cumulative datum in the partly spanned prior base interval.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07818196",
	"publication_date": "2010-10-19",
	"application_number": "11151940",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": "real-time-estimation-of-rolling-averages-of-cumulative-data",
	"match_type": "description"
},
{
	"name": "Remote feature activator feature extraction",
	"summary": "",
	"abstract": "A database record controls a license to use a computational component. An input receives an order identifier associated with an order related to a computational component and an interface retrieves order information associated with the identifier. The order information comprises at least one material code. A material code mapping agent compares the material code with at least one material code mapping table to identify corresponding computational component information associated with the material code. In another configuration, a transaction record includes first information associated with the order, the order relates to at least a first computational component and/or feature thereof, a configuration file includes second information different from the first information, the configuration file relates to at least one telecommunication switch/server, and a configuration file processing agent compares some of the first information with some of the second information to form a system record having both first and second information.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07681245",
	"publication_date": "2010-03-16",
	"application_number": "10232906",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": "remote-feature-activator-feature-extraction",
	"match_type": "description"
},
{
	"name": "Remote feature activator feature extraction",
	"summary": "",
	"abstract": "A database record controls a license to use a computational component. An input receives an order identifier associated with an order related to a computational component and an interface retrieves order information associated with the identifier. The order information comprises at least one material code. A material code mapping agent compares the material code with at least one material code mapping table to identify corresponding computational component information associated with the material code. In another configuration, a transaction record includes first information associated with the order, the order relates to at least a first computational component and/or feature thereof, a configuration file includes second information different from the first information, the configuration file relates to at least one telecommunication switch/server, and a configuration file processing agent compares some of the first information with some of the second information to form a system record having both first and second information.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07844572",
	"publication_date": "2010-11-30",
	"application_number": "11928815",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "remote-feature-activator-feature-extraction",
	"match_type": "description"
},
{
	"name": "Secure installation activation",
	"summary": "",
	"abstract": "A system  for providing credentials to a computational component in a distributed processing network is provided. The system  includes: (a) a plurality of crypto-tokens -, each crypto-token -comprising a unique identifier, optionally a digital certificate comprising a unique public key and the unique identifier, and a private key corresponding to the public key; (b) a provisioning system  comprising a certificate authority  operable to generate the plurality of crypto-tokens -; and (c) a computational component  comprising a drive operable to receive and communicate with a selected crypto-token . The computational component  uses the digital certificate and private key in any of the crypto-tokens -to establish a secured communication session with the provisioning system . Before the establishing operation, any of the plurality of crypto-tokens -can be engaged with the computational component  to establish the secure communication session.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07707405",
	"publication_date": "2010-04-27",
	"application_number": "10947418",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": "secure-installation-activation",
	"match_type": "description"
},
{
	"name": "System for integrating diverse database and maintaining their consistency",
	"summary": "",
	"abstract": "An arrangement maintains consistency among satellite databases and an integrated database that is the union of the satellite databases with a controller that fetches update requests from a queue and applies each fetched request to all of the databases, in sequence, ending with the integrated database. In applying a modification request to a target database, a filter is used that comprises two components. The first component processes the modification request submitted by the queue to a modification request that is appropriate for the schema of the target database and that is based on the data that is already present in the target database. When appropriate, the first component also creates an update request that is sent to the queue, to achieve transitive closure. The second component communicates with the target database, using the API and protocols of the target database.",
	"url": null,
	"owner": "Avaya Inc.",
	"publication_number": "07660830",
	"publication_date": "2010-02-09",
	"application_number": "09979197",
	"application_date": "2001-04-10",
	"tags": null,
	"slug": "system-for-integrating-diverse-database-and-maintaining-their-consistency",
	"match_type": "description"
},
{
	"name": "Creating an interrogation manifest request",
	"summary": "",
	"abstract": "Systems and techniques are provided for controlling requests for resources from remote computers. A remote computer's ability to access a resource is determined based upon the computer's operating environment. The computer or computers responsible for controlling access to a resource will interrogate the remote computer to ascertain its operating environment. The computer or computers responsible for controlling access to a resource may, for example, download one or more interrogator agents onto the remote computer to determine its operating environment. Based upon the interrogation results, the computer or computers responsible for controlling access to a resource will control the remote computer's access to the requested resource.",
	"url": null,
	"owner": "Aventail LLC",
	"publication_number": "07770222",
	"publication_date": "2010-08-03",
	"application_number": "11927286",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "creating-an-interrogation-manifest-request",
	"match_type": "description"
},
{
	"name": "Distributed cache for state transfer operations",
	"summary": "",
	"abstract": "A network arrangement that employs a cache having copies distributed among a plurality of different locations. The cache stores state information for a session with any of the server devices so that it is accessible to at least one other server device. Using this arrangement, when a client device switches from a connection with a first server device to a connection with a second server device, the second server device can retrieve state information from the cache corresponding to the session between the client device and the first server device. The second server device can then use the retrieved state information to accept a session with the client device.",
	"url": null,
	"owner": "Aventail LLC",
	"publication_number": "07720975",
	"publication_date": "2010-05-18",
	"application_number": "11927350",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "distributed-cache-for-state-transfer-operations",
	"match_type": "description"
},
{
	"name": "Provisioning an operating environment of a remote computer",
	"summary": "",
	"abstract": "Systems and techniques are provided for controlling requests for resources from remote computers. A remote computer's ability to access a resource is determined based upon the computer's operating environment. The computer or computers responsible for controlling access to a resource will interrogate the remote computer to ascertain its operating environment. The computer or computers responsible for controlling access to a resource may, for example, download one or more interrogator agents onto the remote computer to determine its operating environment. Based upon the interrogation results, the computer or computers responsible for controlling access to a resource will control the remote computer's access to the requested resource.",
	"url": null,
	"owner": "Aventail LLC",
	"publication_number": "07779469",
	"publication_date": "2010-08-17",
	"application_number": "11927310",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "provisioning-an-operating-environment-of-a-remote-computer",
	"match_type": "description"
},
{
	"name": "Software application action monitoring",
	"summary": "",
	"abstract": "A method for collecting runtime information generated by an active software application is provided wherein the method is implemented by a computer and includes identifying an occurrence of a function event generated for a software application operating on a predetermined platform, collecting the runtime information responsive to a function event, determining the duration of the function event, comparing the duration with a predetermined threshold value and processing the function information responsive to the comparing of the duration.",
	"url": null,
	"owner": "Avicode, Inc.",
	"publication_number": "07707588",
	"publication_date": "2010-04-27",
	"application_number": "11070933",
	"application_date": "2005-03-02",
	"tags": null,
	"slug": "software-application-action-monitoring",
	"match_type": "description"
},
{
	"name": "Authoring system for combining temporal and nontemporal digital media",
	"summary": "",
	"abstract": "An authoring tool has a graphical user interface enabling interactive authoring of a multimedia presentation including temporal and nontemporal media. The graphical user interface enables specification of the temporal and spatial relationships among the media and playback of the presentation with the specified temporal and spatial relationships. The spatial and temporal relationships among the media may be changed independently of each other. The presentation may be viewed interactively under the control of the author during the authoring process without encoding the audio and video data into a streaming media data file for combination with the other media, simulating behavior of a browser that would receive a streaming media data file. The multimedia presentation may include elements that initiate playback of the presentation from a specified point in time. After authoring of the presentation is completed, the authoring tool assists in encoding and transferring the presentation for distribution. Information about the distribution format and location may be stored as user-defined profiles. Communication with the distribution location may be tested and presentation and the distribution information may be audited prior to encoding and transfer to reduce errors. A presentation is encoded according to the defined temporal and spatial relationships and the distribution format and location information to produce and encoded presentation. The encoded presentation and any supporting media data are transferred to the distribution location, such as a server. A streaming media server may be used for streaming media, whereas other data may be stored on a conventional data server. Accounts may be provided for a streaming media server for authors to publish their presentations. The authoring tool may be associated with a service that uses the streaming media server. Such streaming media servers also may be a source of stock footage for use by authors.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07725812",
	"publication_date": "2010-05-25",
	"application_number": "09539749",
	"application_date": "2000-03-31",
	"tags": null,
	"slug": "authoring-system-for-combining-temporal-and-nontemporal-digital-media",
	"match_type": "description"
},
{
	"name": "Computer system and process for transferring multiple high bandwidth streams of data between multiple storage units and multiple applications in a scalable and reliable manner",
	"summary": "",
	"abstract": "Multiple applications request data from multiple storage units over a computer network. The data is divided into segments and each segment is distributed randomly on one of several storage units, independent of the storage units on which other segments of the media data are stored. At least one additional copy of each segment also is distributed randomly over the storage units, such that each segment is stored on at least two storage units. This random distribution of multiple copies of segments of data improves both scalability and reliability. When an application requests a selected segment of data, the request is processed by the storage unit with the shortest queue of requests. Random fluctuations in the load applied by multiple applications on multiple storage units are balanced nearly equally over all of the storage units. This combination of techniques results in a system which can transfer multiple, independent high-bandwidth streams of data in a scalable manner in both directions between multiple applications and multiple storage units.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07660947",
	"publication_date": "2010-02-09",
	"application_number": "11986226",
	"application_date": "2007-11-20",
	"tags": null,
	"slug": "computer-system-and-process-for-transferring-multiple-high-bandwidth-streams-of-data-between-multiple-storage-units-and-multiple-applications-in-a-scalable-and-reliable-manner",
	"match_type": "description"
},
{
	"name": "Fixed bit rate, intraframe compression and decompression of video",
	"summary": "",
	"abstract": "High quality intraframe-only compression of video can be achieved using rate distortion optimization and without resizing or bit depth modification. The compression process involves transforming portions of the image to generate frequency domain coefficients for each portion. A bit rate for each transformed portion using a plurality of scale factors is determined. Distortion for each portion is estimated according to the plurality of scale factors. A scale factor is selected for each portion to minimize the total distortion in the image to achieve a desired bit rate. A quantization matrix is selected according to the desired bit rate. The frequency domain coefficients for each portion are quantized using the selected plurality of quantizers as scaled by the selected scale factor for the portion. The quantized frequency domain coefficients are encoded using a variable length encoding to provide compressed data for each of the defined portions. The compressed data is output for each of the defined portions to provide a compressed bitstream at the desired bit rate.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07729423",
	"publication_date": "2010-06-01",
	"application_number": "12215228",
	"application_date": "2008-06-26",
	"tags": null,
	"slug": "fixed-bit-rate-intraframe-compression-and-decompression-of-video",
	"match_type": "description"
},
{
	"name": "Method and system for transferring large data files over parallel connections",
	"summary": "",
	"abstract": "A method and system are disclosed for transferring large data files over parallel connections. A file can be transferred between a first application operating on a first system and a second application operating on a second system. A plurality of connections are established between the first application and the second application. A send buffer is created to store N segments of the file at the first system, N being an integer greater than one. The N segments of the file are read into the send buffer. Each segment in the buffer is sent on a corresponding connection among the plurality of connections for delivery to the second application. The number of connections can be selected by a user.",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07716312",
	"publication_date": "2010-05-11",
	"application_number": "10294094",
	"application_date": "2002-11-13",
	"tags": null,
	"slug": "method-and-system-for-transferring-large-data-files-over-parallel-connections",
	"match_type": "description"
},
{
	"name": "Methods and system using a local proxy server to process media data for local area users",
	"summary": "",
	"abstract": "Methods and system are disclosed to minimize inefficiencies for local area users to share and access data. A local proxy server operates in conjunction with a central server. Local area users can post or store (u201cstoreu201d) data, e.g., media data, on the local proxy server in order for the data to be accessed locally. The local proxy server can also store the data from the local area users on a central server. Additionally, the local proxy server can copy data being stored on the central server for local access by the local area users. In this manner, local area users can utilize the benefits (e.g., higher bandwidth and faster download speed) of storing and accessing media data to and from a local area source (i.e., the local proxy server).",
	"url": null,
	"owner": "Avid Technology, Inc.",
	"publication_number": "07668901",
	"publication_date": "2010-02-23",
	"application_number": "10123331",
	"application_date": "2002-04-15",
	"tags": null,
	"slug": "methods-and-system-using-a-local-proxy-server-to-process-media-data-for-local-area-users",
	"match_type": "description"
},
{
	"name": "System and method for streaming of dynamic weather content to the desktop",
	"summary": "",
	"abstract": "A method, system and program product for streaming of dynamic information content over an interactive media such as the Internet. The dynamic content, such as dynamic weather data, is collected from a plurality of collection sources such as geographically distributed local weather reporting stations. The data information can be relatively static or dynamic, constantly changing data. The dynamic content is stored in databases maintained on a direct access storage device at the dynamic content server. The selection of dynamic content to be transmitted to the end user client is based on a demographic profile that is completed at the time of end user client registration and which precedes delivery of any selected content in response to end user client requests. An application resident on the dynamic content server streams selected content simultaneously to a plurality of end user client devices for each end user client request. An application resident on each end user client device generates a plurality of processing threads for a series of independent commands, each of which is transmitted to the dynamic content server at specified preset intervals and generates a server-selected response. In a weather content collection and delivery embodiment, local, real-time weather data can be received continuously from thousands of weather reporting stations, and transmitted simultaneously by the weather content server to millions of end user desktop clients, with each user receiving current weather data that is generated from a nearby weather collection station.",
	"url": null,
	"owner": "AWS Convergence Technologies, Inc.",
	"publication_number": "07653708",
	"publication_date": "2010-01-26",
	"application_number": "11761611",
	"application_date": "2007-06-12",
	"tags": null,
	"slug": "system-and-method-for-streaming-of-dynamic-weather-content-to-the-desktop",
	"match_type": "description"
},
{
	"name": "Resource management",
	"summary": "",
	"abstract": "A technique for executing a segmented virtual machine (VM) is disclosed. A plurality of core VM's are implemented in a common core space. Each core VM is associated with a shell VM. Resources of the core space are allocated among the core VM's. A core VM is associated with a shell VM configured to perform shell VM functions and communicate with the core VM. VM internal execution functionality is performed on the core VM. The shell VM may be bypassed to communicate with an external application.",
	"url": null,
	"owner": "Azul Systems, Inc.",
	"publication_number": "07669202",
	"publication_date": "2010-02-23",
	"application_number": "10959409",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": "resource-management",
	"match_type": "description"
},
{
	"name": "Personal area network with automatic attachment and detachment",
	"summary": "",
	"abstract": "A network () includes a hub device () and at least one unattached peripheral device (). The unattached peripheral device () transmits an attach request to the hub device () with a selected address, receives a new address from the hub device to identify the unattached peripheral device (), and communicates with the hub device () using the new address.",
	"url": null,
	"owner": "Azure Networks, LLC",
	"publication_number": "07756129",
	"publication_date": "2010-07-13",
	"application_number": "11728246",
	"application_date": "2007-03-23",
	"tags": null,
	"slug": "personal-area-network-with-automatic-attachment-and-detachment",
	"match_type": "description"
},
{
	"name": "Method, apparatus and article for evaluating card games, such as blackjack",
	"summary": "",
	"abstract": "A system reads an identifier from a hand of cards to identify the cards. For example, the system can read an identifier from a pair of cards forming the initial hand in blackjack, where the one card is face up and the other card is face down. The system determines the value of a hand of cards form the read identifiers. For example, the system can determine a value of an initial hand of two cards in blackjack, while only one card is face up. The system can inform a dealer of the value, or status based on value, of the hand. The system can determine whether cards forming a hand of cards are authenticate by validating the cards based on the read identifier. The system can determine if the cards forming the hand of cards are in an expected sequence based on a knowledge of the initial sequence of cards in a deck.",
	"url": null,
	"owner": "Bally Gaming, Inc.",
	"publication_number": "07770893",
	"publication_date": "2010-08-10",
	"application_number": "11112793",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": "method-apparatus-and-article-for-evaluating-card-games-such-as-blackjack",
	"match_type": "description"
},
{
	"name": "Method and system for block trading of securities",
	"summary": "",
	"abstract": "Method and system for block trading of securities. Embodiments of the present invention can provide an automated dealer system that formulates customized, risk-controlled, two-sided indicative quotations for block quantities of a security. A quotation can be delivered to requesting counterparties via a secured network or Web-based platform. The system can also allow counterparties to submit orders for block trades based on the customized quotations. A customized quote can be based on the size of the block and historical characteristics of the security. The quoting service can be customized to take into account a minimum premium to be charged for a trade, profitability considerations discounts, and time considerations.",
	"url": null,
	"owner": "Bank of America Corporation",
	"publication_number": "07685038",
	"publication_date": "2010-03-23",
	"application_number": "10711889",
	"application_date": "2004-10-12",
	"tags": null,
	"slug": "method-and-system-for-block-trading-of-securities",
	"match_type": "description"
},
{
	"name": "System and method for data collection and processing",
	"summary": "",
	"abstract": "A system and method for data collection and processing. Creation of an electronic form by a form creator is facilitated. The electronic form includes a plurality of fields. A form user enters data into the fields of the electronic form, which is then submitted by the form user. The data is submitted to one or more back-end systems associated with the electronic form. The data is processed using the back-end system.",
	"url": null,
	"owner": "Barclays Capital Inc.",
	"publication_number": "07747940",
	"publication_date": "2010-06-29",
	"application_number": "10903373",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": "system-and-method-for-data-collection-and-processing",
	"match_type": "description"
},
{
	"name": "Forensic feature extraction and cross drive analysis",
	"summary": "",
	"abstract": "Computer-based systems and methods enable analysts to manage and explore the information that hard drives and other storage devices or sources of data may contain, and for extracting forensic features and performing cross drive analysis.",
	"url": null,
	"owner": "Basis Technology Corporation",
	"publication_number": "07779032",
	"publication_date": "2010-08-17",
	"application_number": "11470517",
	"application_date": "2006-09-06",
	"tags": null,
	"slug": "forensic-feature-extraction-and-cross-drive-analysis",
	"match_type": "description"
},
{
	"name": "Generic robot architecture",
	"summary": "",
	"abstract": "The present invention provides methods, computer readable media, and apparatuses for a generic robot architecture providing a framework that is easily portable to a variety of robot platforms and is configured to provide hardware abstractions, abstractions for generic robot attributes, environment abstractions, and robot behaviors. The generic robot architecture includes a hardware abstraction level and a robot abstraction level. The hardware abstraction level is configured for developing hardware abstractions that define, monitor, and control hardware modules available on a robot platform. The robot abstraction level is configured for defining robot attributes and provides a software framework for building robot behaviors from the robot attributes. Each of the robot attributes includes hardware information from at least one hardware abstraction. In addition, each robot attribute is configured to substantially isolate the robot behaviors from the at least one hardware abstraction.",
	"url": null,
	"owner": "Battelle Energy Alliance, LLC",
	"publication_number": "07801644",
	"publication_date": "2010-09-21",
	"application_number": "11428729",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": "generic-robot-architecture",
	"match_type": "description"
},
{
	"name": "System and method for propagating security information in a web portal system",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for propagating security information for an application between a first environment and a second environment. These mechanisms and methods can enable embodiments to propagate changes to security information from a first application instance in a first environment to a second application instance in a second environment. For example, an embodiment can receive security information from an adapter associated with a test version of an application, and then propagate the security information to a production version of the application residing in a production environment. The ability of embodiments to propagate security information between adapters associated with application versions can enable propagation of changes to security information, i.e., information about changes to permissions, rules, policies and so forth relating to security, between a first environment and a second environment without necessitating taking the production version of the application off line.",
	"url": null,
	"owner": "BEA Systems Inc.",
	"publication_number": "07752651",
	"publication_date": "2010-07-06",
	"application_number": "11236698",
	"application_date": "2005-09-26",
	"tags": null,
	"slug": "system-and-method-for-propagating-security-information-in-a-web-portal-system",
	"match_type": "description"
},
{
	"name": "System and method for propagation in a web portal system",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for determining an ordering for propagating changes to an application between a first environment and a second environment. These mechanisms and methods can enable embodiments to propagate changes from a first application instance in a first environment to a second application instance in a second environment even when the order of applying the changes is complex or not readily apparent to the propagating device. For example, an embodiment can determine an ordering to apply changes made to a test version in a test environment, tested and then propagated to a production version of the application residing in a production environment. The ability of embodiments to determine an ordering for propagating changes to an application between a first environment and a second environment enable easy capture and transferal of changes to an application.",
	"url": null,
	"owner": "BEA Systems Inc.",
	"publication_number": "07730477",
	"publication_date": "2010-06-01",
	"application_number": "11235773",
	"application_date": "2005-09-26",
	"tags": null,
	"slug": "system-and-method-for-propagation-in-a-web-portal-system",
	"match_type": "description"
},
{
	"name": "Communicating data from a data producer to a data receiver",
	"summary": "",
	"abstract": "A computer architecture for enterprise device applications provides a real-time, bi-directional communication layer for device communication. An identity-based communications layer provides for secure, end-to-end telemetry and control communications by enabling mutual authentication and encryption between the devices and the enterprise. A unique identity is assigned to each device, user and application to provide security services. Telemetry data is communicated between a data producing device and a data receiving device. The telemetry data sent from the data producing device is identified using the identity identifier of the data producing device.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07853983",
	"publication_date": "2010-12-14",
	"application_number": "10372395",
	"application_date": "2003-02-25",
	"tags": null,
	"slug": "communicating-data-from-a-data-producer-to-a-data-receiver",
	"match_type": "description"
},
{
	"name": "Computer system for authenticating a computing device",
	"summary": "",
	"abstract": "A computer architecture for enterprise device applications provides a real-time, bi-directional communication layer for device communication. An identity-based communications layer provides for secure, end-to-end telemetry and control communications by enabling mutual authentication and encryption between the devices and the enterprise. A unique identity is assigned to each device, user and application to provide security services. A communications session is established between two devices using an authentication service that authenticates the device that is initiating the establishment of the communications session with another device. After authenticating the initiating device, the authentication service provides to the initiating device the network address of the other device and an authentication credential for use in the communications session between the initiating device and the other device.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07805606",
	"publication_date": "2010-09-28",
	"application_number": "10372397",
	"application_date": "2003-02-25",
	"tags": null,
	"slug": "computer-system-for-authenticating-a-computing-device",
	"match_type": "description"
},
{
	"name": "Credential mapping of WebLogic and database user ids",
	"summary": "",
	"abstract": "A connection pool can use a credential mapper to map credentials for an application server into a credential to use with the database management system. This can allow objects such as an Enterprise Java Bean to access the database with more specific credentials than the anonymous connection pool connection user name/password.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07788497",
	"publication_date": "2010-08-31",
	"application_number": "11108386",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": "credential-mapping-of-weblogic-and-database-user-ids",
	"match_type": "description"
},
{
	"name": "Extensible controls for a content data repository",
	"summary": "",
	"abstract": "An extensible control interface is provided to simplify access to the content management repository. Developers can write extension interfaces associated with new data types, where the extension interfaces extend the extensible control and are annotated with the control extension annotation. These new interfaces can specify the repository name and declare various methods annotated with annotations. Parameters of the various methods can also be annotated to supply needed information. Using an annotation process tool (APT), the developer can generate the bean and implementation classes and the methods can subsequently be called upon to perform operations on types in the repository. For example, the extensible control can take care of interacting with the type manager to perform the needed actions within the repository in order to create the new object classes and nodes. Object classes can be created on the first call, while node instances upon each call of the create method.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07805459",
	"publication_date": "2010-09-28",
	"application_number": "11561343",
	"application_date": "2006-11-17",
	"tags": null,
	"slug": "extensible-controls-for-a-content-data-repository",
	"match_type": "description"
},
{
	"name": "Metadata-based configuration of RFID readers",
	"summary": "",
	"abstract": "A computer readable medium can be a metadata-based description of the configuration of an RFID reader. An RFID edge server can interact with the metadata-based description to configure the RFID reader.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07796014",
	"publication_date": "2010-09-14",
	"application_number": "11668314",
	"application_date": "2007-01-29",
	"tags": null,
	"slug": "metadatabased-configuration-of-rfid-readers",
	"match_type": "description"
},
{
	"name": "Method and system for interacting with a virtual content repository",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for providing content management security to federated content repositories in a content management system and for interacting with a virtual content repository. These mechanisms and methods can enable embodiments to provide secure access to repositories based upon policies defined at a federated repository level and to secure repository access at the federated level based upon policies defined for differing classes of users. These abilities of embodiments can enable users to create services and applications by integrating content from unsecured repositories.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07752205",
	"publication_date": "2010-07-06",
	"application_number": "11499114",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": "method-and-system-for-interacting-with-a-virtual-content-repository",
	"match_type": "description"
},
{
	"name": "Method to generate scripts from XML",
	"summary": "",
	"abstract": "An XML document can use tags such that scripts can be generated from the documents. The scripts can be start up scripts for different operating systems. For example, the same XML document can be used to produce a UNIX shell script as well as a Windows command file.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07703005",
	"publication_date": "2010-04-20",
	"application_number": "11130732",
	"application_date": "2005-05-17",
	"tags": null,
	"slug": "method-to-generate-scripts-from-xml",
	"match_type": "description"
},
{
	"name": "RFID edge server with security WSRM",
	"summary": "",
	"abstract": "An RFID edge server can associate with multiple RFID readers at a location. The RFID edge server can include an application server using a Web Services Reliable Messaging to transfer RFID data.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07805499",
	"publication_date": "2010-09-28",
	"application_number": "11256762",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": "rfid-edge-server-with-security-wsrm",
	"match_type": "description"
},
{
	"name": "SIP server architecture fault tolerance and failover",
	"summary": "",
	"abstract": "The SIP server can be comprised of an engine tier and a state tier distributed on a cluster network. Engine nodes in the engine tier can process SIP messages and can read/write state information from/to the state tier. State tier can maintain state information in a set of partitions of one or more replicas which contain duplicate information. The engine nodes can be adapted to detect and report replica failures and the replicas can in turn be adapted to detect and report engine node failures. Replicas can detect faults with an engine node if the engine node fails to poll the replica for a specified period of time and can then report the failure. The engine node can detect failures of a replica when reading or writing state information and can report the failure to another replica, which can be responsible for updating the partition view to exclude dead replicas.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07661027",
	"publication_date": "2010-02-09",
	"application_number": "11545648",
	"application_date": "2006-10-10",
	"tags": null,
	"slug": "sip-server-architecture-fault-tolerance-and-failover",
	"match_type": "description"
},
{
	"name": "System and method for generating and reusing software application code with source definition files",
	"summary": "",
	"abstract": "A system and method for generating code for an Enterprise Java Bean comprising generating at least one output based on a description of at least one Enterprise Java Bean, wherein the description is attended by at least one annotation. A system and method for generating an annotated description of an Enterprise Java Bean based on at least one input, wherein the description can be used to generate the at least one input.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "07707544",
	"publication_date": "2010-04-27",
	"application_number": "10310605",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": "system-and-method-for-generating-and-reusing-software-application-code-with-source-definition-files",
	"match_type": "description"
},
{
	"name": "System and method for inventory services",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for determining a select set of changes from a set of changes made to an application instance to propagate to one or more other application instances. These mechanisms and methods can enable embodiments to propagate changes from a first application instance in a first environment to a second application instance in a second environment. For example, an embodiment can enable changes to be made to a test version in a test environment, tested and then propagated to a production version of the application residing in a production environment. The ability of embodiments to propagate changes to other application instances across environments can enable easy capture and transferal of changes to an application.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07735077",
	"publication_date": "2010-06-08",
	"application_number": "11121143",
	"application_date": "2005-05-03",
	"tags": null,
	"slug": "system-and-method-for-inventory-services",
	"match_type": "description"
},
{
	"name": "System and method for maintaining security in a distributed computer network",
	"summary": "",
	"abstract": "A system and method for maintaining security in a distributed computing environment comprises a policy manager located on a server for managing and distributing a security policy, and an application guard located on a client for managing access to securable components as specified by the security policy. In the preferred embodiment, a global policy specifies access privileges of the user to securable components. The policy manager may then preferably distribute a local client policy based on the global policy to the client. An application guard located on the client then manages access to the securable components as specified by the local policy.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07673323",
	"publication_date": "2010-03-02",
	"application_number": "10017368",
	"application_date": "2001-12-13",
	"tags": null,
	"slug": "system-and-method-for-maintaining-security-in-a-distributed-computer-network",
	"match_type": "description"
},
{
	"name": "System and method for managing cross project dependencies at development time",
	"summary": "",
	"abstract": "A method for responding to a change in source code, said method comprising: interconnecting a plurality of nodes to form a graph data structure wherein the graph embodies at least one dependency between a plurality of software projects; traversing the graph to identify dependent code affected by the change; evaluating the identified dependent code; and wherein the changed source code is from a first software project and the identified dependent code is from a second software project.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07757212",
	"publication_date": "2010-07-13",
	"application_number": "10983391",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "system-and-method-for-managing-cross-project-dependencies-at-development-time",
	"match_type": "description"
},
{
	"name": "System and method for managing cross project dependencies at development time",
	"summary": "",
	"abstract": "A method and memory for storing data for access by an application program being executed on a computing device, comprising: a data structure stored in said memory, said data structure including information that embodies software project dependency relationships used by said application program and including: a plurality of nodes, each of said nodes including at least one of: a list of one or more source files associated with a project and a binary-path; and wherein the binary-path can include at least one of: a directory, an identity of an entity where source code can be found, and a reference to another CPL node.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07765520",
	"publication_date": "2010-07-27",
	"application_number": "10983794",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "system-and-method-for-managing-cross-project-dependencies-at-development-time",
	"match_type": "description"
},
{
	"name": "System and method for protecting APIs from untrusted or less trusted applications",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for securing execution of untrusted applications. These mechanisms and methods for securing execution of untrusted applications can enable embodiments to provide a u201csandboxu201d environment in which applications that are less than trusted may execute. The ability of embodiments to provide such a protected environment for executing these untrusted applications can enable systems designers and system programmers to provide additional applications from third parties to users without being overly concerned about system security issues.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "07814556",
	"publication_date": "2010-10-12",
	"application_number": "11430723",
	"application_date": "2006-05-09",
	"tags": null,
	"slug": "system-and-method-for-protecting-apis-from-untrusted-or-less-trusted-applications",
	"match_type": "description"
},
{
	"name": "System and method for providing testing for a communities framework",
	"summary": "",
	"abstract": "A community for maintaining user membership can be provided. Each major component of the communities framework can have multiple portals associated with its series of tests. Each of these portals can start out as a portal file. These portal files can be ran through the dissassembler in order to render the portals representing individual community instances. Once the community instance is created for the portal, various HTML unit tests can be written by the developer in order to access that portal as some user with given membership and functional capabilities. The test framework can automatically create users giving them membership in the community and mapping them to membership capabilities. The component code can subsequently be accessed in the context of a real user or member of the community. In this manner, a more realistic and efficient testing environment is achieved.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07680927",
	"publication_date": "2010-03-16",
	"application_number": "11370098",
	"application_date": "2006-03-07",
	"tags": null,
	"slug": "system-and-method-for-providing-testing-for-a-communities-framework",
	"match_type": "description"
},
{
	"name": "System and method for shaping traffic",
	"summary": "",
	"abstract": "In accordance with embodiments, there are provided mechanisms and methods for shaping traffic. These mechanisms and methods for shaping traffic can enable embodiments to control traffic flow at a network gatekeeper based upon policies implementing service level agreements dictating traffic characteristics permitted to applications and/or by network node. The ability of embodiments to provide service level agreement based control of network traffic can enable control of traffic flow by application and/or by network node.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07788386",
	"publication_date": "2010-08-31",
	"application_number": "11432934",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "system-and-method-for-shaping-traffic",
	"match_type": "description"
},
{
	"name": "System and method for software component plug-in framework",
	"summary": "",
	"abstract": "The invention provides a software component plugin framework. The system described supports dynamic loading, instantiation, and unloading of interface implementations (plugin modules), together with encapsulation of these interface implementations. The many benefits provided by the invention include software reuse, interoperability and fast product development cycles.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07752637",
	"publication_date": "2010-07-06",
	"application_number": "11185344",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": "system-and-method-for-software-component-plugin-framework",
	"match_type": "description"
},
{
	"name": "Systems and methods for creating network-based software services using source code annotations",
	"summary": "",
	"abstract": "A developer can express the logic offered by a Web service, or other network accessible service, using a standard programming language augmented with declarative annotations specifying preferences for exposing that logic as a Web service. At compile time, an enhanced compiler can analyze the annotated source file and automatically generate the mechanisms required to expose its functionality as a Web service or network accessible service.",
	"url": null,
	"owner": "BEA Systems, Inc.",
	"publication_number": "07707564",
	"publication_date": "2010-04-27",
	"application_number": "10784492",
	"application_date": "2004-02-23",
	"tags": null,
	"slug": "systems-and-methods-for-creating-networkbased-software-services-using-source-code-annotations",
	"match_type": "description"
},
{
	"name": "Token handler API",
	"summary": "",
	"abstract": "A token handler API which can be instantiated to allow for custom token types. The token handler API can interact with a web service security handler and security service provider interfaces of security framework in order to do a number of security functions such as authentication, digital signatures and encryption for SOAP messages in a Web Service security system.",
	"url": null,
	"owner": "Bea Systems, Inc.",
	"publication_number": "07788716",
	"publication_date": "2010-08-31",
	"application_number": "11131554",
	"application_date": "2005-05-18",
	"tags": null,
	"slug": "token-handler-api",
	"match_type": "description"
},
{
	"name": "Method and system for storing large data files",
	"summary": "",
	"abstract": "An enhanced file format to store large quantities of variable-sized data records on a storage medium and to permit efficient access and control over data stored in the enhanced file format. A file format is the structure of a file that defines the way it is stored and laid out on a disk. In a preferred embodiment of the present invention, a file format includes a model directory containing models. Models include element lists comprising element chunks. The element chunks include elements, where elements are variable-sized data records.",
	"url": null,
	"owner": "Bentley System, Inc.",
	"publication_number": "07743080",
	"publication_date": "2010-06-22",
	"application_number": "11651057",
	"application_date": "2007-01-09",
	"tags": null,
	"slug": "method-and-system-for-storing-large-data-files",
	"match_type": "description"
},
{
	"name": "Software program and method for reducing misdirected calls to a select destination",
	"summary": "",
	"abstract": "A method and software application reduce the occurrence of misdirected calls to one or more select destinations The software application resides on a user's phone and u201clistensu201d to phone numbers dialed by a user to determine if the user has dialed a phone number for one of such select destinations. In response to the user dialing one of such phone numbers, the software application on the phone effectively u201cinterceptsu201d the call and enables the phone to provide the user with a list of destination options prior to placing the call to the dialed phone number. In one embodiment, the list is provided in audio form by playing a voice prompt with the list, as well as in visual form by displaying the list in the user interface of the user's phone. The list helps disambiguate the intent of the user in dialing the phone number by asking the user to either (i) confirm he wants the destination associated with the phone number or (ii) select another option. In one embodiment, if the user does not select a choice after a period of time, the call is placed to the destination associated with the originally dialed phone number.",
	"url": null,
	"owner": "Bevocal LLC",
	"publication_number": "07792266",
	"publication_date": "2010-09-07",
	"application_number": "11529078",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "software-program-and-method-for-reducing-misdirected-calls-to-a-select-destination",
	"match_type": "description"
},
{
	"name": "Acquisition and management of time dependent health information",
	"summary": "",
	"abstract": "A method for acquiring and managing time dependent health information is disclosed. The method comprises inputting the time dependent health information to a mobile device, time stamping the time dependent health information, and storing the time stamped time dependent health information. The method further comprises detecting the availability of a connection to a server and uploading the time stamped time dependent health information and a user identifier to the server.",
	"url": null,
	"owner": "BeWell Mobile Technology Inc.",
	"publication_number": "07798961",
	"publication_date": "2010-09-21",
	"application_number": "11073408",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": "acquisition-and-management-of-time-dependent-health-information",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for differentiating trading orders",
	"summary": "",
	"abstract": "In various embodiments, a data signal differentiates between real and test trading orders and a computer system processes the orders based on differing values.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07747516",
	"publication_date": "2010-06-29",
	"application_number": "11695257",
	"application_date": "2007-04-02",
	"tags": null,
	"slug": "apparatus-and-methods-for-differentiating-trading-orders",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for placing and transmitting trading orders",
	"summary": "",
	"abstract": "In various embodiments, real and test trading orders are processed and results are transmitted back to the entities originating the orders.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07716120",
	"publication_date": "2010-05-11",
	"application_number": "11695277",
	"application_date": "2007-04-02",
	"tags": null,
	"slug": "apparatus-and-methods-for-placing-and-transmitting-trading-orders",
	"match_type": "description"
},
{
	"name": "Apparatus and methods to determine whether an order is a test order",
	"summary": "",
	"abstract": "In various embodiments, a data signal is received from a computer system. The data signal includes an order for an instrument and further includes an indicator. The indicator indicates that the order is one of a real order or a test order. The order is a test order. A test order that specifies a bid cannot bind an originator of the test order to tender money. A test order that specifies an offer cannot bind the originator of the test order to tender the instrument. The order is matched to another order. Whether the order is a test order or a real order is determined, based at least in part on the indicator.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07769680",
	"publication_date": "2010-08-03",
	"application_number": "12564377",
	"application_date": "2009-09-22",
	"tags": null,
	"slug": "apparatus-and-methods-to-determine-whether-an-order-is-a-test-order",
	"match_type": "description"
},
{
	"name": "Apparatus and methods to use test orders to determine locking preferences",
	"summary": "",
	"abstract": "In various embodiments, test trading orders are generated, transmitted and ranked.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07711633",
	"publication_date": "2010-05-04",
	"application_number": "11695242",
	"application_date": "2007-04-02",
	"tags": null,
	"slug": "apparatus-and-methods-to-use-test-orders-to-determine-locking-preferences",
	"match_type": "description"
},
{
	"name": "Locking preferences and test trading",
	"summary": "",
	"abstract": "In various embodiments, test trading orders are generated, transmitted and ranked.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07853517",
	"publication_date": "2010-12-14",
	"application_number": "12686365",
	"application_date": "2010-01-12",
	"tags": null,
	"slug": "locking-preferences-and-test-trading",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing trading exclusivity/priority in response to quantity of items traded in electronic trading systems",
	"summary": "",
	"abstract": "Systems and methods for providing trading exclusivity/priority in response to quantity of items traded in electronic trading systems is provided. The method preferably includes receiving an incoming order for the item and determining whether the incoming order matches a current order for the item and satisfies a minimum volume requirement. When the incoming order matches a current order for the item and satisfies a minimum volume requirement, the method includes transacting a trade between the incoming order and the current order and providing a predetermined time period of exclusive trading between a participant associated with the incoming order and a participant associated with the current order.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07761366",
	"publication_date": "2010-07-20",
	"application_number": "11328566",
	"application_date": "2006-01-09",
	"tags": null,
	"slug": "systems-and-methods-for-providing-trading-exclusivitypriority-in-response-to-quantity-of-items-traded-in-electronic-trading-systems",
	"match_type": "description"
},
{
	"name": "Test trading",
	"summary": "",
	"abstract": "Disclosed are systems and methods for placing and processing test orders and real orders.",
	"url": null,
	"owner": "BGC Partners, Inc.",
	"publication_number": "07769675",
	"publication_date": "2010-08-03",
	"application_number": "11695230",
	"application_date": "2007-04-02",
	"tags": null,
	"slug": "test-trading",
	"match_type": "description"
},
{
	"name": "System and method of delaying connection acceptance to support connection request processing at layer-7",
	"summary": "",
	"abstract": "Techniques for suspending a TCP three-way handshake, offering the partial connection to an L-7 application or module at a proxy to perform further processing, and then allowing the L-7 application or module to instruct the proxy's network kernel to perform various actions are described. In various embodiments these actions may include: silently dropping the connection, verbosely rejecting the connection, accepting and processing the connection locally, or forwarding the connection to another proxy or the original destination. This additional functionality is provided, in one particular embodiment, via extensions to the POSIX socket API.",
	"url": null,
	"owner": "Blue Coat Systems, Inc.",
	"publication_number": "07743160",
	"publication_date": "2010-06-22",
	"application_number": "11780432",
	"application_date": "2007-07-19",
	"tags": null,
	"slug": "system-and-method-of-delaying-connection-acceptance-to-support-connection-request-processing-at-layer7",
	"match_type": "description"
},
{
	"name": "Method and apparatus for verifying storage access requests in a computer storage system with multiple storage elements",
	"summary": "",
	"abstract": "Method and apparatus are disclosed for verifying access to logical volume stored on at least one of the plurality of storage elements. The access can involve verification that the appropriate logical volume is being accessed and may also or instead include checking of authorization of a user to access that logical volume or logical entity. A database may be maintained to track users or host computers that are permitted to access the logical volume.",
	"url": null,
	"owner": "BMC Corporation",
	"publication_number": "07716261",
	"publication_date": "2010-05-11",
	"application_number": "11584123",
	"application_date": "2006-10-20",
	"tags": null,
	"slug": "method-and-apparatus-for-verifying-storage-access-requests-in-a-computer-storage-system-with-multiple-storage-elements",
	"match_type": "description"
},
{
	"name": "Distribution channel management for wireless devices and services",
	"summary": "",
	"abstract": "A system and method for distribution channel management for devices and services in the wireless telecommunications industry are disclosed. A product ordering software module is integrated with an activation and credit scoring software module, a commissions management software module, and a coop management software module, wherein the software modules are optionally integrated with additional software modules for product and service management, and report generation. A plurality of geographically distributed dealer agents who operate retail interfaces with customers use a web-based interface with the software modules and a data link with one or more distribution centers for delivery of wireless devices from a plurality of wireless device manufacturers, and with one or more carriers providing the subscription services activated for the customers via the activation and credit scoring software module.",
	"url": null,
	"owner": "Brightpoint, Inc.",
	"publication_number": "07835951",
	"publication_date": "2010-11-16",
	"application_number": "10338345",
	"application_date": "2003-01-08",
	"tags": null,
	"slug": "distribution-channel-management-for-wireless-devices-and-services",
	"match_type": "description"
},
{
	"name": "Communications network",
	"summary": "",
	"abstract": "A registration server in a network implementing an API (application programming interface) authenticates services and provides discovery of network resources, prior to registering services with selected network resources. Multiple instances of services and/or multiple service nodes are registered in a single service agreement.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "07660903",
	"publication_date": "2010-02-09",
	"application_number": "10168616",
	"application_date": "2001-01-12",
	"tags": null,
	"slug": "communications-network",
	"match_type": "abstract"
},
{
	"name": "Communications network",
	"summary": "",
	"abstract": "A Uniform Resource Locator (URL) includes an identifier part that identifies the URL as being for a resource on a circuit-switched network, a service parameter part and an address part. A terminal reads on the URL and establishes a connection to the resource. Properties of the connection, such as the bandwidth or the connection topology, are determined by values of service parameters in the service parameter part.",
	"url": null,
	"owner": "British Telecommunications public limited company",
	"publication_number": "07805508",
	"publication_date": "2010-09-28",
	"application_number": "09831274",
	"application_date": "1999-11-17",
	"tags": null,
	"slug": "communications-network",
	"match_type": "description"
},
{
	"name": "Gateway with voice",
	"summary": "",
	"abstract": "In one aspect of the present invention, a network gateway is configured to facilitate on line and off line bi-directional communication between a number of near end data and telephony devices with far end data termination devices via a hybrid fiber coaxial network and a cable modem termination system. The described network gateway combines a QAM receiver, a transmitter, a DOCSIS MAC, a CPU, a voice and audio processor, an Ethernet MAC, and a USB controller to provide high performance and robust operation.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07701954",
	"publication_date": "2010-04-20",
	"application_number": "10844169",
	"application_date": "2004-05-12",
	"tags": null,
	"slug": "gateway-with-voice",
	"match_type": "description"
},
{
	"name": "Method and apparatus for co-location of two radio frequency devices",
	"summary": "",
	"abstract": "A method for avoiding signal interference between a first RF device and a second RF device is provided. The first and second RF devices are co-located and the first RF device is configured to operate within a semi-stationary range of a frequency band. The second RF device is configured to operate by changing channels within the frequency band. The method initiates with a communication interface being provided between the first RF device and the second RF device. Then, the second RF device receives the semi-stationary range and a mode for the first RF device through the communication interface. Next, the second RF device is adapted to avoid the semi-stationary range of the frequency band of the first RF device when the mode of the first RF device is in an active mode. An apparatus where two RF devices are co-located without causing interference for each other is also provided.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07720507",
	"publication_date": "2010-05-18",
	"application_number": "11976182",
	"application_date": "2007-10-22",
	"tags": null,
	"slug": "method-and-apparatus-for-colocation-of-two-radio-frequency-devices",
	"match_type": "description"
},
{
	"name": "Method and system for transparent TCP offload with best effort direct placement of incoming traffic",
	"summary": "",
	"abstract": "Certain aspects of a method and system for transparent transmission control protocol (TCP) offload with best effort direct placement of incoming traffic are disclosed. Aspects of a method may include collecting TCP segments in a network interface card (NIC) processor without transferring state information to a host processor every time a TCP segment is received. When an event occurs that terminates the collection of TCP segments, the NIC processor may generate a new aggregated TCP segment based on the collected TCP segments. If a placement sequence number corresponding to the generated new TCP segment for the particular network flow is received before the TCP segment is received, the generated new TCP segment may be transferred directly from the memory to the user buffer instead of transferring the data to a kernel buffer, which would require further copy by the host stack from kernel buffer to user buffer.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07693138",
	"publication_date": "2010-04-06",
	"application_number": "11489389",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": "method-and-system-for-transparent-tcp-offload-with-best-effort-direct-placement-of-incoming-traffic",
	"match_type": "description"
},
{
	"name": "System and method for transferring a multidimensional array of data to a non-contiguous buffer",
	"summary": "",
	"abstract": "A system and method for storing a multidimensional array of data, such as a two dimensional (2-D) array of video data, in a non-contiguous memory space. The system and method maps individually indexed elements of a multidimensional array of data from a source device into blocks of non-contiguous memory available in a destination memory system, even when the destination blocks are small and/or their size does not correlate in any way to the dimensions of a source buffer. In particular, the blocks of non-contiguous memory may be as small as a single element of the data indexed in the 2-D array.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07822891",
	"publication_date": "2010-10-26",
	"application_number": "11451322",
	"application_date": "2006-06-13",
	"tags": null,
	"slug": "system-and-method-for-transferring-a-multidimensional-array-of-data-to-a-noncontiguous-buffer",
	"match_type": "description"
},
{
	"name": "System and method of processing data flow in multichannel, multi-service environment by dynamically allocating a socket",
	"summary": "",
	"abstract": "A method and system for processing a data flow in a multi-channel, multiservice environment is described. In one embodiment, a socket is dynamically allocated, the socket including a dynamically allocated service. Further, the server processes the data flow based upon the type of data being processed.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07809832",
	"publication_date": "2010-10-05",
	"application_number": "12146259",
	"application_date": "2008-06-25",
	"tags": null,
	"slug": "system-and-method-of-processing-data-flow-in-multichannel-multiservice-environment-by-dynamically-allocating-a-socket",
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with DTMF",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07835407",
	"publication_date": "2010-11-16",
	"application_number": "12341924",
	"application_date": "2008-12-22",
	"tags": null,
	"slug": "voice-and-data-exchange-over-a-packet-based-network-with-dtmf",
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with echo cancellation",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07773741",
	"publication_date": "2010-08-10",
	"application_number": "09533022",
	"application_date": "2000-03-22",
	"tags": null,
	"slug": "voice-and-data-exchange-over-a-packet-based-network-with-echo-cancellation",
	"match_type": "description"
},
{
	"name": "Voice and data exchange over a packet based network with voice detection",
	"summary": "",
	"abstract": "A signal processing system which discriminates between voice signals and data signals modulated by a voiceband carrier. The signal processing system includes a voice exchange, a data exchange and a call discriminator. The voice exchange is capable of exchanging voice signals between a switched circuit network and a packet based network. The signal processing system also includes a data exchange capable of exchanging data signals modulated by a voiceband carrier on the switched circuit network with unmodulated data signal packets on the packet based network. The data exchange is performed by demodulating data signals from the switched circuit network for transmission on the packet based network, and modulating data signal packets from the packet based network for transmission on the switched circuit network. The call discriminator is used to selectively enable the voice exchange and data exchange.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07653536",
	"publication_date": "2010-01-26",
	"application_number": "11676978",
	"application_date": "2007-02-20",
	"tags": null,
	"slug": "voice-and-data-exchange-over-a-packet-based-network-with-voice-detection",
	"match_type": "description"
},
{
	"name": "WiFi interface to dialup modem",
	"summary": "",
	"abstract": "A device and method support dialup modem access over a wireless local area and/or personal area network such as, for example, an IEEE 802.11 a/b/g/n and/or IEEE 802.15.3a network. A representative embodiment permits a user of a conventional Internet web browser application to access a dialup information provider via a switched telephone network, using the wireless network. A terminal adapter comprising a wired network interface and a wireless network interface receives messaging containing dialing information from a user of a personal computer, via the wireless network. The terminal adapter establishes a dialup connection to the information provider, and exchanges information between the personal computer and the information provider via the wired and wireless interfaces. Information used for dialing may be contained within a universal resource locator received by the terminal adapter, or may be received as a result of user input on a webpage type user interface displayed by the browser application using information sent by the terminal adapter.",
	"url": null,
	"owner": "Broadcom Corporation",
	"publication_number": "07756475",
	"publication_date": "2010-07-13",
	"application_number": "11144536",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": "wifi-interface-to-dialup-modem",
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for using a personal conference to privately establish and control media connections with a telephony device",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for using a personal conference to privately establish and control media connections with a telephony device are disclosed. According to one method, a media connection is established between a first user and a personal conference instance. The first user is connected to the personal conference instance via a telephony device, such as a PSTN phone. A plurality of second media connections is established between a plurality of second users and the personal conference instance in a manner that conceals existence of the personal conference instance to at least one of the second users. Media packets from the second users are mixed and sent to the first user. Media packets from the first user are sent to the second users. The first user dynamically controls at least one aspect of the personal conference call instance.",
	"url": null,
	"owner": "BroadSoft M6, LLC",
	"publication_number": "07715541",
	"publication_date": "2010-05-11",
	"application_number": "11218326",
	"application_date": "2005-09-01",
	"tags": null,
	"slug": "methods-systems-and-computer-program-products-for-using-a-personal-conference-to-privately-establish-and-control-media-connections-with-a-telephony-device",
	"match_type": "description"
},
{
	"name": "Disaster recovery",
	"summary": "",
	"abstract": "File system disaster recovery techniques provide automated monitoring, failure detection and multi-step failover from a primary designated target to one of a designated group of secondary designated targets. Secondary designated targets may be prioritized so that failover occurs in a prescribed sequence. Replication of information between the primary designated target and the secondary designated targets allows failover in a manner that maximizes continuity of operation. In addition, user-specified actions may be initiated on failure detection and/or on failover operations and/or on failback operations.",
	"url": null,
	"owner": "Brocade Communications Systems, Inc.",
	"publication_number": "07814050",
	"publication_date": "2010-10-12",
	"application_number": "10277431",
	"application_date": "2002-10-22",
	"tags": null,
	"slug": "disaster-recovery",
	"match_type": "description"
},
{
	"name": "Circuit autorouter with object oriented constraints",
	"summary": "",
	"abstract": "In one embodiment of the invention, an object oriented autorouter is disclosed for routing nets in a circuit. The object oriented autorouter includes a routing data model (RDM); at least one routing engine, such as a single connection router (SCR), a topographical (TOPO) transformation engine, and a detail geometric (DETAIL) engine, and a command and control module (CCM) coupled together. The RDM reads and write data with a design database as well as reading one or more object oriented design constraints. Each of the routing engines have at least one action to operate on the design database to improve compliance of the circuit to a constraint. The CCM controls the overall routing process of the nets in the circuit and includes at least one director to invoke at least one of the routing engines to achieve compliance with one or more constraints.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07761836",
	"publication_date": "2010-07-20",
	"application_number": "11548288",
	"application_date": "2006-10-11",
	"tags": null,
	"slug": "circuit-autorouter-with-object-oriented-constraints",
	"match_type": "description"
},
{
	"name": "Federated system and methods and mechanisms of implementing and using such a system",
	"summary": "",
	"abstract": "A federated system and methods and mechanisms of implementing and using such a system is disclosed. In some embodiments, one or more mappings are created between a taxonomy view at a node and one or more taxonomies of one or more data sources. The one or more data sources can then be accessed via the taxonomy view. In other embodiments, one or more mappings are created between content from different data sources and content from those data sources are merged using the one or more mappings.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07702636",
	"publication_date": "2010-04-20",
	"application_number": "10633338",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": "federated-system-and-methods-and-mechanisms-of-implementing-and-using-such-a-system",
	"match_type": "description"
},
{
	"name": "Method and system for enhancing software documentation and help systems",
	"summary": "",
	"abstract": "A method and system for enhancing software documentation and help systems. In one embodiment, a virtual library for a selected combination of tools is created. The virtual library is then linked to the tools in the selected combination of tools. In another embodiment, a combination of tools for designing a complex software system is selected from one or more software releases. The one or more software releases comprises a plurality of available tools. The selected combination of tools comprises less than all of the plurality of available tools. Each of the plurality of available tools is associated with one or more documents. Access to only those one or more documents associated with tools in the selected combination of tools is provided.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07836102",
	"publication_date": "2010-11-16",
	"application_number": "12345641",
	"application_date": "2008-12-29",
	"tags": null,
	"slug": "method-and-system-for-enhancing-software-documentation-and-help-systems",
	"match_type": "description"
},
{
	"name": "Method and system for enhancing software documentation and help systems",
	"summary": "",
	"abstract": "A method and system for enhancing software documentation and help systems. In one embodiment, a virtual library for a selected combination of tools is created. The virtual library is then linked to the tools in the selected combination of tools. In another embodiment, a combination of tools for designing a complex software system is selected from one or more software releases. The one or more software releases comprises a plurality of available tools. The selected combination of tools comprises less than all of the plurality of available tools. Each of the plurality of available tools is associated with one or more documents. Access to only those one or more documents associated with tools in the selected combination of tools is provided.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07797353",
	"publication_date": "2010-09-14",
	"application_number": "10384102",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": "method-and-system-for-enhancing-software-documentation-and-help-systems",
	"match_type": "description"
},
{
	"name": "System and method for performing design verification",
	"summary": "",
	"abstract": "A design verification system for developing electronic systems and methods for manufacturing and using same. The design verification system comprises a plurality of system elements, including at least one physical (or hardware) element and/or at least one virtual (or software) element, which are coupled, and configured to communicate, via a general communication system. Since the system elements may be provided on dissimilar development platforms, each system element is coupled with the communication system via a co-verification interface, which is provided as a layered protocol stack to assure portability and flexibility. Through use of the co-verification interface, the design verification system can be configured to support a wide variety of mixed physical/virtual systems.",
	"url": null,
	"owner": "Cadence Design Systems, Inc.",
	"publication_number": "07792933",
	"publication_date": "2010-09-07",
	"application_number": "10614537",
	"application_date": "2003-07-03",
	"tags": null,
	"slug": "system-and-method-for-performing-design-verification",
	"match_type": "description"
},
{
	"name": "Fingertip tracker",
	"summary": "",
	"abstract": "A method, apparatus, system, and article of manufacture provide the ability to utilize fingertip tracking technology during the course of a medical examination. A sensor is mounted on a fingertip of a finger of a first person. Such a sensor is communicatively coupled to a computer to record measurements. The sensor is calibrated using a known target. The finger having the sensor is then engaged to perform a medical examination directly on a second person. Measurements are obtained from the sensor on the fingertip during the medical examination. Data is obtained (e.g., via calculations or interpolation) based on the measurements.",
	"url": null,
	"owner": "California Institute of Technology",
	"publication_number": "07662113",
	"publication_date": "2010-02-16",
	"application_number": "11268299",
	"application_date": "2005-11-07",
	"tags": null,
	"slug": "fingertip-tracker",
	"match_type": "description"
},
{
	"name": "Apparatus and method for transmitting command",
	"summary": "",
	"abstract": "There are provided an apparatus and method for transmitting commands in a network to which a plurality of communication protocols may be applied. A first command that supports a plurality of communication protocols is input. One of the plurality of communication protocols is selected in accordance with the input first command. The first command is converted into a corresponding second command in the selected communication protocol. The converted second command is transmitted using the selected communication protocol.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07809845",
	"publication_date": "2010-10-05",
	"application_number": "10937362",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": "apparatus-and-method-for-transmitting-command",
	"match_type": "description"
},
{
	"name": "Data processing apparatus, image processing apparatus, data processing method, image processing method, and programs for implementing the methods",
	"summary": "",
	"abstract": "A data processing apparatus that is capable of improving the accuracy with which form types can be identified. An image file of a form and an additional file including a form type ID of the form are inputted. A character recognition process on the image file is carried out based on the form type ID. The image file and a result obtained in the character recognition process are stored in a storage device ",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07787158",
	"publication_date": "2010-08-31",
	"application_number": "11343997",
	"application_date": "2006-01-31",
	"tags": null,
	"slug": "data-processing-apparatus-image-processing-apparatus-data-processing-method-image-processing-method-and-programs-for-implementing-the-methods",
	"match_type": "description"
},
{
	"name": "Document processing apparatus, method and program",
	"summary": "",
	"abstract": "In order to import a document file in which security information is set into a document file to be edited with the security information being included in the document file, a document processing apparatus which imports a specified first document file in which security information is set into a second document file includes an import controller that causes the first document file to be held in the second document file with security information being contained in the first document file to generate a third document file, if the security information is added to the first document file.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07761433",
	"publication_date": "2010-07-20",
	"application_number": "11146070",
	"application_date": "2005-06-07",
	"tags": null,
	"slug": "document-processing-apparatus-method-and-program",
	"match_type": "description"
},
{
	"name": "Image forming apparatus having display unit for displaying an executable program and control method therefor",
	"summary": "",
	"abstract": "An image forming apparatus having a display unit for displaying a program which can be executed in the apparatus has an input unit for inputting a program into the image forming apparatus. A display control unit controls a process for displaying select keys including a plurality of select keys to instruct a selection of a desired one of a plurality of programs stored in the image forming apparatus onto a display screen displayed on the display unit. A discriminating unit discriminates whether or not the select key to instruct a selection of the program inputted by the input unit can be further displayed onto the first display screen to display the select keys corresponding to the programs registered in the image forming apparatus in response to the input of the program from the input unit.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07809298",
	"publication_date": "2010-10-05",
	"application_number": "11103593",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": "image-forming-apparatus-having-display-unit-for-displaying-an-executable-program-and-control-method-therefor",
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method for obtaining software processing log",
	"summary": "",
	"abstract": "In an information processing apparatus for relaying a calling from a first module to a function inside a second module in software divided into a plurality of modules, the calling is relayed from the first module to the function inside the second module. A log in the second module corresponding to the calling is obtained. The log includes at least a write starting address of binary data and a data size thereof. An area where the binary data is written is determined based on the write starting address and the data size thereof. Whether or not writing into the decided area is permitted is determined. On the basis of the determination result, writing into the decided area of the binary data is controlled. As a result, writing into an invalid area of the log is prevented without modifying the software.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07743228",
	"publication_date": "2010-06-22",
	"application_number": "11300391",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": "information-processing-apparatus-and-method-for-obtaining-software-processing-log",
	"match_type": "description"
},
{
	"name": "Information processing apparatus, control method therefor, computer program, and computer-readable storage medium",
	"summary": "",
	"abstract": "A method of processing data to be printed and print setting information used to print the data includes a detection step of detecting uninterpretable information from the print setting information, a transmission step of transmitting the uninterpretable information detected in the detection step, an acquisition step of acquiring interpretable information which is sent back in response to transmission of the uninterpretable information transmitted in the transmission step, and a creation step of creating print setting information by using the information acquired in the acquisition step.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07768661",
	"publication_date": "2010-08-03",
	"application_number": "11190968",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": "information-processing-apparatus-control-method-therefor-computer-program-and-computerreadable-storage-medium",
	"match_type": "description"
},
{
	"name": "Information processing apparatus, information transmission method, and control program therefor",
	"summary": "",
	"abstract": "An information processing apparatus includes an acquisition unit configured to acquire, from a plurality of image forming apparatuses, application information indicating a type of each application program installed on the plurality of image forming apparatuses, an application selection receiving unit configured to receive selection of an application program corresponding to the acquired application information, a setting information selection receiving unit configured to receive selection of setting information used in the application program whose selection has been received, an apparatus selection receiving unit configured to receive selection of an image forming apparatus as a destination to which to transmit the setting information from among image forming apparatuses installed with the application program whose selection has been received, and a transmission control unit configured to control processing for transmitting, to the image forming apparatus whose selection has been received, the setting information whose selection has been received.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07730225",
	"publication_date": "2010-06-01",
	"application_number": "12105583",
	"application_date": "2008-04-18",
	"tags": null,
	"slug": "information-processing-apparatus-information-transmission-method-and-control-program-therefor",
	"match_type": "description"
},
{
	"name": "Job information management method and apparatus",
	"summary": "",
	"abstract": "This invention increases the job information management precision. To accomplish this, an information processing method of recording or accumulating job information on a job issued from an information processing apparatus connectable to an image forming apparatus including an acquisition step of acquiring the job information from the information processing apparatus or the image forming apparatus, a determination step of determining whether to record or accumulate the job information acquired in the acquisition step, in accordance with a driver which generates data of the issued job, and a recording/accumulation step of recording or accumulating the job information determined in the determination step to be recorded or accumulated.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07787143",
	"publication_date": "2010-08-31",
	"application_number": "10699923",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": "job-information-management-method-and-apparatus",
	"match_type": "description"
},
{
	"name": "Management system, image processing apparatus and method for acquiring print job history information",
	"summary": "",
	"abstract": "The present invention makes it possible to uniquely manage the use of peripherals over a wide range or in two or more bases. The present invention controls whether all job information, managed by a management apparatus, is acquired from the management apparatus managing information on data processing, performed by a device, as job information, or additional job information among job information managed by the management apparatus is acquired.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07852502",
	"publication_date": "2010-12-14",
	"application_number": "10405222",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": "management-system-image-processing-apparatus-and-method-for-acquiring-print-job-history-information",
	"match_type": "description"
},
{
	"name": "Method of realising a boundary of a rotated object",
	"summary": "",
	"abstract": "A method is described for determining a discrete boundary for an object to be rendered into a raster pixel image having a plurality of scanlines. In the method, the object is rotated by an integer multiple of 90 degrees, and an outline of the rotated object is decomposed into line segments. For each scanline to be rendered, points of intersection between the line segments and the scanline are determined, and each point of intersection is rounded to an adjacent position selected from a finite set of positions on the scanline using a rule chosen according to the amount of rotation. The rounded points of intersection delimiting the discrete boundary. If the object is rotated by odd multiple of 90 degrees the method includes the steps of identifying points of intersection that satisfy a predetermined criterion; and shifting the identified points of intersection prior to rounding.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07746361",
	"publication_date": "2010-06-29",
	"application_number": "11201177",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": "method-of-realising-a-boundary-of-a-rotated-object",
	"match_type": "description"
},
{
	"name": "Method of using recommendations to visually create new views of data across heterogeneous sources",
	"summary": "",
	"abstract": "A method of establishing at least one variable of a new view of data, is disclosed where the variable is obtained from at least one data source (-). The method identifies at least one display type (, FIG. ), each display type having at least one corresponding template of data to be used by the new view of data. The template includes a plurality of data component slots (-) related according to the semantics of the identified display type. One or more data components to be included in the view of data are then identified, each identified data component being associated () with a slot in the template. A list of recommendations is then formed for one or more unspecified data components of the new view of data, the recommendations being based on the semantics of the display type and the identified data components. Finally at least one data component from the list of recommendations is identified as a variable for said new view of data. Also disclosed is a method of learning unknown relationships among data components across a plurality of heterogeneous data sources, and a method for recommending relevant data components for view creation across a plurality of heterogeneous data sources.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07644361",
	"publication_date": "2010-01-05",
	"application_number": "10738032",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": "method-of-using-recommendations-to-visually-create-new-views-of-data-across-heterogeneous-sources",
	"match_type": "description"
},
{
	"name": "Network system, information processing apparatus, information processing method, and control program for remote driver installation",
	"summary": "",
	"abstract": "There is a problem of making it possible to set up a driver with a simple operation when a driver for a peripheral device on the network is not installed. When a driver setup instruction is given, an instruction is sent to the specified PC to perform an operation to set up the driver specified by the user, and the information processing unit performs the operation to set up the driver based on the instruction. For example, when the peripheral device is a printer, the information processing unit determines whether or not the setup operation has been completed normally, and if the driver has been correctly installed, test printing is executed.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07743374",
	"publication_date": "2010-06-22",
	"application_number": "10022375",
	"application_date": "2001-12-20",
	"tags": null,
	"slug": "network-system-information-processing-apparatus-information-processing-method-and-control-program-for-remote-driver-installation",
	"match_type": "description"
},
{
	"name": "Printing system capable of chasing a printed material",
	"summary": "",
	"abstract": "The present invention realizes a network printing system capable of accumulating and chasing printed data. Further, by providing a job chasing function on the printer driver side, detailed setting can be done to extract history information of the job chasing function. The detailed setting to extract history information to chase a job can be done only by a specific administrator or user so that the job can be reliably chased, whereas the administrator or user can obtain desired history information. Accordingly, a precise jog chasing system can be established.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07755783",
	"publication_date": "2010-07-13",
	"application_number": "11287537",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": "printing-system-capable-of-chasing-a-printed-material",
	"match_type": "description"
},
{
	"name": "Printing system using post-printing processing apparatus",
	"summary": "",
	"abstract": "This invention relates to an image forming apparatus having ability information of an available finisher, including a detection unit which detects the stop state of post-processing by the first finisher, a search unit which, when the detection unit detects the stop of the first finisher, searches a finisher that can alternatively perform processing to be executed by the first finisher based on the ability information, and a generation unit which generates post-processing setting information for the second finisher found by the search unit.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07777907",
	"publication_date": "2010-08-17",
	"application_number": "11406252",
	"application_date": "2006-04-19",
	"tags": null,
	"slug": "printing-system-using-postprinting-processing-apparatus",
	"match_type": "description"
},
{
	"name": "Printing system, information processing apparatus, installation method, and program for implementing the method",
	"summary": "",
	"abstract": "A printing system which allow an administrator to change the settings of client apparatuses concerning the apparatus configuration of a printer, on his/her own initiative. Apparatus configuration information on the printer is acquired from the printer by a server apparatus via the network. The acquired apparatus configuration information on the printer is coupled to driver data, and the driver data having the apparatus configuration information on the printer coupled thereto is installed in the client apparatuses in response to an installation instruction from a user without waiting for an installation request to be received from any of the client apparatuses via the network.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07693968",
	"publication_date": "2010-04-06",
	"application_number": "10886270",
	"application_date": "2004-07-07",
	"tags": null,
	"slug": "printing-system-information-processing-apparatus-installation-method-and-program-for-implementing-the-method",
	"match_type": "description"
},
{
	"name": "Proxy printing system, information processing apparatus, and controlling method",
	"summary": "",
	"abstract": "In a proxy printing system, one print job is transmitted to a first one of printers connected over a network, and when a print failure occurs in the first printer, a second networked printer processes the print job to perform proxy printing. The system detects a failure of the first printer attempting to process the print job and issues a notification. In accordance with managed history information for the first printer, the proxy printing system detects whether a printer that has previously processed a print job as a proxy for the first printer exists out of the networked printers. The system issues a notification indicating at least one detected printer as a proxy destination candidate. The system performs control so that the printer is used to execute proxy print processing, and updates the history management table after the execution of the proxy print processing.",
	"url": null,
	"owner": "Canon Kabushiki Kaisha",
	"publication_number": "07855794",
	"publication_date": "2010-12-21",
	"application_number": "11001538",
	"application_date": "2004-12-01",
	"tags": null,
	"slug": "proxy-printing-system-information-processing-apparatus-and-controlling-method",
	"match_type": "description"
},
{
	"name": "GrannySnap architecture",
	"summary": "",
	"abstract": "Systems and methods for facilitating photo completion are provided. According to one embodiment, a system is provided including a hand held device, an application running on the hand held device, and a printing system. The hand held device includes the capability to both capture and transmit digital photos. The application provides the hand held device with hyper-simplified photo capture and delivery. In one embodiment, the application defaults a number of parameters that can be configured on the hand held device, such as the target, the photo review mechanism, the presentation method. These defaults can be set (reset) directly in the application or overridden in the system post transmission processing. In one embodiment, the printing system may control the schedule of publication. For example, the printing system may print received digital photos immediately, the next morning, on a periodic basis, or after receiving eMail confirmation.",
	"url": null,
	"owner": "CaringFamily, LLC",
	"publication_number": "07650069",
	"publication_date": "2010-01-19",
	"application_number": "11381974",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": "grannysnap-architecture",
	"match_type": "description"
},
{
	"name": "Method of securing programmable logic configuration data",
	"summary": "",
	"abstract": "The present invention relates to a secure method of distributing configuration data for a programmable logic device (PLD). The configuration data is encrypted to generate encrypted configuration data. A decryption key is encrypted using a silicon key. The encrypted configuration data and the encrypted decryption key are transferred to a PLD. Within the PLD, the encrypted decryption key is decrypted using the silicon key. Then, also within the PLD, the encrypted configuration data is decrypted using the decryption key to recover the configuration data. The PLD is then configured using the configuration data. The silicon key may be communicated to the PLD by tying predetermined input pins to an active high voltage level or signal ground, to form a binary code.",
	"url": null,
	"owner": "Carnegie Mellon University",
	"publication_number": "07711964",
	"publication_date": "2010-05-04",
	"application_number": "11605669",
	"application_date": "2006-11-29",
	"tags": null,
	"slug": "method-of-securing-programmable-logic-configuration-data",
	"match_type": "description"
},
{
	"name": "Mapping control inputs to vehicle-specific control outputs at a receiver",
	"summary": "",
	"abstract": "Systems and methods are provided for processing control inputs at a receiver for one or more servos coupled to a vehicle. A signal containing a plurality of control inputs generated in response to an activation of at least one control element on a transmitter is received at a receiver mounted on a vehicle. The plurality of control inputs is mapped to a vehicle-specific set of servo control signals at the receiver using operations such as reversing, shifting, scaling, delaying, and mixing.",
	"url": null,
	"owner": "Castle Creations, Inc.",
	"publication_number": "07831351",
	"publication_date": "2010-11-09",
	"application_number": "11741342",
	"application_date": "2007-04-27",
	"tags": null,
	"slug": "mapping-control-inputs-to-vehiclespecific-control-outputs-at-a-receiver",
	"match_type": "description"
},
{
	"name": "Architectures for parallelized intersection testing and shading for ray-tracing rendering",
	"summary": "",
	"abstract": "Ray tracing scenes is accomplished using a plurality of intersection testing resources coupled with a plurality of shading resources, communicative in the aggregate through links/queues. A queue from testing to shading comprises respective ray/primitive intersection indications, comprising a ray identifier. A queue from shading to testing comprises identifiers of new rays to be tested, wherein data defining the rays is separately stored in memories distributed among the intersection testing resources. Ray definition data can be retained in distributed memories until rays complete intersection testing, and be selected for testing multiple times based on ray identifier. A structure of acceleration shapes can be used. Packets of ray identifiers and shape data can be passed among the intersection testing resources, and each resource can test rays identified in the packet, and for which definition data is present in its memory. Test results for acceleration shapes are used to collect rays against acceleration shapes, and closest detection ray/primitive intersections are indicated by sending ray identifiers to shading resources.",
	"url": null,
	"owner": "Caustic Graphics, Inc.",
	"publication_number": "07830379",
	"publication_date": "2010-11-09",
	"application_number": "12408478",
	"application_date": "2009-03-20",
	"tags": null,
	"slug": "architectures-for-parallelized-intersection-testing-and-shading-for-raytracing-rendering",
	"match_type": "description"
},
{
	"name": "Method and medium for selecting a merchant for a trial mode of a delivery service",
	"summary": "",
	"abstract": "Disclosure includes selecting a merchant from a plurality of merchants, enabling a trial mode for the merchant, during the trial mode, receiving an indication of a first order for the merchant, forwarding the indication of the first order to the merchant, allocating a first payment for the first order to the merchant, requesting an acceptance of a membership status from the merchant, and receiving an indication of the payment for the first order.",
	"url": null,
	"owner": "CFPH, LLC",
	"publication_number": "07689470",
	"publication_date": "2010-03-30",
	"application_number": "11673446",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": "method-and-medium-for-selecting-a-merchant-for-a-trial-mode-of-a-delivery-service",
	"match_type": "description"
},
{
	"name": "Method and system for providing a trial of a referral service to a merchant based on a plan for expansion",
	"summary": "",
	"abstract": "Disclosure includes selecting a merchant from a plurality of merchants, enabling a trial mode for the merchant, during the trial mode, receiving an indication of a first order for the merchant, forwarding the indication of the first order to the merchant, allocating a first payment for the first order to the merchant, and requesting an acceptance of a membership status from the merchant.",
	"url": null,
	"owner": "CFPH, LLC",
	"publication_number": "07734510",
	"publication_date": "2010-06-08",
	"application_number": "11673461",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": "method-and-system-for-providing-a-trial-of-a-referral-service-to-a-merchant-based-on-a-plan-for-expansion",
	"match_type": "description"
},
{
	"name": "Method for selecting a merchant for a trial mode of a referral service",
	"summary": "",
	"abstract": "Disclosure includes receiving an indication of an order, receiving an indication of a payment for the order, transmitting the indication of the order to a merchant, and allocating at least a merchant portion of the payment to the merchant based, at least in part, on a trial status of the merchant.",
	"url": null,
	"owner": "CFPH, LLC",
	"publication_number": "07680698",
	"publication_date": "2010-03-16",
	"application_number": "11673464",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": "method-for-selecting-a-merchant-for-a-trial-mode-of-a-referral-service",
	"match_type": "description"
},
{
	"name": "Method of providing a trial of a referral service to a merchant based on a plan for expansion",
	"summary": "",
	"abstract": "Disclosure includes selecting a merchant from a plurality of merchants based at least in part on an expansion plan, enabling a trial mode for the merchant, during the trial mode, receiving an indication of a first order for the merchant, forwarding the indication of the first order to the merchant, allocating a first payment for the first order to the merchant, and requesting an acceptance of a membership status from the merchant.",
	"url": null,
	"owner": "CFPH, LLC",
	"publication_number": "07734509",
	"publication_date": "2010-06-08",
	"application_number": "11673458",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": "method-of-providing-a-trial-of-a-referral-service-to-a-merchant-based-on-a-plan-for-expansion",
	"match_type": "description"
},
{
	"name": "Method and system for graphically differentiating user preferred securities from one another",
	"summary": "",
	"abstract": "A system for graphically differentiating user preferred securities from one another is disclosed. The system comprises a server system () and a client system (). The server system () is in communication with a security data source () that provides security data on a plurality of securities. The client system () is in communication with the server system () and provides M user specific criteria to the server system (). The server system () then analyzes the security data based upon the M user specific criteria and identifies user preferred securities from the plurality of securities. The server system () provides the client system () with data relating to the user preferred securities. The client system () uses N user specific parameters received from an input device () to generate an N dimensional graph that is populated with icons representing the user preferred securities, thereby graphically differentiating the user preferred securities from one another on a display device ().",
	"url": null,
	"owner": "Charles Schwab & Co.",
	"publication_number": "07752110",
	"publication_date": "2010-07-06",
	"application_number": "09569656",
	"application_date": "2000-05-12",
	"tags": null,
	"slug": "method-and-system-for-graphically-differentiating-user-preferred-securities-from-one-another",
	"match_type": "description"
},
{
	"name": "System and methodology providing information lockbox",
	"summary": "",
	"abstract": "A system providing a secure lockbox methodology for protecting sensitive information is described. In one embodiment, the methodology includes steps of receiving input of sensitive information from a user; computing a data shadow of the sensitive information for storage in a repository; based on the data shadow stored in the repository, detecting any attempt to transmit the sensitive information; and blocking any detected attempt to transmit the sensitive information that is not authorized by the user.",
	"url": null,
	"owner": "Check Point Software Technologies, Inc.",
	"publication_number": "07788726",
	"publication_date": "2010-08-31",
	"application_number": "10605644",
	"application_date": "2003-10-15",
	"tags": null,
	"slug": "system-and-methodology-providing-information-lockbox",
	"match_type": "description"
},
{
	"name": "System and methodology providing secure workspace environment",
	"summary": "",
	"abstract": "System and methodology providing a secure workspace environment is described. In one embodiment, for example, in a computer system, a method is described for creating a secured workspace within an existing operating system for allowing users to run applications in a secured manner, the method comprises steps of: creating a policy for configuring the secured workspace, the policy specifying how information created during operation of the applications may be accessed; hooking particular functions of the operating system in order to obtain control over the information created during operation of the applications; during operation of the applications, encrypting the information to prevent unauthorized access; in response to a request for access to the information, determining whether the request complies with the policy; and if the request complies with the policy, satisfying the request by providing access to a decrypted copy of the information.",
	"url": null,
	"owner": "Check Point Software Technologies, Inc.",
	"publication_number": "07725737",
	"publication_date": "2010-05-25",
	"application_number": "11163343",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": "system-and-methodology-providing-secure-workspace-environment",
	"match_type": "description"
},
{
	"name": "Hybrid trading system for concurrently trading combined orders for financial instruments through both electronic and open-outcry trading mechanisms",
	"summary": "",
	"abstract": "A system and method of trading combined orders in an exchange configured for trading by a combination of electronic and open-outcry trading mechanisms is provided. One method includes receiving an incoming order having a first order component and a second order component at an electronic trade engine and routing the first and second order components to a first electronic database. The first and second order components are matched and executed against order components maintained in the first and second electronic databases, respectively. Any unexecuted first and second order components are placed in an electronic book according to a predetermined program if the first or second order component cannot be completely matched against any order components maintained in one of the first or second electronic databases. The system includes a trade engine configured for receiving combined orders from market makers.",
	"url": null,
	"owner": "Chicago Board Options Exchange, Incorporated",
	"publication_number": "07844539",
	"publication_date": "2010-11-30",
	"application_number": "12040365",
	"application_date": "2008-02-29",
	"tags": null,
	"slug": "hybrid-trading-system-for-concurrently-trading-combined-orders-for-financial-instruments-through-both-electronic-and-openoutcry-trading-mechanisms",
	"match_type": "description"
},
{
	"name": "Systems and methods for location, motion, and contact detection and tracking in a networked audiovisual device",
	"summary": "",
	"abstract": "Systems and methods for location, motion, and contact detection and tracking in a portable networked device are disclosed. A portable device may include a motion detection unit including an accelerometer for detecting accelerations in one or more axes. Signals associated with the detected motion are processed to generate estimates of device acceleration, velocity, and relative and absolute locations. Additional processing may be performed to detect user gestures or other user input relevant to portable device control. Particular motion or vibrational characteristics may be also be detected and used by other processes in the portable device.",
	"url": null,
	"owner": "Chumby Industries, Inc.",
	"publication_number": "07778792",
	"publication_date": "2010-08-17",
	"application_number": "11953756",
	"application_date": "2007-12-10",
	"tags": null,
	"slug": "systems-and-methods-for-location-motion-and-contact-detection-and-tracking-in-a-networked-audiovisual-device",
	"match_type": "description"
},
{
	"name": "Granular management of network resources",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for granular management of network resources by accessing network device resources through associated references. In one embodiment, the references are group names, and one or more resources (i.e., a resource collection) within each network device in a telecommunications network may be linked with one or more group names. Group names (or other types of references) may then be used to limit a user's access to particular network device resources. That is, a user may only have access to those resources associated with group names to which the user has access. Over time, network device resources may be associated or disassociated with particular group names. As a result, group names provide users with dynamic access to network device resources. In one embodiment, the groups to which a user has access are defined within a user profile associated with the user. Grouping network device resources, therefore, allows for a granular view of each network device in the network by limiting a user's access to those resources corresponding to group names listed in their user profile. As one example, grouping may allow for customer network managementu2014that is a customer's view is limited to only those network device resources for which they have subscribed.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07693976",
	"publication_date": "2010-04-06",
	"application_number": "10938160",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": "granular-management-of-network-resources",
	"match_type": "description"
},
{
	"name": "System, device, and method for bandwidth management in an optical communication system",
	"summary": "",
	"abstract": "A system, device, and method for bandwidth management in an optical communication system uses an optical service agent to provide bandwidth management services on behalf of a user. The optical service agent may monitor bandwidth utilization on a connection, control bandwidth utilization on a connection, obtain additional bandwidth for a connection, relinquish excess bandwidth for a connection, and allocate bandwidth among multiple connections, to name but a few. The optical service agent may interact with an optical communication network and/or various peer users in order to obtain and reserve communication services.",
	"url": null,
	"owner": "Ciena Corporation",
	"publication_number": "07840692",
	"publication_date": "2010-11-23",
	"application_number": "09930097",
	"application_date": "2001-08-15",
	"tags": null,
	"slug": "system-device-and-method-for-bandwidth-management-in-an-optical-communication-system",
	"match_type": "description"
},
{
	"name": "System and method for end-to-end communications tracing",
	"summary": "",
	"abstract": "A method for tracing communications includes receiving trace criteria from a first remote element and determining whether a call signaling message matches the trace criteria. The method includes attaching a trace tag to the call signaling message, if the call signaling message matches the trace criteria. The method further includes transmitting the call signaling message to a second remote element.",
	"url": null,
	"owner": "Cisco Technlogy, Inc.",
	"publication_number": "07778393",
	"publication_date": "2010-08-17",
	"application_number": "11736130",
	"application_date": "2007-04-17",
	"tags": null,
	"slug": "system-and-method-for-endtoend-communications-tracing",
	"match_type": "description"
},
{
	"name": "Application server providing personalized voice enabled web application services using extensible markup language documents",
	"summary": "",
	"abstract": "A unified web-based voice messaging system provides voice application control between a web browser and an application server via an hypertext transport protocol (HTTP) connection on an Internet Protocol (IP) network. The application server, configured for executing a voice application defined by XML documents, selects an XML document for execution of a corresponding voice application operation based on a determined presence of a user-specific XML document that specifies the corresponding voice application operation. The application server, upon receiving a voice application operation request from a browser serving a user, determines whether a personalized, user specific XML document exists for the user and for the corresponding voice application operation. If the application server determines the presence of the personalized XML document for a user-specific execution of the corresponding voice application operation, the application server dynamically generates a personalized HTML page having media content and control tags for personalized execution of the voice application operation; however if the application server determines an absence of the personalized XML document for the user-specific execution of the corresponding voice application operation, the application server dynamically generates a generic HTML page for generic execution of the voice application operation. Hence, a user can personalize any number of voice application operations, enabling a web-based voice application to be completely customized or merely partially customized.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07831430",
	"publication_date": "2010-11-09",
	"application_number": "11108119",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": "application-server-providing-personalized-voice-enabled-web-application-services-using-extensible-markup-language-documents",
	"match_type": "description"
},
{
	"name": "Automatic discovery of blocking access-list ID and match statements in a network",
	"summary": "",
	"abstract": "In one embodiment, a method can include: (i) receiving an incoming probe packet in a network device; (ii) de-encapsulating the incoming probe packet to provide a packet content portion and a drop result portion; (iii) testing the packet content portion against a local access control list (ACL) to determine a local drop result; and (iv) inserting the local drop result and encapsulating an outgoing probe packet.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07817571",
	"publication_date": "2010-10-19",
	"application_number": "11706087",
	"application_date": "2007-02-14",
	"tags": null,
	"slug": "automatic-discovery-of-blocking-accesslist-id-and-match-statements-in-a-network",
	"match_type": "description"
},
{
	"name": "Automatically controlling operation of a BRAS device based on encapsulation information",
	"summary": "",
	"abstract": "A technique controls operation of a BRAS device. The technique involves extracting encapsulation information from a communications exchange between a CPE device and an external server device (e.g., a DHCP server). The communications exchange passes through the BRAS device and a DSLAM device. The technique further involves storing the encapsulation information in local memory of the BRAS device, and controlling a flow of a downstream communication passing through the BRAS device and the DSLAM device toward the CPE device based on the encapsulation information stored in the local memory of the BRAS device. Accordingly, the BRAS device is well suited for performing ATM overhead accounting as well as shaping and policing downstream traffic.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07821941",
	"publication_date": "2010-10-26",
	"application_number": "11592457",
	"application_date": "2006-11-03",
	"tags": null,
	"slug": "automatically-controlling-operation-of-a-bras-device-based-on-encapsulation-information",
	"match_type": "description"
},
{
	"name": "Controlling access of concurrent users of computer resources in a distributed system using an improved semaphore counting approach",
	"summary": "",
	"abstract": "A method of controlling concurrent users of a distributed resource on a network is disclosed. In one aspect, there are one or more local lock managers executing on corresponding hosts and cooperating as a distributed lock manager. The resource is limited to a maximum number of concurrent users. A user identification for each user is associated with one host. In response to a request associated with a particular user associated with a first host, a lock is requested from a first local lock manager process executing on the first host. A related method of handling a request for a count-limited resource includes receiving a request from a client process for the computer resource. If it is determined that the request exceeds a maximum count for the resource, then it is determined whether a current time is within a retry time period of the client's first request. If it is determined the current time is within the retry time period, then it is automatically determined again whether the request exceeds the maximum count for the resource. If it is determined that the request does not exceed the maximum count, then the resource is provided to the client process.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07743146",
	"publication_date": "2010-06-22",
	"application_number": "11960376",
	"application_date": "2007-12-19",
	"tags": null,
	"slug": "controlling-access-of-concurrent-users-of-computer-resources-in-a-distributed-system-using-an-improved-semaphore-counting-approach",
	"match_type": "description"
},
{
	"name": "Dynamically adding application logic and protocol adapters to a programmable network element",
	"summary": "",
	"abstract": "Custom or user-defined application program extensions may be loaded into a network infrastructure element such as a router or switch without restarting the device. For example, a network element has program extensibility logic operable for receiving one or more user program extensions that comprise logic operable to interface with the application program and perform message processing functions or protocol processing functions that are not in the application program; installing the one or more user program extensions without restarting the apparatus; receiving one or more packets representing an application message; selecting a particular one of the user program extensions based on a protocol associated with the message; loading the particular one of the user program extensions; executing business logic of the application program associated with the received message; and invoking a function of the particular one of the user program extensions in response to a call in the business logic.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07840700",
	"publication_date": "2010-11-23",
	"application_number": "11473194",
	"application_date": "2006-06-21",
	"tags": null,
	"slug": "dynamically-adding-application-logic-and-protocol-adapters-to-a-programmable-network-element",
	"match_type": "description"
},
{
	"name": "Enforcement of security policies for kernel module loading",
	"summary": "",
	"abstract": "A method and computer program product for providing enforcement of security policies for kernel module loading is presented. File paths for shared library executable files opened by user processes are cached. When a request to load a kernel loadable module (KLM) is received, a previously cached file path for said KLM is retrieved, said file path mapping a location of an executable file from which said KLM was produced. A security policy is applied to said file path, wherein when said file path triggers a security policy rule then an action associated with a triggered rule is taken, and wherein when said file path does not trigger a security policy rule then said KLM request is allowed to proceed.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07644271",
	"publication_date": "2010-01-05",
	"application_number": "11268232",
	"application_date": "2005-11-07",
	"tags": null,
	"slug": "enforcement-of-security-policies-for-kernel-module-loading",
	"match_type": "description"
},
{
	"name": "Expedited bandwidth request for emergency services for wireless clients",
	"summary": "",
	"abstract": "Methods, apparatuses, and systems directed to reliably providing emergency services to wireless clients. In one embodiment, a wireless client determines if an attempt to transmit an emergency message exists. If so, the wireless client determines if one or more wireless access points support expedited bandwidth capabilities. If so, the wireless client notifies one of the wireless access points that the wireless client has an expedited bandwidth request.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07746897",
	"publication_date": "2010-06-29",
	"application_number": "11395720",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "expedited-bandwidth-request-for-emergency-services-for-wireless-clients",
	"match_type": "description"
},
{
	"name": "Exporting management information base data using IPFIX",
	"summary": "",
	"abstract": "In one embodiment, a networking device includes logic encoded in one or more tangible media for execution and when executed operable to cause performing receiving a command to collect a unique object identifier that represents a unique management information base (MIB) object; retrieving, in response to receiving the command, a Simple Network Management Protocol (SNMP) MIB variable or table that corresponds to the MIB object; creating an Internet Protocol Flow Information Export (IPFIX) template data structure that includes the object identifier; in which the object identifier is encoded in the IPFIX template data structure as a string that has a variable length; and exporting the encoded object identifier with the variable length string.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07788371",
	"publication_date": "2010-08-31",
	"application_number": "11724762",
	"application_date": "2007-03-15",
	"tags": null,
	"slug": "exporting-management-information-base-data-using-ipfix",
	"match_type": "description"
},
{
	"name": "IP unified agent using an XML voice enabled web based application server",
	"summary": "",
	"abstract": "A method for inter-process communication between non-persistent application instances includes establishing a first non-persistent application instance serving a first party and establishing a second non-persistent application instance serving a second party. In the first application instance, an HTML page is generated having instructions for a persistent browser instance having received the HTML page to initiate a new application session for the second party. Thus, inter-application communication is possible where one non-persistent application instance is able to notify and/or interrupt another non-persistent application instance by way of an associated real time component (web browser or proxy browser).",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07836188",
	"publication_date": "2010-11-16",
	"application_number": "09605848",
	"application_date": "2000-06-29",
	"tags": null,
	"slug": "ip-unified-agent-using-an-xml-voice-enabled-web-based-application-server",
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically managing sub-layer interfaces",
	"summary": "",
	"abstract": "A method of generating a standardized network-management representation of a multiple-layer network communications interface sub-stack having a non-standardized network-management representation includes determining, based on a signature indicating a layered structure of the network communications interface sub-stack, whether an expected type of sub-layer interface of the network communications interface sub-stack exists. If the expected type of sub-layer interface is determined not to exist, then a sub-layer interface of the expected type is created and a network management information base is populated with a sub-layer interface entry including () respective instance and type identifiers of the sub-layer interface and () one or more operational attributes of the sub-layer interface, the value of each operational attribute identically mirroring the value of a corresponding operational attribute of the interface sub-stack as reflected in the non-standardized network-management representation. The method can be performed for multiple sub-layer interfaces by a reentrant procedure of a dedicated interface manager in conjunction with pseudo drivers responsible for the sub-layer interfaces.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07835302",
	"publication_date": "2010-11-16",
	"application_number": "11388348",
	"application_date": "2006-03-24",
	"tags": null,
	"slug": "method-and-apparatus-for-automatically-managing-sublayer-interfaces",
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating a secure communication channel among multiple event service nodes",
	"summary": "",
	"abstract": "An approach for establishing secure multicast communication among multiple event service nodes is disclosed. The event service nodes, which can be distributed throughout an enterprise domain, are organized in a logical tree that mimics the logical tree arrangement of domains in a directory server system. The attributes of the event service nodes include the group session key and the private keys of the event service nodes that are members of the multicast or broadcast groups. The private keys provide unique identification values for the event service nodes, thereby facilitating distribution of such keys. Because keys as well as key version information are housed in the directory, multicast security can readily be achieved over any number of network domains across the entire enterprise. Key information is stored in, and the logical tree is supported by, a directory service.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07660983",
	"publication_date": "2010-02-09",
	"application_number": "11109211",
	"application_date": "2005-04-18",
	"tags": null,
	"slug": "method-and-apparatus-for-creating-a-secure-communication-channel-among-multiple-event-service-nodes",
	"match_type": "description"
},
{
	"name": "Method and apparatus for re-authentication of a computing device using cached state",
	"summary": "",
	"abstract": "Automatically re-authenticating a computing device seeking access to a network or a resource. A method comprises forwarding a request received from the computing device to an authentication device to enable the authentication device to authenticate the computing device using a full-authentication mechanism. State information related to authenticating the computing device is created from authenticating the computing device. The state information is received and stored. For example, an authenticator device that forwarded the initial authentication request from the computing device to the authentication device receives and stores the state information. The computing device is re-authenticated using the stored state information without again contacting the authentication device.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07716721",
	"publication_date": "2010-05-11",
	"application_number": "11253960",
	"application_date": "2005-10-18",
	"tags": null,
	"slug": "method-and-apparatus-for-reauthentication-of-a-computing-device-using-cached-state",
	"match_type": "description"
},
{
	"name": "Method and apparatus providing programmable network intelligence",
	"summary": "",
	"abstract": "Programmable network intelligence approaches as disclosed herein provide apparatus, methods and tools to achieve programmable interfaces to a device, or group of devices or a network where native programmable interfaces are not available.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07721304",
	"publication_date": "2010-05-18",
	"application_number": "11148725",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-and-apparatus-providing-programmable-network-intelligence",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for trusted application centric QoS provisioning",
	"summary": "",
	"abstract": "A security agent extends the trust barrier, or trust point, from network gateway nodes to end user devices. A security agent operable to scrutinize network traffic executes on the user device and compares QoS marking attempts with the established QoS marking policy in effect. The security agent examines network traffic attributes deterministic of connection attempts by user processes. Attempts to apply inappropriate or disallowed QoS markings, as dictated by the QoS marking policy, are detected and disallowed. Therefore, only user connections consistent with the QoS marking policy are permitted into the network. Network admission control (NAC) mechanisms ensure that the security agent is the only access point from the user device to the secure network, and the security agent communicates the establishment of the trusted access point to the network gateway, thus ensuring that the network gateway may trust service level designations emanating from the user device executing the security agent.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07774498",
	"publication_date": "2010-08-10",
	"application_number": "11593289",
	"application_date": "2006-11-06",
	"tags": null,
	"slug": "methods-and-apparatus-for-trusted-application-centric-qos-provisioning",
	"match_type": "description"
},
{
	"name": "Obtaining information on forwarding decisions for a packet flow",
	"summary": "",
	"abstract": "In one embodiment, an apparatus comprises one or more forwarding logic components and logic coupled to a plurality of network interfaces. The logic is operable to: receive address information that identifies a packet flow; generate a synthetic packet based on the address information; provide the synthetic packet to the one or more forwarding logic components; retrieve forwarding information that indicates one or more forwarding decisions for the synthetic packet made by the one or more forwarding logic components; and report the forwarding information. Each of the one or more forwarding logic components is operable to make a forwarding decision for the synthetic packet as part of processing packets in the packet flow, and to store, as part of the forwarding information, data indicating the forwarding decision for the synthetic packet that is made by that forwarding logic component.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07817636",
	"publication_date": "2010-10-19",
	"application_number": "12054287",
	"application_date": "2008-03-24",
	"tags": null,
	"slug": "obtaining-information-on-forwarding-decisions-for-a-packet-flow",
	"match_type": "description"
},
{
	"name": "Optimized IP address use in a mobile IP environment",
	"summary": "",
	"abstract": "Methods and apparatus for initiating the release of an IP address allocated for use by a Mobile Node supporting Mobile IP are disclosed. The IP address may be a collocated care-of address or a dynamically assigned home address. The release of the IP address may be initiated by the Home Agent based upon information it has received in a registration request or, alternatively, may be initiated by the Home Agent in response to a de-registration request. In this manner, a Home Agent may initiate the release of an IP address that is no longer in use by a Mobile Node.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07778229",
	"publication_date": "2010-08-17",
	"application_number": "11193097",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": "optimized-ip-address-use-in-a-mobile-ip-environment",
	"match_type": "description"
},
{
	"name": "Processing a subscriber call in a telecommunications network",
	"summary": "",
	"abstract": "A method for processing subscriber calls is disclosed. A call agent receives signals associated with a first call from a first subscriber of a first point of presence. The first subscriber is associated with a first feature set. The call agent receives signals associated with a second call from a second subscriber of a second point of presence. The second subscriber is associated with a second feature set. A feature server is notified of the first call and the second call. A feature from the first feature set is provided to the first subscriber in response to the notification, and a feature from the second feature set is provided to the second subscriber in response to the notification.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07702090",
	"publication_date": "2010-04-20",
	"application_number": "11428420",
	"application_date": "2006-07-03",
	"tags": null,
	"slug": "processing-a-subscriber-call-in-a-telecommunications-network",
	"match_type": "description"
},
{
	"name": "Protocol for efficient exchange of XML documents with a network device",
	"summary": "",
	"abstract": "A method and apparatus for the configuration of a network device through the exchange of XML documents is provided. A network device transmits multiple chunks of an XML document to a client in response to the size of the XML document being larger than a configurable size. The client does not receive any XML documents from network device that exceed the configurable size, and may abort receiving additional chunks of the XML document. The client and the network device may each discover which version of a data schema each other is using to reference components of the network device. The exchanged XML documents include version data that identifies a version for a plurality of data schemas that are each associated with a component of network device. The client and the network device may thus avoid exchanging ambiguous communications due to inconsistent versions of a data schema.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07853676",
	"publication_date": "2010-12-14",
	"application_number": "10866169",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": "protocol-for-efficient-exchange-of-xml-documents-with-a-network-device",
	"match_type": "description"
},
{
	"name": "Proxy for application server",
	"summary": "",
	"abstract": "An application server system is provided having a core engine connecting one or more protocol providers to one or more applications, preferably including an SCCP proxy. In a preferred embodiment, the one or more applications run on a respective one or more virtual machines having their own execution threads. A thread pool may be used to spawn instances of applications or scripts. Preferably, the core engine, the protocol providers, and each of the one or more virtual machines run in separate AppDomains. In another embodiment, a visual designer is provided preferably having XML conversion capability and interactive debug capability.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07707240",
	"publication_date": "2010-04-27",
	"application_number": "11133407",
	"application_date": "2005-05-19",
	"tags": null,
	"slug": "proxy-for-application-server",
	"match_type": "description"
},
{
	"name": "Role-based access control enforced by filesystem of an operating system",
	"summary": "",
	"abstract": "A method and system for role-based access control enforced by an Operating System filesystem are provided. A file representing a resource is created and stored in the Operating System filesystem. A user requests access to the resource and provides user-identifying information and a resource identifier. An access identifier is created based on the user-identifying information and the resource identifier, and is formatted as the file attribute used by the Operating System to manage file access. A system call to the Operating System is made to perform an operation on the file representing the resource, where the system call uses the access identifier to gain access to the file. The user is granted access to the resource only if the operating system successfully performs the operation on the file representing the resource.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07702693",
	"publication_date": "2010-04-20",
	"application_number": "10698498",
	"application_date": "2003-10-30",
	"tags": null,
	"slug": "rolebased-access-control-enforced-by-filesystem-of-an-operating-system",
	"match_type": "description"
},
{
	"name": "Scalable IP-based notification architecture for unified messaging",
	"summary": "",
	"abstract": "A notification architecture utilizes multiple processes configured for managing notification operations based on reception of SMTP-based messages within IMAP based message stores. The notification architecture enables use of multiple instances of a notification process, each configured for receiving notification messages for respective subscribers from messaging sources according to a prescribed open protocol such as Internet Protocol. Each notification process accesses subscriber profile information from an open protocol-based subscriber directory based on the received notification messages. Each notification process determines, for each received notification message, the subscriber's notification preference based on the accessed profile information, and selectively outputs a notification delivery message according to a prescribed open protocol to at least one notification delivery process within the notification architecture based on the subscriber's notification preference. Each notification process may have access via the prescribed open protocol to multiple notification delivery processes, each configured for outputting a notification to a subscriber's notification device according to a corresponding device protocol. Multiple instances of each type of notification delivery process may also be utilized for increased capacity. Hence, subscribers may be notified of events according to their respective preferences, including subscriber device type, or time of notification. Moreover, the notification architecture can be scaled without adversely affecting any existing instances of the notification process or the notification delivery processes.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07668919",
	"publication_date": "2010-02-23",
	"application_number": "11069961",
	"application_date": "2005-03-03",
	"tags": null,
	"slug": "scalable-ipbased-notification-architecture-for-unified-messaging",
	"match_type": "description"
},
{
	"name": "System and method for identifying caller",
	"summary": "",
	"abstract": "A method of providing telecommunication service includes receiving caller identification information associated with a call to a communication device and determining whether the caller identification information corresponds to any of a plurality of stored identifiers, each stored identifier associated with audio data. The method further includes transmitting, in response to determining that the caller identification information corresponds to a stored identifier, audio data associated with the corresponding stored identifier to the communication device.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07688954",
	"publication_date": "2010-03-30",
	"application_number": "11128932",
	"application_date": "2005-05-12",
	"tags": null,
	"slug": "system-and-method-for-identifying-caller",
	"match_type": "description"
},
{
	"name": "System and method for offering seamless connectivity across multiple devices in a communications environment",
	"summary": "",
	"abstract": "An apparatus for providing connectivity is provided that includes a mobility server operable to coordinate a communication session between a first and a second end-user device. The first end-user device is associated with a first call leg and the second end-user device is associated with a second call leg. A handoff is executed in transferring the communication session from the first end-user device to the second end-user device. In more particular embodiments, the mobility server is operable to receive signal strength information from the first end-user device and to execute the handoff based on the signal strength information. In addition, the handoff is executed based on an end-user preference that is provided in a subscription that is accessed by the mobility server.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07650143",
	"publication_date": "2010-01-19",
	"application_number": "11128046",
	"application_date": "2005-05-11",
	"tags": null,
	"slug": "system-and-method-for-offering-seamless-connectivity-across-multiple-devices-in-a-communications-environment",
	"match_type": "description"
},
{
	"name": "System diagnostics with dynamic contextual information of events",
	"summary": "",
	"abstract": "A network device and a method for monitoring operational messages is described. The method comprises monitoring an occurrence of an operational message of the network device, and storing dynamic context information at the time that the operational message occurred. The stored dynamic context information is then associated with the operational message. The operational message (e.g., a syslog message) may be stored together with the dynamic context information in a metalog memory and may comprise a snapshot of a procedure stack, the procedure stack including information indicative of a sequence of procedure invocations.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07752504",
	"publication_date": "2010-07-06",
	"application_number": "11756465",
	"application_date": "2007-05-31",
	"tags": null,
	"slug": "system-diagnostics-with-dynamic-contextual-information-of-events",
	"match_type": "description"
},
{
	"name": "Unified messaging feature that plays greetings based on the received calling party number",
	"summary": "",
	"abstract": "A messaging system is provided for playing a messaging prompt in response to a request for execution of a messaging operation. The request contains calling party number information. The messaging system includes an application runtime environment configured for retrieving for playback as the messaging prompt, a personalized voice message based on a match of the received calling party number information with calling party number information stored in an Internet Protocol (IP) based database server. The personalized voice message corresponds to the matched, stored calling number information of the calling party. Hence, a subscriber can record personalized greeting for preferred callers such that when a preferred caller reaches the subscriber's voice mail, the personalized greeting for that caller is played. If the caller is not a preferred caller, a generic greeting is played.",
	"url": null,
	"owner": "Cisco Technology, Inc.",
	"publication_number": "07822815",
	"publication_date": "2010-10-26",
	"application_number": "09633899",
	"application_date": "2000-08-07",
	"tags": null,
	"slug": "unified-messaging-feature-that-plays-greetings-based-on-the-received-calling-party-number",
	"match_type": "description"
},
{
	"name": "System and method for web trading",
	"summary": "",
	"abstract": "The present invention relates to a web trading system and method for performing financial transactions securely over a public data network, such as the Internet, using a web browser as the user interface. The financial transactions are offered, for example, by a financial institution to its customers at the institution's web site. They include transactions such as foreign currency exchange, currency and money market trades, and warrant trades. The web trading system and method provide secure communication protocol between the Internet user interface and a virtual private network (VPN) of a financial institution to enable implementation of trading applications by the financial institution's application servers across the VPN. Security for the financial transactions is provided by the web trading systems and software downloaded to the customer's personal computer (PC) and includes encryption, authentication, authorization, message and transaction integrity capabilities, registration authority, handshake protocol, and firewalls.",
	"url": null,
	"owner": "Citibank, N.A.",
	"publication_number": "07716109",
	"publication_date": "2010-05-11",
	"application_number": "09560960",
	"application_date": "2000-04-28",
	"tags": null,
	"slug": "system-and-method-for-web-trading",
	"match_type": "description"
},
{
	"name": "Method and apparatus for isolating execution of software applications",
	"summary": "",
	"abstract": "A method for isolating access by application programs to native resources provided by an operating system redirects a request for a native resource made by an application program executing on behalf of a user to an isolation environment. The isolation environment includes a user isolation scope and an application isolation scope. An instance of the requested native resource is located in the user isolation scope corresponding to the user. The request for the native resource is fulfilled using the version of the resource located in the user isolation scope. If an instance of the requested native resource is not located in the user isolation scope, the request is redirected to an application isolation scope. The request for the native resource is fulfilled using the version of the resource located in the application isolation scope. If an instance of the requested native resource is not located in the application isolation scope, the request is redirected to a system scope.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07680758",
	"publication_date": "2010-03-16",
	"application_number": "10711737",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "method-and-apparatus-for-isolating-execution-of-software-applications",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing file-type associations to multiple applications",
	"summary": "",
	"abstract": "A method for associating a file type of a file with one or more programs includes the step of receiving a request to store in a configuration store file type association information. From the request, an application program is determined that is to be associated with a file type in the configuration store. An association of the file type with a chooser tool is written to the configuration store",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07752600",
	"publication_date": "2010-07-06",
	"application_number": "10711732",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-filetype-associations-to-multiple-applications",
	"match_type": "description"
},
{
	"name": "Method and appliance for using a dynamic response time to determine responsiveness of network services",
	"summary": "",
	"abstract": "In a method and appliance for using a dynamic response time to determine responsiveness of one or more network services on a server, a monitor determines a response time for each of one or more network services. The monitor establishes an average response time based on the determined response time for each of the one or more network services. The monitor associates with the established average response time a predetermined threshold for which the response time of the one or more network services may deviate from the average response time and maintain an indication of responsiveness. The monitor monitors the response time of the one or more network services to one or more requests. The monitor determines that the response time of the one or more network services deviates from the average response time by the predetermined threshold. The monitor indicates that the one or more network services are unavailable.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07720954",
	"publication_date": "2010-05-18",
	"application_number": "11462344",
	"application_date": "2006-08-03",
	"tags": null,
	"slug": "method-and-appliance-for-using-a-dynamic-response-time-to-determine-responsiveness-of-network-services",
	"match_type": "description"
},
{
	"name": "Method and system for accessing a remote file in a directory structure associated with an application program executing locally",
	"summary": "",
	"abstract": "A method and system for accessing a file in a directory structure associated with an application includes a method of accessing a file in a directory structure associated with an application. A request by an application for access to a file is intercepted. The request is redirected to a first isolation environment. A determination is made that the requested file does not exist in the first isolation environment. The request is redirected to a second isolation environment responsive to a determination that the file is identified in an enumeration of a directory structure including a plurality of application files residing on a remote machine. The requested file is retrieved from a file server, responsive to a determination that the second isolation environment does not contain the file and that the file is identified in the enumeration.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07779034",
	"publication_date": "2010-08-17",
	"application_number": "11246019",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": "method-and-system-for-accessing-a-remote-file-in-a-directory-structure-associated-with-an-application-program-executing-locally",
	"match_type": "description"
},
{
	"name": "Method and system for accessing resources",
	"summary": "",
	"abstract": "In a method for accessing resources provided by an operating system, a request for a resource is received by an application program executing inside a first environment. A first identifier associated with the resource is acquired. A second identifier referring to the requested resource and to a launch environment on which to launch the resource is determined. The request for the resource is redirected to the identified instance of the resource, responsive to the second identifier. The request for the resource is responded to using the instance of the resource located inside an environment on which the resource resides.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07676813",
	"publication_date": "2010-03-09",
	"application_number": "11231315",
	"application_date": "2005-09-19",
	"tags": null,
	"slug": "method-and-system-for-accessing-resources",
	"match_type": "description"
},
{
	"name": "Method and systems for efficient delivery of previously stored content",
	"summary": "",
	"abstract": "Systems and methods for reducing file sizes for files delivered over a network are disclosed. A method comprises receiving a first file comprising sequences of data; creating a hash table having entries corresponding to overlapping sequences of data; receiving a second file comprising sequences of data; comparing each of the sequences of data in the second file to the sequences of data in the hash table to determine sequences of data present in both the first and second files; and creating a third file comprising sequences of data from the second file and representations of locations and lengths of said sequences of data present in both the first and second files.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07756826",
	"publication_date": "2010-07-13",
	"application_number": "11428058",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "method-and-systems-for-efficient-delivery-of-previously-stored-content",
	"match_type": "description"
},
{
	"name": "Secure traversal of network components",
	"summary": "",
	"abstract": "A method and apparatus for authenticating a client to a content server. A ticket authority generates a ticket associated with the client. The ticket comprises a first ticket and a second ticket. The ticket authority transmits the first ticket to the client and the client uses the first ticket to establish a communication session with an content server proxy. The ticket authority then transmits a second ticket to the content server proxy and the content server proxy uses the second ticket to establish a communication session with the content server.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07661129",
	"publication_date": "2010-02-09",
	"application_number": "10083324",
	"application_date": "2002-02-26",
	"tags": null,
	"slug": "secure-traversal-of-network-components",
	"match_type": "description"
},
{
	"name": "System and method for performing entity tag and cache control of a dynamically generated object not identified as cacheable in a network",
	"summary": "",
	"abstract": "The present invention is directed towards a method and system for modifying by a cache responses from a server that do not identify a dynamically generated object as cacheable to identify the dynamically generated object to a client as cacheable in the response. In some embodiments, such as an embodiment handling HTTP requests and responses for objects, the techniques of the present invention insert an entity tag, or u201cetagu201d into the response to provide cache control for objects provided without entity tags and/or cache control information from an originating server. This technique of the present invention provides an increase in cache hit rates by inserting information, such as entity tag and cache control information for an object, in a response to a client to enable the cache to check for a hit in a subsequent request.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07849269",
	"publication_date": "2010-12-07",
	"application_number": "11323196",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": "system-and-method-for-performing-entity-tag-and-cache-control-of-a-dynamically-generated-object-not-identified-as-cacheable-in-a-network",
	"match_type": "description"
},
{
	"name": "System and method for performing entity tag and cache control of a dynamically generated object not identified as cacheable in a network",
	"summary": "",
	"abstract": "The present invention is directed towards a method and system for modifying by a cache responses from a server that do not identify a dynamically generated object as cacheable to identify the dynamically generated object to a client as cacheable in the response. In some embodiments, such as an embodiment handling HTTP requests and responses for objects, the techniques of the present invention insert an entity tag, or u201cetagu201d into the response to provide cache control for objects provided without entity tags and/or cache control information from an originating server. This technique of the present invention provides an increase in cache hit rates by inserting information, such as entity tag and cache control information for an object, in a response to a client to enable the cache to check for a hit in a subsequent request.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07849270",
	"publication_date": "2010-12-07",
	"application_number": "12838171",
	"application_date": "2010-07-16",
	"tags": null,
	"slug": "system-and-method-for-performing-entity-tag-and-cache-control-of-a-dynamically-generated-object-not-identified-as-cacheable-in-a-network",
	"match_type": "description"
},
{
	"name": "System and method for remoting twain function calls from a user session to a client system",
	"summary": "",
	"abstract": "A mechanism for remoting Twain function calls within a user session to a client system is disclosed. By hooking Twain function calls made by a Twain application on the server, the Twain function calls may be remoted over a virtual connection to a client system. A proxy application corresponding to the server-based Twain application is created on the client system. The proxy application communicates with the server and makes the appropriate function calls to the remainder of the Twain framework. The use of the proxy application allows multiple applications and devices to be supported simultaneously. Messages sent over the virtual connection are filtered prior to transmission thereby limiting the amount of required communication traffic. A multiplexor and demultiplexor are utilized in order to efficiently use bandwidth on the virtual channel. The present invention additionally compresses image data prior to transmission over the virtual channel.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07712110",
	"publication_date": "2010-05-04",
	"application_number": "10711612",
	"application_date": "2004-09-28",
	"tags": null,
	"slug": "system-and-method-for-remoting-twain-function-calls-from-a-user-session-to-a-client-system",
	"match_type": "description"
},
{
	"name": "System for virtualizing access to named system objects using rule action associated with request",
	"summary": "",
	"abstract": "A method for virtualizing access to named system objects includes the step of receiving a request to access a system object from a process executing in the context of a user isolation scope, the request including a virtual name for the system object. A rule associated with the request is determined and a literal name for the system object is formed in response to the determined rule. A request to access the system object is issued to the operating system. The issued request including the literal name for the system object.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07853947",
	"publication_date": "2010-12-14",
	"application_number": "10711735",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "system-for-virtualizing-access-to-named-system-objects-using-rule-action-associated-with-request",
	"match_type": "description"
},
{
	"name": "Systems and method of using HTTP head command for prefetching",
	"summary": "",
	"abstract": "The present solution provides a variety of techniques for accelerating and optimizing network traffic, such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching, protocol acceleration, domain name resolution acceleration as well as compression improvements. In some cases, the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching, such as HTTP proxy caching. In other cases, the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases, the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address, the present solution helps accelerate HTTP access. In some cases, the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic, such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser, as well as on any type and form of intermediary device, such as an appliance, proxying device or any type of interception caching and/or proxying device.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07809818",
	"publication_date": "2010-10-05",
	"application_number": "11685136",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-method-of-using-http-head-command-for-prefetching",
	"match_type": "description"
},
{
	"name": "Systems and methods for automatic installation and execution of a client-side acceleration program",
	"summary": "",
	"abstract": "The present invention is directed towards systems and methods for dynamically deploying and executing an acceleration program on a client to improve the performance and delivery of remotely accessed applications. The acceleration program of the present invention is automatically installed and executed on a client in a manner transparent to and seamless with the operation of the client. An appliance may intercept a request of the client to establish a communication session or connection with a server, and transmit the acceleration program to the client. In some cases, the appliance determines whether the application being accessed by the client can be accelerated and only provides the acceleration program if the application can be accelerated. Upon receipt of the acceleration program, the client automatically performs a silent installation of the acceleration program and executes the acceleration program upon completion of the installation.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07810089",
	"publication_date": "2010-10-05",
	"application_number": "11324203",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": "systems-and-methods-for-automatic-installation-and-execution-of-a-clientside-acceleration-program",
	"match_type": "description"
},
{
	"name": "Systems and methods for communicating a lossy protocol via a lossless protocol",
	"summary": "",
	"abstract": "The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment, the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device, such as a gateway. Additionally, the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol, 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol, 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter, accounting for overhead due to encryption, 4) application-aware prioritization of client-side network communications, and 5) network disruption shielding for reliable and persistent network connectivity and access.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07724657",
	"publication_date": "2010-05-25",
	"application_number": "11187513",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": "systems-and-methods-for-communicating-a-lossy-protocol-via-a-lossless-protocol",
	"match_type": "description"
},
{
	"name": "Systems and methods for communicating a lossy protocol via a lossless protocol using false acknowledgements",
	"summary": "",
	"abstract": "The present invention is generally directed towards a remote access architecture for providing peer-to-peer communications and remote access connectivity. In one embodiment, the remote access architecture of the present provides a method for establishing a direct connection between peer computing devices via a third computing device, such as a gateway. Additionally, the present invention provides the following techniques to optimize peer-to-peer communications: 1) false acknowledgement of receipt of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol, 2) payload shifting of network packets allowing communications via a lossless protocol of packets constructed for transmission via a lossy protocol, 3) reduction of packet fragmentation by adjusting the maximum transmission unit (MTU) parameter, accounting for overhead due to encryption, 4) application-aware prioritization of client-side network communications, and 5) network disruption shielding for reliable and persistent network connectivity and access.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07808906",
	"publication_date": "2010-10-05",
	"application_number": "11187562",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": "systems-and-methods-for-communicating-a-lossy-protocol-via-a-lossless-protocol-using-false-acknowledgements",
	"match_type": "description"
},
{
	"name": "Systems and methods for configuring flow control of policy expressions",
	"summary": "",
	"abstract": "Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream, including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed, in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing, VPNs, SSL offloading, content switching, application security, acceleration, and caching.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07853678",
	"publication_date": "2010-12-14",
	"application_number": "11685171",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-for-configuring-flow-control-of-policy-expressions",
	"match_type": "description"
},
{
	"name": "Systems and methods for configuring handling of undefined policy events",
	"summary": "",
	"abstract": "Systems and methods for configuring and evaluating policies that direct processing of one or more data streams are described. A configuration interface is described for allowing users to specify object oriented policies. These object oriented policies may allow any data structures to be applied with respect to a payload of a received packet stream, including any portions of HTTP traffic. A configuration interface may also allow the user to control the order in which policies and policy groups are executed, in addition to specifying actions to be taken if one or more policies are undefined. Systems and methods for processing the policies may allow efficient processing of object-oriented policies by applying potentially complex data structures to unstructured data streams. A device may also interpret and process a number of flow control commands and policy group invocation statements to determine an order of execution among a number of policies and policy groups. These policy configurations and processing may allow configuration and processing of complex network behaviors relating to load balancing, VPNs, SSL offloading, content switching, application security, acceleration, and caching.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07853679",
	"publication_date": "2010-12-14",
	"application_number": "11685175",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-for-configuring-handling-of-undefined-policy-events",
	"match_type": "description"
},
{
	"name": "Systems and methods for monitoring components of a remote access server farm",
	"summary": "",
	"abstract": "The present application is related methods to monitor a state of one or more components of a remote access server farm by an intermediary to distinguish between operating and functional components and improve farm availability for user application requests. The intermediary may be deployed between a client and the remote access server farm and forwards client requests to functional components of the remote access server farm.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07734777",
	"publication_date": "2010-06-08",
	"application_number": "12546223",
	"application_date": "2009-08-24",
	"tags": null,
	"slug": "systems-and-methods-for-monitoring-components-of-a-remote-access-server-farm",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing quality of service precedence in TCP congestion control",
	"summary": "",
	"abstract": "Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments, a proxy for one or more connections may allocate, distribute, or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate, distribute, or generate these indications in such a way as to provide quality of service to one or more connections, or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments, a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments, a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07760642",
	"publication_date": "2010-07-20",
	"application_number": "11685173",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-for-providing-quality-of-service-precedence-in-tcp-congestion-control",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing virtual fair queueing of network traffic",
	"summary": "",
	"abstract": "Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments, a proxy for one or more connections may allocate, distribute, or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate, distribute, or generate these indications in such a way as to provide quality of service to one or more connections, or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments, a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments, a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07796510",
	"publication_date": "2010-09-14",
	"application_number": "11685164",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-for-providing-virtual-fair-queueing-of-network-traffic",
	"match_type": "description"
},
{
	"name": "Systems and methods for virtual host name roaming",
	"summary": "",
	"abstract": "Systems and methods for providing a uniform network addressing scheme for a user accessing a network that is independent from the computer from which the user accesses the network. A virtual IP address is assigned to a user, a user session or a program run by user, where the IP address is different from the IP address of the computer of the user, and different from other users. A virtual host name is assigned to and associated with the virtual IP address of the user, user session or the program the user is running. As the user accesses the network from different computers, the user can be assigned the same virtual host name and in some cases the same virtual IP address. Furthermore, as the user accesses the network from multiple user sessions, the user can be assigned a virtual host name that uniquely identifies the user and the user session.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07756984",
	"publication_date": "2010-07-13",
	"application_number": "10711591",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": "systems-and-methods-for-virtual-host-name-roaming",
	"match_type": "description"
},
{
	"name": "Systems and methods of fine grained interception of network communications on a virtual private network",
	"summary": "",
	"abstract": "A method for intercepting communication of a client to a destination on a virtual private network includes an agent executing on the client that intercepts a network communication of the client. The agent provides a virtual private network connection from a first network to a second network. The decision to intercept is based on a network destination description or an identification of an application authorized to be accessed via the virtual private network. In one case, the agent determines that a destination specified by the intercepted communication corresponds to a network identifier and a port of a network destination description of an application on the second network authorized for access via the virtual private network. In response to this determination, the agent transmits the intercepted communication.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07843912",
	"publication_date": "2010-11-30",
	"application_number": "11462312",
	"application_date": "2006-08-03",
	"tags": null,
	"slug": "systems-and-methods-of-fine-grained-interception-of-network-communications-on-a-virtual-private-network",
	"match_type": "description"
},
{
	"name": "Systems and methods of freshening and prefreshening a DNS cache",
	"summary": "",
	"abstract": "The present solution provides a variety of techniques for accelerating and optimizing network traffic, such as HTTP based network traffic. The solution described herein provides techniques in the areas of proxy caching, protocol acceleration, domain name resolution acceleration as well as compression improvements. In some cases, the present solution provides various prefetching and/or prefreshening techniques to improve intermediary or proxy caching, such as HTTP proxy caching. In other cases, the present solution provides techniques for accelerating a protocol by improving the efficiency of obtaining and servicing data from an originating server to server to clients. In another cases, the present solution accelerates domain name resolution more quickly. As every HTTP access starts with a URL that includes a hostname that must be resolved via domain name resolution into an IP address, the present solution helps accelerate HTTP access. In some cases, the present solution improves compression techniques by prefetching non-cacheable and cacheable content to use for compressing network traffic, such as HTTP. The acceleration and optimization techniques described herein may be deployed on the client as a client agent or as part of a browser, as well as on any type and form of intermediary device, such as an appliance, proxying device or any type of interception caching and/or proxying device.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07720936",
	"publication_date": "2010-05-18",
	"application_number": "11685142",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-of-freshening-and-prefreshening-a-dns-cache",
	"match_type": "description"
},
{
	"name": "Systems and methods of providing proxy-based quality of service",
	"summary": "",
	"abstract": "Systems and methods for dynamically controlling bandwidth of connections are described. In some embodiments, a proxy for one or more connections may allocate, distribute, or generate indications of network congestion via one or more connections in order to induce the senders of the connections to reduce their rates of transmission. The proxy may allocate, distribute, or generate these indications in such a way as to provide quality of service to one or more connections, or to ensure that a number of connections transmit within an accepted bandwidth limit. In other embodiments, a sender of a transport layer connection may have a method for determining a response to congestion indications which accounts for a priority of the connection. In these embodiments, a sender may reduce or increase parameters related to transmission rate at different rates according to a priority of the connection.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07706266",
	"publication_date": "2010-04-27",
	"application_number": "11685168",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-of-providing-proxybased-quality-of-service",
	"match_type": "description"
},
{
	"name": "Systems and methods of providing server initiated connections on a virtual private network",
	"summary": "",
	"abstract": "The present invention is related to a method for establishing via an appliance a transport layer protocol connection initiated by a server on a first network to a client connected from a second network to the first network via a secure socket layer virtual private network (SSL VPN) connection. The method includes the step of receiving, by an appliance, a transport layer connection request from a server on a first network to connect to a client connected to the first network via a SSL VPN connection from a second network. The transport layer connection request identifies a client destination internet protocol address and a client destination port on the first network. The method includes establishing, by the appliance, a first transport layer connection to the server on the first network, determining, by the appliance, the client on the second network associated with the client destination internet protocol address on the first network, and transmitting, by the appliance, connection information identifying the client destination port to an agent on the client. The agent establishes a second transport layer connection to the client destination port using a local internet protocol address of the client on the second network and establishes a third transport layer connection to the appliance, which it associates with the second transport layer connection.",
	"url": null,
	"owner": "Citrix Systems, Inc.",
	"publication_number": "07769869",
	"publication_date": "2010-08-03",
	"application_number": "11465950",
	"application_date": "2006-08-21",
	"tags": null,
	"slug": "systems-and-methods-of-providing-server-initiated-connections-on-a-virtual-private-network",
	"match_type": "description"
},
{
	"name": "Data processing architectures",
	"summary": "",
	"abstract": "A data processing architecture comprising:nn",
	"url": null,
	"owner": "Clearspeed Technology Limited",
	"publication_number": "07818541",
	"publication_date": "2010-10-19",
	"application_number": "11752299",
	"application_date": "2007-05-23",
	"tags": null,
	"slug": "data-processing-architectures",
	"match_type": "description"
},
{
	"name": "Supply chain management",
	"summary": "",
	"abstract": "A system and a method for managing a supply chain are provided. A request for a transaction involving an enterprise and at least one partner in a supply chain is received from an end-user or the partner. Real-time data relevant to the transaction is accessed from an existing partner system. A context for the transaction is generated using the real-time data. The request is processed in the context for the transaction.",
	"url": null,
	"owner": "Click Acqusitions, Inc.",
	"publication_number": "07761319",
	"publication_date": "2010-07-20",
	"application_number": "10028542",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": "supply-chain-management",
	"match_type": "description"
},
{
	"name": "System and method of foiling buffer-overflow and alien-code attacks",
	"summary": "",
	"abstract": "The present invention relates generally to computer software, and more specifically, to a system and method of foiling buffer-overflow and alien-code attacks. The invention protects computers from such attacks by encoding data placed in storage, and varying the encodings used in different storage areas. When the data is needed by a software application, the data is simply decoded in a complementary manner. This prevents storage areas written according to one usage from being used effectively for some other purpose. The method of the invention can be done in a number of ways. For example, a u201cprotectoru201d engine can be placed between a software application and memory, or the function calls in the software application itself, could be amended to include encoding and decoding. Other embodiments and alternatives are also described.",
	"url": null,
	"owner": "Cloakware Corporation",
	"publication_number": "07730322",
	"publication_date": "2010-06-01",
	"application_number": "10367648",
	"application_date": "2003-02-14",
	"tags": null,
	"slug": "system-and-method-of-foiling-bufferoverflow-and-aliencode-attacks",
	"match_type": "description"
},
{
	"name": "System and method for dynamic compression of data",
	"summary": "",
	"abstract": "A method of transferring a compressed web page over a computer network without affecting the existing web server applications and processes. The compressor intercepts a request from a workstation for the web page. A second request is transmitted to the server from the compressor for the original, uncompressed web page. The web page is selectively compressed in the compressor. Then the compressed web page is transmitted to the workstation. Optionally, some of the files associated web page, such as image files, are also compressed and the references to the compressed associated files is changed to reflect any change in the name of the compressed associated files.",
	"url": null,
	"owner": "CloudShield Technologies, Inc.",
	"publication_number": "07844740",
	"publication_date": "2010-11-30",
	"application_number": "10642010",
	"application_date": "2003-08-15",
	"tags": null,
	"slug": "system-and-method-for-dynamic-compression-of-data",
	"match_type": "description"
},
{
	"name": "File translation methods, systems, and apparatuses for extended commerce",
	"summary": "",
	"abstract": "A first file is received in a first format. The first format is determined. A converter is selected based on the first format. Using the converter, the first file is translated to at least one second file. The second file has a second format.",
	"url": null,
	"owner": "Co-eXprise, Inc.",
	"publication_number": "07810025",
	"publication_date": "2010-10-05",
	"application_number": "11208693",
	"application_date": "2005-08-21",
	"tags": null,
	"slug": "file-translation-methods-systems-and-apparatuses-for-extended-commerce",
	"match_type": "description"
},
{
	"name": "System and method for detecting trading opportunities in financial markets",
	"summary": "",
	"abstract": "A system and method for facilitating trading in financial markets is presented. The system and method provides dealers, salespersons, and traders of securities the ability to anonymously share their own or their client's interest to trade securities, to identify and match potential trading opportunities between the parties, and to automatically notify dealers, salespersons and traders about such potential trading opportunities. The system and method detects a potential trade of a client or dealer, searches a plurality of other dealers and their clients for compatible second potential trades, identifies matching trades between the parties, alerts one or more of the dealers of the matching trades, and facilitates trades between the parties while maintaining their anonymity.",
	"url": null,
	"owner": "Codestreet, LLC",
	"publication_number": "07765152",
	"publication_date": "2010-07-27",
	"application_number": "11773296",
	"application_date": "2007-07-03",
	"tags": null,
	"slug": "system-and-method-for-detecting-trading-opportunities-in-financial-markets",
	"match_type": "description"
},
{
	"name": "Method for handover between heterogeneous communications networks",
	"summary": "",
	"abstract": "A method, computer program, and computer readable medium are disclosed for maintaining communication between first and second mobile units communicating via first and second communications networks, respectively. The first and second units include, respectively, first and second protocol stacks and first and second session layers, which interface between the first and second protocol stacks and first and second software components acting within the first and second units, respectively. The first unit includes first communications hardware with associated drive routines for different communications networks. When the first unit switches from a first to a third communications network, the first session layer maintains communication by selecting the first communications hardware and drive routine required for the third communications network. The identities of the first and second units are maintained by the first and second session layers and retained during the first unit's switching of communications networks.",
	"url": null,
	"owner": "Columbitech AB",
	"publication_number": "07797437",
	"publication_date": "2010-09-14",
	"application_number": "10432547",
	"application_date": "2001-11-26",
	"tags": null,
	"slug": "method-for-handover-between-heterogeneous-communications-networks",
	"match_type": "description"
},
{
	"name": "System and method for performing integrated storage operations",
	"summary": "",
	"abstract": "The present invention relates to a method for performing integrated storage operations on an information store. The present invention comprises identifying a plurality disparate types of storage operations stored in a policy option table. A first storage operation is performed according to a first set of storage criteria stored in the policy option table and a second operation, disparate from the first storage operation, is performed according to a second set of storage criteria stored in the policy option table.",
	"url": null,
	"owner": "Comm Vault Systems, Inc.",
	"publication_number": "07734578",
	"publication_date": "2010-06-08",
	"application_number": "10989893",
	"application_date": "2004-11-15",
	"tags": null,
	"slug": "system-and-method-for-performing-integrated-storage-operations",
	"match_type": "description"
},
{
	"name": "Rolling cache configuration for a data replication system",
	"summary": "",
	"abstract": "Performing data management operations on replicated data in a computer network. Log entries are generated for data management operations of an application executing on a source system. Consistency point entries are used to indicate a time of a known good, or recoverable, state of the application. A destination system is configured to process a copy of the log and consistency point entries to replicate data in a replication volume, the replicated data being a copy of the application data on the source system. When the replicated data represents a known good state of the application, as determined by the consistency point entries, the destination system(s) may perform a storage operation (e.g., snapshot, backup) to copy the replicated data and to logically associate the copied data with a time information (e.g., time stamp) indicative of the source system time when the application was in the known good state.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07661028",
	"publication_date": "2010-02-09",
	"application_number": "11640831",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": "rolling-cache-configuration-for-a-data-replication-system",
	"match_type": "description"
},
{
	"name": "System and method for performing an image level snapshot and for restoring partial volume data",
	"summary": "",
	"abstract": "The present invention relates to a method for performing an image level copy of an information store. The present invention comprises performing a snapshot of an information store that indexes the contents of the information store, retrieving data associated with the contents of the information store from a file allocation table, copying the contents of the information store to a storage device based on the snapshot, and associating the retrieved data with the copied contents to provide file system information for the copied contents.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07840533",
	"publication_date": "2010-11-23",
	"application_number": "12433238",
	"application_date": "2009-04-30",
	"tags": null,
	"slug": "system-and-method-for-performing-an-image-level-snapshot-and-for-restoring-partial-volume-data",
	"match_type": "description"
},
{
	"name": "Systems and methods for performing data replication",
	"summary": "",
	"abstract": "Performing data management operations on replicated data in a computer network. Log entries are generated for data management operations of an application executing on a source system. Consistency point entries are used to indicate a time of a known good, or recoverable, state of the application. A destination system is configured to process a copy of the log and consistency point entries to replicate data in a replication volume, the replicated data being a copy of the application data on the source system. When the replicated data represents a known good state of the application, as determined by the consistency point entries, the destination system(s) may perform a storage operation (e.g., snapshot, backup) to copy the replicated data and to logically associate the copied data with a time information (e.g., time stamp) indicative of the source system time when the application was in the known good state.",
	"url": null,
	"owner": "CommVault Systems, Inc.",
	"publication_number": "07651593",
	"publication_date": "2010-01-26",
	"application_number": "11640826",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": "systems-and-methods-for-performing-data-replication",
	"match_type": "description"
},
{
	"name": "Autonomic control of a distributed computing system in accordance with a hierarchical model",
	"summary": "",
	"abstract": "A distributed computing system conforms to a multi-level, hierarchical organizational model. One or more control nodes provide for the efficient and automated allocation and management of computing functions and resources within the distributed computing system in accordance with the organization model. The model includes four distinct levels: fabric, domains, tiers and nodes that provide for the logical abstraction and containment of the physical components as well as system and service application software of the enterprise. A user, such as a system administrator, interacts with the control nodes to logically define the hierarchical organization of distributed computing system. The control node includes an automation subsystem having one or more rule engines that provide autonomic control of the application nodes in accordance with a set of one or more rules.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07680799",
	"publication_date": "2010-03-16",
	"application_number": "11074291",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": "autonomic-control-of-a-distributed-computing-system-in-accordance-with-a-hierarchical-model",
	"match_type": "description"
},
{
	"name": "Autonomous system state tolerance adjustment for autonomous management systems",
	"summary": "",
	"abstract": "In general, the techniques of this invention are directed to determining whether a component failure in a distributed computing system is genuine. In particular, embodiments of this invention analyze monitoring data from other application nodes in a distributed computing system to determine whether the component failure is genuine. If the component failure is not genuine, the embodiments may adjust a fault tolerance parameter that caused the component failure to be perceived.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07788544",
	"publication_date": "2010-08-31",
	"application_number": "11799047",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": "autonomous-system-state-tolerance-adjustment-for-autonomous-management-systems",
	"match_type": "description"
},
{
	"name": "Method and apparatus for component to service mapping in service level management (SLM)",
	"summary": "",
	"abstract": "Method and apparatus for service level management, wherein business processes are composed of services. A state of the service is defined by one or more service parameters, and the service parameters depend upon performance of network components that support the service, e.g., component parameters. The state of the service may depend, for example, on a collection of service parameter values for availability, reliability, security, integrity and response time. A service level agreement is a contract between a supplier and a customer that identifies services supported by a network, service parameters for the services, and service levels (e.g., acceptable levels) for each service parameter.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07725570",
	"publication_date": "2010-05-25",
	"application_number": "09577231",
	"application_date": "2000-05-23",
	"tags": null,
	"slug": "method-and-apparatus-for-component-to-service-mapping-in-service-level-management-slm",
	"match_type": "description"
},
{
	"name": "Method and apparatus for maintaining data integrity across distributed computer systems",
	"summary": "",
	"abstract": "A method and apparatus are generally disclosed for maintaining data integrity across distributed computer systems. In one embodiment, the method of the invention includes the step of transmitting an object from a server application to a client application. The method also includes the step of transmitting an object state from the server application to the client application. The method further includes the steps of synchronizing the object and object state between the server application and the client application, and updating the object by invoking a server application method after the step of synchronizing. An apparatus and article of manufacture for carrying out the steps of the method are also disclosed.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07680879",
	"publication_date": "2010-03-16",
	"application_number": "11359970",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": "method-and-apparatus-for-maintaining-data-integrity-across-distributed-computer-systems",
	"match_type": "description"
},
{
	"name": "Method and apparatus for reactive and deliberative service level management (SLM)",
	"summary": "",
	"abstract": "Method and apparatus for service level management, wherein business processes are composed of services. A state of the service is defined by one or more service parameters, and the service parameters depend upon performance of network components that support the service, e.g., component parameters. The state of the service may depend, for example, on a collection of service parameter values for availability, reliability, security, integrity and response time. A service level agreement is a contract between a supplier and a customer that identifies services supported by a network, service parameters for the services, and service levels (e.g., acceptable levels) for each service parameter.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07730172",
	"publication_date": "2010-06-01",
	"application_number": "09577224",
	"application_date": "2000-05-23",
	"tags": null,
	"slug": "method-and-apparatus-for-reactive-and-deliberative-service-level-management-slm",
	"match_type": "description"
},
{
	"name": "Method and apparatus for service analysis in service level management (SLM)",
	"summary": "",
	"abstract": "Method and apparatus for service level management, wherein business processes are composed of services. A state of the service is defined by one or more service parameters, and the service parameters depend upon performance of network components that support the service, e.g., component parameters. The state of the service may depend, for example, on a collection of service parameter values for availability, reliability, security, integrity and response time. A service level agreement is a contract between a supplier and a customer that identifies services supported by a network, service parameters for the services, and service levels (e.g., acceptable levels) for each service parameter.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07725571",
	"publication_date": "2010-05-25",
	"application_number": "09577232",
	"application_date": "2000-05-23",
	"tags": null,
	"slug": "method-and-apparatus-for-service-analysis-in-service-level-management-slm",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing and display of voice data",
	"summary": "",
	"abstract": "Apparatus and methods for creating a composite data source having a common data representation from disparate sources of voice data. Data transmission links are established to heterogeneous messaging data sources, requests for voice data is sent using data access protocols, the voice data is received, and a set of voice data transformation rules are selectively applied to the voice data to transform the data into a common data representation. The common data representation can also be used as a source for reporting and graphical displays to monitor the operational aspects of the sources of voice data.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07693268",
	"publication_date": "2010-04-06",
	"application_number": "11097114",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": "methods-and-apparatus-for-processing-and-display-of-voice-data",
	"match_type": "description"
},
{
	"name": "System and method for automated construction, retrieval and display of multiple level visual indexes",
	"summary": "",
	"abstract": "A method for displaying a multiple level visual index representing data records, comprises storing a plurality of data records and receiving a request to access the stored data records. The method continues by using index parameters to generate a multiple level visual index for the stored data records to be accessed. The method concludes by transmitting a graphical representation of the generated multiple level visual index.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07747628",
	"publication_date": "2010-06-29",
	"application_number": "11399011",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": "system-and-method-for-automated-construction-retrieval-and-display-of-multiple-level-visual-indexes",
	"match_type": "description"
},
{
	"name": "System and method for common storage object model",
	"summary": "",
	"abstract": "A system and method for common storage object model is provided. In one aspect, one or more classes representing respective one or more storage devices are provided. One or more plugin modules are operable to discover and provision one or more storage devices connected to a storage network using the one or more classes. A wrapper module is operable to handle selecting and loading of the one or more plugin modules.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07801931",
	"publication_date": "2010-09-21",
	"application_number": "11093063",
	"application_date": "2005-03-28",
	"tags": null,
	"slug": "system-and-method-for-common-storage-object-model",
	"match_type": "description"
},
{
	"name": "System and method for identifying application resources",
	"summary": "",
	"abstract": "A system and method for simplifying resource management is provided. Resources are represented by resource objects in a resource object model. Each resource object represents a single resource and contains one or more resource attributes to describe the resource. At least one of the resource attributes for each resource object is a string identifier formed within the constraints of a query grammar. The string identifier is a text-based identifier that is based upon a unique property of the represented resource. A characteristic of the resources is selected as the basis for the relationship between resource objects in the resource object model. In one embodiment, an application identifies resources by generating a search query using the same query grammar used to create the string identifier. In another embodiment, a user manually enters the search query into a command line interpreter.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07725496",
	"publication_date": "2010-05-25",
	"application_number": "11454858",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": "system-and-method-for-identifying-application-resources",
	"match_type": "description"
},
{
	"name": "System and method for managing long names in an application programming interface",
	"summary": "",
	"abstract": "Software managing long names in an application programming interface receives a request to perform a requested operation on one or more fields, the application comprising a first operation operable to perform the requested operation on at least one field type. The software determines whether the field type of any of the fields is incompatible with the first operation. If the field types of the one or more fields are compatible with the first operation, then the software performs the requested operation on the one or more fields using the first operation. If the software determines that the field type of at least one of the fields is incompatible with the first operation, then it converts the request into a call for a second operation operable to perform the requested operation on the one or more fields and performs the requested operation using the second operation.",
	"url": null,
	"owner": "Computer Associates Think, Inc.",
	"publication_number": "07676797",
	"publication_date": "2010-03-09",
	"application_number": "11047101",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": "system-and-method-for-managing-long-names-in-an-application-programming-interface",
	"match_type": "name"
},
{
	"name": "Method of generating a graphical display of a business rule with a translation",
	"summary": "",
	"abstract": "Methods, systems and carrier media for viewing business rules are disclosed. Components of the business rules may be stored as entries in one or more database tables. A rule editor may access business rule components and assemble the components to form a graphical display of a business rule. The graphical display may allow the user to view, edit and/or create business rules. In some embodiments, one or more human language translations of one or more business rule components may be provided. A human language translation may be substituted for a business rule component in the graphical display.",
	"url": null,
	"owner": "Computer Science Corporation",
	"publication_number": "07689442",
	"publication_date": "2010-03-30",
	"application_number": "10285338",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": "method-of-generating-a-graphical-display-of-a-business-rule-with-a-translation",
	"match_type": "description"
},
{
	"name": "Graphical display of business rules",
	"summary": "",
	"abstract": "Methods, systems and carrier media for viewing business rules are disclosed. Components of the business rules may be stored as entries in one or more database tables. A rule editor may access business rule components and assemble the components to form a graphical display of a business rule. In various embodiments, the graphical display may allow the user to view, edit and/or create business rules.",
	"url": null,
	"owner": "Computer Sciences Corporation",
	"publication_number": "07676387",
	"publication_date": "2010-03-09",
	"application_number": "10285292",
	"application_date": "2002-10-31",
	"tags": null,
	"slug": "graphical-display-of-business-rules",
	"match_type": "description"
},
{
	"name": "In-flight transceiver and locator system",
	"summary": "",
	"abstract": "Military systems in particular face two specific problems: field casualties typically increase as unit visibility decreases and it is often difficult for ground stations and/or headquarters to maintain control and visibility of geographically dispersed assets. The system provides satellite communications such as two-way messaging, Voice over Packet, and global positioning information and reporting for fixed and rotary wing aircrafts where traditional methods of communications are not otherwise practical. The system provides communications between remote users and other remote users as well as between remote users and control stations. In some embodiments there is an in-flight transceiver system that includes an antenna, an aviation box, and a switch. The aviation box conforms to a one-half, u00bd short Air Transport Rack (ATR) form factor and includes a transceiver, an interface card, and a global positioning system (GPS) unit. The switch is located between the aviation box and the antenna for controlling a data signal between the antenna and the transceiver of the aviation box.",
	"url": null,
	"owner": "Comtech Mobile Datacom Corporation",
	"publication_number": "07822415",
	"publication_date": "2010-10-26",
	"application_number": "11592008",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "inflight-transceiver-and-locator-system",
	"match_type": "description"
},
{
	"name": "Miniaturized satellite transceiver",
	"summary": "",
	"abstract": "Described is a miniaturized satellite transceiver for communicating with a Global Positioning System (GPS) satellite and a communications satellite. The miniaturized satellite transceiver includes an integrated GPS receiver configured to receive communications from the GPS satellite, a satellite modem configured to transmit and receive communications from the communications satellite, and an operating system. The miniaturized satellite transceiver is installable in a hand-held device, a mobile satellite transceiver system, or an in-flight transceiver and locator system.",
	"url": null,
	"owner": "Comtech Mobile Datacom Corporation",
	"publication_number": "07667643",
	"publication_date": "2010-02-23",
	"application_number": "11685936",
	"application_date": "2007-03-14",
	"tags": null,
	"slug": "miniaturized-satellite-transceiver",
	"match_type": "description"
},
{
	"name": "Bulk communications process using multiple delivery media",
	"summary": "",
	"abstract": "A method (), a system and, a computer program product for bulk communication of information to recipients via multiple delivery media are disclosed. The media include facsimile, email, surface mail, SMS messaging, and archiving (and is adapted for new media types in the future). A single interface is used to receive information () for distribution including one or more template documents () and data () specific to each recipient. At least one document based on the received information () is transmitted using a specified delivery media () for each recipient based on the recipients' delivery preferences (). Escalating () transmission of the document may occur using a different delivery media for any recipients for whom transmission by the specified delivery media fails. The escalating step () may depend upon status information () from a carrier regarding delivery of the document to each recipient.",
	"url": null,
	"owner": "ConnXion Ventures Limited",
	"publication_number": "07715032",
	"publication_date": "2010-05-11",
	"application_number": "10523153",
	"application_date": "2003-07-29",
	"tags": null,
	"slug": "bulk-communications-process-using-multiple-delivery-media",
	"match_type": "description"
},
{
	"name": "Controlling client access to networked data based on content subject matter categorization",
	"summary": "",
	"abstract": "An access control technique to limit access to information content such as available on the Internet. The technique is implemented within a network device such as a proxy server, router, switch, firewall, bridge or other network gateway. The access control process analyzes data in each request from the clients and determines if the request should be forwarded for processing by a server to which it is destined. Access control may be determined by comparing client source information against a database of Uniform Resource Locators (URLs), IP addresses, or other resource identification data specifying the data requested by the client. The invention therefore provides access control not based only upon content, but rather, based primarily upon the identity of the computers or users making the requests. The technique further avoids the problems of the prior art which categories or filters the content of only web pages based solely upon objectionable words. This is because a category database is used by the network device to control access and is created via a process involving human editors who assist in the creation and maintenance of the category database.",
	"url": null,
	"owner": "Content Advisor, Inc.",
	"publication_number": "RE041168",
	"publication_date": "2010-03-23",
	"application_number": "10965710",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": "controlling-client-access-to-networked-data-based-on-content-subject-matter-categorization",
	"match_type": "description"
},
{
	"name": "Systems and methods for voice and data communications including a network drop and insert interface for an external data routing resource",
	"summary": "",
	"abstract": "Systems and methods by which voice/data communications may occur are disclosed. In particular, systems and methods are provided with a computing system having a multi-bus structure, including, for example, a TDM bus and a packet bus. An integrated communication system is coupled to a digital telecommunications link, the communication system providing voice and data communications to a plurality of users. At least a first packet bus is coupled to one or more packet-based devices and adapted for transferring packetized data to and from the system. One or more time division multiplex (TDM) buses are coupled to one or more telephony devices. Data routing resources are provided internal to the integrated system. A network interface module couples data to and from a data router external to the integrated system. The data router external to the integrated system is coupled to the first packet bus. Data is routed via the external data router through the network interface module and coupled to data channels of the digital telecommunications link, while voice data is selectively coupled to voice channels of the digital telecommunications link.",
	"url": null,
	"owner": "Converged Data Solutions, Inc.",
	"publication_number": "07706359",
	"publication_date": "2010-04-27",
	"application_number": "10187861",
	"application_date": "2002-07-01",
	"tags": null,
	"slug": "systems-and-methods-for-voice-and-data-communications-including-a-network-drop-and-insert-interface-for-an-external-data-routing-resource",
	"match_type": "description"
},
{
	"name": "Prepaid reservation-based rating system",
	"summary": "",
	"abstract": "A billing system comprising servers, routers, and processors programmed to provide reservation based prepaid billing is disclosed. The billing system is also programmed to concurrently process multiple billing events on a single, prepaid subscriber account.",
	"url": null,
	"owner": "Convergys CMG Utah",
	"publication_number": "07747241",
	"publication_date": "2010-06-29",
	"application_number": "12013816",
	"application_date": "2008-01-14",
	"tags": null,
	"slug": "prepaid-reservationbased-rating-system",
	"match_type": "description"
},
{
	"name": "Architecture for balancing workload",
	"summary": "",
	"abstract": "A framework to transition and re-partition information for event processing and downstream processing can be used in a real time system comprising components such as a consumer server, a file control database, an event manager, an event store, and a configurable output stream. The event manager may be a process which can be enhanced through the use of tags which are inserted to provide information for various downstream systems. The configurable output stream can be defined through an application programming interface which is configured to receive a filter to be applied to the output.",
	"url": null,
	"owner": "Convergys Information Management Group, Inc.",
	"publication_number": "07668093",
	"publication_date": "2010-02-23",
	"application_number": "11197597",
	"application_date": "2005-08-04",
	"tags": null,
	"slug": "architecture-for-balancing-workload",
	"match_type": "abstract"
},
{
	"name": "System and method for ensuring that a web browser displays the highest ranked image format possible for an image",
	"summary": "",
	"abstract": "A system and method for ensuring that a web browser displays the highest ranked image format possible for an image is provided. In response to a request from a web browser for a dynamic web page, computer-executable code is integrated with the dynamic web page. The computer-executable code is programmed to determine web browser configuration information and request an image according to a set of image formats which are ranked according to ranking criteria and the web browser configuration information. The modified dynamic web page is sent to the web browser. A request for an image is received from the web browser which executes the computer-executable code. The image request identifies the image format for the image selected. The requested image is generated according to the indicated image format and sent to the web browser for display.",
	"url": null,
	"owner": "Corda Technologies, Inc.",
	"publication_number": "07769895",
	"publication_date": "2010-08-03",
	"application_number": "10222154",
	"application_date": "2002-08-16",
	"tags": null,
	"slug": "system-and-method-for-ensuring-that-a-web-browser-displays-the-highest-ranked-image-format-possible-for-an-image",
	"match_type": "description"
},
{
	"name": "Initiating a wireless communication session from contact information on a computer",
	"summary": "",
	"abstract": "A communication session between a wireless communication device and one or more recipient communication devices is initiated in response to user input received at a separate computing device. The intended parties of the call are identified at the computing device in response to the user input. Once the intended parties have been identified, the calling instructions are generated and transmitted to the wireless communication device or a server, which cause a call to be initiated between a wireless communication device and one or more recipient communication devices. This allows a caller to utilize the functionality and resources available on a computer to initiate a call, while enabling the caller to utilize the functionality and resources available on the caller's wireless communication device to engage in and complete the call, without requiring the caller to communicate through the telephony applications of a computer.",
	"url": null,
	"owner": "Core Mobility, Inc.",
	"publication_number": "07747265",
	"publication_date": "2010-06-29",
	"application_number": "11970467",
	"application_date": "2008-01-07",
	"tags": null,
	"slug": "initiating-a-wireless-communication-session-from-contact-information-on-a-computer",
	"match_type": "description"
},
{
	"name": "System and method for manipulating a document object model",
	"summary": "",
	"abstract": "A system for manipulating a document object model is provided. The system comprises a collection of document object model behavior elements, and a collection of scripts for performing actions associated with the set of behavior elements. Each behavior element comprises a name following a predetermined naming convention, an event attribute for associating the behavior element to an event, and other attributes for describing features of the behavior element. Each script is associated with a behavior element.",
	"url": null,
	"owner": "Corel Corporation",
	"publication_number": "07669183",
	"publication_date": "2010-02-23",
	"application_number": "10678846",
	"application_date": "2003-10-03",
	"tags": null,
	"slug": "system-and-method-for-manipulating-a-document-object-model",
	"match_type": "description"
},
{
	"name": "Device interoperability format rule set and method for assembling interoperability application package",
	"summary": "",
	"abstract": "Device interoperability format and method for assembling self-contained executable device interoperability software application package conforming to an interoperability format that is completely self-contained and sufficient to carry out an intended purpose of the application on a plurality of connected or intermittently connected devices, the executable device interoperability software application package when executed allowing the plurality of devices to interoperate with each other. Method of forming a linearly contiguous binary encoded part images, and packaging the formed part images together into an executable device interoperability software application package. Computer program product for execution on a computer, information appliance, or other device. Data structure for self-contained executable device interoperability software application package.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07703073",
	"publication_date": "2010-04-20",
	"application_number": "11148981",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "device-interoperability-format-rule-set-and-method-for-assembling-interoperability-application-package",
	"match_type": "description"
},
{
	"name": "Method and device for interoperability in heterogeneous device environment",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Interoperability device, such as a DartDevice, provides a highly interoperable device by virtue of its running a compliant player such as a DartPlayer containing an engine such as a DartEngine and at least one communications protocol for connecting to other devices.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07831752",
	"publication_date": "2010-11-09",
	"application_number": "12255552",
	"application_date": "2008-10-21",
	"tags": null,
	"slug": "method-and-device-for-interoperability-in-heterogeneous-device-environment",
	"match_type": "description"
},
{
	"name": "Method and system for customized programmatic dynamic creation of interoperability content",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. Creationism provides a method used by applications or Darts to dynamically generate applications or Darts highly customized for a particular target device and/or communications session and/or purpose. Instructions in the instruction set exist for programmatic generation of Darts from parts of the running Dart itself and any information that can be collected or computed by the running Dart.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07730482",
	"publication_date": "2010-06-01",
	"application_number": "11149457",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-and-system-for-customized-programmatic-dynamic-creation-of-interoperability-content",
	"match_type": "description"
},
{
	"name": "Method and system for device recruitment interoperability and assembling unified interoperating device constellation",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. A recruitment interoperability method and model provide an alternative to the conventional client-server and peer-to-peer device interoperability models. Recruitment is used by a software application package to forms teams of devices based on their capabilities and content and then intelligently spread portions of itself to the teams of devices which then work together to carry out the intended purpose of the application package.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07788663",
	"publication_date": "2010-08-31",
	"application_number": "11176647",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-and-system-for-device-recruitment-interoperability-and-assembling-unified-interoperating-device-constellation",
	"match_type": "description"
},
{
	"name": "Method and system for linear tasking among a plurality of processing units",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected electronic devices. Devices, systems, appliances, and the like communicating and/or interoperating within the framework provided. A linear tasking method, model, and system provides alternative to conventional pre-emptive and cooperative threading models used on devices so that multiple operations can be specified and run as if their actions were being executed simultaneously. LinearTasking ensures simple, reliable, flexible and extensibe way for processing units to coordinate their activities in very deterministic and easily tested manner.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07712111",
	"publication_date": "2010-05-04",
	"application_number": "11149086",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-and-system-for-linear-tasking-among-a-plurality-of-processing-units",
	"match_type": "description"
},
{
	"name": "Method and system for specifying device interoperability source specifying renditions data and code for interoperable device team",
	"summary": "",
	"abstract": "System, device, method, and computer program and computer program products for providing communicating between devices having similar or dissimilar characteristics and facilitating seamless interoperability between them. Computer program software and methods of and systems and devices for sharing of content, applications, resources and control across similar and dissimilar permanently or intermittently connected devices. An interoperability source or DartSource method is provided for specifying program renditions and code content and data needed for packaged interoperability application. The interoperability source extends languages constructs commonly used to specify single executable program targeted to specific device, into language and format which can also specify procedures necessary for intelligent recruitment of teams of devices and alternative renditions of the program and/or content to be used on different device platforms so that there is suitable rendition to send to run on each recruited device to carry out that device's portion of the application.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07747980",
	"publication_date": "2010-06-29",
	"application_number": "11149074",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-and-system-for-specifying-device-interoperability-source-specifying-renditions-data-and-code-for-interoperable-device-team",
	"match_type": "description"
},
{
	"name": "Method system and data structure for content renditioning adaptation and interoperability segmentation model",
	"summary": "",
	"abstract": "A method, computer program product, and system for segmenting a software application program into a set of separately executable images. The method including segmenting program binary images of the application program into sub-execution units to be distributed to run in each device of a team as part of a single event-driven runtime process with a single main program linear contiguous code address space and a single main program linear contiguous data address space. The program sub-execution units containing executable code, and data; and each sub-execution unit containing one linear contiguous address space subset segment of the main program code, and one linear contiguous address space subset segment of the main program data; and running a unification engine on each said device of said team of devices to synchronize and serialize events as needed across the formed team of devices that drive said single event-driven runtime process.",
	"url": null,
	"owner": "Covia Labs, Inc.",
	"publication_number": "07761863",
	"publication_date": "2010-07-20",
	"application_number": "11149076",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "method-system-and-data-structure-for-content-renditioning-adaptation-and-interoperability-segmentation-model",
	"match_type": "description"
},
{
	"name": "Interface converter for unified view of multiple computer system simulations",
	"summary": "",
	"abstract": "Providing a unified view of multiple computer system simulations. A simulation process has a simulation thread that executes a plurality of computer system simulations. The simulation process also has a debug support thread that provides a unified view of the simulations. To provide the unified view, the debug support thread has an external interface, an internal interface to each of the simulations, and an interface converter that converts between the external interface and the internal interfaces. Thus, the external interface provides a unified view of the simulations. The external interface allows a single debugging platform to control and observe the simulations.",
	"url": null,
	"owner": "Coware, Inc.",
	"publication_number": "07716031",
	"publication_date": "2010-05-11",
	"application_number": "11066841",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "interface-converter-for-unified-view-of-multiple-computer-system-simulations",
	"match_type": "description"
},
{
	"name": "Customer support services via a cable services network",
	"summary": "",
	"abstract": "Methods and systems provide customer support services through interactive television sessions via a cable services network. Cable services customers may pay bills or enroll in automatic bill payment via interactive television sessions. Information on pending work orders, answers to frequently asked questions and helpful service provider contact information may be obtained from a data services system through an interactive television session via a cable services network.",
	"url": null,
	"owner": "Cox Communications, Inc.",
	"publication_number": "07707599",
	"publication_date": "2010-04-27",
	"application_number": "11002912",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": "customer-support-services-via-a-cable-services-network",
	"match_type": "description"
},
{
	"name": "Messaging protocol for interactive delivery system",
	"summary": "",
	"abstract": "Efficient messaging techniques that facilitate interactive program guide (IPG) delivery and allow a terminal to specifically designate requested items of information from a server. The IPG can be provided via a number of IPG pages, with each page including a number of defined regions. In one method, selection for a particular region of a particular page is received at a terminal and a determination is made whether the selected region is currently received. If the answer is no, a request for the selected region is generated and sent to a server. The request can conform to a particular message format that includes a number of fields, e.g., a region ID field that identifies the selected region, a subtype field that identifies a particular type, a time slot field that identifies a specific time slot, and a page offset field that identifies a specific page from among many.",
	"url": null,
	"owner": "Cox Communications, Inc.",
	"publication_number": "07707608",
	"publication_date": "2010-04-27",
	"application_number": "11564881",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "messaging-protocol-for-interactive-delivery-system",
	"match_type": "description"
},
{
	"name": "Provision of electronic mail services via a cable services network",
	"summary": "",
	"abstract": "Methods and systems are provided for accessing electronic mail services via a cable services network. A cable television services customer/user may access electronic mail services through a cable television services provider by providing access credentials via an interactive television session through a cable television set-top box. To authenticate a customer/user's access to electronic mail services, a username and a personal identification number (PIN) are submitted by the customer/user to a backend database. A password for the customer/user is located in the backend database and is utilized for accessing the electronic mail services by the customer/user. If the customer/user has never established a personal identification number, the customer/user may submit a new PIN to the backend database. Authorization to enter the new PIN into the backend database is based on submission of a valid username and password by the customer/user.",
	"url": null,
	"owner": "Cox Communications, Inc.",
	"publication_number": "07669218",
	"publication_date": "2010-02-23",
	"application_number": "10885295",
	"application_date": "2004-07-02",
	"tags": null,
	"slug": "provision-of-electronic-mail-services-via-a-cable-services-network",
	"match_type": "description"
},
{
	"name": "System and method for tracking an object in a video and linking information thereto",
	"summary": "",
	"abstract": "An image processing system for use in development and playback of interactive video. In a development mode of operation, pixel or video objects are selected in a frame by way of a development graphical user interface. The system automatically tracks the selected pixel objects in the preceding and succeeding video frames by determining range limits for various color variables of the selected pixel object to compensate for the effects in lighting changes and decompression effects. The system automatically locates pixel objects within the calculated range limits in the preceding and succeeding video frames and generates a pixel object file which identifies the coordinates of the selected pixel object in each frame. The pixel object file is linked to a data object file which links the selected pixel objects to data objects. The pixel object file and data object file, collectively u201clinked video files,u201d are created during a development mode of operation. During a playback mode of operation, the linked video files are imported to a video hosting platform which includes a video playback application and a common media player application programming interface (API) for playback of the video content. The video playback application supports processing of the linked video files to enable pixel objects to be selected by a pointing device and linked to data objects by way of a client side graphical user interface.",
	"url": null,
	"owner": "Creatier Interactive, LLC",
	"publication_number": "07804506",
	"publication_date": "2010-09-28",
	"application_number": "10786777",
	"application_date": "2004-02-25",
	"tags": null,
	"slug": "system-and-method-for-tracking-an-object-in-a-video-and-linking-information-thereto",
	"match_type": "abstract"
},
{
	"name": "Radar image display",
	"summary": "",
	"abstract": "A method is provided that facilitates generating a radar image to be displayed by a radar system. The method includes receiving range data and azimuth data carried by a radar signal transmitted from a radar antenna in communication with the radar system, wherein the range data and the azimuth data represent the radar image as a plurality of azimuth segments that collectively form the radar image in a polar coordinate system. The range data and the azimuth data are translated into abscissa data and ordinate data that represent the radar image in a Cartesian coordinate system, and noise is filtered from the radar image, followed by generation of the radar image including the target to be displayed by a display screen to an operator.",
	"url": null,
	"owner": "Curtiss-Wright Controls, Inc.",
	"publication_number": "07692576",
	"publication_date": "2010-04-06",
	"application_number": "12251211",
	"application_date": "2008-10-14",
	"tags": null,
	"slug": "radar-image-display",
	"match_type": "description"
},
{
	"name": "Session file modification with annotation using speech recognition or text to speech",
	"summary": "",
	"abstract": "An apparatus comprising a session file, session file editor, annotation window, concatenation software and training software. The session file includes one or more audio files and text associated with each audio file segment. The session file editor displays text and provides text selection capability and plays back audio. The annotation window operably associated with the session file editor supports user modification of the selected text, the annotation window saves modified text corresponding to the selected text from the session file editor and audio associated with the modified text. The concatenation software concatenates modified text and audio associated therewith for two or more instances of the selected text. The training software trains a speech user profile using a concatenated file formed by the concatenating software. The session file may have original audio associated with the selected text, wherein the apparatus further comprises software for substituting the modified text for the selected text. In some embodiments, the concatenation software concatenates modified text and audio associated therewith for two or more instances of the selected text. In some embodiments, the training software trains a speech user profile using a concatenated file formed by the concatenating software.",
	"url": null,
	"owner": "Custom Speech USA, Inc.",
	"publication_number": "07693717",
	"publication_date": "2010-04-06",
	"application_number": "11279551",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": "session-file-modification-with-annotation-using-speech-recognition-or-text-to-speech",
	"match_type": "description"
},
{
	"name": "Synchronized pattern recognition source data processed by manual or automatic means for creation of shared speaker-dependent speech user profile",
	"summary": "",
	"abstract": "An apparatus for transforming data input by dividing the data input into a uniform dataset with one or more data divisions, processing the uniform dataset to produce a first processed dataset with one or more data divisions, processing the uniform dataset to produce a second processed dataset with one or more data divisions, wherein the first and second processed datasets have the same number of data divisions, and editing data selectively within each one of the one or more divisions of the first and second processed dataset. This apparatus has particular utility in error-spotting in processed datasets, and toward training a pattern recognition application, such as speech recognition, to produce more accurate processed datasets.",
	"url": null,
	"owner": "Custom Speech USA, Inc.",
	"publication_number": "07668718",
	"publication_date": "2010-02-23",
	"application_number": "11203671",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": "synchronized-pattern-recognition-source-data-processed-by-manual-or-automatic-means-for-creation-of-shared-speakerdependent-speech-user-profile",
	"match_type": "description"
},
{
	"name": "Method of dynamically updating media play effects utilized on a digital photo slide show",
	"summary": "",
	"abstract": "Before playing a digital photo slide show, both required digital photos and a guiding program are burnt on an optical disc in advance. While the disc is loaded into an optical disc play device, the guiding program triggers the optical disc play device to connect with an external network for updating media play effect packages, which are related to the digital photos, and for storing the updated media play effect packages in a preserved database of said optical disc play device. Then a corresponding digital photo slide show is dynamically generated and played according to both the updated media play effect packages, which are stored in the preserved database, and the digital photos burnt on the optical disc.",
	"url": null,
	"owner": "CyberLink Corp.",
	"publication_number": "07701824",
	"publication_date": "2010-04-20",
	"application_number": "11747221",
	"application_date": "2007-05-10",
	"tags": null,
	"slug": "method-of-dynamically-updating-media-play-effects-utilized-on-a-digital-photo-slide-show",
	"match_type": "description"
},
{
	"name": "Method of generating a digital photo slide show from an optical disc",
	"summary": "",
	"abstract": "Before generating a digital photo slide show, both original digital photos and related media playing packages are burnt into a same optical disc. While the optical disc is loaded by a disc playing device, a media playing module installed on the optical disc playing device loads both the original digital photos and the related media packages on the optical disc, and generates a required digital photo slide show according to digital photos and media playing packages, both of which are chosen by a user, for preventing the problem of causing damage of resolution of the digital photos by repeatedly encoding said digital photos, and for management and reuse of said digital photos on the optical disc hereafter.",
	"url": null,
	"owner": "Cyberlink Corp.",
	"publication_number": "07792000",
	"publication_date": "2010-09-07",
	"application_number": "11747211",
	"application_date": "2007-05-10",
	"tags": null,
	"slug": "method-of-generating-a-digital-photo-slide-show-from-an-optical-disc",
	"match_type": "description"
},
{
	"name": "Requirement driven interoperability/compliance testing systems and methods",
	"summary": "",
	"abstract": "A system and method for requirement driven interoperability/compliance testing of Hardware and Software in a distributed environment. Three modules are configured as a default system: a test definition, a SUT definition and a test result. A series of tree elements are coupled to represent requirements to test case mapping. Test cases are executed and components in the system are assigned with test results while requirements coverage is computed. Auto-detection of additional parts and test cases enables validity checking of the requirement to test case tree and reports are generated.",
	"url": null,
	"owner": "Cydone Solutions Inc.",
	"publication_number": "07757121",
	"publication_date": "2010-07-13",
	"application_number": "11738812",
	"application_date": "2007-04-23",
	"tags": null,
	"slug": "requirement-driven-interoperabilitycompliance-testing-systems-and-methods",
	"match_type": "description"
},
{
	"name": "High power laser flat panel workpiece treatment system controller",
	"summary": "",
	"abstract": "A pulsed DUV workpiece treatment apparatus and method for delivering light to irradiate the workpiece, for crystallization of a material on the workpiece, carried on a work stage, which may comprise a pulsed laser DUV light source and an optical train producing a very narrow width very elongated beam of light pulses with a set of parameters required to be maintained within a respective selected narrow range of values on a pulse to pulse basis is disclosed, which may comprise: a laser controller; a work stage controller; a system controller receiving process recipe control demands from a customer recipe control command generator and providing control signals to the laser controller and the workstage controller, which may comprise: a database driven process controller which may comprise: a database containing generic process command steps selectable by a user through an external process user interface.",
	"url": null,
	"owner": "Cymer, Inc.",
	"publication_number": "07848835",
	"publication_date": "2010-12-07",
	"application_number": "11805199",
	"application_date": "2007-05-21",
	"tags": null,
	"slug": "high-power-laser-flat-panel-workpiece-treatment-system-controller",
	"match_type": "description"
},
{
	"name": "Method and apparatus for automated pre-treatment and processing of biological samples",
	"summary": "",
	"abstract": "A method and apparatus for continuous workflow processing of biological samples. In one embodiment, the apparatus includes a probe for dispensing one or more reagents from one or more reagent containers onto one or more biological sample carriers. The method and apparatus includes processing each biological sample according to a respective sequence of protocol steps which may be ordered by a scheduler protocol. The method and apparatus also includes network capability for connectivity with additional equipment for receiving or transmitting pertinent data via the network.",
	"url": null,
	"owner": "DAKO Denmark A/S",
	"publication_number": "07850912",
	"publication_date": "2010-12-14",
	"application_number": "11227270",
	"application_date": "2005-09-16",
	"tags": null,
	"slug": "method-and-apparatus-for-automated-pretreatment-and-processing-of-biological-samples",
	"match_type": "description"
},
{
	"name": "Citation processing system with multiple rule set engine",
	"summary": "",
	"abstract": "A citation system parses, error checks, corrects, and transforms citations between citation systems. The system may determine the available citation systems, such as The Bluebook, The Chicago Manual of Style, or other citation systems available for selection. The system also determines a selected citation system from among the multiple citation systems. For example, the system may determine that a writer has selected The Bluebook citation system from among those available to the system. The system also determines an applicable rule set for the selected citation system, and applies to rule set to an input citation to obtain an output citation component.",
	"url": null,
	"owner": "Dakota Legal Software, Inc.",
	"publication_number": "07844899",
	"publication_date": "2010-11-30",
	"application_number": "11657281",
	"application_date": "2007-01-24",
	"tags": null,
	"slug": "citation-processing-system-with-multiple-rule-set-engine",
	"match_type": "description"
},
{
	"name": "Electronic data vault providing biometrically protected electronic signatures",
	"summary": "",
	"abstract": "An eVault system securely stores personal data and documents for citizens and allows controlled access by citizens and optionally by service providers. The eVault may be adapted to allow processes involving the documents to be carried out in a secure and paperless fashion. Documents are certified, and biometric matching is used for security. On effecting a match with a biometric identifier presented by a user, the user is allowed access to his personal eVault and to access a personal cryptographic key stored therein. One or more of these personal keys may be securely applied within the eVault to generate an electronic signature, amongst other functions.",
	"url": null,
	"owner": "Daon Holdings Limited",
	"publication_number": "07676439",
	"publication_date": "2010-03-09",
	"application_number": "10481171",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": "electronic-data-vault-providing-biometrically-protected-electronic-signatures",
	"match_type": "description"
},
{
	"name": "System and method for conducting online visual identification of a person",
	"summary": "",
	"abstract": "The present invention provides a method and system for preventing unsolicited bulk email (UBE). Spammers sending UBE typically capitalize on the weakness of SMTP. The present invention affixes a subscriber key value to the local part of an email address. The email and associated key value are sent to a server where the subscriber key value, and subscriber and recipient email addresses are associated and stored into a database. Once stored, the email is sent to the ultimate recipient. A recipient is in possession of a subscriber key value can use this key value to sign an email they intend to send to the original subscriber/sender. Recipient will then send this signed email to a server where the association between the subscriber and the subscriber key value is verified. Once verified the email is sent to the subscriber. In some embodiments, the verification process is not controlled by a server.",
	"url": null,
	"owner": "Data Laboratory, L.L.C.",
	"publication_number": "07774719",
	"publication_date": "2010-08-10",
	"application_number": "11668464",
	"application_date": "2007-01-29",
	"tags": null,
	"slug": "system-and-method-for-conducting-online-visual-identification-of-a-person",
	"match_type": "description"
},
{
	"name": "System and method for verifying the identity of a sender of electronic mail and preventing unsolicited bulk email",
	"summary": "",
	"abstract": "The present invention provides a method and system for preventing unsolicited bulk email (UBE). Spammers sending UBE typically capitalize on the weakness of SMTP. The present invention affixes a subscriber key value to the local part of an email address. The email and associated key value are sent to a server where the subscriber key value, and subscriber and recipient email addresses are associated and stored into a database. Once stored, the email is sent to the ultimate recipient. A recipient is in possession of a subscriber key value can use this key value to sign an email they intend to send to the original subscriber/sender. Recipient will then send this signed email to a server where the association between the subscriber and the subscriber key value is verified. Once verified the email is sent to the subscriber. In some embodiments, the verification process is not controlled by a server.",
	"url": null,
	"owner": "Data Laboratory, L.L.C.",
	"publication_number": "07660861",
	"publication_date": "2010-02-09",
	"application_number": "11425701",
	"application_date": "2006-06-21",
	"tags": null,
	"slug": "system-and-method-for-verifying-the-identity-of-a-sender-of-electronic-mail-and-preventing-unsolicited-bulk-email",
	"match_type": "description"
},
{
	"name": "Application performance acceleration",
	"summary": "",
	"abstract": "Responding to IO requests made by an application to an operating system within a computing device implements IO performance acceleration that interfaces with the logical and physical disk management components of the operating system and within that pathway provides a system memory based disk block cache. The logical disk management component of the operating system identifies logical disk addresses for IO requests sent from the application to the operating system. These addresses are translated to physical disk addresses that correspond to disk blocks available on a physical storage resource. The disk block cache stores cached disk blocks that correspond to the disk blocks available on the physical storage resource, such that IO requests may be fulfilled from the disk block cache. Provision of the disk block cache between the logical and physical disk management components accommodates tailoring of efficiency to any applications making IO requests, and flexible interaction with various different physical disks.",
	"url": null,
	"owner": "DataCore Software Corporation",
	"publication_number": "07752386",
	"publication_date": "2010-07-06",
	"application_number": "11319734",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "application-performance-acceleration",
	"match_type": "description"
},
{
	"name": "Techniques for providing a surrogate heuristic identification interface",
	"summary": "",
	"abstract": "Surrogate heuristic identification is described, including a memory configured to store audio data associated with audio content, and a processor configured to select a portion of audio content, and the portion is standardized, to identify a characteristic associated with the portion, to use the characteristic to generate a data representation, the data representation being used to provide heuristic data associated with the audio content, and to process the heuristic data to generate a fingerprint associated with the audio content, and the fingerprint is configured to compare to one or more stored fingerprints to detect substantially similar audio content.",
	"url": null,
	"owner": "DataScout, Inc.",
	"publication_number": "07774385",
	"publication_date": "2010-08-10",
	"application_number": "11824924",
	"application_date": "2007-07-02",
	"tags": null,
	"slug": "techniques-for-providing-a-surrogate-heuristic-identification-interface",
	"match_type": "description"
},
{
	"name": "Real-time database performance and availability monitoring method and system",
	"summary": "",
	"abstract": "Database performance and availability monitoring of changes impacting database performance, availability and continuity to the underlying business may be performed. A method for doing so may include analytical and visual real-time analysis engines to identify and provide alert notifications on changes in database performance statistics (such as CPU consumption, physical I/O, etc.) related to a sample period of time on a single database or across multiple databases. Result data may be displayed through a series of charts and/or summary tables that may indicate whether correlations exist between unexpected database performance and relative changes in database performance statistical parameters.",
	"url": null,
	"owner": "DBA InfoPower Inc.",
	"publication_number": "07756840",
	"publication_date": "2010-07-13",
	"application_number": "11265244",
	"application_date": "2005-11-03",
	"tags": null,
	"slug": "realtime-database-performance-and-availability-monitoring-method-and-system",
	"match_type": "description"
},
{
	"name": "Methods of expanding commercial opportunities for internet websites through coordinated offsite marketing",
	"summary": "",
	"abstract": "An e-commerce outsourcing system and method provides hosts with transparent, context-sensitive e-commerce supported pages. A plurality of visually perceptible elements associated with and identifying a source of a host's web page are stored in the form of data in a computer database for future use. The host includes one or more links within a page on the host website that correlate with a selected commerce object, which may be contextually related to material in the page. The commerce object can be a buying opportunity for a product of a third-party merchant, a product category containing a plurality of products of third-party merchants, or a dynamic selection indicator of a merchant's product. A plurality of hosts may choose to link to the same commerce object. Upon activation of the link displayed by a particular host website, a visitor computer is served with a page displaying the visually perceptible elements associated with that specific host's website and information associated with the commerce object correlated to the link. Where the commerce object is a dynamic selection indicator, the content is selected at the time of activation based upon an analysis of the page containing the activated link.",
	"url": null,
	"owner": "DDR Holdings, LLC",
	"publication_number": "07818399",
	"publication_date": "2010-10-19",
	"application_number": "11343464",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": "methods-of-expanding-commercial-opportunities-for-internet-websites-through-coordinated-offsite-marketing",
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a web site with dynamic content data from an external source integrated therein",
	"summary": "",
	"abstract": "A technique for generating a web site in accordance with received data entry by: determining at least one characteristic of at least one web site dimension of the web site based on the data entry; generating a multi-dimensional description of the web site based on the determined characteristics; retrieving web site data according to the generated multi-dimensional description of the web site; and generating the web site based upon the generated multi-dimensional description of the web site and the retrieved web site data. The web site data includes dynamic content data from an external data source, and the data entry may include a designation of such an external data source.",
	"url": null,
	"owner": "Decentrix, Inc.",
	"publication_number": "07668913",
	"publication_date": "2010-02-23",
	"application_number": "09651796",
	"application_date": "2000-08-30",
	"tags": null,
	"slug": "method-and-apparatus-for-generating-a-web-site-with-dynamic-content-data-from-an-external-source-integrated-therein",
	"match_type": "description"
},
{
	"name": "Lighting control framework",
	"summary": "",
	"abstract": "A lighting control framework is provided. The lighting control framework receives an implicit request from an application. The implicit request is converted into a converted explicit request which is processed to utilize a light of a lighting device.",
	"url": null,
	"owner": "Dell Products L.P.",
	"publication_number": "07772987",
	"publication_date": "2010-08-10",
	"application_number": "11936895",
	"application_date": "2007-11-08",
	"tags": null,
	"slug": "lighting-control-framework",
	"match_type": "description"
},
{
	"name": "Methods and media for a protocol abstraction layer for information handling systems",
	"summary": "",
	"abstract": "A method for communicating with remote devices wherein the method includes sending a request through an application programming interface (API), formatting the request and routing the request to a first connection associated with a first protocol. The method further includes mapping the request into a first command, wherein the first command conforms to the first protocol and sending the first command to a remote device.",
	"url": null,
	"owner": "Dell Products, L.P.",
	"publication_number": "07805533",
	"publication_date": "2010-09-28",
	"application_number": "12128594",
	"application_date": "2008-05-28",
	"tags": null,
	"slug": "methods-and-media-for-a-protocol-abstraction-layer-for-information-handling-systems",
	"match_type": "abstract"
},
{
	"name": "Methods and systems to connect network printers",
	"summary": "",
	"abstract": "Methods and systems of automatically configuring network printer connections are disclosed. A network printer with a network location is coupled to a network, which also includes one or more target computers. A driver is associated with the network printer, and is located in a provided by a share-providing computer on the network. Through the network, the target computer receives configuration signals that identify the share and the network location of the network printer. The target computer sends through the network a command that results in the share sending driver-identification signals that identify a driver. A network printer connection is then established at the target computer where the connection's printer is the network printer at the location identified by the configuration signals and the connection's driver is the driver identified by the driver-identification signals.",
	"url": null,
	"owner": "Desktop Standard Corporation",
	"publication_number": "07804609",
	"publication_date": "2010-09-28",
	"application_number": "10983463",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "methods-and-systems-to-connect-network-printers",
	"match_type": "description"
},
{
	"name": "Terminal device and method for using different services offered via a telecommunications network",
	"summary": "",
	"abstract": "A terminal device for using different services offered via a telecommunications network includes at lest one receiving device for image and sound information, at least one transmitting device for data which is used to select the received image and sound information, an input unit, a decoder for the image and sound information, and outputs for audio and video signals. A server for such terminal devices includes devices for connection to a telecommunications network, devices for carrying out authorization checks using the respective data received from a terminal device, and devices for receiving and processing service requests of the terminal devices. The services used may include television programs, such as pay TV and interactive television, and Internet applications.",
	"url": null,
	"owner": "Deutsche Telekom AG",
	"publication_number": "07793327",
	"publication_date": "2010-09-07",
	"application_number": "10172147",
	"application_date": "2002-06-14",
	"tags": null,
	"slug": "terminal-device-and-method-for-using-different-services-offered-via-a-telecommunications-network",
	"match_type": "description"
},
{
	"name": "Method and apparatus for handling an incoming call to avoid a conflict with an earlier call",
	"summary": "",
	"abstract": "A method for handling an incoming call received at an inbound terminal via an analog line is described. The method comprises receiving the incoming call at the inbound terminal; storing caller ID data enabling identification of incoming call; comparing a stored existing caller ID with the stored current caller ID to determine if an earlier incoming call is being signaled to an application; if the earlier incoming call is being signaled, disconnecting the earlier incoming call; and presenting the incoming call to the application thereby reducing the risk of conflict between incoming calls.",
	"url": null,
	"owner": "Dialogic Corporation",
	"publication_number": "07693271",
	"publication_date": "2010-04-06",
	"application_number": "10998169",
	"application_date": "2004-11-29",
	"tags": null,
	"slug": "method-and-apparatus-for-handling-an-incoming-call-to-avoid-a-conflict-with-an-earlier-call",
	"match_type": "description"
},
{
	"name": "Card activated cash dispensing automated banking machine component authentication system and method",
	"summary": "",
	"abstract": "A card activated cash dispensing automated banking machine is provided which includes a safe and at least a portion of a cash dispenser positioned within the safe. The cash dispenser includes an input device which when manually operated from within the safe causes the cash dispenser to accept data usable to authenticate communicates received from a computer located outside the safe in the automated banking machine. The cash dispenser is operative responsive to authenticated communication to dispense cash.",
	"url": null,
	"owner": "Diebold Self-Service Systems division of Diebold, Incorporated",
	"publication_number": "07721951",
	"publication_date": "2010-05-25",
	"application_number": "11811864",
	"application_date": "2007-06-11",
	"tags": null,
	"slug": "card-activated-cash-dispensing-automated-banking-machine-component-authentication-system-and-method",
	"match_type": "description"
},
{
	"name": "Financial transaction processing system and method",
	"summary": "",
	"abstract": "A financial transaction processing system () enables processing transactions from various types of card activated terminal devices () which communicate using a variety of electronic message formats. The transaction processing system may operate to authorize transactions internally using information stored in a relational database () or may communicate with external authorization systems (). The transaction processing system includes among its software components message gateway routers (MGRs) () which operate using information stored in the relational database to convert messages from a variety of external message formats used by the external devices and authorization systems, to a common internal message format used within the system. The system further uses database information to internally route messages to message processing programs (MPPs) () which process messages and generate messages to the external devices and authorization systems. The MGR also converts the outgoing messages from the internal message format to the external message formats which can be interpreted by the external devices and systems to which the messages are directed.",
	"url": null,
	"owner": "Diebold, Incorporated",
	"publication_number": "07779160",
	"publication_date": "2010-08-17",
	"application_number": "11288719",
	"application_date": "2005-11-28",
	"tags": null,
	"slug": "financial-transaction-processing-system-and-method",
	"match_type": "description"
},
{
	"name": "Embedded virtual serial port",
	"summary": "",
	"abstract": "A system comprising a communication (COM) port server that, together with a COM port client, establishes COM port redirection over a network and communicates data with a serial port, at least one embedded application which is configured to communicate data via a serial port, and at least one virtual serial port application communicatively coupled to the embedded application and the COM port server. The virtual serial port application translates data communicated between the COM port server and the embedded application as if the COM port server and the embedded application were connected by a serial communication link.",
	"url": null,
	"owner": "Digi International Inc.",
	"publication_number": "07761621",
	"publication_date": "2010-07-20",
	"application_number": "11532067",
	"application_date": "2006-09-14",
	"tags": null,
	"slug": "embedded-virtual-serial-port",
	"match_type": "description"
},
{
	"name": "Systems and methods for remotely managing an application-specific display device",
	"summary": "",
	"abstract": "A communications device comprising an embedded application-specific device driver for an application-specific display and an embedded remote access application that execute on a processor. The embedded application-specific device driver is configured to communicate data with a communication (COM) port via a serial port and to provide a video signal to the application-specific display. The embedded remote access application is configured to remotely access the application-specific display and to communicate display data via a network.",
	"url": null,
	"owner": "Digi International, Inc.",
	"publication_number": "07650444",
	"publication_date": "2010-01-19",
	"application_number": "11536452",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "systems-and-methods-for-remotely-managing-an-applicationspecific-display-device",
	"match_type": "description"
},
{
	"name": "Systems and methods for reading a security clearance card",
	"summary": "",
	"abstract": "The security clearance card, system, and method include a card that stores data to verify the identity of an owner of the card. In addition to other types of information, the card stores biometric data of the owner and other identity data. Different portions of the data may be encrypted with different encryption techniques based upon a predetermined level of security assigned to the portions of the stored data. Reader elements are then capable of reading at least a portion of the encrypted data stored on the security clearance card, and receiving at least one biometric from an individual. The biometric stored in the card is then compared with the biometric of the individual presenting the security clearance card to verify that the holder of the card is the owner of the card.",
	"url": null,
	"owner": "Digital Data Research Company",
	"publication_number": "07762456",
	"publication_date": "2010-07-27",
	"application_number": "12026239",
	"application_date": "2008-02-05",
	"tags": null,
	"slug": "systems-and-methods-for-reading-a-security-clearance-card",
	"match_type": "description"
},
{
	"name": "Systems and methods for obtaining information associated with an image",
	"summary": "",
	"abstract": "A method is provided for decoding an image of a pattern associated with an object to determine a digital identifier and to obtain data. The method comprises receiving a image of a pattern associated with the object. The pattern comprises a sub-image and a data tag. The image comprising a plurality of pixels. The method further comprises associating a first sub-set of the pixels with the sub-image and a second sub-set of the pixels with the data tag, determining a digital identifier of the sub-image based on the first sub-set of the pixels, and determining a tag value of the data tag based on the second sub-set of the pixels.",
	"url": null,
	"owner": "Disney Enterprise, Inc.",
	"publication_number": "07801359",
	"publication_date": "2010-09-21",
	"application_number": "11524889",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "systems-and-methods-for-obtaining-information-associated-with-an-image",
	"match_type": "description"
},
{
	"name": "Classification for media stream packets in a media gateway",
	"summary": "",
	"abstract": "A method in Field Programmable Gate Array for processing packets received at a media gateway is provided. The method includes ascertaining whether a received packet is a UDP (User Datagram Protocol) packet. The method also includes comparing first portion of UDP destination port number from UDP packet header with first portion with UDP port base that has been set up in media gateway. If a match exist, employing second portion of UDP destination port number as a key to UDP port table to ascertain whether packets associated with media stream ID are to be discarded, and discarding received packet if packet associated with media stream ID is to be discarded. If not, obtaining media processing CPU ID associated with media stream ID, formulating destination MAC address, and updating packet with destination MAC address, thereby enabling packet to be switched to media processing CPU associated with media processing CPU ID.",
	"url": null,
	"owner": "DiVitas Networks, Inc.",
	"publication_number": "07688820",
	"publication_date": "2010-03-30",
	"application_number": "11537990",
	"application_date": "2006-10-02",
	"tags": null,
	"slug": "classification-for-media-stream-packets-in-a-media-gateway",
	"match_type": "description"
},
{
	"name": "Intelligent electronic cryptographic module",
	"summary": "",
	"abstract": "An intelligent electronic cryptographic module comprising a processor in communication with data storage, a cryptography chip for encrypting and decrypting messages and responses, at least one server-side port for receiving and transmitting encrypted and non-encrypted messages and responses between the intelligent electronic cryptographic module and an enterprise server, and at least one non-encrypted port for receiving and transmitting decrypted and non-encrypted messages and responses between the intelligent electronic cryptographic module and at least one intelligent electronic device. The data storage comprises computer instructions for instructing the processor to select a protocol module and telemetry method, authenticate the enterprise server and intelligent electronic cryptographic module, encrypt and decrypt messages and responses using the cryptography chip, and transmit and receive messages and responses.",
	"url": null,
	"owner": "DJ Inventions, LLC",
	"publication_number": "07673338",
	"publication_date": "2010-03-02",
	"application_number": "11829053",
	"application_date": "2007-07-26",
	"tags": null,
	"slug": "intelligent-electronic-cryptographic-module",
	"match_type": "description"
},
{
	"name": "System for secure online configuration and communication",
	"summary": "",
	"abstract": "A system for online configuration and communication for a supervisory control and data acquisition system comprising an online configurable enterprise server, at least one intelligent electronic device, an online configurable intelligent electronic cryptographic module, and a configurable server interface. Both the online configurable enterprise server and the online configurable intelligent electronic cryptographic module include respective cryptography chips and computer instructions for instructing respective processors to selectively encrypt and decrypt commands, messages, data, and responses, allowing non-encrypted transmissions between the at least one intelligent electronic device and the online configurable intelligent electronic cryptographic module, and selectively encrypted transmission between the intelligent electronic cryptographic module and the online configurable enterprise server.",
	"url": null,
	"owner": "DJ Inventions, LLC",
	"publication_number": "07673337",
	"publication_date": "2010-03-02",
	"application_number": "11829051",
	"application_date": "2007-07-26",
	"tags": null,
	"slug": "system-for-secure-online-configuration-and-communication",
	"match_type": "description"
},
{
	"name": "Method, system and apparatus for discovering user agent DNS settings",
	"summary": "",
	"abstract": "A method, system and apparatus including receiving a request from a network device, the request including an IP address of said network device, generating and sending to the network device a domain name for locating a device configured to process a DNS query, the domain name corresponding to the IP address, the network device generating and sending a DNS query including the domain name and at least one local DNS setting of the network device to the device configured to the process the DNS query, and the device processing an association between the IP address and the at least one local DNS setting of the network device.",
	"url": null,
	"owner": "Dnsstuff, Inc.",
	"publication_number": "07747780",
	"publication_date": "2010-06-29",
	"application_number": "12437842",
	"application_date": "2009-05-08",
	"tags": null,
	"slug": "method-system-and-apparatus-for-discovering-user-agent-dns-settings",
	"match_type": "description"
},
{
	"name": "Network storage appliance with integrated server and redundant storage controllers",
	"summary": "",
	"abstract": "A network storage appliance is disclosed. The appliance includes a chassis enclosing a backplane, and a server enclosed in the chassis and coupled to the backplane. The appliance also includes storage controllers enclosed in the chassis, each coupled to the backplane, which control transfer of data between the server and storage devices coupled to the storage controllers. The storage controllers also control transfer of data between the storage devices and computers networked to the appliance and external to the appliance. The storage controllers and the server comprise a plurality of hot-replaceable blades. Any one of the plurality of blades may be replaced during operation of the appliance without loss of access to the storage devices by the computers. In one embodiment, the server executes storage application software, such as backup software for backing up data on the storage devices, such as to a tape device networked to the server.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07661014",
	"publication_date": "2010-02-09",
	"application_number": "10831661",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": "network-storage-appliance-with-integrated-server-and-redundant-storage-controllers",
	"match_type": "description"
},
{
	"name": "Network, storage appliance, and method for externalizing an internal I/O link between a server and a storage controller integrated within the storage appliance chassis",
	"summary": "",
	"abstract": "A network storage appliance is disclosed. The storage appliance includes a port combiner that provides data communication between at least first, second, and third I/O ports; a storage controller that controls storage devices and includes the first I/O port; a server having the second I/O port; and an I/O connector for networking the third I/O port to the port combiner. A single chassis encloses the port combiner, storage controller, and server, and the I/O connector is affixed on the storage appliance. The third I/O port is external to the chassis and is not enclosed therein. In various embodiments, the port combiner comprises a FiberChannel hub comprising a series of loop resiliency circuits, or a FiberChannel, Ethernet, or Infiniband switch. In one embodiment, the port combiner, I/O ports, and server are all comprised in a single blade module for plugging into a backplane of the chassis.",
	"url": null,
	"owner": "Dot Hill Systems Corporation",
	"publication_number": "07676600",
	"publication_date": "2010-03-09",
	"application_number": "10830876",
	"application_date": "2004-04-23",
	"tags": null,
	"slug": "network-storage-appliance-and-method-for-externalizing-an-internal-io-link-between-a-server-and-a-storage-controller-integrated-within-the-storage-appliance-chassis",
	"match_type": "description"
},
{
	"name": "Revocation method and apparatus for secure content",
	"summary": "",
	"abstract": "A system and method is provided for revoking a device. A method includes receiving a certificate from the device, the certificate including one or more of fields, at least one of the fields holding a signature, attempting to verify the signature, receiving a revocation list from a source, the revocation list identifying one or more data on the certificate as valid or invalid, the data including at least one of the fields of the certificate; and if one of one or more signatures identified unsuccessfully verified and one or more data is identified as invalid, preventing the transmission of a session key to the device, the session key being required to establish a secure communication channel.",
	"url": null,
	"owner": "DPHI Acquisitions, Inc.",
	"publication_number": "07672903",
	"publication_date": "2010-03-02",
	"application_number": "09939896",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": "revocation-method-and-apparatus-for-secure-content",
	"match_type": "description"
},
{
	"name": "System and method for detecting unauthorized copying of encrypted data",
	"summary": "",
	"abstract": "A system and method is provided for detecting unauthorized actions with respect to encrypted data on a media disk, the media disk including a first portion for prerecorded content and a second portion for written content. The method includes reading an identifier on the media disk, wherein the identifier includes one or more sections located in one of the first portion for pre-recorded content, the second portion for written content, and both the first portion for pre-recorded content and the second portion for written content, determining whether the identifier includes a section located in the second portion written content, comparing the identifier with one or more predetermined types of identifiers for which a section is located in the second portion for written content, and if the identifier is of a type that is one of the one or more predetermined types of identifiers, detecting an unauthorized action.",
	"url": null,
	"owner": "DPHI Acquisitions, Inc.",
	"publication_number": "07729495",
	"publication_date": "2010-06-01",
	"application_number": "09940174",
	"application_date": "2001-08-27",
	"tags": null,
	"slug": "system-and-method-for-detecting-unauthorized-copying-of-encrypted-data",
	"match_type": "description"
},
{
	"name": "Image-forming system with a graphical user interface having an interconnection architecture",
	"summary": "",
	"abstract": "An image-forming system with a graphic user interface having an interconnection architecture where software applications share one or more plug-in packages. One of the software applications may be used as a plug-in.",
	"url": null,
	"owner": "Eastman Kodak Company",
	"publication_number": "07652779",
	"publication_date": "2010-01-26",
	"application_number": "10235557",
	"application_date": "2002-09-05",
	"tags": null,
	"slug": "imageforming-system-with-a-graphical-user-interface-having-an-interconnection-architecture",
	"match_type": "description"
},
{
	"name": "Distributing live performances",
	"summary": "",
	"abstract": "An audio codec uses one or more access points to broadcast or unicast a performance to a mobile digital media device that is registered and therefore is authorized to receive the performance. Prior to receiving, the mobile digital media device is authenticated by replying to an RFID query from one or more access points. If the mobile digital media device is registered, a secure key is sent to the mobile digital media device. The mobile digital media device uses the secure key to decrypt music being broadcasted or unicasted to receive the distribution of the live performances in the music venue.",
	"url": null,
	"owner": "EB Technologies, LLC",
	"publication_number": "07693978",
	"publication_date": "2010-04-06",
	"application_number": "11185630",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": "distributing-live-performances",
	"match_type": "description"
},
{
	"name": "Acquisition of online auction items through a global positioning system",
	"summary": "",
	"abstract": "In an example embodiment, a method is provided. The method may comprise receiving an auction item identifier from a global positioning system (GPS) apparatus. Auction data associated with the auction item identifier is accessed and transmitted to a voice portal server. The voice portal server may call a telephone number and receive a request to acquire the auction item.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07729953",
	"publication_date": "2010-06-01",
	"application_number": "11870542",
	"application_date": "2007-10-11",
	"tags": null,
	"slug": "acquisition-of-online-auction-items-through-a-global-positioning-system",
	"match_type": "description"
},
{
	"name": "API and business language schema design framework for message exchanges",
	"summary": "",
	"abstract": "A server system facilitates an exchange of messages with a remote client application. The server system includes a plurality of application servers hosting a plurality of applications. A plurality of Application Program Interfaces (APIs) provides programmatic access to the plurality of applications, each of the APIs being configured to receive request messages compiled by the remote client application. First and second request messages, respectively addressed to first and second APIs of the plurality of APIs by a remote client application, each comprise at least one common data component. Further, the first request message includes a first payload specific to the first API, and the second request message includes a payload specific to the second API.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07818759",
	"publication_date": "2010-10-19",
	"application_number": "10997767",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": "api-and-business-language-schema-design-framework-for-message-exchanges",
	"match_type": "description"
},
{
	"name": "Business event processing",
	"summary": "",
	"abstract": "Techniques for business event processing are presented. Producer services produce events that are managed and distributed by a transport service. Consumer services acquire events from the transport service and perform actions in response to the events. The production, distribution, and processing of the events and actions may be asynchronously and concurrently performed.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07779421",
	"publication_date": "2010-08-17",
	"application_number": "11171595",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "business-event-processing",
	"match_type": "description"
},
{
	"name": "Computer-implemented method and system for managing keyword bidding prices",
	"summary": "",
	"abstract": "A computer-implemented method and system for managing keyword bidding prices are disclosed. An example system embodiment includes an automatic keyword bidding module, operably coupled with a processor and a memory, operable to determine a revenue per click value associated with a keyword, obtain bidding information associated with the keyword, obtain automatic bid controls associated with the keyword, and automatically generate a bid value for the keyword based on the revenue per click value, the bidding information, and the automatic bid controls.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07752190",
	"publication_date": "2010-07-06",
	"application_number": "11517886",
	"application_date": "2006-09-08",
	"tags": null,
	"slug": "computerimplemented-method-and-system-for-managing-keyword-bidding-prices",
	"match_type": "description"
},
{
	"name": "Determining relevancy and desirability of terms",
	"summary": "",
	"abstract": "A system and method to sort search results based upon a desirability value is illustrated. This desirability value may be based upon the difference between a demand value and a supply value. Demand may be based upon user activity such as click-throughs, purchases, price, or location. Supply may be based upon a supply of keywords that may be the number of times a word is used in search or item title. The system and method may include receiving a search query, associating a first numerical value with a keyword that is a part of the search query, tracking user activity associated with the keyword, associating a second numerical value with the keyword based upon the user activity, finding a difference value between the first and second numerical values, associating this difference value with the keyword, sorting keywords based upon the difference values, and returning the search results of the sorting.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07814112",
	"publication_date": "2010-10-12",
	"application_number": "11679973",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "determining-relevancy-and-desirability-of-terms",
	"match_type": "description"
},
{
	"name": "Method and system for access authentication",
	"summary": "",
	"abstract": "A method and a system for access authentication. A shared services resource includes a second factor authentication module. At least one network resource each include a first factor authentication module. A trusted computing base communicates with the shared services and the at least one network resource through a pipe. An assertion may be obtained on a trusted computing base for accessing at least one network resource. At least one of the at least one network resource may be accessed with the trusted computing base when the assertion has been obtained by the trusted computing base and is valid.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07673332",
	"publication_date": "2010-03-02",
	"application_number": "11496673",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": "method-and-system-for-access-authentication",
	"match_type": "description"
},
{
	"name": "Online fraud prevention using genetic algorithm solution",
	"summary": "",
	"abstract": "Online fraud prevention including receiving a rules set to detect fraud, mapping the rules set to a data set, mapping success data to members of the rules set, filtering the members of the rules set, and ordering members of the data set by giving priority to those members of the data set with a greater probability for being fraudulent based upon the success data of each member of the rule set in detecting fraud. Further, a receiver coupled to an application server to receive a rules set to detect fraud, and a server coupled to the application server, to map the rules set to a data set, and to map the success data to each members of the rules set. The server is used to order the various members of the data set by giving priority to those members of the data set with a greatest probability for being fraudulent.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07840520",
	"publication_date": "2010-11-23",
	"application_number": "12638942",
	"application_date": "2009-12-15",
	"tags": null,
	"slug": "online-fraud-prevention-using-genetic-algorithm-solution",
	"match_type": "description"
},
{
	"name": "System and method for application programming interfaces for keyword extraction and contextual advertisement generation",
	"summary": "",
	"abstract": "A computer-implemented system and method for keyword extraction and contextual advertisement generation are disclosed. The system in an example embodiment includes a keyword extraction service to receive from a consumer application a request for activation of a keyword extraction service via an application programming interface, the request including an identity of a content source, the request further including an identification of a particular extraction process to be used by the keyword extraction service on the identified content source; determine if the keyword extraction service has already processed the identified content source and retained extracted keywords in a data store; extract keywords from the identified content source using the particular extraction process identified in the request; and make the extracted keywords accessible to the consumer application.",
	"url": null,
	"owner": "eBay Inc.",
	"publication_number": "07831586",
	"publication_date": "2010-11-09",
	"application_number": "11645946",
	"application_date": "2006-12-27",
	"tags": null,
	"slug": "system-and-method-for-application-programming-interfaces-for-keyword-extraction-and-contextual-advertisement-generation",
	"match_type": "name"
},
{
	"name": "Smartcard system",
	"summary": "",
	"abstract": "A programmable device carries an on-device file. An interface device is provided to interface with the programmable device, the interface device having an off-device file. Web (Internet) standard language operating software is stored in the programmable device in a compressed format, that software containing at least some of the file system and commands for accessing the file system which enable the on-device file and off-device file to interface with each other. The interface device further includes an upgrade file. The system operates to compare the upgrade file to the on-device file and upgrade the on-device file to the newer upgrade file. The system is further provided with a web (Internet) standard language file containing a configurable Security Environment. The system is further provided with a file including a data model (u2018virtual cardu2019) corresponding to a programmable device and adapted for downloading to the programmable device.",
	"url": null,
	"owner": "ECEBS Limited",
	"publication_number": "07850066",
	"publication_date": "2010-12-14",
	"application_number": "10497908",
	"application_date": "2002-12-09",
	"tags": null,
	"slug": "smartcard-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for ordering goods, services and content over an internetwork using a virtual payment account",
	"summary": "",
	"abstract": "A virtual payment system for ordering and paying for goods, services and content over an internetwork is disclosed. The virtual payment system comprises a commerce gateway component () and a credit processing server component (). The virtual payment system is a secure, closed system comprising registered sellers and buyers. A buyer becomes a registered participant by applying for a virtual payment account. Likewise, a seller becomes registered by applying for a seller account. A buyer can instantly open an account on-line. That is, the credit processing component () immediately evaluates the buyer's virtual payment card application and assigns a credit limit to the account. Once an account is established, a digital certificate is stored on the registered participant's computer. The buyer can then order a product, i.e., goods, services or content from a seller and charge it to the virtual payment account. When the product is shipped, the seller notifies the commerce gateway component (), which in turn notifies the credit processing server that applies the charges to the buyer's virtual payment account. The buyer can settle the charges using a prepaid account, a credit account, or by using reward points earned through use of the virtual payment card. A buyer may create sub-accounts.",
	"url": null,
	"owner": "eCharge Corporation",
	"publication_number": "07761385",
	"publication_date": "2010-07-20",
	"application_number": "11182589",
	"application_date": "2005-07-14",
	"tags": null,
	"slug": "method-and-apparatus-for-ordering-goods-services-and-content-over-an-internetwork-using-a-virtual-payment-account",
	"match_type": "description"
},
{
	"name": "System for comparing real-time data and modeling engine data to predict arc flash events",
	"summary": "",
	"abstract": "A system for making real-time predictions about an arc flash event on an electrical system is disclosed. The system includes a data acquisition component, an analytics server and a client terminal. The data acquisition component is communicatively connected to a sensor configured to acquire real-time data output from the electrical system. The analytics server is communicatively connected to the data acquisition component and is comprised of a virtual system modeling engine, an analytics engine and an arc flash simulation engine. The arc flash simulation engine is configured to utilize the virtual system model to forecast an aspect of the arc flash event.",
	"url": null,
	"owner": "EDSA Micro Corporation",
	"publication_number": "07729808",
	"publication_date": "2010-06-01",
	"application_number": "11771681",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": "system-for-comparing-realtime-data-and-modeling-engine-data-to-predict-arc-flash-events",
	"match_type": "description"
},
{
	"name": "Systems and methods for alarm filtering and management within a real-time data acquisition and monitoring environment",
	"summary": "",
	"abstract": "The client terminal is communicatively connected to the power analytics server and configured to display the filtered and interpreted indicia.",
	"url": null,
	"owner": "EDSA Micro Corporation",
	"publication_number": "07693608",
	"publication_date": "2010-04-06",
	"application_number": "11780764",
	"application_date": "2007-07-20",
	"tags": null,
	"slug": "systems-and-methods-for-alarm-filtering-and-management-within-a-realtime-data-acquisition-and-monitoring-environment",
	"match_type": "description"
},
{
	"name": "Systems and methods for determining protective device clearing times used for providing real-time predictions about arc flash events",
	"summary": "",
	"abstract": "A system for making real-time predictions about an arc flash event on an electrical system is disclosed. The system includes a data acquisition component, an analytics server and a client terminal. The data acquisition component is communicatively connected to a sensor configured to acquire real-time data output from the electrical system. The analytics server is communicatively connected to the data acquisition component and is comprised of a virtual system modeling engine, an analytics engine and an arc flash simulation engine.",
	"url": null,
	"owner": "EDSA Micro Corporation",
	"publication_number": "07840396",
	"publication_date": "2010-11-23",
	"application_number": "11774396",
	"application_date": "2007-07-06",
	"tags": null,
	"slug": "systems-and-methods-for-determining-protective-device-clearing-times-used-for-providing-realtime-predictions-about-arc-flash-events",
	"match_type": "description"
},
{
	"name": "Systems and methods for predictive monitoring including real-time strength and security analysis in an electrical power distribution system",
	"summary": "",
	"abstract": "A system for performing real-time failure mode analysis of a monitored system is disclosed. The system includes a data acquisition component, an analytics server and a client terminal. The data acquisition component is communicatively connected to a sensor configured to acquire real-time data output from the monitored system. The analytics server is communicatively connected to the data acquisition component and is comprised of a virtual system modeling engine, an analytics engine and a machine learning engine.",
	"url": null,
	"owner": "EDSA Micro Corporation",
	"publication_number": "07840395",
	"publication_date": "2010-11-23",
	"application_number": "11734706",
	"application_date": "2007-04-12",
	"tags": null,
	"slug": "systems-and-methods-for-predictive-monitoring-including-realtime-strength-and-security-analysis-in-an-electrical-power-distribution-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for real-time dynamic simulation of uninterruptible power supply solutions and their control logic systems",
	"summary": "",
	"abstract": "A system for real-time modeling of uninterruptible power supply (UPS) control elements protecting an electrical system is disclosed. The system includes a data acquisition component, a power analytics server and a client terminal. The data acquisition component acquires real-time data output from the electrical system. The power analytics server is comprised of a virtual system modeling engine, an analytics engine and a UPS transient stability simulation engine. The virtual system modeling engine generates predicted data output for the electrical system. The analytics engine monitors real-time data output and predicted data output of the electrical system. The UPS transient stability simulation engine stores and processes patterns observed from the real-time data output and utilizes a user-defined UPS control logic model to forecast an aspect of the interaction between UPS control elements and the electrical system subjected to a simulated contingency event.",
	"url": null,
	"owner": "EDSA Micro Corporation",
	"publication_number": "07844440",
	"publication_date": "2010-11-30",
	"application_number": "11775146",
	"application_date": "2007-07-09",
	"tags": null,
	"slug": "systems-and-methods-for-realtime-dynamic-simulation-of-uninterruptible-power-supply-solutions-and-their-control-logic-systems",
	"match_type": "description"
},
{
	"name": "Systems and methods for real-time protective device evaluation in an electrical power distribution system",
	"summary": "",
	"abstract": "A system for providing real-time modeling of protective device in an electrical system under management is disclosed. The system includes a data acquisition component, a virtual system modeling engine, and an analytics engine. The data acquisition component is communicatively connected to a sensor configured to provide real-time measurements of data output from protective devices within the system under management. The virtual system modeling engine is configured to update a virtual mode of the system based on the status of the protective devices and to generate predicted data for the system using the updated virtual model. The analytics engine is communicatively connected to the data acquisition system and the virtual system modeling engine and is configured to monitor and analyze a difference between the real-time data output and the predicted data output. The analytics engine is also configured to determine the bracing capabilities for the protective devices.",
	"url": null,
	"owner": "Edsa Micro Corporation",
	"publication_number": "07844439",
	"publication_date": "2010-11-30",
	"application_number": "11717378",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "systems-and-methods-for-realtime-protective-device-evaluation-in-an-electrical-power-distribution-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for toolbox inventory",
	"summary": "",
	"abstract": "A method and apparatus is provided for electronically inventorying an electronically locked and unlocked toolbox before and after RFID (Radio Frequency IDentified) tagged tools are accessed by an authorized user. A record is generated and stored of tools added and/or removed along with the identity of the accessing user. At anytime it is desired, a record may be generated of tagged tools in the toolbox or, alternatively, a list of tagged tools missing from assigned positions in the toolbox.",
	"url": null,
	"owner": "Electronic Inventory Solutions, Inc.",
	"publication_number": "07755482",
	"publication_date": "2010-07-13",
	"application_number": "11468172",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "method-and-apparatus-for-toolbox-inventory",
	"match_type": "description"
},
{
	"name": "Apparatus and method for garbage collection",
	"summary": "",
	"abstract": "A garbage collection apparatus and a method using the same are disclosed. The garbage collection method comprises: making a list of objects that must be deleted from a memory; calculating a predetermined residual time for responding to an external command; deleting the listed objects from the memory during the residual time; and storing a list of remaining objects that have not been deleted from the memory during the residual time. Accordingly, communication failure due to a response delay or timeout is prevented by distributed processing loads of garbage collection.",
	"url": null,
	"owner": "Electronics and Telecommunications Research Institute",
	"publication_number": "07797498",
	"publication_date": "2010-09-14",
	"application_number": "10578390",
	"application_date": "2004-08-03",
	"tags": null,
	"slug": "apparatus-and-method-for-garbage-collection",
	"match_type": "description"
},
{
	"name": "Method for providing personalization service in ubiquitous environment and intelligent gadget thereof",
	"summary": "",
	"abstract": "Provided is a method for providing a personalization service in a ubiquitous environment and an intelligent gadget thereof. The intelligent gadget includes: a gadget service block for collecting and processing data to provide a personalization service; and a gadget interface block for forming a gadget network between gadgets and providing a cooperating service based on the collected and processed data.",
	"url": null,
	"owner": "Electronics and Telecommunications Research Institute",
	"publication_number": "07822804",
	"publication_date": "2010-10-26",
	"application_number": "11950793",
	"application_date": "2007-12-05",
	"tags": null,
	"slug": "method-for-providing-personalization-service-in-ubiquitous-environment-and-intelligent-gadget-thereof",
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring voltage in a meter network",
	"summary": "",
	"abstract": "Methods and systems are provided for monitoring input voltages to meters that are in a wireless metering network. A plurality of entries can be created that include voltage-related information, such as a maximum input voltage or a minimum input voltage. Each meter can further determine whether the input voltage is beyond a predetermined threshold voltage for a duration that might indicate a voltage irregularity in the network. Each meter in the network can be monitored by a collector, which can communicate information to a data collection server.",
	"url": null,
	"owner": "Elster Electricity, LLC",
	"publication_number": "07860672",
	"publication_date": "2010-12-28",
	"application_number": "12140938",
	"application_date": "2008-06-17",
	"tags": null,
	"slug": "method-and-apparatus-for-monitoring-voltage-in-a-meter-network",
	"match_type": "description"
},
{
	"name": "Backfilling a local email archive store",
	"summary": "",
	"abstract": "An email archive system and associated techniques are described. Archived emails may be stored locally on a user's client computer in a local archive store. The email archive system and associated techniques may interact with an email message system and an email client application.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07730148",
	"publication_date": "2010-06-01",
	"application_number": "11784172",
	"application_date": "2007-04-05",
	"tags": null,
	"slug": "backfilling-a-local-email-archive-store",
	"match_type": "description"
},
{
	"name": "Backup and restore operations using coherency groups for ISB protocol systems",
	"summary": "",
	"abstract": "Systems and methods for performing scheduled backups and recovery of data generated by one or more production applications operating on a MAGIC platform located on two or more host computers in a coherency group. The data for a coherency group is stored in a primary storage in the form of one or more production volumes and ISB protocol is used to create one or more clone volumes. Exemplary methods for backing up one or more clone volumes for a coherency group to a backup storage include copying the one or more clone volumes to a backup storage or creating a snapshot of the one or more clone volumes. The ISB functions of splitting and/or reconnecting the one or more production volumes and one or more clone volumes occur at substantially the same time for all the two or more host computers in the coherency group.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07725669",
	"publication_date": "2010-05-25",
	"application_number": "11536157",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "backup-and-restore-operations-using-coherency-groups-for-isb-protocol-systems",
	"match_type": "description"
},
{
	"name": "Browsing and selecting items in recovery storage groups to perform recovery onto production server",
	"summary": "",
	"abstract": "A method and system for restoring data on a production server by recovering individual data objects from a recovery storage group to a database residing on the production server. In one example method, a recovery interface accesses a recovery storage group containing a recovered database. The recovered database has been recovered from a backup storage location and contains a copy of a database residing on the production server. The method then identifies each data object residing in the recovery storage group and displays each of the data objects on a graphical user interface configured to allow a user to select and individual data objects for recovery from the recovered database. The selected data objects are restored to the appropriate location on the production server.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07676689",
	"publication_date": "2010-03-09",
	"application_number": "11428117",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "browsing-and-selecting-items-in-recovery-storage-groups-to-perform-recovery-onto-production-server",
	"match_type": "description"
},
{
	"name": "Categorical approach for implementing a software component development architecture",
	"summary": "",
	"abstract": "A system produces a component framework that insulates components from an underlying communication infrastructure by receiving a component descriptor that specifies fundamental properties of a component and receiving a definition of remotable interfaces associated with the component. A generation tool emits a component framework that includes: i) a coInterface interface that exposes the component's remotable interfaces; ii) a coFactories interface that declares factories for component operation; iii) a template for a coClass class, the coClass class operable to receive developer programmed functionality; and iv) a coBridge class that extends the coClass class and functions as a morphism from an IDL-defined component to an object model based, middleware-independent component.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07797675",
	"publication_date": "2010-09-14",
	"application_number": "11137749",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": "categorical-approach-for-implementing-a-software-component-development-architecture",
	"match_type": "description"
},
{
	"name": "Checkpoint and consistency markers",
	"summary": "",
	"abstract": "Described are a method, computer program product, and system for obtaining a copy of source data in a consistent state. One or more file operations having a corresponding time sequence which modify said source data are recorded. A request for a copy of the source data in a consistent state is received. It is determined at which point in the corresponding time sequence said source data is in a consistent state as a result of applying a portion of the file operations. The point in the corresponding time sequence at which the source data is in a consistent state is marked. The portion of file operations determined to place the source data in a consistent state is applied to the copy of the source data.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07788458",
	"publication_date": "2010-08-31",
	"application_number": "11646783",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "checkpoint-and-consistency-markers",
	"match_type": "description"
},
{
	"name": "Content addressable information encapsulation, representation, and transfer",
	"summary": "",
	"abstract": "Representing a number of assets on an originating computer begins with selecting the assets to be represented. Cryptographic hash asset identifiers are generated; each of the asset identifiers is computed using the contents of a particular asset. The asset identifier is a content-based or content-addressable asset name for the asset and is location independent. An asset list is generated that includes the asset identifiers computed from the assets. A cryptographic hash asset list identifier is generated that is computed from the asset list. The asset list identifier is stored for later retrieval. The amen selected are also stored for safekeeping either locally or on a computer network. In the event of loss of the files from the originating computer, the asset list identifier is retrieved. Using the asset list identifier, the original asset list is found and retrieved from its safe location.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07770228",
	"publication_date": "2010-08-03",
	"application_number": "11281157",
	"application_date": "2005-11-17",
	"tags": null,
	"slug": "content-addressable-information-encapsulation-representation-and-transfer",
	"match_type": "description"
},
{
	"name": "Data de-duplication using thin provisioning",
	"summary": "",
	"abstract": "A system for de-duplicating data includes providing a first volume including at least one pointer to a second volume that corresponds to physical storage space, wherein the first volume is a logical volume. A first set of data is detected as a duplicate of a second set of data stored on the second volume at a first data chunk. A pointer of the first volume associated with the first set of data is modified to point to the first data chunk. After modifying the pointer, no additional physical storage space is allocated for the first set of data.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07822939",
	"publication_date": "2010-10-26",
	"application_number": "11903869",
	"application_date": "2007-09-25",
	"tags": null,
	"slug": "data-deduplication-using-thin-provisioning",
	"match_type": "description"
},
{
	"name": "Differential virus scan",
	"summary": "",
	"abstract": "Differential scanning is disclosed. A scan collection period is determined. A system is monitored to detect object events during the scan collection period, and a scan list may be updated with information regarding objects to be scanned, based on some of the object events. Objects are scanned based on the information in the scan list. Information regarding objects associated with object events occurring outside the scan collection period may be removed from the scan list.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07854006",
	"publication_date": "2010-12-14",
	"application_number": "11395441",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "differential-virus-scan",
	"match_type": "description"
},
{
	"name": "File system query and method of use",
	"summary": "",
	"abstract": "An improved policy enforcement architecture includes several components that improve the performance of policy enforcement in a hierarchical storage environment. A File System Query instruction permits a richer set of queries to be expressed by a policy engine, thereby permitting more complex policies to be implemented with ease. The File System result is generated at the file server, and only files of interest are forwarded to the policy engine. The file system query advantageously may be applied against a pre-generated index having one more characterizing attributes to further reduce the processing required to retrieve policy data. An Index Build instruction, added to a programming interface, allows a policy engine generate the characterizing indices in advance of use. Index maintenance techniques maintain consistency between the index and the file system to ensure that the policy can be enforced using accurate file information.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07805416",
	"publication_date": "2010-09-28",
	"application_number": "11241053",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "file-system-query-and-method-of-use",
	"match_type": "description"
},
{
	"name": "Local email archive store size management",
	"summary": "",
	"abstract": "An email archive system and associated techniques are described. Archived emails may be stored locally on a user's client computer in a local archive store. The email archive system and associated techniques may interact with an email message system and an email client application.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07730146",
	"publication_date": "2010-06-01",
	"application_number": "11731609",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "local-email-archive-store-size-management",
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying logical volumes in multiple element computer storage domains",
	"summary": "",
	"abstract": "Method and apparatus for specifying and identifying logic volumes in computer systems that store logical volumes on multiple storage elements are disclosed. The logical volume identifier may be unique with respect to all other logical volumes stored on the storage elements. The logical volumes may be conventional logical volumes, partitions, or hyper volumes.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07689799",
	"publication_date": "2010-03-30",
	"application_number": "10979601",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": "method-and-apparatus-for-identifying-logical-volumes-in-multiple-element-computer-storage-domains",
	"match_type": "description"
},
{
	"name": "Method and apparatus for migrating data in a clustered computer system environment",
	"summary": "",
	"abstract": "Methods and apparatus for performing a data migration in a clustered computer system. In one aspect, the availability of the data being migrated is maintained during the migration. In another aspect, a data set is migrated by a transfer utility in one of the hosts in the cluster, and in response to a failure of the host, the migration is resumed without restarting from the beginning point of the data set. In a further embodiment, the hosts in the cluster have agents associated therewith to manage the data migration, and prior to taking at least one action associated with the data migration, the agents coordinate to ensure that the hosts in the cluster are prepared to have the at least one action taken.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07805583",
	"publication_date": "2010-09-28",
	"application_number": "10421500",
	"application_date": "2003-04-23",
	"tags": null,
	"slug": "method-and-apparatus-for-migrating-data-in-a-clustered-computer-system-environment",
	"match_type": "description"
},
{
	"name": "Method and system for implementing hierarchical permission maps in a layered volume graph",
	"summary": "",
	"abstract": "The invention is for a method of mapping hierarchical volume permission to top level permissions in a layered volume graph of a virtual data storage system with hierarchy of storage volumes requiring permission at every volume level and the top level volume exposed to the hosts via intelligent switches comprising: applying volume level permissions on a volume of the volume graph and mapping condensed permission hierarchically for the entire volume graph to the top level volume from said individual volume level permission.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07849281",
	"publication_date": "2010-12-07",
	"application_number": "11724030",
	"application_date": "2007-03-13",
	"tags": null,
	"slug": "method-and-system-for-implementing-hierarchical-permission-maps-in-a-layered-volume-graph",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for distributing information to multiple nodes",
	"summary": "",
	"abstract": "Some embodiments are directed to a technique for storing and/or locating content units stored on an object addressable storage (OAS) system, wherein each content unit is identified by an object identifier. The OAS system may comprise a plurality of zones, each of which stores content units. A mapping process may be defined that maps object identifiers for content units to zones on the OAS system. Thus, the storage location for a content unit on the OAS system may be the zone on the OAS system to which the object identifier for the content unit maps.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07734889",
	"publication_date": "2010-06-08",
	"application_number": "11644421",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "methods-and-apparatus-for-distributing-information-to-multiple-nodes",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for managing requests",
	"summary": "",
	"abstract": "A management control center communicates with multiple agents in a storage area network. On behalf of the management control center, the agents communicate with a switch resource management entity that maintains configuration information about resources such as a group or groups of switches in the storage area network. Based on a chain of communications from the management control center through the agents to the remote management entity, the management control center can indirectly learn about a configuration of switch resources in the storage area network. The agent utilizes a calculated current load value (e.g., a value indicating a relative burden placed on the remote management entity to service the forwarded set of requests) to selectively forwards requests to the switch resource management entity. This technique ensures that the switch resource management entity is not overwhelmed by a task of servicing too many requests at the same time.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07694007",
	"publication_date": "2010-04-06",
	"application_number": "11094772",
	"application_date": "2005-03-30",
	"tags": null,
	"slug": "methods-and-apparatus-for-managing-requests",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing partitioned changes",
	"summary": "",
	"abstract": "In a storage area network, agents provide transactions of data sets containing updates to manageable entities in a SAN. A SAN server avoids intermittent dissemination of events pertaining to a single transaction by storing events in a cache until completion of all subtransactions in the transaction, and then disseminating all events pertaining to the transaction. Transactions are broken down into update sections, each containing one or more subtransactions collectively defining the entire transaction. Update sections corresponding to the transaction are tagged with a section ID. Events indicating completion of processing of the update section are identified by the section ID, and suppressed temporarily by storing them in the event cache pending completion of the transaction. Other events not matching a tagged section ID are allowed to disseminate. Upon completion of the transaction, events for all section IDs corresponding to the transaction are disseminated from the cache.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07711705",
	"publication_date": "2010-05-04",
	"application_number": "11476523",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": "methods-and-apparatus-for-processing-partitioned-changes",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for storing content on a storage system comprising a plurality of zones",
	"summary": "",
	"abstract": "Some embodiments are directed to a technique for storing and/or locating content units stored on an object addressable storage (OAS) system, wherein each content unit is identified by an object identifier. The OAS system may comprise a plurality of zones, each of which stores content units. A mapping process may be defined that maps object identifiers for content units to zones on the OAS system. Thus, the storage location for a content unit on the OAS system may be the zone on the OAS system to which the object identifier for the content unit maps.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07818536",
	"publication_date": "2010-10-19",
	"application_number": "11644174",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "methods-and-apparatus-for-storing-content-on-a-storage-system-comprising-a-plurality-of-zones",
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing a categorical approach to aspect-oriented programming",
	"summary": "",
	"abstract": "A system uses generative aspect oriented programming to propagating context between components in a component server, the system produces code that, when executed, implicitly propagates authenticating context between a client component and an invoked component which the client component invokes in a component server. The system generates a function that allows the specification of a timeout between the client component and the invoked component that the client component invokes in the component server. The timeout function receives a user-defined timeout value to be applied for interface invocations between the client component and the invoked component. The system further generates a function declaration that, upon execution, discloses a target component identity between a client component and an invoked component that the client component invokes in the component server. The target component identity specifies a specific identity of a target computer system to which an interface invocation between the client component and the invoked component is directed.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07849469",
	"publication_date": "2010-12-07",
	"application_number": "11325286",
	"application_date": "2006-01-04",
	"tags": null,
	"slug": "methods-and-apparatus-providing-a-categorical-approach-to-aspectoriented-programming",
	"match_type": "description"
},
{
	"name": "Methods and apparatus providing a categorical approach to strongly typed component management",
	"summary": "",
	"abstract": "A code generator generates component controllers by receiving, as input, an identity of a component and identities of dependent components of the component and applying a categorical-based generator that applies at least one morphism to generate at least one component controller to manage both collocated and remote access to the dependent components of the component in a strongly typed manner. Application of the categorical based generator includes generating at least one service-component controller for controlling service components that, during operation, are instantiated upon component server initialization to provide services to other components during component server operation and generating at least one session-component controller for controlling session components instantiated, utilized for services during a session, and terminated as needed by other components.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07788677",
	"publication_date": "2010-08-31",
	"application_number": "11325172",
	"application_date": "2006-01-04",
	"tags": null,
	"slug": "methods-and-apparatus-providing-a-categorical-approach-to-strongly-typed-component-management",
	"match_type": "description"
},
{
	"name": "Methods and system for integrating SAN servers",
	"summary": "",
	"abstract": "Multiple servers such as a main server as well as one or more corresponding sub-servers manage configuration information associated with a storage area network. A sub-server operates differently depending on whether the sub-server has been u201cintegratedu201d with a main server in the storage area network. For example, in response to detecting a presence of a main server in the storage area network and that the corresponding sub-server has been integrated with the main server, a respective sub-server initiates execution of at least a portion of function calls associated with a respective service at the main server in lieu of executing the function calls locally at the respective sub-server. In the absence of the main server and/or integration, the sub-server operates independently and executes function calls locally rather than forward function calls associated with a respective service to the main server.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07668924",
	"publication_date": "2010-02-23",
	"application_number": "11233292",
	"application_date": "2005-09-22",
	"tags": null,
	"slug": "methods-and-system-for-integrating-san-servers",
	"match_type": "description"
},
{
	"name": "Methods and systems for managing I/O requests to minimize disruption required for data migration",
	"summary": "",
	"abstract": "Methods and systems are provided for minimizing disruptions when host data on a source logical unit is migrated onto a target logical unit. I/O requests are managed in a particular order during various states of the migration. After the target logical unit is synchronized with the source logical unit and before a commitment to the target logical unit is made, the target logical unit can be evaluated. At that point, the migration can be aborted. During the evaluation of the target logical unit, I/O requests that were directed to the source logical unit are redirected to the target logical unit and I/O requests that were directed to the target logical unit are redirected to the source logical unit. The disclosed methods and systems are equally effective at enabling less disruptive virtualization of a source logical unit as a target logical unit.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07809912",
	"publication_date": "2010-10-05",
	"application_number": "11536995",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "methods-and-systems-for-managing-io-requests-to-minimize-disruption-required-for-data-migration",
	"match_type": "description"
},
{
	"name": "Methods, systems, and computer program products for transparently controlling communications between network applications and a plurality of network communications protocol stacks using deferred protocol stack association",
	"summary": "",
	"abstract": "Methods, systems, and computer program products for controlling communications between network applications and multiple network communications protocol stacks using deferred protocol stack association are disclosed. In one method, a socket creation function call is received from an application. A socket creation function call is terminated, a pseudo communications endpoint is created, and a socket descriptor corresponding to the pseudo communications endpoint is returned to the application. At least one subsequent sockets-related function call is received. Based on the subsequent sockets-related function call, it is determined whether the application is a client or a server. In response to determining that the application is a server, communications endpoints are created on each of the network communications protocol stacks and server-related sockets function calls are made to each of the underlying protocol stacks. In response to determining that the application is a client, a protocol stack is selected, a protocol-stack-specific communications endpoint is created, and client-related sockets function calls are made to the underlying protocol-stack.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07734829",
	"publication_date": "2010-06-08",
	"application_number": "10864266",
	"application_date": "2004-06-09",
	"tags": null,
	"slug": "methods-systems-and-computer-program-products-for-transparently-controlling-communications-between-network-applications-and-a-plurality-of-network-communications-protocol-stacks-using-deferred-protocol-stack-association",
	"match_type": "description"
},
{
	"name": "Mirrored storage architecture using continuous data protection techniques",
	"summary": "",
	"abstract": "Systems and methods for performing replication operations on a continuous data protection system. Exemplary systems include a continuous data protection system configured to save a series of transactions of a production application, the continuous data protection system configured to allow a point in time view of the series of transactions, a replication application communicating with the continuous data protection system, the replication application configured to initiate generation of at least one pseudosnapshot of the series of transactions saved on the continuous data protection system and initiate surfacing of a copy of at least a portion of the series of transactions that were saved before the generation of the at least one pseudosnapshot, and a storage device communicating with the continuous data protection system, the storage device configured to read the surfaced copy and save a first copy of the surfaced copy.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07689597",
	"publication_date": "2010-03-30",
	"application_number": "11381336",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "mirrored-storage-architecture-using-continuous-data-protection-techniques",
	"match_type": "description"
},
{
	"name": "Object tree walking",
	"summary": "",
	"abstract": "A request to access a content management related service is obtained, where the request is associated with an object tree. The object tree is walked to obtain information associated with the object tree. A set of one or more service context rules associated with the content management related service is determined. The object tree is processed using the set of service context rules so that the content management related service is able to properly operate using the processed information.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07792979",
	"publication_date": "2010-09-07",
	"application_number": "11824477",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": "object-tree-walking",
	"match_type": "description"
},
{
	"name": "Path determination using preferred paths or randomly selecting source and target ports",
	"summary": "",
	"abstract": "Described is a distributed copying technique that may be used in migrating large amounts of data from one or more source devices to one or more destination devices. The data source is divided into partitions. As Fibre Channel adapters (FAs) become available, each of the FAs may copy a partition of the data. In connection with specifying paths used for the distributed copying technique, a preferred path selection (source port-target port mapping) may be made by executing code in a controlling data storage system to perform discovery processing. The preferred path selection is used for the duration of the distributed copying unless the preferred path is unable to transmit data. A target port of the preferred path may be randomly selected from all accessible target ports, and/or in accordance with a specified portion of the target ports. Preferred paths may also be specified using an API (application programming interface).",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07707331",
	"publication_date": "2010-04-27",
	"application_number": "11014338",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": "path-determination-using-preferred-paths-or-randomly-selecting-source-and-target-ports",
	"match_type": "abstract"
},
{
	"name": "Prioritizing archived email requests",
	"summary": "",
	"abstract": "An email archive system and associated techniques are described. Archived emails may be stored locally on a user's client computer in a local archive store. The email archive system and associated techniques may interact with an email message system and an email client application.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07730147",
	"publication_date": "2010-06-01",
	"application_number": "11784171",
	"application_date": "2007-04-05",
	"tags": null,
	"slug": "prioritizing-archived-email-requests",
	"match_type": "description"
},
{
	"name": "Pseudosnapshot creation and implementation using continuous data protection",
	"summary": "",
	"abstract": "Systems and methods for performing replication operations on a continuous data protection system. In one embodiment, a method includes identifying at least a portion of the series of transactions on the continuous data protection system to be included in the pseudosnapshot, identifying an initial time at which the pseudosnapshot begins, identifying a final time at which the pseudosnapshot ends, identifying a last transaction before the final time at which the pseudosnapshot ends, and creating an event marker identifying a particular point in time that the last transaction was saved on the continuous data protection system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07765190",
	"publication_date": "2010-07-27",
	"application_number": "11381339",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "pseudosnapshot-creation-and-implementation-using-continuous-data-protection",
	"match_type": "description"
},
{
	"name": "Selection of a data path based on one or more performance characteristics of a computer system",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to techniques for selecting a data path over which to exchange information between a client device and a storage system by making a selection between a file system server (NAS) data path type (a first data path type) and a direct (SAN) data path type (a second data path type) based on one or more adjustable path selection factors and/or information regarding components of the computer system. For example, a data path may be selected based on one or more performance characteristics of a computer system in which a path selection module is acting and/or any other suitable path selection factor.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07688753",
	"publication_date": "2010-03-30",
	"application_number": "11966662",
	"application_date": "2007-12-28",
	"tags": null,
	"slug": "selection-of-a-data-path-based-on-one-or-more-performance-characteristics-of-a-computer-system",
	"match_type": "description"
},
{
	"name": "Software configuration methods and common presentation layer",
	"summary": "",
	"abstract": "Methods and systems for backing up data of a client connected to a server. The methods and systems include operating a graphical user interface for displaying to a user information about the data of a client. At an administrator module and client module, initiating one or more wizard program modules including dynamic link libraries configured to carry a user through the steps to complete a backup function, each wizard program module having one or more application programming interfaces which allow the wizard program modules to communicate with the operating system on which the administrator module or client module is operating. A common presentation layer can also be included to provide one or more common user interface screens which are insertable into each wizard program module.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07716684",
	"publication_date": "2010-05-11",
	"application_number": "10997580",
	"application_date": "2004-11-24",
	"tags": null,
	"slug": "software-configuration-methods-and-common-presentation-layer",
	"match_type": "abstract"
},
{
	"name": "Techniques for collecting critical information from a memory dump",
	"summary": "",
	"abstract": "Described are techniques for processing a memory dump file. It is determined whether a memory dump file associated with a previous processor failure exists. In response to determining that the memory dump file exists, preliminary analysis of the memory dump file is performed. The determining step and the preliminary analysis are performed as part of rebooting a processor from the previous failure of the processor.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07788537",
	"publication_date": "2010-08-31",
	"application_number": "11372651",
	"application_date": "2006-03-10",
	"tags": null,
	"slug": "techniques-for-collecting-critical-information-from-a-memory-dump",
	"match_type": "description"
},
{
	"name": "Techniques for managing configuration information among different physical devices",
	"summary": "",
	"abstract": "A technique involves managing configuration information used by an application. The technique involves disposing a first file in a first physical device. The first file includes first configuration information. The technique further involves disposing a second file in a second physical device. The second file includes second configuration information. The second physical device is different than the first physical device. The technique further involves providing access to a top level file having a first path string to the first file in the first physical device and a second path string to the second file in the second physical device. The top level file in combination with the first and second files operates as a single virtual document which includes the first configuration information of the first file and the second configuration information of the second file.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07680832",
	"publication_date": "2010-03-16",
	"application_number": "11824431",
	"application_date": "2007-06-29",
	"tags": null,
	"slug": "techniques-for-managing-configuration-information-among-different-physical-devices",
	"match_type": "description"
},
{
	"name": "Techniques for overriding device reservations",
	"summary": "",
	"abstract": "Described are techniques for overriding an existing device reservation. Discovery processing is performed by a first data storage system to locate a specified device. The discovery processing includes determining whether there is a reservation conflict for said device of a second data storage system. If there is a reservation conflict for the device, a command is issued from the first data storage system to the second data storage system during said discovery processing to create an override for said reservation conflict. The override causes processing to be performed at a subsequent point in time so that an existing reservation associated with the reservation conflict is overridden in connection with performing a first process on said first data storage system.",
	"url": null,
	"owner": "EMC Corporation",
	"publication_number": "07689786",
	"publication_date": "2010-03-30",
	"application_number": "11540018",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "techniques-for-overriding-device-reservations",
	"match_type": "description"
},
{
	"name": "Method for synchronized trunk failover and failback in a FC-AL switching environment",
	"summary": "",
	"abstract": "The synchronization of trunk failover between two FC-AL switches when a primary trunk failure occurs is disclosed. If primary trunk T should fail, S bypasses the cascade port and sends a MaRK (MRK) ordered set out over duplicate trunk T to switch S. In response, S sends an acknowledgement MRK ordered set over T back to S. S then reconfigures the switch to establish T as the primary trunk, and acts as a masters in the failover process and initiates LIP ordered sets which are communicated to all devices in the system to initialize them. Note that when S receives the MRK ordered set and acknowledges it by sending an acknowledgement MRK back to S, it acts as a slave in the failover process and does not attempt to initiate LIPs, thereby eliminating the possibility of multiple Loop Initialization cycles and reducing the time in which data cannot be transmitted.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07724654",
	"publication_date": "2010-05-25",
	"application_number": "11210025",
	"application_date": "2005-08-22",
	"tags": null,
	"slug": "method-for-synchronized-trunk-failover-and-failback-in-a-fcal-switching-environment",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for device access fairness in fibre channel arbitrated loop systems",
	"summary": "",
	"abstract": "Methods and apparatus for switching Fibre Channel Arbitrated Loop Systems is provided between a plurality of Fibre Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07660316",
	"publication_date": "2010-02-09",
	"application_number": "10616862",
	"application_date": "2003-07-10",
	"tags": null,
	"slug": "methods-and-apparatus-for-device-access-fairness-in-fibre-channel-arbitrated-loop-systems",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for switching fibre channel arbitrated loop devices",
	"summary": "",
	"abstract": "Methods and apparatus for switching Fiber Channel Arbitrated Loop Systems is provided between a plurality of Fiber Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.",
	"url": null,
	"owner": "Emulex Design & Manufacturing Corporation",
	"publication_number": "07664018",
	"publication_date": "2010-02-16",
	"application_number": "10612753",
	"application_date": "2003-07-01",
	"tags": null,
	"slug": "methods-and-apparatus-for-switching-fibre-channel-arbitrated-loop-devices",
	"match_type": "description"
},
{
	"name": "Distributed connection-oriented services for switched communication networks",
	"summary": "",
	"abstract": "Method and apparatus providing connection-oriented services for packet switched data communications networks. Directory services include distributed discovery of MAC addresses and protocol alias addresses. Topology services include a link state topology exchange among switches, which provides each switch with a complete topology graph of the network. This enables an access switch receiving a data packet to determine a complete path from a source end system to a destination end system. Another service includes resolution of broadcast frames to unicast frames, in order to reduce the amount of broadcast traffic. Policy restrictions may be applied prior to connection setup. Path determination services enable multiple paths from a source to a destination. Connection management includes source routed mapping of connections on the desired path. A distributed call rerouting service is provided wherein if a link on an active path fails, each switch receives a topology change notification and unmaps any connection involving the failed link. A broadcast/unknown service provides restricted flooding of nonresolvable packets. Furthermore, connection-oriented switching is provided based on the source and destination MAC addresses as a connection identifier. Still further, resolution of networks outside the switch domain is enabled by access switches listening for network and server route advertisements and maintaining best routes to said networks and servers. The best route metrics may be combined with best path metrics to determine a path from a first access switch to an egress switch connected to the external network.",
	"url": null,
	"owner": "Enterasys, Inc.",
	"publication_number": "07720076",
	"publication_date": "2010-05-18",
	"application_number": "10791655",
	"application_date": "2004-03-01",
	"tags": null,
	"slug": "distributed-connectionoriented-services-for-switched-communication-networks",
	"match_type": "description"
},
{
	"name": "Calibration management for volatile organic compound detector",
	"summary": "",
	"abstract": "A method for calibrating a volatile organic compound (VOC) detector. In one implementation, an initiation request may be received indicating a gas concentration level amount to be used for calibrating a VOC detector. A gas may be provided to the VOC detector according to the gas concentration level amount. The VOC detector may be provided with the gas concentration level amount. A calibration log may be received from the VOC detector. The calibration log may comprise an identifier of the VOC detector, the gas concentration level amount, and a date indicating when the VOC detector received the gas concentration level amount and the gas according to the gas concentration level amount.",
	"url": null,
	"owner": "Environmental Analytics, Inc.",
	"publication_number": "07840366",
	"publication_date": "2010-11-23",
	"application_number": "12032499",
	"application_date": "2008-02-15",
	"tags": null,
	"slug": "calibration-management-for-volatile-organic-compound-detector",
	"match_type": "description"
},
{
	"name": "Hypermedia browser API simulation to enable use of browser plug-ins and applets as embedded widgets in script-language-based interactive programs",
	"summary": "",
	"abstract": "A system is described which provides the capability for high-level extensible scripting language interpreters to incorporate and employ Web browser plug-ins as components within script-based programs. A script interpreter extension is described which simulates the plug-in API interface of a Web browser, from the point of view of the browser plug-in, to allow program scripts to cause browser plug-ins to be launched and manipulated, in a manner similar to the scripting platform's native widgets, from within the executing program script. This system allows embedded external program objects to be used to display and enable interactive processing of embedded data objects.",
	"url": null,
	"owner": "Eolas Technlogies, Inc.",
	"publication_number": "07814157",
	"publication_date": "2010-10-12",
	"application_number": "11058436",
	"application_date": "2005-02-14",
	"tags": null,
	"slug": "hypermedia-browser-api-simulation-to-enable-use-of-browser-plugins-and-applets-as-embedded-widgets-in-scriptlanguagebased-interactive-programs",
	"match_type": "name"
},
{
	"name": "Emergency and non-emergency telecommunications notification system",
	"summary": "",
	"abstract": "Methods and systems for providing electronic notifications are described. A server is configured to serve an interface, such as a Web page, to a terminal that requests from a user a first set of user contacts to be used to provide notifications to the user by a telephonic notification system in response to a notification process initiated by an organization associated with the user. The interface further requests a first set of priorities corresponding to the first set of user contacts, wherein the notification system will attempt to provide notifications to the first set user contracts in an order based at least in part on the first set of priorities. A database is configured to store the first set of user contacts and the first set of priorities. A voice interface circuit is configured to transmit a voice notification to at least one of the first set of user contacts.",
	"url": null,
	"owner": "Everbridge, Inc.",
	"publication_number": "07664233",
	"publication_date": "2010-02-16",
	"application_number": "10877796",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": "emergency-and-nonemergency-telecommunications-notification-system",
	"match_type": "description"
},
{
	"name": "Control system and method therefor",
	"summary": "",
	"abstract": "A flexible control system and method of controlling a processing operation. The control system and method may be employed to control a high speed manufacturing system for processing articles of manufacture requiring processes to be performed on the articles at a pre-selected processing rate includes a trunk for simultaneously conveying a plurality of the articles of manufacture at the pre-selected processing rate in a first mode of motion from the beginning of the manufacturing system to the end of the system. At least one branch processing station is positioned intermediate the beginning and the end of the trunk wherein the branch processing station during its operation performs at least one process on articles of manufacture conveyed on the branch processing station and where the articles are conveyed in a second mode of motion. At least one transfer device is positioned intermediate the trunk and the branch processing station to continuously extract articles of manufacture from the trunk and transition the movement of the extracted articles of manufacture from the first mode of motion to the second mode of motion for transfer to the branch processing station. The transfer device also extracts each of the processed articles of manufacture from the branch processing station and transitions the movement of the articles from the second mode of motion to the first mode of motion for transfer to the trunk.",
	"url": null,
	"owner": "Eveready Battery Company, Inc.",
	"publication_number": "07831323",
	"publication_date": "2010-11-09",
	"application_number": "11621837",
	"application_date": "2007-01-10",
	"tags": null,
	"slug": "control-system-and-method-therefor",
	"match_type": "description"
},
{
	"name": "Publishing techniques for adding value to a rendered document",
	"summary": "",
	"abstract": "A system for processing a visual capture operation as described. The system receives an indication of a visual capture operation performed from a rendered document. The indication specifies both a text sequence capture as part of the capture operation and a supplemental marking captured as part of the capture operation. The system determines an action to perform in response to receiving the indication, based both upon the text sequence specified in the indication and the supplemental markings specified by the indication.",
	"url": null,
	"owner": "Exbiblio B. V.",
	"publication_number": "07831912",
	"publication_date": "2010-11-09",
	"application_number": "11097835",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": "publishing-techniques-for-adding-value-to-a-rendered-document",
	"match_type": "description"
},
{
	"name": "Adding information or functionality to a rendered document via association with an electronic counterpart",
	"summary": "",
	"abstract": "An action plan data structure for one or more selected rendered documents is described. The data structure contains information specifying an action to perform automatically in response to a text capture from any of the selected rendered documents.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07742953",
	"publication_date": "2010-06-22",
	"application_number": "11097828",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": "adding-information-or-functionality-to-a-rendered-document-via-association-with-an-electronic-counterpart",
	"match_type": "description"
},
{
	"name": "Handheld device for capturing text from both a document printed on paper and a document displayed on a dynamic display device",
	"summary": "",
	"abstract": "A device for capturing rendered text is described. The device incorporates one or more visual sensors that receive visual information as a part of capturing rendered text. The visual sensors are collectively capable of capturing both text that is permanently printed on a page, and text that is displayed transitorily on a dynamic device. The device further incorporates a visual information disposition subsystem for disposing of visual information received by the visual sensors. The device further incorporates a package that bears the visual sensors and the visual information disposition subsystem, and is suitable to be held in a human hand.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07812860",
	"publication_date": "2010-10-12",
	"application_number": "11236330",
	"application_date": "2005-09-27",
	"tags": null,
	"slug": "handheld-device-for-capturing-text-from-both-a-document-printed-on-paper-and-a-document-displayed-on-a-dynamic-display-device",
	"match_type": "description"
},
{
	"name": "Method and system for character recognition",
	"summary": "",
	"abstract": "Character recognition is described. In one embodiment, it may use matched sequences rather than character shape to determine a computer-legible result.",
	"url": null,
	"owner": "Exbiblio B.V.",
	"publication_number": "07706611",
	"publication_date": "2010-04-27",
	"application_number": "11210260",
	"application_date": "2005-08-23",
	"tags": null,
	"slug": "method-and-system-for-character-recognition",
	"match_type": "description"
},
{
	"name": "Processing techniques for text capture from a rendered document",
	"summary": "",
	"abstract": "A facility for initiating a purchase is described. The facility receives a text sequence captured by a user from a rendered document using a handheld text capture device. The facility identifies in the received text sequence a reference to a distinguished product. In response to identifying the reference, the facility presents to the user an opportunity to place an order for the established product. If the user accepts the presented opportunity to order the distinct product, the facility orders the distinct product on behalf of the user.",
	"url": null,
	"owner": "Exbiblio, B.V.",
	"publication_number": "07818215",
	"publication_date": "2010-10-19",
	"application_number": "11131945",
	"application_date": "2005-05-17",
	"tags": null,
	"slug": "processing-techniques-for-text-capture-from-a-rendered-document",
	"match_type": "description"
},
{
	"name": "Processing techniques for visual capture data from a rendered document",
	"summary": "",
	"abstract": "A facility for navigating an electronic document is described. The facility receives user input selecting a portion of the content of a rendered document that constitutes a sentence fragment. In response to receiving the user input, the facility identifies an electronic document contained in a corpus of electronic documents, the identified electronic document containing the selected document portion. In response to receiving the user input, the facility further identifies a position within the identified electronic document at which the selected document portion occurs.",
	"url": null,
	"owner": "Exbiblio, B.V.",
	"publication_number": "07702624",
	"publication_date": "2010-04-20",
	"application_number": "11110353",
	"application_date": "2005-04-19",
	"tags": null,
	"slug": "processing-techniques-for-visual-capture-data-from-a-rendered-document",
	"match_type": "description"
},
{
	"name": "Method and system for high performance integration, processing and searching of structured and unstructured data using coprocessors",
	"summary": "",
	"abstract": "Disclosed herein is a method and system for integrating an enterprise's structured and unstructured data to provide users and enterprise applications with efficient and intelligent access to that data. Queries can be directed toward both an enterprise's structured and unstructured data using standardized database query formats such as SQL commands. A coprocessor can be used to hardware-accelerate data processing tasks (such as full-text searching) on unstructured data as necessary to handle a query. Furthermore, traditional relational database techniques can be used to access structured data stored by a relational database to determine which portions of the enterprise's unstructured data should be delivered to the coprocessor for hardware-accelerated data processing.",
	"url": null,
	"owner": "Exegy Incorporated",
	"publication_number": "07660793",
	"publication_date": "2010-02-09",
	"application_number": "11938709",
	"application_date": "2007-11-12",
	"tags": null,
	"slug": "method-and-system-for-high-performance-integration-processing-and-searching-of-structured-and-unstructured-data-using-coprocessors",
	"match_type": "description"
},
{
	"name": "Method and system for high speed options pricing",
	"summary": "",
	"abstract": "A high speed technique for options pricing in the financial industry is disclosed that can provide both high throughput and low latency. A parallel/pipelined architecture is disclosed for computing an implied volatility in connection with an option. Parallel/pipelined architectures are also disclosed for computing an option's theoretical fair price. Preferably these parallel/pipelined architectures are deployed in hardware, and more preferably reconfigurable logic such as Field Programmable Gate Arrays (FPGAs) to accelerate the options pricing operations relative to conventional software-based options pricing operations.",
	"url": null,
	"owner": "Exegy Incorporated",
	"publication_number": "07840482",
	"publication_date": "2010-11-23",
	"application_number": "11760211",
	"application_date": "2007-06-08",
	"tags": null,
	"slug": "method-and-system-for-high-speed-options-pricing",
	"match_type": "description"
},
{
	"name": "System and method for providing a remote user interface for an application executing on a computing device",
	"summary": "",
	"abstract": "A system that includes a computing device configured to execute a software application and at least one remote user interface (UI) communicatively coupled to the computing device via a data communication network. The remote UI includes at least one hardware device such as a video, audio or user input/output (I/O) device. The computing device is further configured to emulate the hardware device locally and to redirect function calls generated by the software application for the emulated local hardware device to the remote UI for processing by the hardware device.",
	"url": null,
	"owner": "Exent Technologies, Ltd.",
	"publication_number": "07844442",
	"publication_date": "2010-11-30",
	"application_number": "11204363",
	"application_date": "2005-08-16",
	"tags": null,
	"slug": "system-and-method-for-providing-a-remote-user-interface-for-an-application-executing-on-a-computing-device",
	"match_type": "description"
},
{
	"name": "Software and metadata structures for distributed and interactive database architecture for parallel and asynchronous data processing of complex data and for real-time query processing",
	"summary": "",
	"abstract": "The various embodiments of the invention provide software and metadata structures for a data processing system and method, for applications such as marketing campaign management, speech recognition and signal processing. An exemplary system embodiment includes a first data repository adapted to store a plurality of entity and attribute data; a second data repository adapted to store a plurality of entity linkage data; a metadata data repository adapted to store a plurality of metadata modules, with a first metadata module having a plurality of selectable parameters, received through a control interface, and having a plurality of metadata linkages to a first subset of metadata modules; and a multidimensional data structure. The control interface may modify the plurality of selectable parameters in response to received control information. A plurality of processing nodes are adapted to use the plurality of selectable parameters to assemble a first plurality of data from the first and second data repositories and from input data, to reduce the first plurality of data to form a second plurality of data, and to aggregate and dimension the second plurality of data for storage in the multidimensional data structure.",
	"url": null,
	"owner": "Experian Marketing Solutions, Inc.",
	"publication_number": "07707163",
	"publication_date": "2010-04-27",
	"application_number": "11151137",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": "software-and-metadata-structures-for-distributed-and-interactive-database-architecture-for-parallel-and-asynchronous-data-processing-of-complex-data-and-for-realtime-query-processing",
	"match_type": "description"
},
{
	"name": "Ranking search results based on the frequency of clicks on the search results by members of a social network who are within a predetermined degree of separation",
	"summary": "",
	"abstract": "Search results, including sponsored links and algorithmic search results, are generated in response to a query, and are marked based on frequency of clicks on the search results by members of social network who are within a predetermined degree of separation from the member who submitted the query. The markers are visual tags and comprise either a text string or an image.",
	"url": null,
	"owner": "Facebook, Inc.",
	"publication_number": "07788260",
	"publication_date": "2010-08-31",
	"application_number": "10967609",
	"application_date": "2004-10-18",
	"tags": null,
	"slug": "ranking-search-results-based-on-the-frequency-of-clicks-on-the-search-results-by-members-of-a-social-network-who-are-within-a-predetermined-degree-of-separation",
	"match_type": "description"
},
{
	"name": "ASP business decision engine",
	"summary": "",
	"abstract": "A decision engine is provided that integrates all components of a credit application process, including access to and manipulation of credit bureau data, credit scoring, credit decisioning, and matching the correct products, into a single application service provider (ASP) platform which is accessible through a series of Application Programming Interfaces (APIs).",
	"url": null,
	"owner": "Fair Isaac Corporation",
	"publication_number": "07734522",
	"publication_date": "2010-06-08",
	"application_number": "11971858",
	"application_date": "2008-01-09",
	"tags": null,
	"slug": "asp-business-decision-engine",
	"match_type": "abstract"
},
{
	"name": "Message integration framework for multi-application systems",
	"summary": "",
	"abstract": "A system and method for integrating messages across multiple applications. The applications may be on one server or on several servers, and each application may service one or more e-clients. The system and method securely segregates the data for each e-client. Further, the system can be dynamically reconfigured by adding or deleting new messages and/or applications, without affecting the performance of the unchanged parts of the system. The various applications using the system need not be aware of the existence of the other applications.",
	"url": null,
	"owner": "Fair Isaac Corporation",
	"publication_number": "07712107",
	"publication_date": "2010-05-04",
	"application_number": "11428343",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "message-integration-framework-for-multiapplication-systems",
	"match_type": "description"
},
{
	"name": "Collateral valuation confidence scoring system",
	"summary": "",
	"abstract": "Confidence scoring entails receipt of a predicted property value for a given property, where the predicted property value is determined based upon application of a property value prediction model. A set of values corresponding to input factors is determined for the property value prediction model, and model parameters are estimated based upon those values. A confidence score for the predicted property value is then calculated using a confidence scoring model and the model parameters. The confidence score is preferably provided as an accuracy probability. This may further be in the form of a probability that the predicted property value has an error within a specified range, such as a specified range expressed in terms of a percentage error.",
	"url": null,
	"owner": "Fannie Mae",
	"publication_number": "07729965",
	"publication_date": "2010-06-01",
	"application_number": "11114252",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": "collateral-valuation-confidence-scoring-system",
	"match_type": "description"
},
{
	"name": "Multiple transaction property valuation",
	"summary": "",
	"abstract": "Property valuation that uses multiple transactions in predicting a value for a property. Instead of choosing only one prior transaction, valuation uses multiple transactions for a given property to provide a more accurate mark-to-market value. Preferably, a weighted combination of mark-to-market values provided by an HPI and individual ones of the multiple transaction records provide a predicted value for the given property. Weighting factors recency and transaction type to correct for both sources of potential inaccuracy.",
	"url": null,
	"owner": "Fannie Mae",
	"publication_number": "07831492",
	"publication_date": "2010-11-09",
	"application_number": "11033980",
	"application_date": "2005-01-12",
	"tags": null,
	"slug": "multiple-transaction-property-valuation",
	"match_type": "description"
},
{
	"name": "System and method for providing a common data and analytic framework for valuating financial instruments and portfolios",
	"summary": "",
	"abstract": "A distributed system that provides a common data and analytic model platform for enabling users of different applications to evaluate financial instruments. The system includes multiple user applications, and a computer network with multiple analytic servers that each includes simulation models for evaluating the financial instruments. The computer network also includes components which accept requests from the user applications, executes each request against an appropriate simulation model and returns results from the simulation model to the user application.",
	"url": null,
	"owner": "Fannie Mae",
	"publication_number": "07792714",
	"publication_date": "2010-09-07",
	"application_number": "10324097",
	"application_date": "2002-12-20",
	"tags": null,
	"slug": "system-and-method-for-providing-a-common-data-and-analytic-framework-for-valuating-financial-instruments-and-portfolios",
	"match_type": "description"
},
{
	"name": "Systems and methods for infrastructure validation",
	"summary": "",
	"abstract": "Systems and method are provided for testing an infrastructure. The infrastructure may include one or more computers connected by a network. Moreover, each of the computers may include an agent. In one embodiment, the method includes receiving, at a controller, a test request to perform at least one of a plurality of predetermined tests, the predetermined test including one or more parameters associated with performing the predetermined test and one or more expected results from performing the predetermined test. The method further includes determining whether the predetermined test is available at one of the computers. The method also includes sending, by the controller, the predetermined test to one of the computers based on the results of the determining step, such that the agent at the computer performs the predetermined test sent by the controller. Furthermore, the method includes receiving, at the controller, one or more results of the predetermined test performed by the agent at the computer.",
	"url": null,
	"owner": "Federal Home Loan Mortgage Corporation (Freddie Mac)",
	"publication_number": "07743090",
	"publication_date": "2010-06-22",
	"application_number": "11349184",
	"application_date": "2006-02-08",
	"tags": null,
	"slug": "systems-and-methods-for-infrastructure-validation",
	"match_type": "description"
},
{
	"name": "Systems, methods, and computer-readable storage media for analyzing HMDA data",
	"summary": "",
	"abstract": "Systems, methods, and computer-readable storage media are described for normalizing HMDA data. In one exemplary embodiment, a computer-implemented method of normalizing HMDA data comprises receiving HMDA data including at least one of HMDA data reports and loan-level public HMDA data, the HMDA data having information that varies as a function of time; correcting errors in the HMDA data; normalizing the HMDA data across any variation in the information; summarizing the normalized HMDA data; and outputting the summarized and normalized HMDA data to an application for analysis.",
	"url": null,
	"owner": "Federal Home Loan Mortgage Corporation (Freddie Mac)",
	"publication_number": "07729961",
	"publication_date": "2010-06-01",
	"application_number": "12081307",
	"application_date": "2008-04-14",
	"tags": null,
	"slug": "systems-methods-and-computerreadable-storage-media-for-analyzing-hmda-data",
	"match_type": "description"
},
{
	"name": "Graphical automated machine control and metrology",
	"summary": "",
	"abstract": "A graphical programming system allows a user to place geometric shapes onto a scaled image, the shape having associated behavior that operates on the image or on the object of which the image is formed. In a preferred embodiment, the shapes are objects in the Visio program by Microsoft Corporation. The shapes are dragged from a stencil onto an image provided by ion beam or electron microscope image. The shape invokes software or hardware to locate and measure features on the image or to perform operations, such as ion beam milling, on the object that is imaged.",
	"url": null,
	"owner": "FEI Company",
	"publication_number": "07664566",
	"publication_date": "2010-02-16",
	"application_number": "11932640",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "graphical-automated-machine-control-and-metrology",
	"match_type": "description"
},
{
	"name": "Method and system for facilitating payment of an online auction transaction",
	"summary": "",
	"abstract": "A method for enabling two individual consumers to complete a transaction that includes payment from one consumer (the payor, or buyer) to another consumer (the payee, or seller). An intermediary typically operates the service over a computer network of nodes, such as the Internet. The buyer has the convenience of paying through a variety of different payment instruments. Likewise, the seller has the convenience of receiving payment through a variety of different disbursement instruments. For a fee, the intermediary collects the payment from the buyer and pays the seller. Although the intermediary may receive payment from the buyer before the intermediary transfers the payment to the seller, the intermediary may choose to pay the seller before receiving payment from the buyer. In this case, the intermediary assumes the risk of nonpayment by the buyer. Alternatively, the intermediary may pay a third party that specializes in processing transactions for the payment instrument chosen by the buyer to assume the risk of nonpayment by the buyer. In this case, the intermediary receives a promise of payment from the third party before the intermediary pays the seller. Such a promise of payment from the third party is referred to as an authorization.",
	"url": null,
	"owner": "First Data Corporation",
	"publication_number": "07765148",
	"publication_date": "2010-07-27",
	"application_number": "11673731",
	"application_date": "2007-02-12",
	"tags": null,
	"slug": "method-and-system-for-facilitating-payment-of-an-online-auction-transaction",
	"match_type": "description"
},
{
	"name": "On-line cash register to use in providing a consumer-to-consumer payment service",
	"summary": "",
	"abstract": "A method for enabling two individual consumers to complete a transaction that includes payment from one consumer (the payor, or buyer) to another consumer (the payee, or seller). An intermediary typically operates the service over a computer network of nodes, such as the Internet. The buyer has the convenience of paying through a variety of different payment instruments. Likewise, the seller has the convenience of receiving payment through a variety of different disbursement instruments. For a fee, the intermediary collects the payment from the buyer and pays the seller. Although the intermediary may receive payment from the buyer before the intermediary transfers the payment to the seller, the intermediary may choose to pay the seller before receiving payment from the buyer. In this case, the intermediary assumes the risk of nonpayment by the buyer. Alternatively, the intermediary may pay a third party that specializes in processing transactions for the payment instrument chosen by the buyer to assume the risk of nonpayment by the buyer. In this case, the intermediary receives a promise of payment from the third party before the intermediary pays the seller. Such a promise of payment from the third party is referred to as an authorization.",
	"url": null,
	"owner": "First Data Corporation",
	"publication_number": "07797235",
	"publication_date": "2010-09-14",
	"application_number": "11673702",
	"application_date": "2007-02-12",
	"tags": null,
	"slug": "online-cash-register-to-use-in-providing-a-consumertoconsumer-payment-service",
	"match_type": "description"
},
{
	"name": "Online reduction in repair and maintenance costs",
	"summary": "",
	"abstract": "The present invention provides an automated invoice vetting, negotiation and payment system that automatically collects goods and labors hour data, sets a reasonable pricing structure for each such good and service, dynamically analyzes the price data to adjust for market changes and provides a automatic negotiation and settlement feature for bill payment. The present invention readily accommodates the above features over electronic networks such as the Internet. The present invention therefore provides a method of payment of invoices of vendors by purchasers, comprising providing a settlement authority with invoice information from a vendor, comparing the invoice charges to a predetermined range of values for the charges, accepting the charges that are within a predetermined sub-range for the charges, adjusting the charges that are greater or less than that the predetermined sub-range for the charges and paying the accepted charges and the adjusted charges.",
	"url": null,
	"owner": "First Service Networks, Inc.",
	"publication_number": "07685076",
	"publication_date": "2010-03-23",
	"application_number": "11034689",
	"application_date": "2005-01-13",
	"tags": null,
	"slug": "online-reduction-in-repair-and-maintenance-costs",
	"match_type": "description"
},
{
	"name": "Electronic item management and archival system and method of operating the same",
	"summary": "",
	"abstract": "An electronic item management and archival system for managing and archiving items. Each item includes at least one of image data, audio data, and video data. The system includes a server configured to receive items, archive at least one of the received items to an archive, and retrieve at least one of the archived items from the archive. In some embodiments, the server also includes architecture that supports a pool of threads promoting multiple, independent archive and retrieve operations concurrently.",
	"url": null,
	"owner": "Fiserv Incorporated",
	"publication_number": "07752286",
	"publication_date": "2010-07-06",
	"application_number": "12052925",
	"application_date": "2008-03-21",
	"tags": null,
	"slug": "electronic-item-management-and-archival-system-and-method-of-operating-the-same",
	"match_type": "description"
},
{
	"name": "Apparatus and method for merging wireless data into an established process control system",
	"summary": "",
	"abstract": "A method and system of communicating between a wireless network and a process control system communicatively coupled to a server via a process control system interface, such as OPC or a proprietary API. The wireless network may be a mesh network and the server may be a mesh server. The server receives data from the wireless network, where the data is generated from an input/output data point within the wireless network. The server maps the data between the input/output data point and a data point placeholder within the process control system. The server writes the mapped data to the corresponding data point placeholder of the process control system via the process control interface, and the mapped data is provided to the process control system as process control data native to the process control system. Process control data may also be provided to the server, mapped between a data point placeholder of the process control system and an input/output data point of the wireless network, and the mapped process control data is written to the corresponding input/output data point.",
	"url": null,
	"owner": "Fisher-Rosemount Systems, Inc.",
	"publication_number": "07822802",
	"publication_date": "2010-10-26",
	"application_number": "11537489",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "apparatus-and-method-for-merging-wireless-data-into-an-established-process-control-system",
	"match_type": "description"
},
{
	"name": "Wireless data output method for rendering digital content accessed from a mobile information apparatus",
	"summary": "",
	"abstract": "An electronic system and method of pervasive output allow an information apparatus to output data content conveniently to virtually any output device. One method includes establishing a communication channel between the information apparatus and an output device and receiving at the information apparatus over the communication channel an attributes corresponding to the output device. The output device may then be selected at the information apparatus based at least in part on the attributes. The data content is delivered to the output device for rendering.",
	"url": null,
	"owner": "Flexiworld Technologies, Inc.",
	"publication_number": "07814209",
	"publication_date": "2010-10-12",
	"application_number": "10016223",
	"application_date": "2001-11-01",
	"tags": null,
	"slug": "wireless-data-output-method-for-rendering-digital-content-accessed-from-a-mobile-information-apparatus",
	"match_type": "description"
},
{
	"name": "Heterogeneous media packet bridging",
	"summary": "",
	"abstract": "Methods and systems are provided for bridging heterogeneous media packets using a single processor resource having a virtual bridge. Network interfaces associated with heterogeneous media channels relay network packets to the virtual bridge. The virtual bridge accesses metadata associated with the relayed network packets and translates the network packets between media formats. The translated network packets are then relayed to an appropriate network interface. In one embodiment, the virtual bridge is dynamically configurable within the processing resource.",
	"url": null,
	"owner": "Fortinet, Inc.",
	"publication_number": "07720095",
	"publication_date": "2010-05-18",
	"application_number": "10650298",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": "heterogeneous-media-packet-bridging",
	"match_type": "description"
},
{
	"name": "Communications system",
	"summary": "",
	"abstract": "A communications system is provided, the system being operable to provide a communications session utilizing an internet protocol, such as for example IPv4, IPv6 and their extensions mobile IPv6 or IPv4. The system includes a mobile node having an application program and an operating system. The application program is operable to provide the communications session using an internet protocol address information. The operating system is operable to monitor the internet protocol address information and to inform the application program of a change of internet protocol address information. The application program is arranged to adapt the communications session in accordance with the change of internet protocol address information. As a result of the operating system informing the application program of a change of the internet protocol address information, the application program can adapt the operation of the communications session to reduce a likelihood of the communications session being affected when the IP address changes.",
	"url": null,
	"owner": "France Telecom",
	"publication_number": "07860069",
	"publication_date": "2010-12-28",
	"application_number": "11090261",
	"application_date": "2005-03-28",
	"tags": null,
	"slug": "communications-system",
	"match_type": "description"
},
{
	"name": "Method and devices for evaluating transmission times and for processing a voice signal received in a terminal connected to a packet network",
	"summary": "",
	"abstract": "A method for evaluating the processing delay of a speech signal contained in data packets received in a receiver terminal having a telephony module during a voice call to a terminal sending the data packets over a packet-switched network. The method includes the step of obtaining from the received data packets a stream of audio packets containing the speech signal. Within a predetermined decoding time, the stream of obtained audio packets is decoded and a first reconstituted speech signal is created. At least a portion of the speech reconstituted by the telephony module is duplicated to create a second reconstituted speech signal. The time difference between the first and the second reconstituted speech signals is determined. The processing delay of the speech signal in the receiver terminal is calculated from at least the determined time difference between the reconstituted first and second speech signals and the predetermined decoding time.",
	"url": null,
	"owner": "France Telecom",
	"publication_number": "07742916",
	"publication_date": "2010-06-22",
	"application_number": "10564243",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": "method-and-devices-for-evaluating-transmission-times-and-for-processing-a-voice-signal-received-in-a-terminal-connected-to-a-packet-network",
	"match_type": "description"
},
{
	"name": "Multimedia aggregation in an online social network",
	"summary": "",
	"abstract": "Multimedia content is featured on user pages of an online social network using embed codes that are generated using a configuration file associated with the source ID for the multimedia content and a content ID for the multimedia content. The configuration file, the source ID and the content ID are stored locally by the online social network so that any changes to the embed codes can be made by changing the configuration file associated with the source and regenerating the embed codes. By managing multimedia content in this manner, greater control can be exercised by the online social network over the multimedia content that are featured on its user pages.",
	"url": null,
	"owner": "Friendster, Inc.",
	"publication_number": "07680882",
	"publication_date": "2010-03-16",
	"application_number": "11682678",
	"application_date": "2007-03-06",
	"tags": null,
	"slug": "multimedia-aggregation-in-an-online-social-network",
	"match_type": "description"
},
{
	"name": "System and method for processing a message store for near duplicate messages",
	"summary": "",
	"abstract": "A system and method for processing a message store for near duplicate messages is provided. Metadata, content, and each attachment associated with messages are extracted. Near duplicate messages in the message store are identified. Compound digests taken of the metadata for, of the content contained in, and of the each attachment associated with each of the messages in the message store are compared. Each message having a compound digest not matching the compound digest of any other message is marked as unique and each message having a compound digest matching the compound digest of at least one other message is marked as an exact duplicate. Messages remaining unmarked and having similar content are grouped into sets that each includes one or more near duplicate messages. One of the near duplicate messages is designated as unique and each remaining near duplicate message in the set is designated as a near duplicate.",
	"url": null,
	"owner": "FTI Technology LLC",
	"publication_number": "07836054",
	"publication_date": "2010-11-16",
	"application_number": "12542581",
	"application_date": "2009-08-17",
	"tags": null,
	"slug": "system-and-method-for-processing-a-message-store-for-near-duplicate-messages",
	"match_type": "description"
},
{
	"name": "Method and system for compensating for parallax in multiple camera systems",
	"summary": "",
	"abstract": "A camera array captures plural component images which are combined into a single scene. In one embodiment, each camera of the array is a fixed digital camera. The images from each camera are warped to a common coordinate system and the disparity between overlapping images is reduced using disparity estimation techniques.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07710463",
	"publication_date": "2010-05-04",
	"application_number": "11345708",
	"application_date": "2006-02-02",
	"tags": null,
	"slug": "method-and-system-for-compensating-for-parallax-in-multiple-camera-systems",
	"match_type": "description"
},
{
	"name": "Methods and systems for extending existing user interfaces",
	"summary": "",
	"abstract": "Methods and systems that can be used to dynamically restructure user interfaces into a set of communicating processes. The methods and systems update new and wrapped legacy user interface components for repurposing of user interfaces. The methods and systems provide for changing one or more of at least an appearance, a behavior, and a state or condition of the user interfaces.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07823070",
	"publication_date": "2010-10-26",
	"application_number": "10739186",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": "methods-and-systems-for-extending-existing-user-interfaces",
	"match_type": "description"
},
{
	"name": "Systems and methods for bookmarking live and recorded multimedia documents",
	"summary": "",
	"abstract": "Systems and methods for bookmarking multimedia documents include displaying multiple multimedia streams, creating bookmarks comprising time signatures and snapshots of each multimedia stream based upon single action cues from a user, associating snapshots with portions of multimedia streams, displaying bookmarks and displaying portions of a multimedia stream associated with selected snapshots.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07730407",
	"publication_date": "2010-06-01",
	"application_number": "10375134",
	"application_date": "2003-02-28",
	"tags": null,
	"slug": "systems-and-methods-for-bookmarking-live-and-recorded-multimedia-documents",
	"match_type": "description"
},
{
	"name": "Systems and methods for displaying text recommendations during collaborative note taking",
	"summary": "",
	"abstract": "Multiple users access a collaborative data-sharing system during a data-sharing event. Each user can establish the level of sharing to be allowed with each other user and filtering criteria for filtering the data before it is provided to the other users. Data can be extracted from a number of different sources, including data input by other users and/or previously created information sources. For example, slides from a presentation on a similar topic may be identified and included by a user as a potential source of information to be used by other users. Shared data can be displayed on devices used by users to communicate with the collaborative data-sharing system. A user can selected data provided by the collaborative data-sharing system, which was obtained from the data input by other users and/or from the identified additional data sources and added to that user's data as data entered by that user.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07680820",
	"publication_date": "2010-03-16",
	"application_number": "10125346",
	"application_date": "2002-04-19",
	"tags": null,
	"slug": "systems-and-methods-for-displaying-text-recommendations-during-collaborative-note-taking",
	"match_type": "description"
},
{
	"name": "Systems and methods for using interaction information to deform representations of digital content",
	"summary": "",
	"abstract": "User behavior while interacting with one or more first representations of digital content can be monitored. Interaction information can be determined by monitoring the user behavior while interacting. Interaction information can include information identifying interaction areas of the first representation, degree of interaction information, and sequence of interaction information. The interaction information can be maintained and used to deform a second representation of digital content. The first and second representations can be of the same or different digital content.",
	"url": null,
	"owner": "Fuji Xerox Co., Ltd.",
	"publication_number": "07836409",
	"publication_date": "2010-11-16",
	"application_number": "10672980",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": "systems-and-methods-for-using-interaction-information-to-deform-representations-of-digital-content",
	"match_type": "description"
},
{
	"name": "Method and system for decoding encoded documents",
	"summary": "",
	"abstract": "A method for decoding encoded markup language documents includes reading a first numeric value from a data document and identifying a data definition associated with the first numeric value. The method further includes reading a second numeric value from a data document and determining, based on a base delimiter value, that the second numeric value comprises an end delimiter of an encoded node. Additionally, the method includes generating a markup-language data structure based on the data definition and information in the encoded node.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07735001",
	"publication_date": "2010-06-08",
	"application_number": "11056524",
	"application_date": "2005-02-11",
	"tags": null,
	"slug": "method-and-system-for-decoding-encoded-documents",
	"match_type": "description"
},
{
	"name": "Task computing",
	"summary": "",
	"abstract": "Task Computing computer system by segmenting the system into a plurality of implementation tiers of a presentation layer, a remote procedure call programming interface (API), a middleware layer to which the presentation layer interfaces via the remote procedure call API to real-time, dynamically generate a computer implemented task interface at the presentation layer to a semantically described source of function as a service on a computer system, and a service layer and a function source realization layer providing the semantically described source of function as the service on the computer system to which the middleware layer interfaces. Real-time and dynamically composing an executable task that comprises one or more services using the generated task interface at the presentation layer to one or more services on the computer based upon the semantically described application-, device- and service-rich computer.",
	"url": null,
	"owner": "Fujitsu Limited",
	"publication_number": "07761885",
	"publication_date": "2010-07-20",
	"application_number": "11115403",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": "task-computing",
	"match_type": "description"
},
{
	"name": "Game of chance and system and method for playing games of chance",
	"summary": "",
	"abstract": "A game of chance is provided in which a wagering game of skill and chance is played electronically automatically according to a predetermined set of rules. Such games of chance may include card games, such as poker and blackjack, or other games, such as dominoes, craps or backgammon. Such games may be reduced to games of chance, removing the element of player skill, and allowing such games to be played outside legal gaming jurisdictions.",
	"url": null,
	"owner": "GameLogic Inc.",
	"publication_number": "07727062",
	"publication_date": "2010-06-01",
	"application_number": "10768980",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": "game-of-chance-and-system-and-method-for-playing-games-of-chance",
	"match_type": "description"
},
{
	"name": "Game of chance and system and method for playing games of chance",
	"summary": "",
	"abstract": "A game of chance is provided in which a predetermined fixed number of winning cell content drawn from a predetermined set of cell content. The drawn content is matched to the content on game cards and if the matched game card content covers a predetermined winning pattern then the game card is a winner. In one example, numerous winners may occur per game session because the game continues until the predetermined fixed number of winning cell content is drawn and not until a win occurs.",
	"url": null,
	"owner": "GameLogic Inc.",
	"publication_number": "07666084",
	"publication_date": "2010-02-23",
	"application_number": "10729826",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": "game-of-chance-and-system-and-method-for-playing-games-of-chance",
	"match_type": "description"
},
{
	"name": "System and method for performing bet protection",
	"summary": "",
	"abstract": "A method of playing a game (e.g., blackjack or other wagering game), where the user is provided with the option of purchasing bet insurance by paying an additional fee at the time the time he/she pays the subscription fee. At a predetermined time during the course of the subscription period, and if the player is below a predetermined number of total points or other standing, the player's bet protection is automatically applied, and the player is refunded his initial subscription fee with the gaming operator keeping the insurance fee. Further, the player is eliminated from the plurality of game sessions for the remaining time of that subscription period.",
	"url": null,
	"owner": "GameLogic Inc.",
	"publication_number": "07722459",
	"publication_date": "2010-05-25",
	"application_number": "11073940",
	"application_date": "2005-03-07",
	"tags": null,
	"slug": "system-and-method-for-performing-bet-protection",
	"match_type": "description"
},
{
	"name": "System and method for playing a role-playing game",
	"summary": "",
	"abstract": "A method and apparatus for playing role-playing game is provided that involves wagering. In one example game, players subscribe to multiple game sessions and eliminate other players to become the sole survivor of the game. The players may accrue points by eliminating other players. Further, players may eliminate other players in a combat environment.",
	"url": null,
	"owner": "GameLogic, Inc.",
	"publication_number": "07854653",
	"publication_date": "2010-12-21",
	"application_number": "11137785",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": "system-and-method-for-playing-a-roleplaying-game",
	"match_type": "description"
},
{
	"name": "Shared listeners in shared object space",
	"summary": "",
	"abstract": "A system for sharing listeners monitoring events occurring in objects shared by multiple applications each running inside its own virtual machine in a computer system.",
	"url": null,
	"owner": "GemStone Systems, Inc.",
	"publication_number": "07689986",
	"publication_date": "2010-03-30",
	"application_number": "10690793",
	"application_date": "2003-10-21",
	"tags": null,
	"slug": "shared-listeners-in-shared-object-space",
	"match_type": "description"
},
{
	"name": "Digital cockpit",
	"summary": "",
	"abstract": "A method for communicating information for pre-defined metrics management of business metrics uses a system including a server and at least one user accessible device communicative with the server. The server has a database and a web interface. The method comprises providing a user with a web interface configurable to a template accommodating business metrics data by the user, and providing visual indications of the status of the business metrics.",
	"url": null,
	"owner": "General Electric Company",
	"publication_number": "07720795",
	"publication_date": "2010-05-18",
	"application_number": "10072391",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": "digital-cockpit",
	"match_type": "description"
},
{
	"name": "Methods and systems for accessing a network-based computer system",
	"summary": "",
	"abstract": "A method for accessing a network-based computer system utilizing a server system that is coupled to a centralized database and at least one client system. The method includes the steps of entering at a client system a single sign on identification (SSO ID) and a single sign on password (SSO password) assigned to a user, receiving at the server system the user's SSO ID and SSO password, authenticating the SSO ID and SSO password by transmitting the SSO ID and SSO password to the database, displaying on the client system after authenticating the entered SSO ID and SSO password each computer system that the user is permissioned to access, selecting a computer system to be accessed by the user, randomly generating a user password at the server system for accessing the selected computer system, transmitting a user identification (user ID) and the randomly generated user password from the server system to the selected computer system; and accessing the selected computer system by the user.",
	"url": null,
	"owner": "General Electric Company",
	"publication_number": "07690025",
	"publication_date": "2010-03-30",
	"application_number": "10406646",
	"application_date": "2003-04-03",
	"tags": null,
	"slug": "methods-and-systems-for-accessing-a-networkbased-computer-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing simplified control for device fault and event handling",
	"summary": "",
	"abstract": "A method identifies, prior to runtime, a first device that is added to a system. Further, the method generates, prior to runtime, a statically precompiled database for the device that provides a first set of error handling data. In addition, the method identifies, during runtime, a second device that is added to the system. Finally, the method generates, during runtime, a dynamically allocated database for the second device that provides a second set of error handling data.",
	"url": null,
	"owner": "General Instrument Corporation",
	"publication_number": "07694185",
	"publication_date": "2010-04-06",
	"application_number": "11697061",
	"application_date": "2007-04-05",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-simplified-control-for-device-fault-and-event-handling",
	"match_type": "description"
},
{
	"name": "Streaming content over an internet protocol network",
	"summary": "",
	"abstract": "Described herein are embodiments that facilitate the streaming of content over an Internet Protocol (IP) network, transparently, in a Network Address Translation (NAT) environment or a non-NAT environment. In one embodiment, there is provided a method for streaming content over an Internet Protocol (IP) network by a content provider having a content control server and a content-streaming server, the method comprising: the content control server receiving a first request from a destination for a content-streaming session; the content control server setting up the content-streaming session in response to the first request; the content-streaming server receiving an upstream message from the destination to establish communication between the content-streaming server and the destination in accordance with the set-up content-streaming session; the content control server receiving a second request to initiate streaming of the content for the set-up content-streaming session; and the content-streaming server streaming the content to the destination in response to the second request.",
	"url": null,
	"owner": "General Instrument Corporation",
	"publication_number": "07788394",
	"publication_date": "2010-08-31",
	"application_number": "11469072",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": "streaming-content-over-an-internet-protocol-network",
	"match_type": "description"
},
{
	"name": "Method and system for modem protocol discrimination",
	"summary": "",
	"abstract": "The invention provides a method of selecting a modem carrier type for data transmission over a wireless communication system. An incoming call is received from a mobile vehicle and then an initial carrier tone is sent to a mobile vehicle in response to the incoming call. A modem response signal is received from a vehicle modem in response to the initial carrier tone. The modem response signal is determined to be either an analog modem response signal or a digital modem response signal, and then the call is connected to either the analog modem or digital modem based on the modem response signal determination.",
	"url": null,
	"owner": "General Motors LLC",
	"publication_number": "07684825",
	"publication_date": "2010-03-23",
	"application_number": "11744397",
	"application_date": "2007-05-04",
	"tags": null,
	"slug": "method-and-system-for-modem-protocol-discrimination",
	"match_type": "description"
},
{
	"name": "Capability-based routing",
	"summary": "",
	"abstract": "In a communications network environment, a distributed software application for monitoring terminal and device capabilities of agents operating on the network and rendering data results of the monitoring to subscribing routing applications is provided. The software application comprises a first portion of the software for collecting and sending data about terminal and device capabilities of the target agents and a second portion of the software for receiving the capability data and for presenting the data in usable form to the subscribing routing applications.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07801111",
	"publication_date": "2010-09-21",
	"application_number": "09800679",
	"application_date": "2001-03-06",
	"tags": null,
	"slug": "capabilitybased-routing",
	"match_type": "description"
},
{
	"name": "Determining presence for interaction routing",
	"summary": "",
	"abstract": "An Internet Protocol Network Telephony call center having a plurality of agents for serving clients also processes e-mails addresses to the call center, but not to specific agents. An e-mail server receives and routes the e-mail, and includes a router and a database storing skill set information regarding agents. The router extracts information from the e-mails, matches key words in the extracted information with key words from the skill sets, and routes the e-mails to appropriate agents having the necessary skills to respond to the service requirements in the e-mails.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07715332",
	"publication_date": "2010-05-11",
	"application_number": "11923910",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "determining-presence-for-interaction-routing",
	"match_type": "description"
},
{
	"name": "User specific support in communications systems",
	"summary": "",
	"abstract": "In a multimedia call center (MMCC) operating through an operating system, a client-specific self-help wizard is provided for active clients and updated periodically with information related to client transaction history with the MMCC. A connected client is presented by the wizard with a selective media function through which the client may a select a media type for interaction and help, and the MMCC will then re-contact the client through the selected media. The client, for example, may select IP or COST telephony, and the MMCC will place a call to the client to a number or IP address listed for the client, and interactivity will then be through an interactive voice response unit. Help information specific to a client is updated in the client's wizard periodically according to ongoing transaction history with the MMCC. The wizard may also monitor client activity with the wizard and make reports available to various persons.",
	"url": null,
	"owner": "Genesys Telecommunications Laboratories, Inc.",
	"publication_number": "07779067",
	"publication_date": "2010-08-17",
	"application_number": "10777847",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": "user-specific-support-in-communications-systems",
	"match_type": "description"
},
{
	"name": "Computer implemented voice markup system and method",
	"summary": "",
	"abstract": "A computer-implemented method and system for processing a service request received from a telephone communication device. The telephony system and method utilizes a call management server and a voice interpreter server. The call management server receives an incoming call from a user, and the voice interpreter server processes the service request contained in the incoming call. Data communication encapsulation is used to communicate data between the call management server and the voice interpreter platform in order to process the service request.",
	"url": null,
	"owner": "Genesys VG, Inc.",
	"publication_number": "07646855",
	"publication_date": "2010-01-12",
	"application_number": "11405275",
	"application_date": "2006-04-17",
	"tags": null,
	"slug": "computer-implemented-voice-markup-system-and-method",
	"match_type": "description"
},
{
	"name": "Java smart card chip having memory area reserved for global variables",
	"summary": "",
	"abstract": "The invention provides a smart card chip having a nonvolatile system memory (ROM, flash), a Java Card Virtual Machine implemented in the nonvolatile system memory (ROM, flash), a nonvolatile application memory (EEPROM, flash), a volatile working memory (RAM) and a variables memory area reserved for global variables, wherein the variables memory area is reserved in the volatile working memory (RAM). The variables memory area is preferably reserved statically. The use of the variables can be limited to system packages and optionally additionally to preloaded (ROM/EEPROM) packages.",
	"url": null,
	"owner": "Giesecke & Devrient GmbH",
	"publication_number": "07702872",
	"publication_date": "2010-04-20",
	"application_number": "10582118",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": "java-smart-card-chip-having-memory-area-reserved-for-global-variables",
	"match_type": "description"
},
{
	"name": "Health monitor for a geographically distributed voice messaging system",
	"summary": "",
	"abstract": "A health monitor subsystem detects and responds to faults within a geographically disperse voice messaging system. The health monitor subsystem comprises agent, manager, interface, and common processes. The agent process monitors a respective voice messaging system component operative on the host. The manager process monitors and manages detected faults on the host. The interface process exposes a status responsive to the host. The common process monitors and manages a platform of hosts. The health monitor subsystem enables monitoring at the component, host, and platform levels.",
	"url": null,
	"owner": "Glenayre Electronics, Inc.",
	"publication_number": "07680254",
	"publication_date": "2010-03-16",
	"application_number": "11170532",
	"application_date": "2005-06-29",
	"tags": null,
	"slug": "health-monitor-for-a-geographically-distributed-voice-messaging-system",
	"match_type": "description"
},
{
	"name": "Method for transferring and separating telephone call data",
	"summary": "",
	"abstract": "The present subject matter relates to apparatus and methodologies for allowing old telephone line capacity to provide near DSL or superior DSL quality telephone connections. A method of handling a telephone call with an associated data package over a telephone system having a power pair of lines and a second pair of communication lines with the steps of: a) determining the types of data desired to create a data group from the group consisting of voice, picture, bio-marker (finger print, retinal scan, etc.), card holder information (credit card number, etc.), DNIS and ANSI call data, generating at least one first byte digital data from at least one first digital data generator; generating at least one second type digital data from at least one second digital data generator; prioritizing the data between the at least one first byte digital data and at least one second type digital data so that the at least one first byte digital data is given priority; determining the bandwidth associated with transmission of the at least one first byte digital data; preferentially sending the at least one first byte of digital data within the bandwidth associated therewith; and adding bandwidth as required to include the at least one second type digital data. The data is separated and forwarded on at a site remote from the phones. Data is carried to the phone as well as away from the phone using this prioritized process.",
	"url": null,
	"owner": "Global Tel*Link Corporation",
	"publication_number": "07643518",
	"publication_date": "2010-01-05",
	"application_number": "10695968",
	"application_date": "2003-10-29",
	"tags": null,
	"slug": "method-for-transferring-and-separating-telephone-call-data",
	"match_type": "description"
},
{
	"name": "Uses of known good code for implementing processor architectural modifications",
	"summary": "",
	"abstract": "In one embodiment, a processor comprises a programmable map and a circuit. The programmable map is configured to store data that identifies at least one instruction for which an architectural modification of an instruction set architecture implemented by the processor has been defined, wherein the processor does not implement the modification. The circuitry is configured to detect the instruction or its memory operands and cause a transition to Known Good Code (KGC), wherein the KGC is protected from unauthorized modification and is provided from an authenticated entity. The KGC comprises code that, when executed, emulates the modification. In another embodiment, an integrated circuit comprises at least one processor core; at least one other circuit; and a KGC source configured to supply KGC to the processor core for execution. The KGC comprises interface code for the other circuit whereby an application executing on the processor core interfaces to the other circuit through the KGC.",
	"url": null,
	"owner": "GLOBALFOUNDRIES Inc.",
	"publication_number": "07831813",
	"publication_date": "2010-11-09",
	"application_number": "11957848",
	"application_date": "2007-12-17",
	"tags": null,
	"slug": "uses-of-known-good-code-for-implementing-processor-architectural-modifications",
	"match_type": "description"
},
{
	"name": "Manufacturing system performance analysis tool software architecture",
	"summary": "",
	"abstract": "A software tool for manufacturing system performance analysis includes modeling and analysis functions. A modeling isolation layer provides user access to the analysis capabilities through object-based model building and analysis invocations. Various model, performance and higher level analyses are performed through analysis modules kept separate from any end-user application programs by the modeling isolation layer.",
	"url": null,
	"owner": "GM Global Technology Operations, Inc",
	"publication_number": "07844420",
	"publication_date": "2010-11-30",
	"application_number": "11198207",
	"application_date": "2005-08-05",
	"tags": null,
	"slug": "manufacturing-system-performance-analysis-tool-software-architecture",
	"match_type": "description"
},
{
	"name": "Access to a target object with desired functionality",
	"summary": "",
	"abstract": "A system and method provide access to a target object associated with a desired functionality. This is accomplished by creating an instance of a pre-existing object, replacing one or more functions of a table shared by all objects of the object's class, and triggering a call that ultimately causes the replacement functions to be called to allow access to the target object. The system includes software portions for enabling the method.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07644416",
	"publication_date": "2010-01-05",
	"application_number": "11057322",
	"application_date": "2005-02-10",
	"tags": null,
	"slug": "access-to-a-target-object-with-desired-functionality",
	"match_type": "description"
},
{
	"name": "Aggregating context data for programmable search engines",
	"summary": "",
	"abstract": "Search results are generated using aggregated context data from two or more contexts. When two or more programmable search engines relate to a similar topic, context data associated with the programmable search engines are aggregated. The context is then applied to a query in order to present, in an integrated manner, relevant search results that make use of context intelligence from more than one programmable search engine.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07716199",
	"publication_date": "2010-05-11",
	"application_number": "11202383",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": "aggregating-context-data-for-programmable-search-engines",
	"match_type": "description"
},
{
	"name": "Custom search index",
	"summary": "",
	"abstract": "A system includes an application programming interface, an indexer, a security unit and at least one search engine. The application programming interface uploads user-selected custom content from a first user. The indexer indexes the custom content to produce a first search index. The security unit authenticates a user and the at least one search engine receives a search query from the user, searches the first search index based on the search query, and searches a second search index based on the search query and based on results of the user authentication, where the second search index is different than the first search index.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07725453",
	"publication_date": "2010-05-25",
	"application_number": "11618327",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": "custom-search-index",
	"match_type": "abstract"
},
{
	"name": "Detecting spam related and biased contexts for programmable search engines",
	"summary": "",
	"abstract": "A programmable search engine system is programmable by a variety of different entities, such as client devices and vertical content sites to customize search results for users. Context files store instructions for controlling the operations of the programmable search engine. The context files are processed by various context processors, which use the instructions therein to provide various pre-processing, post-processing, and search engine control operations. Spam related and biased contexts and search results are identified using offline and query time processing stages, and the context files from vertical content providers associated with such spam and biased context and results are excluded from processing on direct user queries.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07743045",
	"publication_date": "2010-06-22",
	"application_number": "11202382",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": "detecting-spam-related-and-biased-contexts-for-programmable-search-engines",
	"match_type": "description"
},
{
	"name": "Generating landing page variants",
	"summary": "",
	"abstract": "Methods, systems, and apparatus, including computer program products for showing different landing page designs to a user. One method includes displaying an advertisement on a starting page to a user interacting with a client, the advertisement having a hyperlink to an instrumented landing page; in response to the user selecting the advertisement, downloading the instrumented landing page to the client, the instrumented landing page having one or more sections, each section having a corresponding plurality of alternative versions; choosing in the client a combination of one alternative version for each of the one or more sections; generating in the client a landing page variant, each section of the landing page variant being the corresponding alternative version of the section defined by the combination; notifying a server that the instrumented landing page was reached; notifying the server which combination was chosen; and displaying the landing page variant to the user.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07831658",
	"publication_date": "2010-11-09",
	"application_number": "11439384",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": "generating-landing-page-variants",
	"match_type": "description"
},
{
	"name": "Index server architecture using tiered and sharded phrase posting lists",
	"summary": "",
	"abstract": "An information retrieval system uses phrases to index, retrieve, organize and describe documents. Phrases are extracted from the document collection. Documents are the indexed according to their included phrases, using phrase posting lists. The phrase posting lists are stored in an cluster of index servers. The phrase posting lists can be tiered into groups, and sharded into partitions. Phrases in a query are identified based on possible phrasifications. A query schedule based on the phrases is created from the phrases, and then optimized to reduce query processing and communication costs. The execution of the query schedule is managed to further reduce or eliminate query processing operations at various ones of the index servers.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07693813",
	"publication_date": "2010-04-06",
	"application_number": "11694780",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "index-server-architecture-using-tiered-and-sharded-phrase-posting-lists",
	"match_type": "description"
},
{
	"name": "Index updating using segment swapping",
	"summary": "",
	"abstract": "An information retrieval system uses phrases to index, retrieve, organize and describe documents. Phrases are extracted from the document collection. Documents are the indexed according to their included phrases, using phrase posting lists. The phrase posting lists are stored in an cluster of index servers. The phrase posting lists can be tiered into groups, and sharded into partitions. Phrases in a query are identified based on possible phrasifications. A query schedule based on the phrases is created from the phrases, and then optimized to reduce query processing and communication costs. The execution of the query schedule is managed to further reduce or eliminate query processing operations at various ones of the index servers.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07702614",
	"publication_date": "2010-04-20",
	"application_number": "11694789",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "index-updating-using-segment-swapping",
	"match_type": "description"
},
{
	"name": "Processing an image map for display on computing device",
	"summary": "",
	"abstract": "A computer implemented method of processing an image for display on a mobile communication device includes extracting a portion of an image based on an image map. The image map relates to the portion of the image. The method also includes generating a document that comprises the extracted portion of the image and transmitting the generated document to a remote device for display. The method may also include assigning a selectable link to the extracted portion of the image and receiving a request from the remote device for an initial document having the image and image map. Additionally, the method may include storing in a database the generated document and transmitting the stored generated document in response to future requests for the initial document.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07796837",
	"publication_date": "2010-09-14",
	"application_number": "11233288",
	"application_date": "2005-09-22",
	"tags": null,
	"slug": "processing-an-image-map-for-display-on-computing-device",
	"match_type": "description"
},
{
	"name": "Profile based capture component",
	"summary": "",
	"abstract": "An indexing system in a computer system may include applications, a capture processor, a queue, a search engine, and a display processor. The indexing system captures events of user interactions with the applications. Events are queued and if indexable, indexed and stored for user access through the search engine. Capture components in the capture processor can include a keyboard capture component that processes user keystrokes to determine events. A display capture component captures event data from windows associated with the applications. Display event data can be captured on a polling schedule or based on state changes of window elements. To determine target applications and window applications of interest application profiles and window profiles can be used.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07680809",
	"publication_date": "2010-03-16",
	"application_number": "11051317",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": "profile-based-capture-component",
	"match_type": "description"
},
{
	"name": "Programmable search engine",
	"summary": "",
	"abstract": "A programmable search engine system is programmable by a variety of different entities, such as client devices and vertical content sites to customize search results for users. Context files store instructions for controlling the operations of the programmable search engine. The contest files are processed by various context processors, which use the instructions therein to provide various pre-processing, post-processing, and search engine control operations.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07693830",
	"publication_date": "2010-04-06",
	"application_number": "11202423",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": "programmable-search-engine",
	"match_type": "description"
},
{
	"name": "Sharing user distributed search results",
	"summary": "",
	"abstract": "A universal distributed search system allows users to find and distribute search results (possibly including advertisements) to those with whom they communicate. The search results can be easily distributed by the user via a simple interface that allows the search results to be easily added to the user's content. Search queries entered by the user or search results received from search components may be automatically refined by the system.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07844603",
	"publication_date": "2010-11-30",
	"application_number": "11420966",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": "sharing-user-distributed-search-results",
	"match_type": "description"
},
{
	"name": "Starting landing page experiments",
	"summary": "",
	"abstract": "Methods, systems, and apparatus, including computer program products for defining landing pages to test different landing page designs. User input specifies a landing page having sections, each section having an original version of content. User input also specifies one or more additional versions of content, the original and the additional versions together constituting alternative versions, and the landing page with the alternative versions together constituting an experiment. Page fragments are determined. The fragments are added to the landing page and are operable, when interpreted by a client-side browser, to choose one of the alternative versions of each identified section and make each chosen alternative version the content of the corresponding section before the landing page is displayed by the browser. A designer can insert the page fragments into the landing page to produce an instrumented landing page.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07844894",
	"publication_date": "2010-11-30",
	"application_number": "11439498",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": "starting-landing-page-experiments",
	"match_type": "description"
},
{
	"name": "System using router in a web browser for inter-domain communication",
	"summary": "",
	"abstract": "A computer-implemented method for performing inter-domain communication in a web browser includes receiving first data from a first domain at a router associated with one or more domains other than the first domain, identifying at the router the one or more domains for receiving data associated with the received data, and transmitting second data associated with the received data to the one or more domains.",
	"url": null,
	"owner": "Google Inc.",
	"publication_number": "07809785",
	"publication_date": "2010-10-05",
	"application_number": "11754354",
	"application_date": "2007-05-28",
	"tags": null,
	"slug": "system-using-router-in-a-web-browser-for-interdomain-communication",
	"match_type": "description"
},
{
	"name": "Alternate methods of displaying search results",
	"summary": "",
	"abstract": "Methods and systems for displaying search results are set forth. According to one embodiment, a method comprising identifying a user interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, wherein the search result set comprises a first article identifier associated with a first article and a second article identifier associated with a second article, the first article native to the client application and the second article not native to the client application, and displaying the search result set in the user interface is set forth.",
	"url": null,
	"owner": "Google, Inc.",
	"publication_number": "07853606",
	"publication_date": "2010-12-14",
	"application_number": "10940209",
	"application_date": "2004-09-14",
	"tags": null,
	"slug": "alternate-methods-of-displaying-search-results",
	"match_type": "description"
},
{
	"name": "Method and system for accessing web pages based on playback of recordings",
	"summary": "",
	"abstract": "Entertainment content complementary to a musical recording is delivered to a user's computer by a computer network link. The user employs a browser to access the computer network. A plug-in for the browser is able to control an audio CD or other device for playing the musical recording. A script stored on the remote computer accessed over the network is downloaded. The script synchronizes the delivery of the complementary entertainment content with the play of the musical recording.",
	"url": null,
	"owner": "Gracenote, Inc.",
	"publication_number": "07680902",
	"publication_date": "2010-03-16",
	"application_number": "11841784",
	"application_date": "2007-08-20",
	"tags": null,
	"slug": "method-and-system-for-accessing-web-pages-based-on-playback-of-recordings",
	"match_type": "description"
},
{
	"name": "Color computation of pixels using a plurality of vertex or fragment shader programs",
	"summary": "",
	"abstract": "A plurality of vertex or fragment processors on a graphics processor perform computations. Each vertex or fragment processor is capable of executing a separate program to compute a specific result. A combiner manages the combination of the results from the respective processors, and produces a final transformed vertex or pixel value. The vertex or fragment processors and the combiner can be programmable to modify their operations. As such, the vertex or fragment processors can operate in a parallel or serial configuration, or both. The combiner manages and resolves the operations of the serial and/or parallel configurations. A synchronization barrier enables the combiner to perform data-dependency analysis to determine the timing and ordering of the respective processors' execution. A transformation module can include one or more programmable vertex processors that transforms three-dimensional geometric data into fragments. The fragment processors subsequently receive and compute a result for each fragment, which is combined using the combiner to produce the final pixel value.",
	"url": null,
	"owner": "Graphics Properties Holdings, Inc.",
	"publication_number": "07830390",
	"publication_date": "2010-11-09",
	"application_number": "11183848",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": "color-computation-of-pixels-using-a-plurality-of-vertex-or-fragment-shader-programs",
	"match_type": "description"
},
{
	"name": "Method and apparatus for efficient management of XML documents",
	"summary": "",
	"abstract": "A storage manager represents XML-compliant documents as a collection of objects in memory, allowing the storage manager to manipulate the document, or parts of the document, with a consistent interface and to provide for features that are not available in conventional XML documents, such as element attributes with types other than text and documents that contain binary rather than text information. The XML-compliant document may be associated with a schema document which defines the arrangement of the document elements and attributes. The schema data associated with a document can contain a mapping between document elements and program code to be associated with each element. The storage manager further has methods for retrieving the code from the element tag. The retrieved code can then be invoked using attributes and content from the associated element and the element then acts like a conventional object.",
	"url": null,
	"owner": "Groove Networks, Inc.",
	"publication_number": "07721194",
	"publication_date": "2010-05-18",
	"application_number": "11083668",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": "method-and-apparatus-for-efficient-management-of-xml-documents",
	"match_type": "description"
},
{
	"name": "Communications module for controlling the operation of a private branch exchange",
	"summary": "",
	"abstract": "A communications module for communicating between a computer network () and a private branch exchange (), where the communications module is arranged and adapted so as:nn",
	"url": null,
	"owner": "Group 3 Technology Limited",
	"publication_number": "07688964",
	"publication_date": "2010-03-30",
	"application_number": "10473097",
	"application_date": "2002-03-12",
	"tags": null,
	"slug": "communications-module-for-controlling-the-operation-of-a-private-branch-exchange",
	"match_type": "description"
},
{
	"name": "Apparatus and methods of identifying potentially similar content for data reduction",
	"summary": "",
	"abstract": "Apparatus and methods of identifying potentially similar content include utilizing workflow metadata to identify potential similarities in content to be processed, or between content to be processed and known content. As a result, a subset of potentially similar content is identified, and the subset can be used in data reduction operations to reduce data in the content to be processed.",
	"url": null,
	"owner": "Group Logic, Inc.",
	"publication_number": "07836053",
	"publication_date": "2010-11-16",
	"application_number": "11966618",
	"application_date": "2007-12-28",
	"tags": null,
	"slug": "apparatus-and-methods-of-identifying-potentially-similar-content-for-data-reduction",
	"match_type": "description"
},
{
	"name": "Fabric-backplane enterprise servers with VNICs and VLANs",
	"summary": "",
	"abstract": "Virtual Network Interface Controllers (vNICs) provide for communication among modules of Enterprise Server (ES) embodiments via a switch fabric dataplane. Processes executing on compute complexes of the servers exchange data as packets or messages by interfaces made available through vNICs. The vNICs further provide for transparent communication with network and storage interfaces. vNIC provisioning capabilities include programmable bandwidth, priority scheme selection, and detailed priority control (such as round-robin weights). In some embodiments, vNICs are implemented in Virtual Input/Output Controllers (VIOCs). In another aspect, Virtual Local Area Networks (VLANs) enable access to layer-2 and selected layer-3 network functions while exchanging the packets and messages. VLAN identification is provided in each vNIC, and VLAN processing is partially performed in VIOCs implementing vNICs. The compute complexes and interfaces are typically configured as pluggable modules inserted into a backplane included in a chassis.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07860097",
	"publication_date": "2010-12-28",
	"application_number": "11057116",
	"application_date": "2005-02-12",
	"tags": null,
	"slug": "fabricbackplane-enterprise-servers-with-vnics-and-vlans",
	"match_type": "description"
},
{
	"name": "Input/output controller for coupling the processor-memory complex to the fabric in fabric-backplane interprise servers",
	"summary": "",
	"abstract": "A hybrid server and multi-layer switch system architecture, referred to hereinafter as the Enterprise Fabric (EF) architecture, forms the basis for a number of Enterprise Server (ES) chassis embodiments. Each ES embodiment generally includes one or more Processor Memory Modules (PMMs, each generally having one or more symmetric multiprocessor complexes), one or more Network Modules, and a System Control Module (SCM). The SCM includes a cellified switching-fabric core (SF) and a System Intelligence Module (SIM). Each PMM has one or more resident Virtual IO Controller (VIOC) adapters. Each VIOC is a specialized I/O controller that includes embedded layer-2 forwarding and filtering functions and tightly couples the PMM to the SF. Thus the layer-2 switch functionality within the ES chassis is distributed over all of the SCM, NM, and PMM modules. Through the use of VIOC/VNIC device drivers, host operating system software (Host O/S) running on the PMMs is presented with a plurality of Virtual Network Interface Cards (VNICs). In some embodiments, each VNIC behaves as a high-performance Ethernet interface at the full disposal of the Host O/S. In other embodiments, at least some of the VNICs behave as high-performance Fiber Channel Host Bus Adapters.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07664110",
	"publication_date": "2010-02-16",
	"application_number": "11057112",
	"application_date": "2005-02-12",
	"tags": null,
	"slug": "inputoutput-controller-for-coupling-the-processormemory-complex-to-the-fabric-in-fabricbackplane-interprise-servers",
	"match_type": "description"
},
{
	"name": "Real time notice of new resources for provisioning and management of fabric-backplane enterprise servers",
	"summary": "",
	"abstract": "Real time provisioning and management of fabric-backplane enterprise servers includes monitoring system status and configuration, displaying monitoring results, accepting user commands, and providing hardware and software management and configuration commands to the system. In one embodiment, an event is generated when a pluggable module is inserted into the system. In response to the event, the availability of the pluggable module is displayed to a system operator, and the operator enters a command to provision a server that includes the pluggable module. The server provisioning command is processed, resulting in a hardware configuration command being issued to the system, and an event indicating a status associated with processing the command is returned. The recognition of the inserted module, the display to the operator, and the processing of the server provisioning command occur in real time.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07860961",
	"publication_date": "2010-12-28",
	"application_number": "11057113",
	"application_date": "2005-02-12",
	"tags": null,
	"slug": "real-time-notice-of-new-resources-for-provisioning-and-management-of-fabricbackplane-enterprise-servers",
	"match_type": "description"
},
{
	"name": "Storage gateway initiator for fabric-backplane enterprise servers",
	"summary": "",
	"abstract": "Storage gateway remote and local access to storage devices is provided in part via an initiator implementing bandwidth-controlled access to the devices. The initiator may be iSCSI-compatible, and may also optionally implement protection, security, and performance features. The protection and security features include any combination of VLANs, zoning, Logical Unit Number (LUN) masking, and encryption. The performance features include any combination of HW-accelerated Remote Direct Memory Access (RDMA), prioritized I/O operations, and service priority (such as strict priority and straight or weighted round-robin priorities). An initiator may be implemented in a Processor Memory Module (PMM) coupled to a switch fabric that is in turn coupled to a target implemented in a Fibre Channel Module (FCM). Storage traffic may be communicated as Small Computer System Interface (SCSI)- and SCSI over Transmission Control Protocol/Internet Protocol (iSCSI)-compatible information (data and commands) on the switch fabric via cellifying input/output interface devices.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07843906",
	"publication_date": "2010-11-30",
	"application_number": "11256645",
	"application_date": "2005-10-22",
	"tags": null,
	"slug": "storage-gateway-initiator-for-fabricbackplane-enterprise-servers",
	"match_type": "description"
},
{
	"name": "Storage gateway target for fabric-backplane enterprise servers",
	"summary": "",
	"abstract": "Storage gateway remote and local access to storage devices is provided in part via a target implementing bandwidth-controlled access to the devices. The target may be iSCSI-compatible, and may also optionally implement protection, security, and performance features. The protection and security features include any combination of VLANs, zoning, Logical Unit Number (LUN) masking, and encryption. The performance features include any combination of HW-accelerated Remote Direct Memory Access (RDMA), prioritized I/O operations, and service priority (such as strict priority and straight or weighted round-robin priorities). An initiator may be implemented in a Processor Memory Module (PMM) coupled to a switch fabric that is in turn coupled to a target implemented in a Fibre Channel Module (FCM). Storage traffic may be communicated as Small Computer System Interface (SCSI)- and SCSI over Transmission Control Protocol/Internet Protocol (iSCSI)-compatible information (data and commands) on the switch fabric via cellifying input/output interface devices.",
	"url": null,
	"owner": "Habanero Holdings, Inc.",
	"publication_number": "07843907",
	"publication_date": "2010-11-30",
	"application_number": "11256688",
	"application_date": "2005-10-22",
	"tags": null,
	"slug": "storage-gateway-target-for-fabricbackplane-enterprise-servers",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for controlling an imager",
	"summary": "",
	"abstract": "A method of controlling an imager in a portable data collection device. A plurality of data structures are created with each containing a set of values for controlling an exposure process of an imager in a portable data collection device. One of the plurality of data structures is selected and the values therein are applied to the imager. Thereafter, a frame is captured by the imager and outputted.",
	"url": null,
	"owner": "Hand Held Products, Inc.",
	"publication_number": "07798408",
	"publication_date": "2010-09-21",
	"application_number": "11456240",
	"application_date": "2006-07-10",
	"tags": null,
	"slug": "apparatus-and-methods-for-controlling-an-imager",
	"match_type": "description"
},
{
	"name": "Data access architecture",
	"summary": "",
	"abstract": "Methods and apparatuses for remotely accessing data through a wireless device are disclosed. Preferably, the wireless device includes an ability to link data between software components operating on the wireless device. Additionally, the wireless device preferably includes an ability to reduce remote data access by identifying a first data type and a second data type used by a software component, retrieving data corresponding to the first data type from a service provider, retrieving data corresponding to the second data type from the portable device, and displaying on the portable device a return content result including both the first data type and the second data type.",
	"url": null,
	"owner": "Handmark, Inc.",
	"publication_number": "07761871",
	"publication_date": "2010-07-20",
	"application_number": "10598629",
	"application_date": "2005-03-10",
	"tags": null,
	"slug": "data-access-architecture",
	"match_type": "description"
},
{
	"name": "Systems and methods for automating a process of business decision making and workflow",
	"summary": "",
	"abstract": "A system and method for automating a business procedure is disclosed. The workflow management system includes an administrator, a process designer, a workflow database, a process engine and a web client. The system may interact with a form generator and a business application program. The system first analyzes the business process and models the process as a combination of detailed activities. The system assigns the properties to each activity according to the business rules. After modeling the business process and after the business process is initiated, the process engine allocates the workitems to the participant. The system can automate a very complicated business process and can be expanded and adapted to ever-changing business environments.",
	"url": null,
	"owner": "Handysoft Global Corporation",
	"publication_number": "07653566",
	"publication_date": "2010-01-26",
	"application_number": "09725933",
	"application_date": "2000-11-30",
	"tags": null,
	"slug": "systems-and-methods-for-automating-a-process-of-business-decision-making-and-workflow",
	"match_type": "description"
},
{
	"name": "Carrier sense multiple access (CSMA) for non-packetized wireless digital voice networks using intelligent conversation boundary detection",
	"summary": "",
	"abstract": "A communications system includes a plurality of radios that form a carrier sense multiple access (CSMA) wireless communications network and communicate non-packetized digital voice with each other. Each radio is operative for dividing the period following the end of a transmission into a sequence of time slots and determining whether an end of a conversation has occurred. If an end of a conversation has occurred, the system decides randomly or pseudo-randomly with probability p to start transmitting on the channel in that slot.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07792136",
	"publication_date": "2010-09-07",
	"application_number": "11669191",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": "carrier-sense-multiple-access-csma-for-nonpacketized-wireless-digital-voice-networks-using-intelligent-conversation-boundary-detection",
	"match_type": "description"
},
{
	"name": "Communications system using adaptive filter that is selected based on output power",
	"summary": "",
	"abstract": "A communications system receives a modulated signal that carries encoded communications data. An adaptive filter has an input, a plurality of non-adaptive and adaptive filter taps with weighted coefficients, and an output. The received signal is passed through the adaptive filter and around adaptive filter and a switch selects which signal to pass to demodulator based on measured output power of the adaptive filter and of the original received signal. A demodulator and decoder receive the filtered output signal and demodulate and decode the signal to obtain the communications data.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07860200",
	"publication_date": "2010-12-28",
	"application_number": "11871184",
	"application_date": "2007-10-12",
	"tags": null,
	"slug": "communications-system-using-adaptive-filter-that-is-selected-based-on-output-power",
	"match_type": "description"
},
{
	"name": "Generic, reduced state, maximum likelihood decoder",
	"summary": "",
	"abstract": "A decoder includes at least one programming input for a plurality of programmable reduced-state trellis parameters. A programmable device is connected to the at least one programming input and implements a reduced-state maximum likelihood decoder that is operable for processing a continuous phase modulated (CPM) signal and returning up to N bits that were transmitted based on a maximum likelihood and current winning super-state and corresponding survivor full-state. The programmable device calculates the path metrics for every super-state and determines a best path based on the reduced-state trellis parameters.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07831892",
	"publication_date": "2010-11-09",
	"application_number": "11625305",
	"application_date": "2007-01-20",
	"tags": null,
	"slug": "generic-reduced-state-maximum-likelihood-decoder",
	"match_type": "description"
},
{
	"name": "Method of communicating and associated transmitter using coded orthogonal frequency division multiplexing (COFDM)",
	"summary": "",
	"abstract": "A system and method communicates and generates a Coded Orthogonal Frequency Division Multiplexed (COFDM) communications signal as a plurality of subcarriers. Selected subcarriers are turned ON and OFF while also frequency hopping and spreading the selected ON subcarriers over the frequency domain based on a fixed or variable sample rate to reduce average power for enhanced Low Probability of Interception/Low Probability of Detection (LPI/LPD) and also allow for more transmit power within a spectral mask.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07860147",
	"publication_date": "2010-12-28",
	"application_number": "11464868",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": "method-of-communicating-and-associated-transmitter-using-coded-orthogonal-frequency-division-multiplexing-cofdm",
	"match_type": "description"
},
{
	"name": "Mobile ad-hoc network (MANET) and method for implementing multiple paths for fault tolerance",
	"summary": "",
	"abstract": "A mobile ad-hoc network (MANET) communicates between a source node and destination node and includes a plurality of intermediate nodes. A main communication path is established between the source node through intermediate nodes to the destination node based on an underlying routing protocol. Alternative communication paths are established among neighboring nodes as standby nodes that are positioned an u201cnu201d hop distance from nodes of the main communication paths to form a tube of multiple communication paths from the source node to the destination node. The main communication path reconfigured within the tube of multiple communication paths to an alternative communication path using at least one standby node when the main communication path is broken.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07742399",
	"publication_date": "2010-06-22",
	"application_number": "11425837",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "mobile-adhoc-network-manet-and-method-for-implementing-multiple-paths-for-fault-tolerance",
	"match_type": "description"
},
{
	"name": "Power management system for SCA based software defined radio and related method",
	"summary": "",
	"abstract": "A software defined radio includes a radio circuit powered by a battery and formed as a pair of radio subsystems having radio components that draw power from the battery. An executable radio software system conforms to the Software Communications Architecture (SCA) specification and defines an operating platform environment that allows a waveform application to operate with the radio circuit. A power management service is operative with the pair of radio subsystems to coordinate the power among the radio components.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07809410",
	"publication_date": "2010-10-05",
	"application_number": "11274615",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "power-management-system-for-sca-based-software-defined-radio-and-related-method",
	"match_type": "description"
},
{
	"name": "Reduced state trellis decoder using programmable trellis parameters",
	"summary": "",
	"abstract": "A programmable decoder includes at least one programming input for a plurality of programmable, reduced state trellis parameters. A programmable device is connected to the at least one programming input and implements a Reduced-State Sequence Estimation (RSSE) decoder comprising at least one reduced-state trellis structure based upon the plurality of programmable reduced-state trellis parameters, including one of at least the number of super-states, the number of full-states, the number of branches per super-state, a reverse super-state trellis table, a decoder super-state survivor as a full-state, a forward full-state table, a full-state to super-state mapping table, a decoder super-state path metric and decoder super-state traceback array.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07831893",
	"publication_date": "2010-11-09",
	"application_number": "11625300",
	"application_date": "2007-01-20",
	"tags": null,
	"slug": "reduced-state-trellis-decoder-using-programmable-trellis-parameters",
	"match_type": "description"
},
{
	"name": "System and method for communicating data using symbol-based randomized orthogonal frequency division multiplexing (OFDM)",
	"summary": "",
	"abstract": "A system and device communicates data. A modulation and mapping circuit modulates and maps data symbols into a plurality of multiple subcarrier frequencies that are orthogonal to each other to form an Orthogonal Frequency Division Multiplexed (OFDM) communications signal based on a fixed or variable OFDM symbol rate. A pseudo-random signal generator is operative with the modulation and mapping circuit for generating pseudo-random signals to the modulation and mapping circuit based on an encryption algorithm for frequency hopping each subcarrier at an OFDM symbol rate to lower any probability of interception and detection, reduced power per frequency (dB/Hz/sec), and lower any required transmission power while maintaining an instantaneous signal-to-noise ratio.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07751488",
	"publication_date": "2010-07-06",
	"application_number": "11464877",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": "system-and-method-for-communicating-data-using-symbolbased-randomized-orthogonal-frequency-division-multiplexing-ofdm",
	"match_type": "description"
},
{
	"name": "System and method for communicating data using symbol-based randomized orthogonal frequency division multiplexing (OFDM) with applied frequency domain spreading",
	"summary": "",
	"abstract": "A device and system communicates data and includes a modulation and mapping circuit that modulates and maps data symbols into a plurality of multiple subcarrier frequencies that are orthogonal to each other to form an Orthogonal Frequency Division Multiplexed (OFDM) communications signal based on a fixed or variable OFDM symbol rate. A pseudo-random signal generator operative with the modulation and mapping circuit generates pseudo-random signals to the modulation and mapping circuit based on an encryption algorithm for frequency hopping each subcarrier at an OFDM symbol rate to lower any probability of interception and detection, reduce power per frequency (dB/Hz/sec), and lower any required transmission power while maintaining an instantaneous signal-to-noise ratio A frequency domain spreader circuit is operatively connected to the modulation and mapping circuit for spreading the multiple subcarriers over the frequency domain.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07649951",
	"publication_date": "2010-01-19",
	"application_number": "11464854",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": "system-and-method-for-communicating-data-using-symbolbased-randomized-orthogonal-frequency-division-multiplexing-ofdm-with-applied-frequency-domain-spreading",
	"match_type": "description"
},
{
	"name": "System and method for communicating data using symbol-based randomized orthogonal frequency division multiplexing (OFDM) with selected subcarriers turned on or off",
	"summary": "",
	"abstract": "A device and system communicates data and includes a modulation and mapping circuit that modulates and maps data symbols into a plurality of multiple subcarrier frequencies that are orthogonal to each other to form an Orthogonal Frequency Division Multiplexed (OFDM) communications signal based on a fixed or variable OFDM symbol rate. A pseudo-random signal generator is operative with the modulation and mapping circuit and generates pseudo-random signals to the modulation and mapping circuit based on an encryption algorithm for frequency hopping each subcarrier at an OFDM symbol rate to lower any probability of interception and detection, reduce power per frequency (dB/Hz/sec), and lower any required transmission power while maintaining an instantaneous signal-to-noise ratio, wherein selected subcarriers are turned ON or OFF to increase the transmit power and signal-to-noise ratio and reduce the Inter-Carrier Interference (ICI) and adverse effects of frequency selective fading.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07813433",
	"publication_date": "2010-10-12",
	"application_number": "11464861",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": "system-and-method-for-communicating-data-using-symbolbased-randomized-orthogonal-frequency-division-multiplexing-ofdm-with-selected-subcarriers-turned-on-or-off",
	"match_type": "description"
},
{
	"name": "System and method for communicating using a plurality of TDMA mesh networks having efficient bandwidth use",
	"summary": "",
	"abstract": "In accordance with a non-limiting example of the present invention, a communications system includes a plurality of Time Division Multiple Access (TDMA) mesh networks, each comprising a plurality of wireless nodes, each having a transmitter and receiver that communicate on a primary and at least one secondary frequency, and communicate using a TDMA epoch that is divided into at least a beacon interval using the primary frequency and a digital data interval using both the primary and secondary frequencies. The wireless nodes are operative for allocating a secondary frequency usage of a digital data interval for a TDMA mesh network to fall into an unused portion of the secondary frequency usage of another TDMA mesh network.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07773575",
	"publication_date": "2010-08-10",
	"application_number": "11459384",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": "system-and-method-for-communicating-using-a-plurality-of-tdma-mesh-networks-having-efficient-bandwidth-use",
	"match_type": "description"
},
{
	"name": "TDMA channel access scheduling with neighbor indirect acknowledgment algorithm (NbIA) for ad-hoc networks",
	"summary": "",
	"abstract": "A mobile ad-hoc network (MANET) includes a source mobile node, a destination mobile node, and a plurality of neighboring mobile nodes. The mobile nodes are operative for contending for a plurality of time division multiple access (TDMA) slots in a frame using beacons. Each neighboring node selects a TDMA slot per frame. For neighboring nodes not receiving an acknowledgment for successful beacons, those nodes contend on empty TDMA slots and resolve residual collisions using a collision detection mechanism.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07768992",
	"publication_date": "2010-08-03",
	"application_number": "11428862",
	"application_date": "2006-07-06",
	"tags": null,
	"slug": "tdma-channel-access-scheduling-with-neighbor-indirect-acknowledgment-algorithm-nbia-for-adhoc-networks",
	"match_type": "description"
},
{
	"name": "Time of day synchronization and distribution within a multiprocessor embedded system and related methods",
	"summary": "",
	"abstract": "A software-defined radio includes a pair of radio subsystems such as a red (command) and black (data) radio subsystem having an operating environment conforming to the Software Communications Architecture (SCA) specification, for example, as used for Joint Tactical Radio System (JTRS). A clock is read by at least one of the radio subsystems for determining time of day. A processor of the radio subsystem is operative for distributing the time of day to the radio subsystems using a global hardware timing pulse. Each processor can include a free-running timer to which any time sources within the pair of radio subsystems are set.",
	"url": null,
	"owner": "Harris Corporation",
	"publication_number": "07689207",
	"publication_date": "2010-03-30",
	"application_number": "11252123",
	"application_date": "2005-10-17",
	"tags": null,
	"slug": "time-of-day-synchronization-and-distribution-within-a-multiprocessor-embedded-system-and-related-methods",
	"match_type": "description"
},
{
	"name": "Method and system for interfacing with a multi-level data structure",
	"summary": "",
	"abstract": "The present invention provides a method and system for interfacing with a multi-level data structure by selecting a concept object stored in the multi-level data structure, displaying a first image representing the selected concept object, displaying one or more second images generally above the first image, and displaying a first connector connecting each second image to the first image. Whenever the selected concept object has one or more child concept objects, one or more third images are displayed generally below the first image, and a second connector is displayed connecting each third image to the first image. Whenever the selected concept object has one or more lateral concept objects, one or more fourth images are displayed generally on one or both sides of the first image, and a third connector is displayed connecting each fourth image to the first image.",
	"url": null,
	"owner": "Health Language, Inc.",
	"publication_number": "07668737",
	"publication_date": "2010-02-23",
	"application_number": "10660934",
	"application_date": "2003-09-12",
	"tags": null,
	"slug": "method-and-system-for-interfacing-with-a-multilevel-data-structure",
	"match_type": "description"
},
{
	"name": "Acquiring instruction addresses associated with performance monitoring events",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with acquiring instruction addresses associated with performance monitoring events are described. One exemplary system embodiment includes logic for recording instruction and state data associated with events countable by performance monitoring logic associated with a pipelined processor. The exemplary system embodiment may also include logic for traversing the instruction and state data on a cycle count basis. The exemplary system may also include logic for traversing the instruction and state data on a retirement count basis.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07747844",
	"publication_date": "2010-06-29",
	"application_number": "11095072",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": "acquiring-instruction-addresses-associated-with-performance-monitoring-events",
	"match_type": "description"
},
{
	"name": "Computer system security service",
	"summary": "",
	"abstract": "A security service of computer networks having a policy builder, an LDAP-compliant database, a validator and an API. The policy builder component provides a graphical user interface to be used by a policy manager to define access policies for users seeking to access network services and resources. The graphical user interface has a grid of nodes representing access policies. The grid is arranged to correspond to a defined tree structure representing services and resources and a business relationship tree structure representing users. The graphical user interface permits the policy manager to define policy builder plug-ins for access policy customization. The LDAP-compliant database maintains the policy builder plug-ins. The validator component receives requests from users and queries the LDAP-compliant database to obtain relevant access policies as defined by the policy manager. The system provides for double inheritance of access policies such that where there is no express definition of an access policy for a node, the access policies are propagated according to the hierarchical structures of the data. The validator includes validator plug-ins for carrying out access policies corresponding to the access policies defined by policy builder plug-ins.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07757271",
	"publication_date": "2010-07-13",
	"application_number": "12014612",
	"application_date": "2008-01-15",
	"tags": null,
	"slug": "computer-system-security-service",
	"match_type": "description"
},
{
	"name": "Dynamic environmental management",
	"summary": "",
	"abstract": "A system is described herein for providing environmental management of a physical location using a sensor network having a plurality of environmental sensors and at least one primary actuator configured to provide an environmental change to the physical location. The system includes a communications module that operates to access the plurality of environmental sensors of the sensor network, and an application module that operates to: a) commission the plurality of environmental sensors of the sensor network; control an operation of the at least one primary actuator to provide environmental management of the physical location based on the commission of the plurality of environmental sensors of the sensor network; and c) provide a graphical layout of an environmental condition of the physical location based on both the commission of the plurality of environmental sensors and the control of the at least one primary actuator.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07676280",
	"publication_date": "2010-03-09",
	"application_number": "11796943",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": "dynamic-environmental-management",
	"match_type": "description"
},
{
	"name": "Foregoing user credential collection if sending system is in an unauthenticated mutually exclusive connection state",
	"summary": "",
	"abstract": "A method comprises a receiving system establishing a first connection to a sending system. The method also comprises determining whether the sending system is in an unauthenticated mutually exclusive connection (UMEC) state. The method further comprises foregoing collecting user credentials to establish a connection between the receiving and sending systems if the sending system is in the UMEC state, and collecting user credentials to establish a connection between the receiving and sending systems if the sending system is not in the UMEC state.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07797435",
	"publication_date": "2010-09-14",
	"application_number": "11669308",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": "foregoing-user-credential-collection-if-sending-system-is-in-an-unauthenticated-mutually-exclusive-connection-state",
	"match_type": "description"
},
{
	"name": "Grid network management via automatic trend analysis of a service level agreement",
	"summary": "",
	"abstract": "A method for managing a GRID network. The method includes performing trend analysis of a job type repeatedly processed by the GRID network to anticipate a future load on the GRID network associated with the job type. The job type is associated with a service level agreement (SLA). At least one internal performance metric of the GRID network is measured to monitor current GRID network status. The future load that is anticipated is compared with the at least one performance metric to predict future satisfaction of the SLA.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07672923",
	"publication_date": "2010-03-02",
	"application_number": "11591082",
	"application_date": "2006-10-31",
	"tags": null,
	"slug": "grid-network-management-via-automatic-trend-analysis-of-a-service-level-agreement",
	"match_type": "description"
},
{
	"name": "Integrated intrusion detection system and method",
	"summary": "",
	"abstract": "A present invention integrated intrusion detection method integrates intrusion detection information. In one embodiment, intrusion detection information is gathered from a plurality of different types of intrusion detection sensors. The information is processed in a manner that provides a consolidated correlation of the information. A response is assigned to the information and the response is implemented.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07712133",
	"publication_date": "2010-05-04",
	"application_number": "10600113",
	"application_date": "2003-06-20",
	"tags": null,
	"slug": "integrated-intrusion-detection-system-and-method",
	"match_type": "description"
},
{
	"name": "Method and apparatus for graphical data compression",
	"summary": "",
	"abstract": "A system comprising a first computer and a second computer remotely located from the first computer and in communication with the first computer via a network. The second computer comprises an encoder module which encodes and transmits a pixel color datum to the first computer. The encoder module encodes the pixel color datum by generating a bit indicative of the number of different pixel color data encoded since a datum having a same color as the pixel color datum was last encoded.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07817849",
	"publication_date": "2010-10-19",
	"application_number": "11206693",
	"application_date": "2005-08-18",
	"tags": null,
	"slug": "method-and-apparatus-for-graphical-data-compression",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing updated system locality information during runtime",
	"summary": "",
	"abstract": "Embodiments of the invention provide a method and an apparatus to collect and dynamically update system locality information during runtime. In one method embodiment, the present invention collects system locality information at boot time to be provided to an operating system. The system locality information describes distances between devices within an integrated processing system. The operating system is then notified that a triggering event has occurred that may potentially alter the distances between devices within the integrated processing system. Upon receipt of this notification, the operating system invokes an Advanced Configuration and Power Interface (ACPI) procedure that provides updated system locality information during runtime to reflect the changes in distances between devices within the integrated processor system after the occurrence of the triggering event.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07647490",
	"publication_date": "2010-01-12",
	"application_number": "10777438",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-updated-system-locality-information-during-runtime",
	"match_type": "description"
},
{
	"name": "Method and apparatus for using a secret in a distributed computing system",
	"summary": "",
	"abstract": "There are many times when a secret needs to be used in a distributed computing systemu2014these are often held in security tokens, such as smart cards. It may be desirable for another device, such as a computer platform, to act in place of the security token as the repository of a secret, particularly for operations within a distributed computing system. Within the distributed computing system there is located a trusted entity, physically and logically resistant to unauthorized modificationu2014this may be a trusted device located within a specific computing platform. This contains validation information which can be communicated to the security token. The security token then carries out a validation process on this validation informationu2014if successful, the security token then provides a secret to the trusted device for use within the distributed computing system. The trusted device may be required to use this secret only for a specified period of time, or for a specific purpose or task.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07779267",
	"publication_date": "2010-08-17",
	"application_number": "09946323",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": "method-and-apparatus-for-using-a-secret-in-a-distributed-computing-system",
	"match_type": "description"
},
{
	"name": "Method and system for implementing storage strategies of a file autonomously of a user",
	"summary": "",
	"abstract": "A method and system for implementing storage strategies of a file autonomously of a user. At least some of the illustrative embodiments are methods comprising creating an electronic file in a computer system, creating metadata regarding the file (wherein the metadata defines at least in part data management preferences for the file), and implementing storage strategies for the file autonomously of a user of the file.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07647327",
	"publication_date": "2010-01-12",
	"application_number": "10669822",
	"application_date": "2003-09-24",
	"tags": null,
	"slug": "method-and-system-for-implementing-storage-strategies-of-a-file-autonomously-of-a-user",
	"match_type": "description"
},
{
	"name": "Methods and systems that selectively permit changes to a cryptographic hardware unit's state",
	"summary": "",
	"abstract": "In at least some embodiments, a system comprises a hardware unit and a plurality of software agents that couple to and utilize at least one function of the hardware unit. The system further comprises a consensus module coupled to the hardware unit and the software agents. The consensus module is configured to detect an event that changes a state of the hardware unit, notify the software agents of the event before the state changes and selectively permit the state to change based on responses from the software agents.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07711953",
	"publication_date": "2010-05-04",
	"application_number": "11201008",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": "methods-and-systems-that-selectively-permit-changes-to-a-cryptographic-hardware-units-state",
	"match_type": "description"
},
{
	"name": "Migrating recovery modules in a distributed computing environment",
	"summary": "",
	"abstract": "Systems and methods for implementing recovery processes on failed nodes in a distributed computing environment are described. In accordance with this scheme, one or more migratory recovery modules are launched into the network. The recovery modules migrate from node to node, determine the status of each node, and initiate recovery processes on failed nodes. In this way, scalable recovery processes may be implemented in distributed systems, even with incomplete network topology and membership information. In addition, the complexity and cost associated with manual status monitoring and recovery operations may be avoided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07743126",
	"publication_date": "2010-06-22",
	"application_number": "09895235",
	"application_date": "2001-06-28",
	"tags": null,
	"slug": "migrating-recovery-modules-in-a-distributed-computing-environment",
	"match_type": "description"
},
{
	"name": "Node, method and computer readable medium for optimizing performance of signature rule matching in a network",
	"summary": "",
	"abstract": "A node of a network for managing an intrusion protection system, the node comprising a memory module for storing data in machine-readable format for retrieval and execution by a central processing unit and an operating system comprising a network stack comprising a protocol driver and a media access control driver and operable to execute an intrusion protection system management application, the management application operable to receive text-file input from an input device, the text-file defining a network-exploit rule and comprising at least one field is provided. A method of distributing command and security updates in a network having an intrusion protection system comprising generating a text-file defining a network-exploit rule and specifying at least one field selected from the group consisting of an ENABLED field value and a SEVERITY level field value during generation of the text-file is provided. A computer-readable medium having stored thereon a set of instructions to be executed, the set of instructions, when executed by a processor, cause the processor to perform a computer method of reading input from an input device of the computer, compiling the input into a machine-readable signature file comprising machine-readable logic representative of the network-exploit rule and a value of at least one field selected from the group consisting of an ENABLED field and a SEVERITY field, evaluating the machine-readable signature file, and determining the value of the at least one field of the machine-readable signature file is provided.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07836503",
	"publication_date": "2010-11-16",
	"application_number": "10003820",
	"application_date": "2001-10-31",
	"tags": null,
	"slug": "node-method-and-computer-readable-medium-for-optimizing-performance-of-signature-rule-matching-in-a-network",
	"match_type": "description"
},
{
	"name": "Physical memory control using memory classes",
	"summary": "",
	"abstract": "A method for allocating memory in a computer system is disclosed. The method includes creating a kernel memory class, the kernel memory class acting as a logical container for at least a first kernel memory resource group. The method further includes processing a kernel client's request for additional memory by ascertaining whether there is sufficient free memory in the first kernel memory resource group to accommodate the kernel client's request. The method additionally includes denying the kernel client's request if there is insufficient free memory in the first kernel memory resource group to accommodate the kernel client's request.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07840772",
	"publication_date": "2010-11-23",
	"application_number": "10939052",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": "physical-memory-control-using-memory-classes",
	"match_type": "description"
},
{
	"name": "Program optimization using object file summary information",
	"summary": "",
	"abstract": "A method of generating a software program executable binary file. A first file including source code therein is accessed. A second file including object code therein and further including object file summary information is accessed. The executable binary file is generated from at least the first and second files. The object file summary information is used in optimizing the executable binary file generated.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07814467",
	"publication_date": "2010-10-12",
	"application_number": "10758376",
	"application_date": "2004-01-15",
	"tags": null,
	"slug": "program-optimization-using-object-file-summary-information",
	"match_type": "description"
},
{
	"name": "Providing file management of backup data stored on one or more removable storage media",
	"summary": "",
	"abstract": "A data protection system that integrates a database with Windows Explorer in the Microsoft Windows 9X and NT Environments that mimics the Windows Explorer user interface, enabling the user to apply already known use paradigms. The data protection system appears as an extension to Windows Explorer and visibly appears as a folder item called the data vault. The data vault is a virtual disk that represents the underlying database. The database creates records and stores information about files backed up to removable secondary storage medium. Files may be backed up manually or automatically. A schedule can be set up for automatic protection of selected files and file types. The database can be searched to find files for restoration purposes without having to load secondary storage medium. Once a file or files are selected, the data protection system indicates which labeled removable secondary storage medium must be loaded for retrieval.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07809756",
	"publication_date": "2010-10-05",
	"application_number": "10860255",
	"application_date": "2004-06-03",
	"tags": null,
	"slug": "providing-file-management-of-backup-data-stored-on-one-or-more-removable-storage-media",
	"match_type": "description"
},
{
	"name": "Resetting multiple cells within a partition of a multiple partition computer system",
	"summary": "",
	"abstract": "One embodiment of the invention is a method for resetting a partition of a multiple partition system, wherein the partition comprises a plurality of processors, the method comprising executing, by one processor of the plurality of processors, reset code from firmware, building a list of reset register addresses associated with the plurality of processors, sending an interrupt to the other processors of the plurality of processors, resetting the other processors by writing a reset code to their associated reset registers, and resetting the one processor by writing to its associated reset register.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07673125",
	"publication_date": "2010-03-02",
	"application_number": "10606462",
	"application_date": "2003-06-26",
	"tags": null,
	"slug": "resetting-multiple-cells-within-a-partition-of-a-multiple-partition-computer-system",
	"match_type": "description"
},
{
	"name": "Resource evaluation for a batch job and an interactive session concurrently executed in a grid computing environment",
	"summary": "",
	"abstract": "A method of allocating resources in a grid computing environment is provided. The method includes allocating resources for concurrently executing a batch job and an interactive session.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07774457",
	"publication_date": "2010-08-10",
	"application_number": "11090714",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": "resource-evaluation-for-a-batch-job-and-an-interactive-session-concurrently-executed-in-a-grid-computing-environment",
	"match_type": "description"
},
{
	"name": "Security method and apparatus using biometric data",
	"summary": "",
	"abstract": "A security method and apparatus is provided in which a trusted authority is arranged to read in identity data from a memory device presented by an individual. This identity data comprises both biometric data of a specific individual ,and additional identity data concerning the same individual. The trusted authority uses the biometric data as a biometric reference for comparison with biometric characteristics of the individual presenting the memory card in order to determine whether the latter is the individual represented by the biometric data. The trusted authority uses the additional identity data or matching data, together with private data of the trusted authority, to generate a decryption key. This decryption key is apt to decrypt data encrypted using both an encryption key string comprising the additional identity data of the specific individual and public data of the trusted authority.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07693279",
	"publication_date": "2010-04-06",
	"application_number": "10829930",
	"application_date": "2004-04-21",
	"tags": null,
	"slug": "security-method-and-apparatus-using-biometric-data",
	"match_type": "description"
},
{
	"name": "Smartcard method and computer system",
	"summary": "",
	"abstract": "A method and computer system for determining the compatibility, for application to a smartcard, of smartcard personalization profiles, the respective smartcard personalization profiles describing respective file trees on the smartcard that are required by respective applications. The method involves determining if the sets of paths of the file trees described by the respective smartcard personalization profiles are disjoint.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07677460",
	"publication_date": "2010-03-16",
	"application_number": "11378305",
	"application_date": "2006-03-20",
	"tags": null,
	"slug": "smartcard-method-and-computer-system",
	"match_type": "description"
},
{
	"name": "System and method for associating workload management definitions with computing containers",
	"summary": "",
	"abstract": "In one embodiment, a system comprises a plurality of computing containers having processing resources for executing software workloads, a plurality of management processes for controlling access to the processing resources according to workload policy definitions, a data container for storing a plurality of workload policy definitions and associations between the plurality of workload policy definitions and the plurality of computing containers, and a configuration process for communicating workload policy definitions from the data container to the plurality of management processes.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07752624",
	"publication_date": "2010-07-06",
	"application_number": "11018684",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": "system-and-method-for-associating-workload-management-definitions-with-computing-containers",
	"match_type": "description"
},
{
	"name": "System and method for performing work by one of plural threads using a lockable resource",
	"summary": "",
	"abstract": "According to at least one embodiment, a method comprises a first thread desiring to perform work using a resource. The first thread determines whether another thread holds a lock on the resource, and if another thread (u201cblocking threadu201d) holds a lock on the resource, the work is transferred to the blocking thread for performance of the work by the blocking thread using the resource.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07797704",
	"publication_date": "2010-09-14",
	"application_number": "11094554",
	"application_date": "2005-03-30",
	"tags": null,
	"slug": "system-and-method-for-performing-work-by-one-of-plural-threads-using-a-lockable-resource",
	"match_type": "description"
},
{
	"name": "System and method for representing digital media",
	"summary": "",
	"abstract": "A computerized system for representing a digital media using both a bit stream and an associated metadata includes a codec configured to encode the digital media to the bit stream. The codec is further configured to generate a metadata representation stream of the bit stream that encapsulates information embedded in the bit stream and at least one type of media-related information. The system also includes a manager configured to assure synchronization between the bit stream and the metadata representation stream during streaming of the bit stream and the metadata representation stream.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07692562",
	"publication_date": "2010-04-06",
	"application_number": "11582754",
	"application_date": "2006-10-18",
	"tags": null,
	"slug": "system-and-method-for-representing-digital-media",
	"match_type": "description"
},
{
	"name": "Virtualization of a parition based on addresses of an I/O adapter within an external emulation unit",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with external virtualization are described. One exemplary system embodiment includes an emulation logic located external to an integrated circuit to which it may be operably connected. The example emulation logic may include a virtualization logic that is configured to virtualize a portion of a function performed by the integrated circuit. The portion may be identifiable by an address associated with the portion. The example emulation logic may also include a data store that is operably connected to the virtualization logic and that is configured to store a state data associated with virtualizing the portion of the function.",
	"url": null,
	"owner": "Hewlett-Packard Development Company, L.P.",
	"publication_number": "07650275",
	"publication_date": "2010-01-19",
	"application_number": "11039621",
	"application_date": "2005-01-20",
	"tags": null,
	"slug": "virtualization-of-a-parition-based-on-addresses-of-an-io-adapter-within-an-external-emulation-unit",
	"match_type": "description"
},
{
	"name": "Scalable integrated high density optical data/media storage delivery system",
	"summary": "",
	"abstract": "An apparatus and system for recording, playing, handling, and storing a plurality of media disks in a plurality of configurations and a device for moving any disk into and out of a media disk storage mechanism and into or out of a selected media player/recorder on demand, and a controller for directing operation of the device for moving the disks and controlling selection of operation of the media disk storage mechanism.",
	"url": null,
	"owner": "Hie Electronics, Inc.",
	"publication_number": "07673309",
	"publication_date": "2010-03-02",
	"application_number": "11303778",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "scalable-integrated-high-density-optical-datamedia-storage-delivery-system",
	"match_type": "description"
},
{
	"name": "Techniques for enhancing the functionality of file systems",
	"summary": "",
	"abstract": "Enhancements to the functionality of a file system are provided. A file system can provide an additional level of error correction, in addition to the error correction provided by a data storage device. An extension to the metadata area in a file system can store index information about data files that the file system can use to reduce the time it takes to access the files. A file system can use extended metadata to store conditional access information for data files stored in the file system. A data storage device can also examine and characterize the data being stored in order to categorize a user's files automatically. Modules can be loaded into a file system to provide new functionality to the file system. The modules can load additional modules to extend their functionality.",
	"url": null,
	"owner": "Hitachi Global Storage Technologies Netherlands, B.V.",
	"publication_number": "07853822",
	"publication_date": "2010-12-14",
	"application_number": "11566978",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": "techniques-for-enhancing-the-functionality-of-file-systems",
	"match_type": "description"
},
{
	"name": "Information processor and information processing system",
	"summary": "",
	"abstract": "The information processor includes a device communication performance management module. The device communication performance management module includes: a communication performance evaluation unit that measures and evaluates the communication performance with respect to a device to be used when it is used by a device-use application; a device naming rule management unit that manages a naming rule for incorporating the communication performance evaluated by the communication performance evaluation unit into the name of the device file for a device as the target of evaluation; and a device file management unit that creates a device file for a device as the target of evaluation in accordance with the naming rule based on the result of communication performance evaluation. The result of communication performance evaluation by the communication performance evaluation unit is incorporated into the name of a device file and the evaluation result is thereby provided to a device-use application.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07849132",
	"publication_date": "2010-12-07",
	"application_number": "12138614",
	"application_date": "2008-06-13",
	"tags": null,
	"slug": "information-processor-and-information-processing-system",
	"match_type": "description"
},
{
	"name": "Integrated service management system",
	"summary": "",
	"abstract": "The present invention provides techniques for creation, operation, management, and access control of network-based storage services. Specific embodiments provide improved efficiency of the service management tasks used for designing, operating and accounting the robust and profitable network services, for example. In representative embodiments, techniques for constructing integrated network and storage services are provided. In a specific embodiment, the service comprises of three major service components: virtual private networks (VPN), application servers and storage area networks (SAN). Each of these service components has its own customer identification information, such as VPN identifier for VPN services, process identifier for application servers and logical unit number (LUN) for storage devices.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07693980",
	"publication_date": "2010-04-06",
	"application_number": "11923587",
	"application_date": "2007-10-24",
	"tags": null,
	"slug": "integrated-service-management-system",
	"match_type": "description"
},
{
	"name": "System and method for managing a consistency among volumes in a continuous data protection environment",
	"summary": "",
	"abstract": "Described is method and system for protecting file on volume based CDP and restoring data consistency between files and database managed by database application. One of the benefits of an implementation of the inventive concept is that administrator can protect a specific file by inserting a marker, which is stored on a journal volume after the close operation for a file. The data consistency between files and database is achieved even if the restore point is specified using a file attribute. One implementation includes host and storage subsystem. The storage subsystem may include multiple volumes for separately storing database tables and data files. The storage subsystem also includes a volume based CDP protecting the content of the storage volumes. The storage subsystem further includes an inventive consistency manager, which manages data consistency between the file volume(s) and the database volume(s). The consistency manager operates when storage system administrator issues command to restore sets of the volumes to a predetermined state, which was existent at specific time point.",
	"url": null,
	"owner": "Hitachi, Ltd.",
	"publication_number": "07647360",
	"publication_date": "2010-01-12",
	"application_number": "11471105",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": "system-and-method-for-managing-a-consistency-among-volumes-in-a-continuous-data-protection-environment",
	"match_type": "description"
},
{
	"name": "Matching session records of network users with corresponding transaction data",
	"summary": "",
	"abstract": "A system for collecting data regarding network behaviors of users is disclosed. In one embodiment, the system combines session records of users with corresponding transaction records reflective of e-commerce transactions. The session records may, for example, be generated by one or more collection engines deployed by one or more Internet Service Providers. The transaction records may, for example, be obtained through interactions with one or more merchant web sites. By combining these two types of information, the system can, for example, identify a set of user actions that led to a particular purchase transaction.",
	"url": null,
	"owner": "Hitwise Pty. Ltd.",
	"publication_number": "07725944",
	"publication_date": "2010-05-25",
	"application_number": "11980036",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "matching-session-records-of-network-users-with-corresponding-transaction-data",
	"match_type": "description"
},
{
	"name": "System and method for designing a free form reflector using genetic algorithm",
	"summary": "",
	"abstract": "A system for designing a free form reflector includes a user input interface (), a free form reflector design unit (), and a free form reflector output unit (). The user input interface is configured for receiving various data associated with a desired free form reflector, via an input device. The free form reflector design unit is installed in a computer and configured for generating an optimum free form surface according to the input data by performing a non-uniform rational basis splines (NURBS) algorithm, a merit evaluation function, and a differential evolution (DE) algorithm. The free form reflector output module is configured for generating a free form reflector according to the optimum free form surface and outputting the free form reflector, in the form of a computer-aided design (CAD) drawing, to a display and/or a printer. A related method is also disclosed.",
	"url": null,
	"owner": "Hon Hai Precision Industry Co., Ltd.",
	"publication_number": "07747550",
	"publication_date": "2010-06-29",
	"application_number": "11552977",
	"application_date": "2006-10-26",
	"tags": null,
	"slug": "system-and-method-for-designing-a-free-form-reflector-using-genetic-algorithm",
	"match_type": "description"
},
{
	"name": "Apparatus and method for integrating wireless or other field devices in a process control system",
	"summary": "",
	"abstract": "An apparatus is provided for facilitating communication between, for example, a configuration tool in a process control system and a wireless field device (such as a wireless sensor or actuator). The configuration tool and the wireless field device use different protocols, and the apparatus converts between the different protocols. The protocol used by the configuration tool could include HART. From the perspective of the wireless field device, the apparatus could appear to support the application protocol of the wireless field device. From the perspective of the configuration tool, the apparatus could simulate a HART multiplexer. This may allow a user to use the configuration tool to configure, commission, and monitor the wireless field device, even when the user does not know or understand the protocol used by the wireless field device.",
	"url": null,
	"owner": "Honeywell International Inc.",
	"publication_number": "07675935",
	"publication_date": "2010-03-09",
	"application_number": "11444043",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": "apparatus-and-method-for-integrating-wireless-or-other-field-devices-in-a-process-control-system",
	"match_type": "description"
},
{
	"name": "Real-time data interface and method for browsers and the like",
	"summary": "",
	"abstract": "Systems and methods provide a real-time data display and interface for a network device by loading a page in a browser (), the page including an engine which is executed in the browser () and used to automatically load a definition file () from a remote source in response to content within the page. Widgets are instantiated for display in the interface, each making data requests () at intervals which are forwarded to one or more servers in communication with the network device. Requested data is received () and presented in the interface there by providing the user with dynamically updated data (). An engine for driving such display comprises executable code configured to instantiate one or more widgets for rendering within the display of the real-time data interface. The engine further includes a reference to a definition file which defines prescribed parameters for one or more of the widgets.",
	"url": null,
	"owner": "Honeywell International Inc.",
	"publication_number": "07822806",
	"publication_date": "2010-10-26",
	"application_number": "10485848",
	"application_date": "2003-02-18",
	"tags": null,
	"slug": "realtime-data-interface-and-method-for-browsers-and-the-like",
	"match_type": "description"
},
{
	"name": "System and method for digital video management",
	"summary": "",
	"abstract": "A digital video management system which provides live digital video signals from a number of cameras to a number of client terminals, via a computer communications network, in real time. The system stores live video signals in response to a video recording trigger which may be either a schedule, an event, or an operator action. The invention is particularly suitable for use in integrated security and process control environments.",
	"url": null,
	"owner": "Honeywell Limited",
	"publication_number": "07859571",
	"publication_date": "2010-12-28",
	"application_number": "10049449",
	"application_date": "2000-08-14",
	"tags": null,
	"slug": "system-and-method-for-digital-video-management",
	"match_type": "description"
},
{
	"name": "Compact 3-port orthogonally polarized MIMO antennas",
	"summary": "",
	"abstract": "Generalized non-limiting embodiments include employing a dipole antenna and/or a half slot antenna. Each of the antennas constitutes three mutually perpendicular radiating elements to achieve good isolation and low antenna signal correlation between the three ports. In one generalized non-limiting embodiment the antennas are fabricated on FR-4 epoxy boards. Experimental results show that the antennas resonate a reasonable frequency and have a desired mutual coupling. In addition experimental results for the diversity performance and the MIMO channel capacity are also provided for these antennas and these results show that the herein described antennas offer good diversity gain and the channel capacity can be increased by as much as three times by using these antennas over conventional antennas.",
	"url": null,
	"owner": "Hong Kong Technologies Group Limited",
	"publication_number": "07710343",
	"publication_date": "2010-05-04",
	"application_number": "11873071",
	"application_date": "2007-10-16",
	"tags": null,
	"slug": "compact-3port-orthogonally-polarized-mimo-antennas",
	"match_type": "description"
},
{
	"name": "Mobile commerce framework",
	"summary": "",
	"abstract": "A subscription-based system for providing commerce information for one or more mobile devices for one or more merchants. Some techniques employed feature a subscription-based method for presenting commercial resources to a mobile device. The method involves receiving mobile device user information relating to a geographic location to locate one or more merchants within a subscription-based shopping network, and receiving mobile device user information relating to a merchant type within the subscription-based shopping network. The method also involves receiving, from a database over a communication network, information for one or more merchants associated with the mobile device user information for the geographic location and the merchant type, and presenting the associated merchant information on the mobile device. The associated merchant information can include a merchant name and address, a merchant telephone number, a merchant advertisement, a merchant coupon, or a merchant product or service offering to subscribers of the shopping network.",
	"url": null,
	"owner": "Hothand, Inc.",
	"publication_number": "07693752",
	"publication_date": "2010-04-06",
	"application_number": "11139288",
	"application_date": "2005-05-26",
	"tags": null,
	"slug": "mobile-commerce-framework",
	"match_type": "description"
},
{
	"name": "Code-switching in wireless multi-hop networks",
	"summary": "",
	"abstract": "The present invention relates to the field of code-switching in multi-hop wireless networks. More specifically, the present invention pertains to a method and apparatus that uses orthogonal codes as the forwarding labels in multi-hop forwarding. The processing of the forwarding labels is done at the physical layer. Advantages include reduced processing and energy to forward a packet; reduced latency; reduced bandwidth overhead; and increased security.",
	"url": null,
	"owner": "HRL Laboratories, LLC",
	"publication_number": "07778270",
	"publication_date": "2010-08-17",
	"application_number": "11217215",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": "codeswitching-in-wireless-multihop-networks",
	"match_type": "description"
},
{
	"name": "Method and network structure for moving a call leg",
	"summary": "",
	"abstract": "Disclosed herein is a method and a network structure for moving a call leg, and implementing a call leg move with the network structure. The method includes creating a call leg moving interface and its method interface reference parameters, which are used to move a call leg from an original call to a destination call. The interface reference parameters are an identifier of a call leg to be moved and a destination call identifier. The method further includes, if an application wants to move the call leg, determining the interface reference parameters according to the call leg and the destination call, and invoking the call leg moving interface to move the call leg from the original call to the destination call with the interface reference parameters. In this manner, the disclosed method provides a simple, convenient, easy to implement and spread interface to the application to move the call leg from one call to another.",
	"url": null,
	"owner": "Huawei Technologies Co., Ltd.",
	"publication_number": "07711099",
	"publication_date": "2010-05-04",
	"application_number": "11315435",
	"application_date": "2005-12-22",
	"tags": null,
	"slug": "method-and-network-structure-for-moving-a-call-leg",
	"match_type": "description"
},
{
	"name": "System and method for collecting user interest data",
	"summary": "",
	"abstract": "A method for collecting user data includes: collecting content of a user action event; modifying a user interest data model which stores user interest data according to the content of the user action event collected. In this way, the interest and concerns of the user are effectively tracked. Furthermore, the method and system provided by embodiments of the invention features little disturbance to user and accurate collection of user information, thus effectively shows the interest of user. Through method and system provided by embodiments of the invention, the user data can be collected effectively and the interest of the user is well represented.",
	"url": null,
	"owner": "Huawei Technologies Co., Ltd.",
	"publication_number": "07801891",
	"publication_date": "2010-09-21",
	"application_number": "11684839",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "system-and-method-for-collecting-user-interest-data",
	"match_type": "description"
},
{
	"name": "Network layer tunnel apparatus having transport layer/network layer stack and network layer tunnel and method using network layer tunnel",
	"summary": "",
	"abstract": "A system in which a personal computer sends messages into a TCP/IP network using a conventional dial-up link and downloads data from the TCP/IP network using a high-speed one-way satellite link. A preferred embodiment uses a conventional SLIP provider to connect to the TCP/IP network and uses a commercial software TCP/IP package that has a standard driver interface. A spoofing protocol compensates for the long propagation delays inherent to satellite communication.",
	"url": null,
	"owner": "Hughes Network Systems, LLC",
	"publication_number": "07774501",
	"publication_date": "2010-08-10",
	"application_number": "10935984",
	"application_date": "2004-09-08",
	"tags": null,
	"slug": "network-layer-tunnel-apparatus-having-transport-layernetwork-layer-stack-and-network-layer-tunnel-and-method-using-network-layer-tunnel",
	"match_type": "description"
},
{
	"name": "Methods and systems for automated searching",
	"summary": "",
	"abstract": "The present invention provides systems and methods for automating a search over a network such as the Internet. A user selects data such as text from within an application. The selected data is activated and a search is performed without the user having to leave the application. The search is performed while the user is continuing within the application. When the search is complete, the search results are made available to the user within the application from which the search was initiated. In one embodiment, the data is pre-searched and the results are cached such that the results are already available should the user desire. The present invention is particularly suited to integration with an operating system such that the methods of the present invention are thereby available to all applications. Alternatively, the present invention can be specific to a particular application.",
	"url": null,
	"owner": "Hyperthink LLC",
	"publication_number": "07797301",
	"publication_date": "2010-09-14",
	"application_number": "11925646",
	"application_date": "2007-10-26",
	"tags": null,
	"slug": "methods-and-systems-for-automated-searching",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for modifying a backup data stream including a set of validation bytes for each data block to be provided to a fixed position delta reduction backup application",
	"summary": "",
	"abstract": "Methods and apparatus for modifying a data stream of backup data to be provided to a fixed position delta reduction backup method are disclosed. When the data stream is received, at least a portion of the data stream is parsed into a plurality of data blocks and a plurality of sets of validation bytes, wherein each of the plurality of data blocks corresponds to one of the plurality of sets of validation bytes. One or more modified data streams are then generated such that the plurality of data blocks are separate from the plurality of sets of validation bytes.",
	"url": null,
	"owner": "i365 Inc.",
	"publication_number": "07676509",
	"publication_date": "2010-03-09",
	"application_number": "11345819",
	"application_date": "2006-02-01",
	"tags": null,
	"slug": "methods-and-apparatus-for-modifying-a-backup-data-stream-including-a-set-of-validation-bytes-for-each-data-block-to-be-provided-to-a-fixed-position-delta-reduction-backup-application",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for modifying a backup data stream including logical partitions of data blocks to be provided to a fixed position delta reduction backup application",
	"summary": "",
	"abstract": "When a data stream is received, the data stream may be parsed into a plurality of logical components, where each of the logical components includes one or more data blocks. Missing data blocks may also be detected in the data stream, and therefore may be detected in each of the plurality of logical components. For instance, each of the logical components may be separated into a separate data stream for which missing data blocks may be detected. A temporary data block is then inserted where each missing data block is detected (e.g., in each of the plurality of logical components). In this manner, inefficiencies introduced into a fixed position delta reduction backup process as a result of new or deleted data in a system implementing a plurality of data blocks which may be stored in the form of logical components are eliminated.",
	"url": null,
	"owner": "i365 Inc.",
	"publication_number": "07761766",
	"publication_date": "2010-07-20",
	"application_number": "11280545",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "methods-and-apparatus-for-modifying-a-backup-data-stream-including-logical-partitions-of-data-blocks-to-be-provided-to-a-fixed-position-delta-reduction-backup-application",
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for synchronization of similar data objects with event information",
	"summary": "",
	"abstract": "The invention is directed to a method, system, and computer program product for the synchronization of similar data objects by exchanging event information to provide new and/or updated data objects to a mobile device or application for use on a device. The invention includes a method, system, computer program product, and combinations and sub-combinations thereof, for enabling similar data objects to be made available to users of mobile devices, and for the users of mobile devices to operate with such objects on their mobile devices in an interactive manner while in an off-line mode, i.e., while not actively connected to a network or external data source.",
	"url": null,
	"owner": "IAnywhere Solutions, Inc.",
	"publication_number": "07644125",
	"publication_date": "2010-01-05",
	"application_number": "09950005",
	"application_date": "2001-09-12",
	"tags": null,
	"slug": "method-system-and-computer-program-product-for-synchronization-of-similar-data-objects-with-event-information",
	"match_type": "description"
},
{
	"name": "System, method, and computer program product for executing scripts on mobile devices",
	"summary": "",
	"abstract": "Described herein are systems, methods, computer program products, and combinations and sub-combinations thereof, for executing scripts that can be loaded on mobile devices (as well as other types of devices), and for users of mobile devices to interact with such scripts on their devices in an interactive manner. According to embodiments, the present invention performs script operations for mobile devices including steps for sending a request for an object and a list of support languages, and receiving the object and any related scripts in the supported languages.",
	"url": null,
	"owner": "iAnywhere Solutions, Inc.",
	"publication_number": "07840647",
	"publication_date": "2010-11-23",
	"application_number": "11329226",
	"application_date": "2006-01-11",
	"tags": null,
	"slug": "system-method-and-computer-program-product-for-executing-scripts-on-mobile-devices",
	"match_type": "description"
},
{
	"name": "Pass through liquidity in a multi-tiered trading system and method",
	"summary": "",
	"abstract": "The present invention generally relates to brokerage systems and methods, and more particularly, to a multi-tiered trading system and corresponding methods which allow multiple customers and multiple dealers to transact on a single platform while maintaining the distinction of an inter-dealer system and a dealer-customer relationship.",
	"url": null,
	"owner": "ICAP Services North America LLC",
	"publication_number": "07840478",
	"publication_date": "2010-11-23",
	"application_number": "11332669",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": "pass-through-liquidity-in-a-multitiered-trading-system-and-method",
	"match_type": "description"
},
{
	"name": "Timing mechanism and direct messaging for electronic trading platform",
	"summary": "",
	"abstract": "A system and interface for trading financial instruments includes an intermediary computer system that is operable to communicate with one or more trader terminals. The intermediary computer system includes one or more processors and storage media, and it communicates with trader terminals and displays to the trader terminals a listing of financial instruments, and information related to such financial instruments, that are available for trading. The intermediary computer system periodically updates the option adjusted price of financial instruments to provide traders with a time period in which the price will remain stable and during which time the traders can confidently execute orders based on the then available price. A timer, which is constantly visible to traders, displays the amount of time remaining until the displayed adjusted prices will be updated.",
	"url": null,
	"owner": "ICAP Services North America LLC",
	"publication_number": "07725373",
	"publication_date": "2010-05-25",
	"application_number": "10933152",
	"application_date": "2004-09-02",
	"tags": null,
	"slug": "timing-mechanism-and-direct-messaging-for-electronic-trading-platform",
	"match_type": "description"
},
{
	"name": "System and method for providing intelligence centers",
	"summary": "",
	"abstract": "Disclosed herein, among other things, is a system comprising a content repository, a communication portal developer, a content manager, and an analytic engine. The content repository is adapted to store electronic content in a computer-readable storage medium. The communication portal developer includes at least one wizard to create a plurality of customizable portals without coding software. Each customizable portal is accessible to one or more selected visitors through a web browser. The content manager is adapted to publish selectable electronic content to selectable portals. The content manager includes at least one wizard to populate and manage the electronic content within the content repository. The analytic engine analyzes electronic content use and visitor behavior while logged into their customizable portal. In various embodiments, the analytics are provided in real time or near real time. Other embodiments are disclosed herein.",
	"url": null,
	"owner": "iCentera Corporation",
	"publication_number": "07774378",
	"publication_date": "2010-08-10",
	"application_number": "11145750",
	"application_date": "2005-06-06",
	"tags": null,
	"slug": "system-and-method-for-providing-intelligence-centers",
	"match_type": "description"
},
{
	"name": "Method and system for fast, generic, online and offline, multi-source text analysis and visualization",
	"summary": "",
	"abstract": "Methods and systems for text data analysis and visualization enable a user to specify a set of text data sources and visualize the content of the text data sources in an overview of salient features in the form of a network of words. A user may focus on one or more words to provide a visualization of connections specific to the focused word(s). The visualization may include clustering of relevant concepts within the network of words. Upon selection of a word, the context thereof, e.g., links to articles where the word appears, may be provided to the user. Analyzing may include textual statistical correlation models for assigning weights to words and links between words. Displaying the network of words may include a force-based network layout algorithm. Extracting clusters for display may include identifying u201ccommunities of wordsu201d as if the network of words was a social network.",
	"url": null,
	"owner": "Icosystem Corporation",
	"publication_number": "07792816",
	"publication_date": "2010-09-07",
	"application_number": "12023693",
	"application_date": "2008-01-31",
	"tags": null,
	"slug": "method-and-system-for-fast-generic-online-and-offline-multisource-text-analysis-and-visualization",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for interactive searching techniques",
	"summary": "",
	"abstract": "Methods and systems for searching comprise presenting a first information set to a user, receiving feedback, applying an evolutionary algorithm based on the feedback to generate a search query, causing the search query to be executed to generate a second information set, and presenting the second information set to the user. Then, in response to user input, the first information set is again presented to the user; feedback is again received, an evolutionary algorithm is again applied based on the feedback to generate a search query, and the new search query is caused to be executed to generate a third information set which is presented to the user.",
	"url": null,
	"owner": "Icosystem Corporation",
	"publication_number": "07707220",
	"publication_date": "2010-04-27",
	"application_number": "11537143",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "methods-and-apparatus-for-interactive-searching-techniques",
	"match_type": "description"
},
{
	"name": "System and method for transparently providing certificate validation and other services within an electronic transaction",
	"summary": "",
	"abstract": "A system and method are disclosed for transparently providing certificate validation and other services without requiring a separate service request by either a relying customer or subscribing customer. In a preferred embodiment, after the subscribing customer digitally signs a document (e.g., a commercial document such as a purchase order), it forwards the document to a trusted messaging entity which validates the certificates of both the subscribing customer and relying customer and the respective system participants of which they are customers. If the certificates are valid, the trusted messaging entity appends a validation message to the digitally-signed document and forwards the document to the relying customer. A validation message is also preferably appended to a digitally-signed receipt from the relying customer and transmitted to the subscribing customer. In this way, both the relying customer and subscribing customer obtain certification of their respective counterparty to the transaction.",
	"url": null,
	"owner": "IdenTrust, Inc.",
	"publication_number": "07734924",
	"publication_date": "2010-06-08",
	"application_number": "11341078",
	"application_date": "2006-01-26",
	"tags": null,
	"slug": "system-and-method-for-transparently-providing-certificate-validation-and-other-services-within-an-electronic-transaction",
	"match_type": "description"
},
{
	"name": "Communication system and method for real-time internet-based network connectivity to multiple heterogeneous backend systems",
	"summary": "",
	"abstract": "A communication system () for connecting in real-time an Internet-based network interface () to a plurality of backend systems (), each of the plurality of backend systems having an associated backend communications protocol and requiring an associated backend data format. The system includes a router () for receiving a job () having a front-end data format and a front-end communications protocol from the Internet-based network interface. The router selects one or more backend systems from the plurality of backend systems as a function of attributes of the job for delivery of the job to the one or more backend systems. The system also includes a plurality of service agents (), each in communication with an associated one of the plurality of backend systems and configured to translate and reformat the job prior to delivery to the one or more backend systems.",
	"url": null,
	"owner": "IDX Investment Corporation",
	"publication_number": "07849219",
	"publication_date": "2010-12-07",
	"application_number": "10909018",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": "communication-system-and-method-for-realtime-internetbased-network-connectivity-to-multiple-heterogeneous-backend-systems",
	"match_type": "description"
},
{
	"name": "Adjusting communication parameters while inventorying RFID tags",
	"summary": "",
	"abstract": "RFID reader systems, readers, components, software and methods are provided for inventorying RFID tags. In some embodiments, a population of RFID tags begins being inventoried using a first set of communication parameters, and then continues using a second set of communication parameters. This way, some RFID tags can be inventoried faster, without missing tags that require a longer time to read.",
	"url": null,
	"owner": "Impinj, Inc.",
	"publication_number": "07830262",
	"publication_date": "2010-11-09",
	"application_number": "12133180",
	"application_date": "2008-06-04",
	"tags": null,
	"slug": "adjusting-communication-parameters-while-inventorying-rfid-tags",
	"match_type": "description"
},
{
	"name": "Systems and methods for employing an orthogonal corpus for document indexing",
	"summary": "",
	"abstract": "Methods and systems for processing a body of reference material to generate a directory for accessing information from a database.",
	"url": null,
	"owner": "IndraWeb, Inc.",
	"publication_number": "07720799",
	"publication_date": "2010-05-18",
	"application_number": "11707394",
	"application_date": "2007-02-16",
	"tags": null,
	"slug": "systems-and-methods-for-employing-an-orthogonal-corpus-for-document-indexing",
	"match_type": "description"
},
{
	"name": "Event monitoring and management",
	"summary": "",
	"abstract": "Described are techniques used in monitoring the performance, security and health of a system used in an industrial application. Agents included in the industrial network report data to an appliance or server. The appliance stores the data and determines when an alarm condition has occurred. Notifications are sent upon detecting an alarm condition. The alarm thresholds may be user defined. A threat thermostat controller determines a threat level used to control the connectivity of a network used in the industrial application.",
	"url": null,
	"owner": "Industrial Defender, Inc.",
	"publication_number": "07779119",
	"publication_date": "2010-08-17",
	"application_number": "11807699",
	"application_date": "2007-05-30",
	"tags": null,
	"slug": "event-monitoring-and-management",
	"match_type": "description"
},
{
	"name": "Bus system employing an arbiter",
	"summary": "",
	"abstract": "A method for operating a bus system, in particular in a microprocessor or microcontroller, and a semiconductor device for performing the method is disclosed. In one embodiment, for optimizing the order of accesses to the bus system, a method for operating a bus system includes at least one transmission channel, wherein the transmission channel connects at least two masters and at least one slave with one another. The masters are connected with an arbiter determining the order of accesses in which the masters access the transmission channel. The method provides that the arbiter takes into account meta information about planned accesses when determining the order of accesses. Meta information can further be stored and be referred to for subsequent determinations.",
	"url": null,
	"owner": "Infineon Technologies AG",
	"publication_number": "07689746",
	"publication_date": "2010-03-30",
	"application_number": "11678872",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "bus-system-employing-an-arbiter",
	"match_type": "description"
},
{
	"name": "Virtual machine interface for hardware reconfigurable and software programmable processors",
	"summary": "",
	"abstract": "The present invention provides a virtual machine interface (VMI) and an application programming interface (API) usable in conjunction with a reconfigurable wireless network communication apparatus. The reconfigurable wireless network communication apparatus comprises a plurality of hardware kernels. The apparatus can be reconfigured to support different or modified communication protocols over time. The VMI comprises a library of software objects. By configuring VMI software objects, a programmer selects the communication protocol used by the reconfigurable wireless network communication apparatus. The API of the present invention provides higher level management of the communication protocol used by a reconfigurable wireless network communication apparatus. The API comprises a library of high level software objects that further abstract hardware details of the apparatus.",
	"url": null,
	"owner": "Infineon Technologies AG",
	"publication_number": "07703107",
	"publication_date": "2010-04-20",
	"application_number": "09828381",
	"application_date": "2001-04-05",
	"tags": null,
	"slug": "virtual-machine-interface-for-hardware-reconfigurable-and-software-programmable-processors",
	"match_type": "abstract"
},
{
	"name": "System and method for provisioning a vehicle interface module",
	"summary": "",
	"abstract": "The present invention provides systems and methods for provisioning a vehicle interface module comprising receiving a VIM from a VIM manufacturer and entering appropriate VIM data into a dealer inventory, activating a SIM card for the VIM and installing the VIM in a predetermined vehicle, selecting a wireless activated VIM from the dealer inventory and connecting the VIM to an OBD-II port of the vehicle, connecting a configuration PC to the VIM and downloading a modem configuration, selecting and downloading a vehicle-specific configuration file, accessing a telematics services provider's web portal, entering appropriate vehicle data, and associating the vehicle with the VIM, installing the VIM in the predetermined vehicle, and conducting an installation verification test.",
	"url": null,
	"owner": "Inilex, Inc.",
	"publication_number": "07818098",
	"publication_date": "2010-10-19",
	"application_number": "11613047",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": "system-and-method-for-provisioning-a-vehicle-interface-module",
	"match_type": "description"
},
{
	"name": "Method of synchronizing data between contents providers and a portable device via network and a system thereof",
	"summary": "",
	"abstract": "The present invention relates to a method and system of synchronizing data between a contents providing system and a portable device via network. More particularly, the present invention relates to a method and system of transmitting predetermined data of contents, which requires digital rights protection, to a portable device, wherein a contents providing system and a synchronization information system are connected with a synchronization client installed in a computer to which the portable device is connected.",
	"url": null,
	"owner": "Inka Entworks, Inc.",
	"publication_number": "07770226",
	"publication_date": "2010-08-03",
	"application_number": "10548233",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "method-of-synchronizing-data-between-contents-providers-and-a-portable-device-via-network-and-a-system-thereof",
	"match_type": "description"
},
{
	"name": "Device memory management during electronic file updating",
	"summary": "",
	"abstract": "In performing memory management, an upgrade client of a host device identifies and reserves memory blocks large enough to accommodate new software components by performing sequential searches of first and second memory areas. The new software components are updated versions of components of original software files. When the new component size exceeds that of available blocks of the first and second memory areas, the upgrade client rewrites the first memory area to eliminate unused memory blocks, reapportions the first and second memory areas, writes the new component to the second memory area, and updates a vector table. To access host device software components, the upgrade client receives a function call from the main program of the host device including identification information of corresponding software files, reads a start address of the corresponding software files from the vector table, and generates a call for the corresponding software files.",
	"url": null,
	"owner": "Innopath Software, Inc.",
	"publication_number": "07779055",
	"publication_date": "2010-08-17",
	"application_number": "11187363",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": "device-memory-management-during-electronic-file-updating",
	"match_type": "description"
},
{
	"name": "Differential file compression of software image versions",
	"summary": "",
	"abstract": "Embodiments include systems and methods for pre-processing and post-processing original and new versions of files as part of difference file generation between the original and new file versions. The systems and methods of an embodiment include a set of algorithms that reduce the difference file size by preprocessing a variety of regions in software images for embedded computing devices, an example of which is the compressed read-only memory (ROM) file system (CRAMFS) image. The algorithms treat a variety of types of data regions that are created by the compiler. Embodiments operate on the server side and the client side. On the server side, the preprocessing generates Compact Functional Differences (CFD) hint data directly from a pair of CRAMFS images, without the use of symbol files or log files generated by compiler/linker utilities.",
	"url": null,
	"owner": "Innopath Software, Inc.",
	"publication_number": "07676506",
	"publication_date": "2010-03-09",
	"application_number": "11801463",
	"application_date": "2007-05-09",
	"tags": null,
	"slug": "differential-file-compression-of-software-image-versions",
	"match_type": "description"
},
{
	"name": "Apparatus and method of using lighting systems to enhance brand recognition",
	"summary": "",
	"abstract": "The present solution described herein provides systems and methods to coordinate and control the lighting of areas of a display unit in manner desired based on the type, brand and other characteristics of the product presented for display via the display unit. A lighting control system may control the characteristics of light emanating from one or more light sources to cause a reaction or visual effect from light reactive material of the product or display unit. In some cases, the lighting control system may control the characteristics of light emanating from one or more light sources based on signals from detectors, such as sensing any state or condition of the ambient environment.",
	"url": null,
	"owner": "Integrated Illumination Systems, Inc.",
	"publication_number": "07729941",
	"publication_date": "2010-06-01",
	"application_number": "11941827",
	"application_date": "2007-11-16",
	"tags": null,
	"slug": "apparatus-and-method-of-using-lighting-systems-to-enhance-brand-recognition",
	"match_type": "description"
},
{
	"name": "Self-learning integrity management system and related methods",
	"summary": "",
	"abstract": "An integrity management system predicts abnormalities in complex systems before they occur based upon the prior history of abnormalities within the complex system. A topology of the nodes of a complex system is generated and data is collected from the system based on predetermined metrics. In combination with dynamic thresholding, fingerprints of the relevant nodes within a complex system at various time intervals prior to the occurrence of the abnormality are captured and weighted. The fingerprints can then be applied to real-time data provide alerts of potential abnormality prior to their actual occurrence.",
	"url": null,
	"owner": "Integrien Corporation",
	"publication_number": "07801703",
	"publication_date": "2010-09-21",
	"application_number": "12270535",
	"application_date": "2008-11-13",
	"tags": null,
	"slug": "selflearning-integrity-management-system-and-related-methods",
	"match_type": "description"
},
{
	"name": "Apparatus and method for configuring data plane behavior on network forwarding elements",
	"summary": "",
	"abstract": "A method and apparatus for configuring data plane behavior on network forwarding elements are described. In one embodiment, the method includes receiving, within a network element control plane, protocol configuration information extracted from a protocol application utilizing a network protocol application programming interface (API). Once the protocol configuration information is received, the protocol configuration information is processed using a control interface corresponding to the network protocol implemented by the protocol application. Once the protocol configuration information is processed, the control interface programs one or more data plane forwarding elements of the network element according to protocol configuration information. Accordingly, by providing similar control interfaces for multiple, network protocols, inter-operability between components from multiple vendors is enabled.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07646759",
	"publication_date": "2010-01-12",
	"application_number": "10338291",
	"application_date": "2003-01-07",
	"tags": null,
	"slug": "apparatus-and-method-for-configuring-data-plane-behavior-on-network-forwarding-elements",
	"match_type": "abstract"
},
{
	"name": "Configurable and flexible wireless link adaptation method and device",
	"summary": "",
	"abstract": "A method and apparatus for implementing user defined Link Adaptation solutions in a wireless system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07843874",
	"publication_date": "2010-11-30",
	"application_number": "11862388",
	"application_date": "2007-09-27",
	"tags": null,
	"slug": "configurable-and-flexible-wireless-link-adaptation-method-and-device",
	"match_type": "description"
},
{
	"name": "Discrete table descriptor for unified table management",
	"summary": "",
	"abstract": "A table descriptor is associated with a table and referenced to provide access to the table. The table descriptor includes a first portion identifying information about the table and a second portion identifying one or more locations of the table in memory.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07710972",
	"publication_date": "2010-05-04",
	"application_number": "11644220",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "discrete-table-descriptor-for-unified-table-management",
	"match_type": "description"
},
{
	"name": "Dynamic quality of service (QOS) provisioning using session initiation protocol (SIP) module in wireless base stations",
	"summary": "",
	"abstract": "A method, apparatus and/or system for communicating in a wireless network may dynamically create and/or delete a medium access control (MAC) quality of service (QoS) connection in a wireless link between a base station and a mobile station. Each wireless base station in the network may include a packet classifier to quickly identify packets that may include session initiation protocol (SIP) messages and SIP logic to trigger the MAC QoS connection based on a received SIP message. Various other detailed embodiments and variants are also disclosed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07787470",
	"publication_date": "2010-08-31",
	"application_number": "11303163",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "dynamic-quality-of-service-qos-provisioning-using-session-initiation-protocol-sip-module-in-wireless-base-stations",
	"match_type": "description"
},
{
	"name": "Extensible network services system",
	"summary": "",
	"abstract": "Automatically finding and using network services. An extensible framework is defined which allows any network service, new or old, to be defined. A base schema is defined that defines existing network services, and extension schemes may also be defined which are specific to new network services. A vendor can define the schemas in XML, as well as using software plug-ins and configuration data. The information is stored on a network provider's server. Clients can browse the network providers server for available services. Any available services can be accepted. When this happens, a form is provided to the client; the client fills out the form; and returns it. The information on the form is associated with the XML schemas and used to select and automatically configure the network service.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07805502",
	"publication_date": "2010-09-28",
	"application_number": "11588972",
	"application_date": "2006-10-27",
	"tags": null,
	"slug": "extensible-network-services-system",
	"match_type": "description"
},
{
	"name": "Gradually degrading multimedia recordings",
	"summary": "",
	"abstract": "A system including a recording device in which multiple lesser quality recordings of a program, e.g., recordings at a reduced bit rate, are determined by transcoding a high quality version of the program. Since transcoded recordings are determined with respect to the high quality version, they will have the best quality available for a given bit rate. The system allows a user to manage recordings by associating retention policies and relative ranking attributes with recordings, where a policy manager may use these associated policies and attributes to select which high and lesser quality copies of the program are retained over time, thus gradually degrading retained copies in accord with user preferences.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07840112",
	"publication_date": "2010-11-23",
	"application_number": "10681885",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": "gradually-degrading-multimedia-recordings",
	"match_type": "description"
},
{
	"name": "Iterative search with data accumulation in a cognitive control framework",
	"summary": "",
	"abstract": "Searching hypotheses for locations of objects in a playback image corresponding to a recorded image generated by a graphical user interface (GUI) of an application program may be accomplished by capturing the playback image, detecting at least one active object in the recorded image, searching subsets of hypotheses from the playback image for an object according to predetermined criteria, recalculating old actions for the object in the playback image by applying actions according to an execution scenario and loading a next set of data, when the object is found, and checking dynamic conditions.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07831542",
	"publication_date": "2010-11-09",
	"application_number": "10583650",
	"application_date": "2005-11-11",
	"tags": null,
	"slug": "iterative-search-with-data-accumulation-in-a-cognitive-control-framework",
	"match_type": "description"
},
{
	"name": "LAN emulation over infiniband fabric apparatus, systems, and methods",
	"summary": "",
	"abstract": "A method and device for local area network (LAN) emulation over an Infiniband (IB) fabric. An IB LAN driver at a first node on an IB fabric receives the port and associated local identifier (LID) of one or more remote peer nodes on the IB fabric. An IEEE 802.3 Ethernet MAC address with one LID imbedded is generated. The imbedded LID is for one or more remote peer nodes. The IB LAN driver sends the Ethernet MAC address to an Address Resolution Protocol (ARP). A logical address of a remote peer node is generated by a network protocol. The logical address is mapped to an Ethernet MAC address. The IB LAN driver sends the Ethernet MAC address onto the IB fabric to the one or more remote peer nodes. The remote peer nodes appear to reside on an Ethernet network to the network protocol.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07724748",
	"publication_date": "2010-05-25",
	"application_number": "11431039",
	"application_date": "2006-05-09",
	"tags": null,
	"slug": "lan-emulation-over-infiniband-fabric-apparatus-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Management of watchpoints in debuggers",
	"summary": "",
	"abstract": "Provided are a method, system, and article of manufacture, wherein a first application requests an operating system to monitor a memory address, and wherein the operating system generates a signal in response to an operation that affects the memory address. A second application receives the generated signal. The second application determines whether to forward the signal to the first application. The first application processes the signal, in response to the signal being forwarded by the second application.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07765526",
	"publication_date": "2010-07-27",
	"application_number": "11241606",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "management-of-watchpoints-in-debuggers",
	"match_type": "description"
},
{
	"name": "Mechanism to handle events in a machine with isolated execution",
	"summary": "",
	"abstract": "A platform and method for secure handling of events in an isolated environment. A processor executing in isolated execution u201cIsoXu201d mode may leak data when an event occurs as a result of the event being handled in a traditional manner based on the exception vector. By defining a class of events to be handled in IsoX mode, and switching between a normal memory map and an IsoX memory map dynamically in response to receipt of an event of the class, data security may be maintained in the face of such events.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07793111",
	"publication_date": "2010-09-07",
	"application_number": "09672368",
	"application_date": "2000-09-28",
	"tags": null,
	"slug": "mechanism-to-handle-events-in-a-machine-with-isolated-execution",
	"match_type": "description"
},
{
	"name": "Method and apparatus for controlling data propagation",
	"summary": "",
	"abstract": "A filter driver or other control logic automatically monitors user input events and outbound network packets in a processing system. According to one embodiment, in response to detecting an outbound network packet, the filter driver automatically determines whether the outbound network packet corresponds to a recent user input event. If the outbound network packet does not correspond to at least one recent user input event, the filter driver automatically prevents the processing system from transmitting the outbound network packet. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07774846",
	"publication_date": "2010-08-10",
	"application_number": "11201449",
	"application_date": "2005-08-10",
	"tags": null,
	"slug": "method-and-apparatus-for-controlling-data-propagation",
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing software errors in a computer system",
	"summary": "",
	"abstract": "A method for managing a system includes monitoring a plurality of applications running in the system for errors. A prediction is made as to whether errors detected would result in a failure. Fault recovery is initiated in response to a failure prediction. According to one aspect of the present invention, monitoring the plurality of applications includes reading error recorders associated with error occurrence. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07702966",
	"publication_date": "2010-04-20",
	"application_number": "11220796",
	"application_date": "2005-09-07",
	"tags": null,
	"slug": "method-and-apparatus-for-managing-software-errors-in-a-computer-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for redirection of machine check interrupts in multithreaded systems",
	"summary": "",
	"abstract": "Disclosed is a communication mechanism among hardware, firmware and system software in order to redirect interrupts or other hardware events to only one thread execution context of an error domain for a multi-threaded processing system. Other embodiments are also described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07721148",
	"publication_date": "2010-05-18",
	"application_number": "11478797",
	"application_date": "2006-06-29",
	"tags": null,
	"slug": "method-and-apparatus-for-redirection-of-machine-check-interrupts-in-multithreaded-systems",
	"match_type": "description"
},
{
	"name": "Method and apparatus for reducing power consumption for isochronous data transfers",
	"summary": "",
	"abstract": "A method and article for reducing power consumption for isochronous data transfers are described. The method may include receiving packets of data having multimedia information with empty spaces. The packets of data may be stored in a first buffer having a first buffer size allocated for a universal serial bus processing stack. The empty spaces may be removed from the packets of data and the packets of data having the empty spaces removed may be copied to a second buffer having a second buffer size allocated for a media information processing stack. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07774521",
	"publication_date": "2010-08-10",
	"application_number": "11966118",
	"application_date": "2007-12-28",
	"tags": null,
	"slug": "method-and-apparatus-for-reducing-power-consumption-for-isochronous-data-transfers",
	"match_type": "description"
},
{
	"name": "Method and apparatus to control the display of windows in a processing system",
	"summary": "",
	"abstract": "A processing system may include a display device, a primary window manager, and an auxiliary window manager. The primary window manager may display a first remote-enabled window in the display device. The processing system may also include a program to generate a mouse-enabled window, and the primary window manager may prevent the mouse-enabled window from displaying in front of the first remote-enabled window. The auxiliary window manager may detect an attempt to display the mouse-enabled window, and, in response, may automatically display a second remote-enabled window in front of the first remote-enabled window. The second remote-enabled window may include an object that a user can select with a remote control to instruct the processing system to display the mouse-enabled window. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07831924",
	"publication_date": "2010-11-09",
	"application_number": "11388532",
	"application_date": "2006-03-23",
	"tags": null,
	"slug": "method-and-apparatus-to-control-the-display-of-windows-in-a-processing-system",
	"match_type": "description"
},
{
	"name": "Method, apparatus, system, and article of manufacture for grouping packets",
	"summary": "",
	"abstract": "In certain embodiments, a first unit receives a plurality of packets, wherein the plurality of packets are capable of being processed according to at least a first protocol and a second protocol. The first unit sorts the plurality of packets into a first group and a second group, wherein all packets in the first group are capable of being processed according to the first protocol, and all packets in the second group are capable of being processed according to the second protocol. The first unit sends the first group and the second group to a second unit.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07814219",
	"publication_date": "2010-10-12",
	"application_number": "10741030",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": "method-apparatus-system-and-article-of-manufacture-for-grouping-packets",
	"match_type": "description"
},
{
	"name": "Methods and apparatus to perform process placement for distributed applications",
	"summary": "",
	"abstract": "Methods and apparatus to perform process placement for distributed applications are disclosed. An example method comprises determining a mapping between a communication graph representative of communications of a distributed application and a topology graph representative of communication costs associated with a computing network, and executing the distributed application with the processes of the distributed application assigned to the processing entities of the computing network based upon the mapping.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07644142",
	"publication_date": "2010-01-05",
	"application_number": "11418311",
	"application_date": "2006-05-04",
	"tags": null,
	"slug": "methods-and-apparatus-to-perform-process-placement-for-distributed-applications",
	"match_type": "description"
},
{
	"name": "Methods and apparatus to tune intermediate representations in a managed runtime environment",
	"summary": "",
	"abstract": "Methods and apparatus are disclosed to tune intermediate representations in a managed runtime environment. An example method disclosed herein receives a bytecode at a virtual machine during runtime, determines a method of the received bytecode, identifies an optimized intermediate representation associated with the method, and imports the optimized intermediate representation from the memory into the virtual machine. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07793275",
	"publication_date": "2010-09-07",
	"application_number": "11395832",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "methods-and-apparatus-to-tune-intermediate-representations-in-a-managed-runtime-environment",
	"match_type": "description"
},
{
	"name": "Methods, systems, and data structures for generating a rasterizer",
	"summary": "",
	"abstract": "Methods, systems and data structures produce a rasterizer. A graphical state is detected on a machine architecture. The graphical state is used for assembling a shell rasterizer. The machine architecture is used for selecting replacement logic that replaces portions of shell logic in the shell rasterizer. The machine architecture is used for selectively inserting memory management logic into portions of the shell logic to produce.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07710430",
	"publication_date": "2010-05-04",
	"application_number": "12255299",
	"application_date": "2008-10-21",
	"tags": null,
	"slug": "methods-systems-and-data-structures-for-generating-a-rasterizer",
	"match_type": "description"
},
{
	"name": "Operating system independent agent",
	"summary": "",
	"abstract": "Described is a computing platform comprising a host processing system to host an operating system, a communication adapter to transmit data to or and receive data from a data transmission medium, and a non-volatile storage. The computing platform may also comprise an agent executable independently of the operating system to enable read-only or read/write access to at least a portion of the non-volatile storage.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07707586",
	"publication_date": "2010-04-27",
	"application_number": "10937755",
	"application_date": "2004-09-08",
	"tags": null,
	"slug": "operating-system-independent-agent",
	"match_type": "description"
},
{
	"name": "Operating system-independent method and system of determining CPU utilization",
	"summary": "",
	"abstract": "A method and device are provided to monitor clock control signals from a CPU core; and calculate a time period during a sampling interval that the CPU core was used to perform work based on the clock control signals.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07694164",
	"publication_date": "2010-04-06",
	"application_number": "10251202",
	"application_date": "2002-09-20",
	"tags": null,
	"slug": "operating-systemindependent-method-and-system-of-determining-cpu-utilization",
	"match_type": "description"
},
{
	"name": "Scaling egress network traffic",
	"summary": "",
	"abstract": "In an embodiment, a method is provided. The method of this embodiment provides generating one or more packets of data, the one or more packets of data being associated with a connection; and associating the one or more packets with one of a plurality of transmit queues based, at least in part, on the connection associated with the one or more packets.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07792102",
	"publication_date": "2010-09-07",
	"application_number": "11395959",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "scaling-egress-network-traffic",
	"match_type": "description"
},
{
	"name": "Structural content filtration of hypotheses in a cognitive control framework",
	"summary": "",
	"abstract": "Structural content filtration to reduce the number of hypotheses for the location of an active object in a recorded image generated by a graphical user interface (GUI) of an application program may be accomplished by transforming the recorded image and a corresponding playback image, determining a sub-image from the transformed recorded image which corresponds to an object to be searched for in the transformed playback image, determining a set of points on the transformed playback image which have appropriate values for matching the sub-image, and filtering hypotheses on the playback image which are more than a selected distance from any one of the subset of points.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07805008",
	"publication_date": "2010-09-28",
	"application_number": "10583952",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": "structural-content-filtration-of-hypotheses-in-a-cognitive-control-framework",
	"match_type": "description"
},
{
	"name": "Subdividing geometry images in graphics hardware",
	"summary": "",
	"abstract": "A system may include a graphics memory, a data bus, a processor, and a vertex shader. The data bus may be operatively connected to the graphics memory. The processor may send vertex data to the graphics memory via the data bus. The vertex shader may read the vertex data from the graphics memory and may subdivide the vertex data into subdivided vertex data. The vertex shader may also write the subdivided vertex data to the graphics memory.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07750914",
	"publication_date": "2010-07-06",
	"application_number": "10926875",
	"application_date": "2004-08-26",
	"tags": null,
	"slug": "subdividing-geometry-images-in-graphics-hardware",
	"match_type": "description"
},
{
	"name": "System and method for adaptive power management based on processor utilization and cache misses",
	"summary": "",
	"abstract": "A processing system may include a performance monitoring unit (PMU), a machine accessible medium, and a processor responsive to the PMU and the machine accessible medium. Instructions encoded in the machine accessible medium, when executed by the processor, may determine whether performance details for the processing system should be collected, based at least in part on a predetermined monitoring policy for the processing system. The instructions may generate performance data for the processing system, based at least in part on data obtained from the PMU. The instructions may determine whether the processing system should be reconfigured, based at least in part on the performance data and a power policy profile for the processing system. The instructions may automatically adjust power consumption of the processing system by using the PMU to reconfigure the processing system. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07814485",
	"publication_date": "2010-10-12",
	"application_number": "11007098",
	"application_date": "2004-12-07",
	"tags": null,
	"slug": "system-and-method-for-adaptive-power-management-based-on-processor-utilization-and-cache-misses",
	"match_type": "description"
},
{
	"name": "System and method for configuring a virtual network interface card",
	"summary": "",
	"abstract": "A system includes an interface device that executes a driver and a processing device that executes instructions to implement a virtual machine, and to implement a virtual network interface card that is configurable to enable communication between the driver and the virtual machine. The processor executes instructions to configure the virtual network interface card.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07752635",
	"publication_date": "2010-07-06",
	"application_number": "10740908",
	"application_date": "2003-12-18",
	"tags": null,
	"slug": "system-and-method-for-configuring-a-virtual-network-interface-card",
	"match_type": "description"
},
{
	"name": "System and method for managing distributed objects as a single representation",
	"summary": "",
	"abstract": "An architecture and method for managing at least two distinct machines (or objects) in which resources are shared as a single entity (or object) in an agent-based system. The agent-based system comprising a controller, a local agent coupled to the controller, and at least one clustered machine. The at least one clustered machine includes at least two individual agents, the at least two individual agents sharing at least one shared resource/service. The system also includes a virtual non-persistent connection for coupling the at least two individual agents to the local agent. The at least one shared resource/service is accessed by the local agent through the virtual non-persistent connection using a virtual IP address to enable the at least two individual agents of the at least one clustered machine to be represented as a single object.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07831713",
	"publication_date": "2010-11-09",
	"application_number": "11950354",
	"application_date": "2007-12-04",
	"tags": null,
	"slug": "system-and-method-for-managing-distributed-objects-as-a-single-representation",
	"match_type": "description"
},
{
	"name": "Systems, apparatus and methods capable of shelf management",
	"summary": "",
	"abstract": "A method according to one embodiment may include discovering, by software, at least one variable from at least one component populated on a shelf system. The method may also include performing, by the software, at least one shelf management function based on at least one variable. Of course, many alternatives, variations, and modifications are possible without departing from this embodiment.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07817394",
	"publication_date": "2010-10-19",
	"application_number": "10900927",
	"application_date": "2004-07-28",
	"tags": null,
	"slug": "systems-apparatus-and-methods-capable-of-shelf-management",
	"match_type": "description"
},
{
	"name": "Technique to perform memory reference filtering",
	"summary": "",
	"abstract": "A technique to filter regions of memory. More particularly, at least one embodiment of the invention relates to a technique to detect and filter accesses or information pertaining to a memory access in a computer system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07769964",
	"publication_date": "2010-08-03",
	"application_number": "11508016",
	"application_date": "2006-08-21",
	"tags": null,
	"slug": "technique-to-perform-memory-reference-filtering",
	"match_type": "description"
},
{
	"name": "Techniques to communication MAP information elements in a wireless network",
	"summary": "",
	"abstract": "Techniques to communicate MAP information elements in a wireless network are described. An apparatus may comprise a device to establish a communication channel over a common wireless communication link, the device to communicate an encapsulating MAP information element to encapsulate one or more MAP information elements. The encapsulating MAP information element may indicate that the one or more encapsulated MAP information elements apply to multiple communication frames. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07852826",
	"publication_date": "2010-12-14",
	"application_number": "11537293",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "techniques-to-communication-map-information-elements-in-a-wireless-network",
	"match_type": "description"
},
{
	"name": "Triangular method for hypotheses filtration in a cognitive control framework",
	"summary": "",
	"abstract": "Reducing the number of hypotheses for locations of an active object in a saved image generated by a graphical user interface (GUI) of an application program may be accomplished by determining possible triangles for the saved image, wherein vertices of the triangles are points where the active object and any two additional objects of the saved image are located, determining possible pairs of hypotheses corresponding to the two additional objects from a current playback image corresponding to the saved image, determining triangles corresponding to the possible pairs of hypotheses and filtering the detected triangles, determining vertices with weights for similar triangles of the current playback image, and calculating a weight for every hypothesis of the active object and filtering hypotheses of the active object on the current playback image based on a weight bound.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07787651",
	"publication_date": "2010-08-31",
	"application_number": "10582928",
	"application_date": "2005-11-11",
	"tags": null,
	"slug": "triangular-method-for-hypotheses-filtration-in-a-cognitive-control-framework",
	"match_type": "description"
},
{
	"name": "Virtual machine monitor management from a management service processor in the host processing platform",
	"summary": "",
	"abstract": "A management service processor to provide management of virtual machine monitoring is described. In one example, an event on a computer system is monitored at a sensor of a management system residing on the computer system. A record of the event is generated in a generic data format. The event is signaled to the management system, and the record is sent to an event routing service of the management system.",
	"url": null,
	"owner": "Intel Corporation",
	"publication_number": "07853958",
	"publication_date": "2010-12-14",
	"application_number": "11477327",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": "virtual-machine-monitor-management-from-a-management-service-processor-in-the-host-processing-platform",
	"match_type": "description"
},
{
	"name": "Method and apparatus for using a single multi-function adapter with different operating systems",
	"summary": "",
	"abstract": "A flexible arrangement allows a single arrangement of Ethernet channel adapter (ECA) hardware functions to appear as needed to conform to various operating system deployment models. A PCI interface presents a logical model of virtual devices appropriate to the relevant operating system. Mapping parameters and values are associated with the packet streams to allow the packet streams to be properly processed according to the presented logical model and needed operations. Mapping occurs at both the host side and at the network side to allow the multiple operations of the ECA to be performed while still allowing proper delivery at each interface.",
	"url": null,
	"owner": "Intel-NE, Inc.",
	"publication_number": "07849232",
	"publication_date": "2010-12-07",
	"application_number": "11356501",
	"application_date": "2006-02-17",
	"tags": null,
	"slug": "method-and-apparatus-for-using-a-single-multifunction-adapter-with-different-operating-systems",
	"match_type": "description"
},
{
	"name": "Virtual private network between computing network and remote device",
	"summary": "",
	"abstract": "A secure connection between a computer network and a remote device is provided by a carrier network between the computer network and the remote device. The secure connection includes data tunnels that operate as virtual private networks between the corporate network and the carrier network and between the remote device and the carrier network. In addition, communication protocols can be used to enable data requests and data transmission over the secure connection, optionally through ports on the computer network that are opened for Web traffic.",
	"url": null,
	"owner": "Intellisync Corporation",
	"publication_number": "07673133",
	"publication_date": "2010-03-02",
	"application_number": "10794243",
	"application_date": "2004-03-05",
	"tags": null,
	"slug": "virtual-private-network-between-computing-network-and-remote-device",
	"match_type": "description"
},
{
	"name": "Multi-segment string search",
	"summary": "",
	"abstract": "A method and system for searching multi-segment strings is provided. The search system receives a query string containing part or all of the segments that are to be matched as query segments. Upon receiving the query string, the search system compares the query segments provided in the query string with segments gathered from previously stored strings. If any segments match the query segments, the search system selects the strings that contain matching segments as search results.",
	"url": null,
	"owner": "Intentional Software Corporation",
	"publication_number": "07756859",
	"publication_date": "2010-07-13",
	"application_number": "11311891",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": "multisegment-string-search",
	"match_type": "description"
},
{
	"name": "Remote device management in a home automation data transfer system",
	"summary": "",
	"abstract": "An automation network includes automation network devices connected to the network and a system layer interface that interfaces with a transport layer and an application layer of the home automation network. The system layer interface includes command libraries configured to upgrade a remote network device. The automation network queries the network devices to determine if there are lost network devices or newly added network devices. The automation network may update a new remote device with scene information related to any lost network devices.",
	"url": null,
	"owner": "Intermatic Incorporated",
	"publication_number": "07694005",
	"publication_date": "2010-04-06",
	"application_number": "11590670",
	"application_date": "2006-10-31",
	"tags": null,
	"slug": "remote-device-management-in-a-home-automation-data-transfer-system",
	"match_type": "description"
},
{
	"name": "Access control list checking",
	"summary": "",
	"abstract": "Method and system for dynamically checking an access control list during the data transfers between a client web browser and a web server. The method and system allow checking of access control list by an application firewall, independent from the web application. The rules, upon which the checking is based, can be easily updated without affecting the web application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07805513",
	"publication_date": "2010-09-28",
	"application_number": "12262661",
	"application_date": "2008-10-31",
	"tags": null,
	"slug": "access-control-list-checking",
	"match_type": "description"
},
{
	"name": "Accessing objects in a service registry and repository using subclass inference",
	"summary": "",
	"abstract": "A service registry and repository method, system, computer program product and web service for managing an object database for objects where each node for locating objects for selection utilizes predicates for the object; inferring subclasses of an identified class if a predicate is a class classification function; consolidating object predicates including subclasses if a predicate is a class classification function; and appending specific clauses to the object query, then querying the object database using the object query.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07725482",
	"publication_date": "2010-05-25",
	"application_number": "11843968",
	"application_date": "2007-08-23",
	"tags": null,
	"slug": "accessing-objects-in-a-service-registry-and-repository-using-subclass-inference",
	"match_type": "description"
},
{
	"name": "Alert log activity thread integration",
	"summary": "",
	"abstract": "Embodiments of the present invention address deficiencies of the art in respect to alert management in an activity-centric collaborative computing environment and provide a novel and non-obvious method, system and computer program product for activity thread integration of an alert log. In one embodiment of the invention, an alert log activity thread integration method can be provided. The method can include logging a reference to an alert for an activity in an activity thread, and, in response to the selection of the alert from within the activity thread, displaying the content of the alert. For instance, logging a reference to an alert for an activity in an activity thread can include creating a branch of the activity thread for inserting all alerts pertaining to the activity and inserting the reference to the alert in the created branch.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822848",
	"publication_date": "2010-10-26",
	"application_number": "11617094",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "alert-log-activity-thread-integration",
	"match_type": "description"
},
{
	"name": "Algorithm to marshal/unmarshal XML schema annotations to SDO dataobjects",
	"summary": "",
	"abstract": "When a data object is sent from one application to another, the marshaling code includes type information with transmission of the data object. When the data object is converted to the transmission format, type information for the data object is added to the transmission format element. The unmarshaling code uses the type information to obtain schema information for converting the transmission format element back to the data element.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07680800",
	"publication_date": "2010-03-16",
	"application_number": "11134733",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "algorithm-to-marshalunmarshal-xml-schema-annotations-to-sdo-dataobjects",
	"match_type": "description"
},
{
	"name": "Apparatus and method for dynamic instrumenting of code to minimize system perturbation",
	"summary": "",
	"abstract": "An apparatus and method are provided for the dynamic instrumentation of code to minimize system perturbation during tracing of the execution of the code. With the apparatus and method, u201chot spotsu201d in the execution of the code are dynamically determined during tracing of the execution of the code. These u201chot spotsu201d are dynamically instrumented, i.e. an event hook is inserted, to cause control to be passed to a handler that determines a caller of the u201chot spotu201d method. The method that called the u201chot spotu201d method, or u201ccalleru201d method, is identified from a call stack and is dynamically instrumented for an appropriate metric so that the next time the calling method is executed, the dynamically inserted hooks are executed. The execution of the hooks in the caller method is continued for a predetermined period, e.g., number of invocations, to get an understanding of the caller method's characteristics. A list of callers of instrumented methods is maintained and used to determine one or more calling methods of the instrumented caller method. One or more of these calling methods may be instrumented and the hooks inserted in the instrumented caller method (called by the one or more calling methods), are removed. In this way, the call graph of the hot spots of a program execution is u201cwalked upu201d and characterized over time.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07823129",
	"publication_date": "2010-10-26",
	"application_number": "11488425",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": "apparatus-and-method-for-dynamic-instrumenting-of-code-to-minimize-system-perturbation",
	"match_type": "description"
},
{
	"name": "Apparatus for thread-safe handlers for checkpoints and restarts",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for executing a handler in a multi-threaded process handling a number of threads in a manner that avoids deadlocks. A value equal to the number of threads executing in the data processing system is set. The value is decremented each time a lock count for a thread within the number of threads is zero. A thread within the number of threads is suspended if the thread requests a lock and has a lock count of zero. A procedure, such as a handler, is executed in response to all of the threads within the number of threads having no locks.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07653910",
	"publication_date": "2010-01-26",
	"application_number": "12029193",
	"application_date": "2008-02-11",
	"tags": null,
	"slug": "apparatus-for-threadsafe-handlers-for-checkpoints-and-restarts",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for defining a metadata schema to facilitate passing data between an extensible markup language document and a hierarchical database",
	"summary": "",
	"abstract": "An apparatus, system, and method are provided for defining a metadata schema to facilitate passing data between an XML document and a hierarchical database. The invention includes a database accessor, a document accessor, and an association module. The database accessor accesses a database schema indicative of database field names and a hierarchical structure for a hierarchical database. The document accessor accesses a document schema that defines the hierarchical structure, content data syntax, and semantics of valid, well-formed, XML documents that can be passed into and out of the hierarchical database. The document schema also includes at least one XML element name that maps to a corresponding database field name in the database schema. The association module associates the database schema and the document schema to provide a metadata schema that enables data to be passed between an XML document and the hierarchical database.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822786",
	"publication_date": "2010-10-26",
	"application_number": "11948839",
	"application_date": "2007-11-30",
	"tags": null,
	"slug": "apparatus-system-and-method-for-defining-a-metadata-schema-to-facilitate-passing-data-between-an-extensible-markup-language-document-and-a-hierarchical-database",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for gathering trace data indicative of resource activity",
	"summary": "",
	"abstract": "An apparatus, system, and method are provided for gathering trace data indicative of resource activity on a computer system. The present invention includes a monitoring module that initiates one or more activity monitors on a target computer system to detect different types of resource activity. A determination module determines activity indicators involving resources of the target computer system using the one or more activity monitors. The activity indicators may comprise a variety of information useful in identifying one or more separate resource activities. A collection module organizes the activity indicators into trace data representative of the resource activity. Preferably, the monitoring module, determination module, and collection module operate continuously on the target computer system. In this manner, the trace data includes an accurate set of both current activity indicators as well as historical activity indicators.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07661135",
	"publication_date": "2010-02-09",
	"application_number": "10915004",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": "apparatus-system-and-method-for-gathering-trace-data-indicative-of-resource-activity",
	"match_type": "description"
},
{
	"name": "Authentication to a second application using credentials authenticated to a first application",
	"summary": "",
	"abstract": "Systems, methods, and program products are provided for switching identity of a user that has a first username associated with a first class of users. According to the method, login information is received from the user, with the login information including the first username, an alternate class, and a password. The user is authenticated based on the first username and the password, and access to the computer system is provided as the alternate class, with the alternate class being different than the first class. In one preferred embodiment, the login information further includes a second username, and access to the computer system is provided with the rights and privileges of the second username.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07647628",
	"publication_date": "2010-01-12",
	"application_number": "10796372",
	"application_date": "2004-03-09",
	"tags": null,
	"slug": "authentication-to-a-second-application-using-credentials-authenticated-to-a-first-application",
	"match_type": "description"
},
{
	"name": "Automated testing framework for event-driven systems",
	"summary": "",
	"abstract": "Techniques for programmatically coordinating, and synchronizing execution of, automated testing in event-driven systems. One or more user-provided test system event listeners listen for generated events and update test system status accordingly. A user-provided test suite definition invokes a test framework interface, thereby defining the structure of a test suite. This test suite is executed, referring to the test system status to determine when to move to a next stage (e.g., to a next test case or next test module). Test system status may also be updated directly from a test case or test module (e.g., when the test designer determines that the tested code will not generate events that can be leveraged for test status information).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779302",
	"publication_date": "2010-08-17",
	"application_number": "10915592",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": "automated-testing-framework-for-eventdriven-systems",
	"match_type": "description"
},
{
	"name": "Automatic configuration of robotic transaction playback through analysis of previously collected traffic patterns",
	"summary": "",
	"abstract": "A system or method which accesses or otherwise receives collected performance data for at least one server application, where the server application is capable of performing a plurality of transactions with client devices and the client devices are geographically dispersed from the server in known geographical locales, which automatically determines from the performance data which of the transactions are utilized by users of the client devices, which selects utilized transactions according to at least one pre-determined selection criteria, which automatically generates a transaction playback script for each of the selected transactions substituting test information in place of user-supplied or user-unique information in the transactions, which designates each script for execution from a geographical locale corresponding to the locale of the clients which execute the utilized transactions, which deploys the playback scripts to robotic agents geographically co-located with client devices according to the locale designation, and which executes the playback scripts.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07809525",
	"publication_date": "2010-10-05",
	"application_number": "11830896",
	"application_date": "2007-07-31",
	"tags": null,
	"slug": "automatic-configuration-of-robotic-transaction-playback-through-analysis-of-previously-collected-traffic-patterns",
	"match_type": "description"
},
{
	"name": "Automatic generation of portlets for visualizing data by exploiting object relationships",
	"summary": "",
	"abstract": "A method of automatically creating portlets for a portal system can include identifying a location of structured data described by a data model specification and automatically determining, from the data model specification, relationships between a plurality of objects within the structured data. The method further can include automatically generating a plurality of portlets, wherein each portlet is configured to query the structured data according to the relationships specified within the data model specification. One or more communication links between at least two of the portlets can be automatically created according to the relationships specified within the data model specification.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07676589",
	"publication_date": "2010-03-09",
	"application_number": "11422098",
	"application_date": "2006-06-05",
	"tags": null,
	"slug": "automatic-generation-of-portlets-for-visualizing-data-by-exploiting-object-relationships",
	"match_type": "description"
},
{
	"name": "Automatically building a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism within a grid environment",
	"summary": "",
	"abstract": "A method, system, and program for automatically building a locally managed virtual node grouping to handle a grid job requiring a degree of resource parallelism for execution within a grid environment are provided. The grid environment includes multiple resource nodes which are identified by physical location as physically disparate groups each managed by a grid manager. The grid managers include a grid virtual node grouping subsystem that enables a particular grid manager receiving a grid job that requires a particular degree of resource parallelism for execution to build a virtual node grouping of resources from across the grid environment and locally manage the resources included in the virtual node grouping. In particular, the particular grid manager accesses, from the other grid managers, a current availability and workload of each of the physically disparate resource nodes. The particular grid manager selects a selection of resource nodes to build into a virtual node grouping for executing the grid job. The virtual node grouping is built by the other grid managers enabling the particular grid manager to acquire temporary management control over the selection of resource nodes for a duration of the execution of the grid job within the virtual node grouping.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707288",
	"publication_date": "2010-04-27",
	"application_number": "11031542",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "automatically-building-a-locally-managed-virtual-node-grouping-to-handle-a-grid-job-requiring-a-degree-of-resource-parallelism-within-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Automatically collecting and compressing style attributes within a web document",
	"summary": "",
	"abstract": "A style compressor for improving compression of a web document collects all the style attributes referenced by elements of the web document into a central style repository. The style compressor replaces each reference by each of the elements with a class attribute assigned in the central style repository to the replaced style attributes. Next, the style compressor organizes the style attributes in the central style repository and compresses the style attributes into a minimized selection of class attributes each referencing at least one of the style attributes. The style compressor updates the elements of the web document to reference one or more of the minimized selection of class attributes in the central style repository to produce a shorter, more efficiently organized web document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836396",
	"publication_date": "2010-11-16",
	"application_number": "11620472",
	"application_date": "2007-01-05",
	"tags": null,
	"slug": "automatically-collecting-and-compressing-style-attributes-within-a-web-document",
	"match_type": "description"
},
{
	"name": "Automatically filling a drive table",
	"summary": "",
	"abstract": "Provided are techniques for filling a drive table. A key request including at least one of a drive serial number and a world wide node name is received from a data storage drive. It is determined whether the drive serial number or a world wide node name are in an entry in a drive table. In response to determining that the drive serial number or a world wide node name are not in an entry in a drive table, a new entry is automatically added in the drive table that includes the at least one of a drive serial number and a world wide node name.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752463",
	"publication_date": "2010-07-06",
	"application_number": "11530013",
	"application_date": "2006-09-07",
	"tags": null,
	"slug": "automatically-filling-a-drive-table",
	"match_type": "description"
},
{
	"name": "Automatically managing the state of replicated data of a computing environment, and methods therefor",
	"summary": "",
	"abstract": "The state of data of a communications environment is automatically managed. The automatic management is provided via a facility that automatically obtains the current state of the data and uses that information to place the data in an appropriate state for a selected event to be processed. The data is, for instance, maintained on replicated storage media.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07680994",
	"publication_date": "2010-03-16",
	"application_number": "11847792",
	"application_date": "2007-08-30",
	"tags": null,
	"slug": "automatically-managing-the-state-of-replicated-data-of-a-computing-environment-and-methods-therefor",
	"match_type": "description"
},
{
	"name": "Automation of keyboard accessibility testing",
	"summary": "",
	"abstract": "A computer program product and method for testing software applications for keyboard accessibility call for generating a first test script from a first input stream; identifying key signals associated with keys of a test keyboard; associating the key signals to the first input-stream to generate a second test script; and running the second test script to test the keyboard accessibility.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07840948",
	"publication_date": "2010-11-23",
	"application_number": "11562117",
	"application_date": "2006-11-21",
	"tags": null,
	"slug": "automation-of-keyboard-accessibility-testing",
	"match_type": "description"
},
{
	"name": "Backing-up and restoring files including files referenced with multiple file names",
	"summary": "",
	"abstract": "Provided are a method, system, and article of manufacture for backing-up and restoring files including files referenced with multiple file names. Files to backup are determined. A determination is made from the files to backup files referenced with multiple names. An entry is created for each file to backup in a backup directory indicating file attributes and each name used to reference the file. The determined files and the backup directory are backed-up.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07788230",
	"publication_date": "2010-08-31",
	"application_number": "11626271",
	"application_date": "2007-01-23",
	"tags": null,
	"slug": "backingup-and-restoring-files-including-files-referenced-with-multiple-file-names",
	"match_type": "description"
},
{
	"name": "Balancing of data tape cartridges in tape libraries with pass-through mechanism",
	"summary": "",
	"abstract": "A computer-implemented method for balancing data tape cartridge utilization in an automated tape library system identifies a current number of data tape cartridge mounts per library string and identifies a target number mounts per the library string to identify a difference between the target number and the current number as a delta number of data tape cartridges to move. The number of data tape cartridge mounts per data tape cartridge per library string is identified and a data tape cartridge to move is selected by identifying a unique identifier of the data tape cartridge with the highest number of mounts, and having a lowest number of moves, to form a selected data tape cartridge, and creates a move request for the selected data tape cartridge. The move request is sent to the automated tape library for execution, and a move counter for each data tape cartridge moved is incremented.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07672754",
	"publication_date": "2010-03-02",
	"application_number": "12368687",
	"application_date": "2009-02-10",
	"tags": null,
	"slug": "balancing-of-data-tape-cartridges-in-tape-libraries-with-passthrough-mechanism",
	"match_type": "description"
},
{
	"name": "Cadence management of translated multi-speaker conversations using pause marker relationship models",
	"summary": "",
	"abstract": "Multiple speaker cadence is managed for translated conversations by separating a multi-speaker audio stream into single-speaker audio tracks containing one or more first language audio snippets organized according to a timing relationship as related in the multi-speaker audio stream, generating a pause relationship model by determining time relationships between the single-speaker snippets and assigning pause marker values denoting the each beginning and each ending of each mutual silence pause, collecting a translated language audio track corresponding to each single-speaker track, generating pause relationship controls according the pause relationship model, and producing a translated multi-speaker audio output including the translated tracks in which the translated snippets are related in time according to the pause relationship controls.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752031",
	"publication_date": "2010-07-06",
	"application_number": "11388015",
	"application_date": "2006-03-23",
	"tags": null,
	"slug": "cadence-management-of-translated-multispeaker-conversations-using-pause-marker-relationship-models",
	"match_type": "description"
},
{
	"name": "Chaining direct memory access data transfer operations for compute nodes in a parallel computer",
	"summary": "",
	"abstract": "Methods, systems, and products are disclosed for chaining DMA data transfer operations for compute nodes in a parallel computer that include: receiving, by an origin DMA engine on an origin node in an origin injection FIFO buffer for the origin DMA engine, a RGET data descriptor specifying a DMA transfer operation data descriptor on the origin node and a second RGET data descriptor on the origin node, the second RGET data descriptor specifying a target RGET data descriptor on the target node, the target RGET data descriptor specifying an additional DMA transfer operation data descriptor on the origin node; creating, by the origin DMA engine, an RGET packet in dependence upon the RGET data descriptor, the RGET packet containing the DMA transfer operation data descriptor and the second RGET data descriptor; and transferring, by the origin DMA engine to a target DMA engine on the target node, the RGET packet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07805546",
	"publication_date": "2010-09-28",
	"application_number": "11829325",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": "chaining-direct-memory-access-data-transfer-operations-for-compute-nodes-in-a-parallel-computer",
	"match_type": "description"
},
{
	"name": "Client device configuration with hooks",
	"summary": "",
	"abstract": "Configuring a client device including associating a hook in a configuration bundle with customized programming, downloading the configuration bundle for a client device to a services gateway, and executing the configuration bundle on the services gateway, including calling the hook.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07853673",
	"publication_date": "2010-12-14",
	"application_number": "11848797",
	"application_date": "2007-08-31",
	"tags": null,
	"slug": "client-device-configuration-with-hooks",
	"match_type": "description"
},
{
	"name": "Common information model",
	"summary": "",
	"abstract": "One aspect of the invention is a method for responding to an inquiry. An example of the method includes receiving the inquiry, obtaining information from a CIMOM, and creating at least one Storage Object. This example of the method also includes populating the at least one Storage Object with information received from the CIMOM, and sending the at least one Storage Object to a calling function.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07725473",
	"publication_date": "2010-05-25",
	"application_number": "10739228",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": "common-information-model",
	"match_type": "description"
},
{
	"name": "Computer method and system for automatically creating tests for checking software",
	"summary": "",
	"abstract": "Computer system and method automatically generates a test source code for checking validity of an application written in an object oriented language. The application includes objects accessible through an interface implementing programming rules and object behavior rules. For each object, the invention extracts object methods and attributes of the object interface which are impacted by the object behavior rules and extracts the object identification. The invention fills the variable fields of a source code template with the extracted information. The template non variable source code is in conformance with the programming rules and implements a scenario for checking a set of object behavior rules; thus the filled template forms a generated test source code. For distributed applications, the specifications may be EJB or CORBA and the Test Generator uses templates for checking the life-cycle (creation, persistency, removal) of deployed objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707553",
	"publication_date": "2010-04-27",
	"application_number": "11299306",
	"application_date": "2005-12-08",
	"tags": null,
	"slug": "computer-method-and-system-for-automatically-creating-tests-for-checking-software",
	"match_type": "description"
},
{
	"name": "Computer-implemented method, system and program product for establishing multiple read-only locks on a shared data object",
	"summary": "",
	"abstract": "Under the present invention, a locking primitive associated with a shared data object is automatically transformed to allow multiple read-only locks if certain conditions are met. To this extent, when a read-only lock on a shared data object is desired, a thread identifier of an object header lock word (hereinafter u201clock wordu201d) associated with the shared data object is examined to determine if a read-write lock on the shared data object already exists. If not, then the thread identifier is set to a predetermined value indicative of read-only locks, and a thread count in the lock word is incremented. If another thread attempts a read-only lock, the thread identifier will be examined for the predetermined value. If it is present, the thread count will be incremented again, and a second read-only lock will be simultaneously established.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07823150",
	"publication_date": "2010-10-26",
	"application_number": "11042778",
	"application_date": "2005-01-25",
	"tags": null,
	"slug": "computerimplemented-method-system-and-program-product-for-establishing-multiple-readonly-locks-on-a-shared-data-object",
	"match_type": "description"
},
{
	"name": "Conceptual configuration modeling for application program integration",
	"summary": "",
	"abstract": "First and second applications having disparate concrete configuration models are integrated into a unified abstract model wherein configuration elements and associated element values are used to control configurable functions of the first and second application programs, respectively, and wherein the second configuration element has a similar configuration function as the first configuration element; using a first equivalence definition reflecting a functional relationship between the first application configuration element and an abstract model configuration element having the similar configuration function, wherein the abstract model configuration is application-independent and platform-independent; using a second equivalence definition reflecting a functional relationship between the second application program configuration element and the abstract model configuration element; and producing and associating a second configuration element value with the second application configuration element wherein the second application program is automatically configured according to the second concrete application configuration model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774289",
	"publication_date": "2010-08-10",
	"application_number": "11619317",
	"application_date": "2007-01-03",
	"tags": null,
	"slug": "conceptual-configuration-modeling-for-application-program-integration",
	"match_type": "description"
},
{
	"name": "Configuration database supporting selective presentation of configuration entities",
	"summary": "",
	"abstract": "In at least one hardware definition language (HDL) file, at least one design entity containing a functional portion of a digital system is specified. The design entity logically contains a latch having a respective plurality of different possible latch values. With one or more statements in one or more files, a configuration entity is associated with the latch. The configuration entity has a plurality of different settings and each setting reflects which of the plurality of different possible values is loaded in the associated latch. A controlling value set for at least one instance of the configuration entity is also defined in one or more files. The controlling value set indicates at least one controlling value for which presentation of a current setting of the configuration entity instance is restricted. Thereafter, in response to a request to present at least a partial state of the digital system, a current setting of the configuration entity instance is excluded from presentation by reference to a configuration database indicating the controlling value set.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07765513",
	"publication_date": "2010-07-27",
	"application_number": "11762597",
	"application_date": "2007-06-13",
	"tags": null,
	"slug": "configuration-database-supporting-selective-presentation-of-configuration-entities",
	"match_type": "description"
},
{
	"name": "Constructing regular-expression dictionary for textual analysis",
	"summary": "",
	"abstract": "A regular-expression dictionary, as opposed to an exact-match dictionary, is constructed for utilization within computerized textual analysis. One or more data types are defined for entries within the regular-expression dictionary, within a markup-language schema. A structure in the markup-language schema is provided that encompasses the data types of the entries within the regular-expression dictionary. For each of a number of entries of the regular-expression dictionary, a mapping methodology is defined between a source definition of the entry to the structure and the data types within the markup-language schema. Furthermore, a definition of the entry is mapped to the data types within the structure of the markup-language schema, using the mapping methodology defined. The markup language may be eXtensible Markup Language (XML), or another type of markup language.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07684976",
	"publication_date": "2010-03-23",
	"application_number": "11433192",
	"application_date": "2006-05-13",
	"tags": null,
	"slug": "constructing-regularexpression-dictionary-for-textual-analysis",
	"match_type": "description"
},
{
	"name": "Container manifest integrity maintenance system and method",
	"summary": "",
	"abstract": "Container manifests are tracked using a radio frequency identification (RFID) contents reader affixed to a container in which a plurality of RFID-tagged items are disposed, the contents reader being configured to collect and store identification information from all of the tagged items; and using an active RFID tag emulator affixed to the container which responds to an external reader activation code by receiving the collected information from the affixed RFID contents reader, and by transmitting the identification information to the external reader.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07852219",
	"publication_date": "2010-12-14",
	"application_number": "12109061",
	"application_date": "2008-04-24",
	"tags": null,
	"slug": "container-manifest-integrity-maintenance-system-and-method",
	"match_type": "description"
},
{
	"name": "Coordinating the monitoring, management, and prediction of unintended changes within a grid environment",
	"summary": "",
	"abstract": "A method, system, and program for coordinating the monitoring, management, and prediction of unintended changes within a grid environment are provided. A grid change controller within a particular grid environment detects an unintended change within that grid environment. In particular, grid change controller monitors potential change indicators received from multiple disparate resource managers across the grid environment, where each resource manage manages a selection of resources within the grid environment. The grid change controller then determines a necessary response to the unintended change within the grid environment and communicates with at least one independent manager within the grid environment to resolve the unintended change, such that the grid change controller facilitates recovery from the unintended change within the grid environment to maintain performance requirements within the grid environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07788375",
	"publication_date": "2010-08-31",
	"application_number": "12364469",
	"application_date": "2009-02-02",
	"tags": null,
	"slug": "coordinating-the-monitoring-management-and-prediction-of-unintended-changes-within-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Creating a session log for studying usability of computing devices used for social networking by filtering observations based on roles of usability experts",
	"summary": "",
	"abstract": "Methods, systems, and products are disclosed for creating a session log for studying usability of one or more computing devices used for social networking that include: receiving, by a usability engine from at least one usability expert, usability observations observed by the usability expert during a usability session for studying interaction support provided by one or more computing devices to a plurality of users interacting within a social network through the computing devices; recording, by the usability engine, the usability observations in a session log; detecting, by an event listener on at least one of the computing devices, an event generated by the computing device as a result of an interaction among the plurality of users within the social network; notifying, by the event listener, the usability engine of the event; and recording, by the usability engine, a description of the event in the session log.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822702",
	"publication_date": "2010-10-26",
	"application_number": "11769365",
	"application_date": "2007-06-27",
	"tags": null,
	"slug": "creating-a-session-log-for-studying-usability-of-computing-devices-used-for-social-networking-by-filtering-observations-based-on-roles-of-usability-experts",
	"match_type": "description"
},
{
	"name": "Data synchronization mechanism for change-request-management repository interoperation",
	"summary": "",
	"abstract": "Computer method and apparatus for managing software configuration repositories are disclosed. In a plurality of repositories each repository holds a respective set of change-request objects. One of the repositories in the plurality is a primary repository, and the other repositories are working repositories. In the primary repository, there is a respective proxy object for each change-request object of interest in a working repository. Each proxy object has a corresponding associated change-request object in the primary repository. For a given proxy object, changes made to the respective change-request object of interest in the working repository are mapped to the associated change-request object in the primary repository and vice versa.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836429",
	"publication_date": "2010-11-16",
	"application_number": "11612703",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": "data-synchronization-mechanism-for-changerequestmanagement-repository-interoperation",
	"match_type": "description"
},
{
	"name": "Dealing with annotation versioning through multiple versioning policies and management thereof",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture for maintaining annotations for changing source documents are provided. For some embodiments, an annotation system may support multiple policies, with each policy dictating how (or if) an annotation created for a version of a source document should be applied to subsequent versions of the source document. For some embodiments, a user creating an annotation may select from a group of available policies to be applied to the annotation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07689578",
	"publication_date": "2010-03-30",
	"application_number": "10757793",
	"application_date": "2004-01-15",
	"tags": null,
	"slug": "dealing-with-annotation-versioning-through-multiple-versioning-policies-and-management-thereof",
	"match_type": "description"
},
{
	"name": "Defining expressions in a meta-object model of an application",
	"summary": "",
	"abstract": "A method for defining expressions in a meta-object model of an application by locating a string representation of an expression including an identification of a language of the expression; accessing a data type definition corresponding to the language of the expression, the data type definition including a converter for converting the string representation of the expression into an executable runtime representation of the expression; and converting the string representation of the expression into an executable runtime representation of the expression.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761856",
	"publication_date": "2010-07-20",
	"application_number": "11274535",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "defining-expressions-in-a-metaobject-model-of-an-application",
	"match_type": "description"
},
{
	"name": "Detecting missing elements in a storage area network with multiple sources of information",
	"summary": "",
	"abstract": "A detectibility service for a storage infrastructure manager (SIM) operating on a storage area network (SAN) is disclosed directed to addressing a situation where there may be multiple sources of duplicate or contradictory information to the SIM about the presence and condition of an element in the SAN. The service can account for both authoritative as well as nonauthoritative sources of information in a SAN, which participate in the discovery process scanning for SAN elements. Both authoritative and nonauthoritative sources of information can be used to report a given SAN element during a probe, taking advantage of the more efficient processing of information from authoritative sources to override information from nonauthoritative sources regardless of the order in which the various scans may occur.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07725555",
	"publication_date": "2010-05-25",
	"application_number": "11470580",
	"application_date": "2006-09-06",
	"tags": null,
	"slug": "detecting-missing-elements-in-a-storage-area-network-with-multiple-sources-of-information",
	"match_type": "description"
},
{
	"name": "Determining a capacity of a grid environment to handle a required workload for a virtual grid job request",
	"summary": "",
	"abstract": "A method, system, and program for determining a capacity of a grid environment to handle a required workload for a virtual grid job request are provided. A bid controller receives a virtual job request for processing a job within a grid environment from a client system. The bid controller determines the total required workload for the virtual job request. Then, the bid controller calculates a capacity of the grid environment to handle the total required workload, such that a bid for performing the job is enabled to be automatically generated responsive to the virtual job request based on the capacity of the grid environment to handle the total required workload.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07712100",
	"publication_date": "2010-05-04",
	"application_number": "10940452",
	"application_date": "2004-09-14",
	"tags": null,
	"slug": "determining-a-capacity-of-a-grid-environment-to-handle-a-required-workload-for-a-virtual-grid-job-request",
	"match_type": "description"
},
{
	"name": "Determining on demand right size buffering within a socket server implementation",
	"summary": "",
	"abstract": "Method, apparatus and article of manufacture for acquiring a buffer after data from a remote sender (e.g., client) has been received by a local machine (e.g., server). Because the client data has already been received when the buffer is acquired, the buffer may be sized exactly to the size of the client data. In general, the buffer may be caller supplied or system supplied.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822814",
	"publication_date": "2010-10-26",
	"application_number": "12057311",
	"application_date": "2008-03-27",
	"tags": null,
	"slug": "determining-on-demand-right-size-buffering-within-a-socket-server-implementation",
	"match_type": "description"
},
{
	"name": "Differential rendering and refreshing a portal page with a page delta",
	"summary": "",
	"abstract": "A method for differential rendering a portal page that includes a plurality of page elements () and refreshing the portal page. The method includes providing a complete portal page (). A request for the portal page is then sent and/or received (). The request can represent user events. In a next step, page elements () of the portal page to be updated are identified () on the basis of the user events. A page delta is then calculated (), wherein each page element () is associated with a refresh policy depending on the semantics of the respective page element (). The page delta can include the markup elements of the page elements to be updated. Next the page delta is transferred () to the existing portal page and merged () with the existing portal page.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07831556",
	"publication_date": "2010-11-09",
	"application_number": "11384075",
	"application_date": "2006-03-17",
	"tags": null,
	"slug": "differential-rendering-and-refreshing-a-portal-page-with-a-page-delta",
	"match_type": "description"
},
{
	"name": "Direct memory access transfer completion notification",
	"summary": "",
	"abstract": "Methods, apparatus, and products are disclosed for DMA transfer completion notification that include: inserting, by an origin DMA engine on an origin compute node in an injection FIFO buffer, a data descriptor for an application message to be transferred to a target compute node on behalf of an application on the origin compute node; inserting, by the origin DMA engine, a completion notification descriptor in the injection FIFO buffer after the data descriptor for the message, the completion notification descriptor specifying an address of a completion notification field in application storage for the application; transferring, by the origin DMA engine to the target compute node, the message in dependence upon the data descriptor; and notifying, by the origin DMA engine, the application that the transfer of the message is complete, including performing a local direct put operation to store predesignated notification data at the address of the completion notification field.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779173",
	"publication_date": "2010-08-17",
	"application_number": "11754719",
	"application_date": "2007-05-29",
	"tags": null,
	"slug": "direct-memory-access-transfer-completion-notification",
	"match_type": "description"
},
{
	"name": "Direct memory access transfer completion notification",
	"summary": "",
	"abstract": "Methods, compute nodes, and computer program products are provided for direct memory access (u2018DMAu2019) transfer completion notification. Embodiments include determining, by an origin DMA engine on an origin compute node, whether a data descriptor for an application message to be sent to a target compute node is currently in an injection first-in-first-out (u2018FIFOu2019) buffer in dependence upon a sequence number previously associated with the data descriptor, the total number of descriptors currently in the injection FIFO buffer, and the current sequence number for the newest data descriptor stored in the injection FIFO buffer; and notifying a processor core on the origin DMA engine that the message has been sent if the data descriptor for the message is not currently in the injection FIFO buffer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07765337",
	"publication_date": "2010-07-27",
	"application_number": "11758167",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "direct-memory-access-transfer-completion-notification",
	"match_type": "description"
},
{
	"name": "Distributed message routing in a virtualized messaging system using recursive least squares links cost estimation with choke points",
	"summary": "",
	"abstract": "Routing data packet traffic in packet networks, expediting the flow of the data packets and reducing the effects of congestion at nodes is accomplished by capturing latency data for nodes for initial measurement times; and computing a least squares estimate of the delay as a recursive least-squares solution.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07742422",
	"publication_date": "2010-06-22",
	"application_number": "11567914",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": "distributed-message-routing-in-a-virtualized-messaging-system-using-recursive-least-squares-links-cost-estimation-with-choke-points",
	"match_type": "description"
},
{
	"name": "Drawing apparatus for displaying image data about a plurality of objects including semitransparent object and opaque object on computer display screen",
	"summary": "",
	"abstract": "A drawing apparatus which can display image data about a plurality of objects including opaque objects and semitransparent objects, each having information about a depth direction, on a computer display screen.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07834879",
	"publication_date": "2010-11-16",
	"application_number": "12112680",
	"application_date": "2008-04-30",
	"tags": null,
	"slug": "drawing-apparatus-for-displaying-image-data-about-a-plurality-of-objects-including-semitransparent-object-and-opaque-object-on-computer-display-screen",
	"match_type": "description"
},
{
	"name": "Dual-component state token with state data direct access index for systems with high transaction volume and high number of unexpired tokens",
	"summary": "",
	"abstract": "Access to state data by a client process such as state data in an Online Transaction Processing arrangement is controlled through generation of and exchanging of a dual-component token. The first component of the token is an Index value which indirectly points to a block of state data assigned to process or user. The second component of the token is a sequence value, such as a Random Unique Sequence value, which is also associated with the block of state data for a process. With each transaction request, a user process provides the token to the OLTP server, which then verifies the sequence numbers of the state data and the token match before allowing access to the data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07689701",
	"publication_date": "2010-03-30",
	"application_number": "12268753",
	"application_date": "2008-11-11",
	"tags": null,
	"slug": "dualcomponent-state-token-with-state-data-direct-access-index-for-systems-with-high-transaction-volume-and-high-number-of-unexpired-tokens",
	"match_type": "description"
},
{
	"name": "Dynamic generation and implementation of globalization verification testing for user interface controls",
	"summary": "",
	"abstract": "A machine implemented technique for performing dynamic globalization verification testing in a software user interface includes identifying one or more user interface controls in the software user interface having text strings that have been pseudo translated, generating one or more applicable test cases that test for display defects stemming from the pseudo translations, executing the test cases, and logging defects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752501",
	"publication_date": "2010-07-06",
	"application_number": "11460360",
	"application_date": "2006-07-27",
	"tags": null,
	"slug": "dynamic-generation-and-implementation-of-globalization-verification-testing-for-user-interface-controls",
	"match_type": "description"
},
{
	"name": "Dynamic network link selection for transmitting a message between compute nodes of a parallel computer",
	"summary": "",
	"abstract": "Methods, apparatus, and products are disclosed for dynamic network link selection for transmitting a message between nodes of a parallel computer. The nodes are connected using a data communications network. Each node connects to adjacent nodes in the data communications network through a plurality of network links. Each link provides a different data communication path through the network between the nodes of the parallel computer. Such dynamic link selection includes: identifying, by an origin node, a current message for transmission to a target node; determining, by the origin node, whether transmissions of previous messages to the target node have completed; selecting, by the origin node from the plurality of links for the origin node, a link in dependence upon the determination and link characteristics for the plurality of links for the origin node; and transmitting, by the origin node, the current message to the target node using the selected link.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797445",
	"publication_date": "2010-09-14",
	"application_number": "12147058",
	"application_date": "2008-06-26",
	"tags": null,
	"slug": "dynamic-network-link-selection-for-transmitting-a-message-between-compute-nodes-of-a-parallel-computer",
	"match_type": "description"
},
{
	"name": "Dynamic optimization of prepared statements in a statement pool",
	"summary": "",
	"abstract": "An apparatus, program product and method dynamically optimize prepared statements resident in a statement pool to permit subsequent reuses of such statements to utilize the optimized representations of such statements. The optimization of pooled statements may be performed responsive to the tracked usage of the statements in a statement pool, to direct the overhead associated with such optimization to those statements that are more likely to be utilized in the future. Among a multitude of possible optimizations, a pooled statement that requests data in a format other than that utilized by the database being accessed may be modified to request the data in the format used by the database, thereby decreasing the overhead in the database associated with format conversions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07653620",
	"publication_date": "2010-01-26",
	"application_number": "11870189",
	"application_date": "2007-10-10",
	"tags": null,
	"slug": "dynamic-optimization-of-prepared-statements-in-a-statement-pool",
	"match_type": "description"
},
{
	"name": "Dynamic portal assembly",
	"summary": "",
	"abstract": "The present invention provides a Dynamic Portal Assembly for Portals which provides the function to manipulate whole topology tree of a Portal at runtime. Topology Fragments, that are partial topology trees, are computed by software components called Adapters and are merged with existing trees at run time. The Adapters themselves can base the computation on the states of External Systems, e.g. Workflow Systems. The introduction of an Independent Adapter Interface allows for easy deployment of new Adapters into the Portal. In a preferred embodiment of the present invention the Dynamic Portal Assembly is adapted to integrate Workflow into Portal without giving awareness to the Portal user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822830",
	"publication_date": "2010-10-26",
	"application_number": "12419061",
	"application_date": "2009-04-06",
	"tags": null,
	"slug": "dynamic-portal-assembly",
	"match_type": "description"
},
{
	"name": "Dynamically adaptive portlet palette having user/context customized and auto-populated content",
	"summary": "",
	"abstract": "An event to initialize a portlet palette within a user interface having an open portal to which the portlet palette is associated can be detected. The portlet palette can be a user interface control that includes a portlet set of at least one portlet. The portlet palette can be configured so that a selection of a portlet from the portlet set causes the portlet to be added to the open portal. A set of portlets can be automatically determined from a set of stored portlets that are relevant to the open portal based upon previously defined programmatic rules and contextual information associated with the open portlet. The portlet palette can be dynamically populated with the determined set of portlets. The populated portlet palette can be presented within the user interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07676557",
	"publication_date": "2010-03-09",
	"application_number": "12355070",
	"application_date": "2009-01-16",
	"tags": null,
	"slug": "dynamically-adaptive-portlet-palette-having-usercontext-customized-and-autopopulated-content",
	"match_type": "description"
},
{
	"name": "Enabling interactive integration of network-accessible applications in a content aggregation framework",
	"summary": "",
	"abstract": "Enabling network-accessible applications to be integrated into content aggregation frameworks (such as portals) and to become dynamically interactive through proxying components (such as proxying portlets), thereby providing run-time cooperation and data sharing.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774332",
	"publication_date": "2010-08-10",
	"application_number": "11104068",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": "enabling-interactive-integration-of-networkaccessible-applications-in-a-content-aggregation-framework",
	"match_type": "description"
},
{
	"name": "Enterprise information unification",
	"summary": "",
	"abstract": "An enterprise information unification system including an information modeler for modeling business entities and their properties as an information model, the information model being comprised of business constructs, a data rationalizer for generating mappings from physical data assets to the information model, the physical data assets being comprised of data asset constructs, and a data thesaurus for automating tasks of data management based on the mappings. A method is also described and claimed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07673282",
	"publication_date": "2010-03-02",
	"application_number": "10302370",
	"application_date": "2002-11-22",
	"tags": null,
	"slug": "enterprise-information-unification",
	"match_type": "description"
},
{
	"name": "Establishing relationships between components in simulation systems",
	"summary": "",
	"abstract": "A system, method, and computer program product for configuring a network abstraction for simulation. Relationships between network models in the network abstraction are described in a network specification. A simulation infrastructure is adapted to configure the relationships between network models specified in the network specification. The simulation infrastructure is designed to acquire the network specification during run-time, access configuration, relationship parameterization, and execution APIs of model instances during run-time. Network models are designed to acquire access to modeling-specific APIs of other model instances during run-time in order to establish relationships specified in the network specification.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07756691",
	"publication_date": "2010-07-13",
	"application_number": "10448724",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": "establishing-relationships-between-components-in-simulation-systems",
	"match_type": "description"
},
{
	"name": "Externalized classloader information for application servers",
	"summary": "",
	"abstract": "Modules which are running outside of a first application server virtual machine (VM) are enabled to introspect into modules running inside the first VM by notifying a manageable component factory by an application module being executed by a first application server VM of a need to allow a second VM to introspect into and to load class information regarding objects already running in the first VM, wherein the first and second virtual machines are separate virtual machines; registering the already-running object class information to a manageable component server using a descriptor; and loading the registered class information by the second VM from the manageable component server, wherein a tool object or administrative object running in the second VM introspects into and loads the objects already running in the first virtual machine without use of an application programming interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761862",
	"publication_date": "2010-07-20",
	"application_number": "11373567",
	"application_date": "2006-03-10",
	"tags": null,
	"slug": "externalized-classloader-information-for-application-servers",
	"match_type": "abstract"
},
{
	"name": "Facilitating overall grid environment management by monitoring and distributing grid activity",
	"summary": "",
	"abstract": "A method, system, and program for facilitating overall grid environment management by monitoring grid activity across disparate grid resources and distributing grid activity to decisional grid modules are provided. A grid workload controller within a computational grid environment monitors real-time grid activity at an application level from multiple disparate grid application environments. The grid workload controller then determines a selection of grid modules within the computational grid environment that require the real-time grid activity to make decisions about the management of the computational grid environment. The grid workload controller distributes the real-time grid activity to the selection of grid modules, wherein the selection of grid modules then make automated decisions within the grid environment to maintain performance requirements.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761557",
	"publication_date": "2010-07-20",
	"application_number": "11031490",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "facilitating-overall-grid-environment-management-by-monitoring-and-distributing-grid-activity",
	"match_type": "description"
},
{
	"name": "Fail over resource manager access in a content management system",
	"summary": "",
	"abstract": "In a content management system having a plurality of resource managers storing objects, a replica resource manager stores a replica of an object stored in one of the plurality of resource managers. A library server contains a resource manager table that defines the plurality of resource managers and includes availability information for each of those resource managers. When a client requests an object, the library server identifies a primary resource manager storing the object. The library server also determines a replica resource manager storing a replica of the object and returns information identifying that replica resource manager if the resource manager table indicates that the primary resource manager is unavailable and indicates that the replica resource manager is online and available. The client then retrieves the replica object without incurring a timeout delay waiting for the primary resource manager to respond to an access request.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792797",
	"publication_date": "2010-09-07",
	"application_number": "10327059",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": "fail-over-resource-manager-access-in-a-content-management-system",
	"match_type": "description"
},
{
	"name": "Filtering a list of available install items for an install program based on a consumer's install policy",
	"summary": "",
	"abstract": "An install program is enabled for a user to configure at least one location of at least one policy system that is to be accessed via a network to gather at least one install policy, where the install policy specifies a policy for filtering out a selection of install items from among multiple items installable by the install program. In addition, the install program retrieves the install policy from each accessed location when filtering a list of the items installable by the install program to only include a particular selection of install items for the client system as directed by accessed install policies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07748000",
	"publication_date": "2010-06-29",
	"application_number": "11460421",
	"application_date": "2006-07-27",
	"tags": null,
	"slug": "filtering-a-list-of-available-install-items-for-an-install-program-based-on-a-consumers-install-policy",
	"match_type": "description"
},
{
	"name": "Generalized trace and log facility for first error data collection",
	"summary": "",
	"abstract": "A generalized trace and log facility is employed to collect data, including data associated with the first occurrence of an error. The facility provides standardized application programming interfaces to be used to collect data, print the data, and forward the data to a support team, if desired.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07757129",
	"publication_date": "2010-07-13",
	"application_number": "11694228",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "generalized-trace-and-log-facility-for-first-error-data-collection",
	"match_type": "abstract"
},
{
	"name": "Global anchor text processing",
	"summary": "",
	"abstract": "Provided are techniques for building a search index. While building the search index and using the search index to respond to one or more search requests, an anchor information store is maintained, wherein each entry of the anchor information store identifies a referring document, a target document, and anchor text associated with a link from the referring document to the target document; a document is received for processing; one or more entries in the anchor information store for which the document to be processed is identified as the target document are located; anchor text is retrieved from each of the identified entries; and the retrieved anchor text is stored in an entry of the search index for the document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07788253",
	"publication_date": "2010-08-31",
	"application_number": "11617401",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "global-anchor-text-processing",
	"match_type": "description"
},
{
	"name": "Half RDMA and half FIFO operations",
	"summary": "",
	"abstract": "In a multinode data processing system in which nodes exchange information over a network or through a switch, a structure and mechanism is provided within the realm of Remote Direct Memory Access (RDMA) operations in which DMA operations are present on one side of the transfer but not the other. On the side in which the transfer is not carried out in DMA fashion, transfer processing is carried out under program control; this is in contrast to the transfer on the DMA side which is characteristically carried out in hardware. Usage of these combination processes is useful in programming situations where RDMA is carried out to or from contiguous locations in memory on one side and where memory locations on the other side is noncontiguous. This split mode of transfer is provided both for read and for write operations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07813369",
	"publication_date": "2010-10-12",
	"application_number": "11017406",
	"application_date": "2004-12-20",
	"tags": null,
	"slug": "half-rdma-and-half-fifo-operations",
	"match_type": "description"
},
{
	"name": "Heterogeneous two-phase commit test engine",
	"summary": "",
	"abstract": "A computer-implemented method, information processing system, and computer program storage product validate a two-phase commit process. First information is received that indicates a plurality of web services to be tested. Each of the web services are associated with a different resource manager. Second information is received that indicates a plurality of application servers for performing the web services. A global transaction is created that includes a plurality of transactions based on the first information that was received. A two-phase commit process is initiated at one of the application servers for performing the global transaction. After the two-phase commit process has ended, results of the global transaction that include information regarding each of the transactions within the global transaction are displayed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792896",
	"publication_date": "2010-09-07",
	"application_number": "11967561",
	"application_date": "2007-12-31",
	"tags": null,
	"slug": "heterogeneous-twophase-commit-test-engine",
	"match_type": "description"
},
{
	"name": "Identifying a configuration for an application in a production environment",
	"summary": "",
	"abstract": "Various embodiments of a computer-implemented method, computer system and computer program product provide a configuration recommendation. Request-processing performance data of an application is received. The request-processing performance data is collected by an application monitor during an execution of the application on a source hardware system. One or more request-processing performance measurements are determined based on the request-processing performance data. One or more target objectives of the application are received. An analytic engine is invoked to provide a configuration recommendation of a target hardware system on which to execute the application based on one or more request-processing performance measurements and one or more target objectives.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07756973",
	"publication_date": "2010-07-13",
	"application_number": "11380600",
	"application_date": "2006-04-27",
	"tags": null,
	"slug": "identifying-a-configuration-for-an-application-in-a-production-environment",
	"match_type": "description"
},
{
	"name": "Identifying unnecessary synchronization objects in software applications",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for identifying unnecessary synchronization objects in software applications. A computer-implemented method for determining a usefulness of synchronization objects includes, in a multi-threaded application program, tracking threads as they are created and terminated, intercepting application program interfaces (APIs) used to create and destroy thread synchronization objects, in the API wrappers, tracking existing synchronization objects in a list, and associating a list entry for each of the synchronization objects with a unique bit in a bit field.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07844977",
	"publication_date": "2010-11-30",
	"application_number": "11676783",
	"application_date": "2007-02-20",
	"tags": null,
	"slug": "identifying-unnecessary-synchronization-objects-in-software-applications",
	"match_type": "description"
},
{
	"name": "Implementing access control for queries to a content management system",
	"summary": "",
	"abstract": "A system to generate an SQL sub-expression that implement access control rules stored in a library server. The SQL sub-expression is then merged with the SQL passed from an application program interface (API). The access control checking mechanism is implemented on the server side of the content management system. In this client/server environment, the query SQL statement is built in two layers: the API (client) layer and the server layer. The API sends the query string to the underlying stored procedure. The stored procedure then generates the access control logic based on the configuration parameters of the library server. This access control logic is dynamically added to the query string sent by the API. The stored procedure prepares, builds and executes this new query string as a dynamic SQL statement.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761443",
	"publication_date": "2010-07-20",
	"application_number": "12123723",
	"application_date": "2008-05-20",
	"tags": null,
	"slug": "implementing-access-control-for-queries-to-a-content-management-system",
	"match_type": "description"
},
{
	"name": "Indicating focus in a portal environment",
	"summary": "",
	"abstract": "A method, system and apparatus for indicating input focus in a portal environment. A method for indicating user input focus in a portal environment can include assigning an unfocused style sheet to all unfocused portlets in a portal except for a focused portlet having input focus. A focused style sheet further can be assigned to the focused portlet having input focus. Subsequently, each of the focused and unfocused portlets can be rendered in the portal. Responsive to a new portlet in the portal acquiring the input focus from the focused portlet, the focused style sheet can be re-assigned to the new portlet while the unfocused style sheet can be re-assigned to the focused portlet which no longer has input focus. Subsequently, the new portlet and the focused portlet which no longer has input focus can be re-rendered in the portal according to the style sheets.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07793215",
	"publication_date": "2010-09-07",
	"application_number": "10686487",
	"application_date": "2003-10-15",
	"tags": null,
	"slug": "indicating-focus-in-a-portal-environment",
	"match_type": "description"
},
{
	"name": "Instant messaging system with privacy codes",
	"summary": "",
	"abstract": "Instant messages are processed in accordance with restrictions associated with privacy codes. A privacy code is obtained from a sender system prior to acceptance or delivery of any instant messages from the sender system. If a privacy code is received from the sender system, then a recipient system accepts or delivers instant messages from the sender system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07853652",
	"publication_date": "2010-12-14",
	"application_number": "10347095",
	"application_date": "2003-01-18",
	"tags": null,
	"slug": "instant-messaging-system-with-privacy-codes",
	"match_type": "description"
},
{
	"name": "Integration of legacy applications",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for integrating an legacy application hosted on an application server onto a network, such as the Internet. This allows one or more remote computers to access the legacy application over the network. The disclosed method and apparatus do not require changes to be made to the legacy application, due to the fact that the legacy application is accessed using messages in the form produced by the native operating system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07765254",
	"publication_date": "2010-07-27",
	"application_number": "11260655",
	"application_date": "2005-10-26",
	"tags": null,
	"slug": "integration-of-legacy-applications",
	"match_type": "description"
},
{
	"name": "Integration of predefined multi-dimensional and flexibly-ordered dynamic search interfaces",
	"summary": "",
	"abstract": "A method, computer program product, and system for integrating faceted and predefined multi-dimensional search interfaces are provided. The method, computer program product, and system provide for displaying a first set of results from a search request in a faceted search interface and a second set of results from the search request in a predefined multi-dimensional search interface, and responsive to a user action in the predefined multi-dimensional search interface affecting a scope of the search request, synchronizing the faceted search interface with changes in the predefined multi-dimensional search interface without requiring a separate user action in the faceted search interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07788269",
	"publication_date": "2010-08-31",
	"application_number": "11693720",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "integration-of-predefined-multidimensional-and-flexiblyordered-dynamic-search-interfaces",
	"match_type": "description"
},
{
	"name": "Intelligent analysis based self-scheduling browser reminder",
	"summary": "",
	"abstract": "A computer-implemented method for reminding a user to browse a regularly visited website comprising tracking websites visited by the user and ranking each website by visitation frequency and browsing duration. An average recurring time each website is visited is calculated and it is determined whether the current time is equal to the average recurring time for a particular website. The user is reminded to visit the particular website if it is determined that the user is not currently browsing the particular website when the current time equals the average recurring time for the particular website.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07669136",
	"publication_date": "2010-02-23",
	"application_number": "12272049",
	"application_date": "2008-11-17",
	"tags": null,
	"slug": "intelligent-analysis-based-selfscheduling-browser-reminder",
	"match_type": "description"
},
{
	"name": "Intelligent discovery of network information from multiple information gathering agents",
	"summary": "",
	"abstract": "A system, method and computer program product for intelligent discovery of network information from multiple information gathering agents adapted to discover information concerning the network. The discovery agents each have an associated discovery capability. Based on consideration of the agent discovery capabilities, discovery assignments are computed and network discovery is performed according to the assignments so as to reduce discovery poll overhead.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07756958",
	"publication_date": "2010-07-13",
	"application_number": "10666046",
	"application_date": "2003-09-20",
	"tags": null,
	"slug": "intelligent-discovery-of-network-information-from-multiple-information-gathering-agents",
	"match_type": "description"
},
{
	"name": "Interfacing objects and markup language messages",
	"summary": "",
	"abstract": "A method of automatically generating a markup language message from an application specific interface object, as well as generating an application specific interface object from a markup language message is provided. The method can include receiving an application specific interface object and identifying an object table specified therein. Objects listed in the object table can be automatically identified. The objects can be serialized by representing the objects in the markup language message. The resulting markup language message can be a representation of the application specific interface object.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07730162",
	"publication_date": "2010-06-01",
	"application_number": "11856598",
	"application_date": "2007-09-17",
	"tags": null,
	"slug": "interfacing-objects-and-markup-language-messages",
	"match_type": "description"
},
{
	"name": "Key-controlled object-based memory protection",
	"summary": "",
	"abstract": "A method, system, and program key-controlled object-based memory protection are provided. A processing unit includes an authority check for controlling access by the processing unit to pages of memory according to whether a hardware protection key set currently loaded in an authority mask register allows access to the pages. In particular, each page of memory is assigned a page key number that indexes into the hardware protection key set. The currently loaded hardware protection key set specifies those page key numbers that are currently accessible to the processing unit for the execution context. Each hardware key within the hardware protection key set may be associated with a particular data object or group of data objects. Thus, effectively, the currently loaded hardware protection key set identifies which data objects or groups of data objects are currently accessible. Software keys are assigned to data objects and dynamically mapped to hardware protection key sets, such that when a module is called, the software keys assigned to that module are mapped to the hardware protection key set to be loaded for controlling current access to memory.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774561",
	"publication_date": "2010-08-10",
	"application_number": "12147691",
	"application_date": "2008-06-27",
	"tags": null,
	"slug": "keycontrolled-objectbased-memory-protection",
	"match_type": "description"
},
{
	"name": "Killing login-based sessions with a single action",
	"summary": "",
	"abstract": "A method, system, and program are provided for killing login-based sessions with a single action. In addition to issuing a session token to a client system upon login by a user to a network service, a personal token is issued to the client system. The personal token is executable at the client system to trigger accesses to a personal session controller and to automatically disallow the session token if the personal session controller indicates that the personal token is deactivated. The personal session controller enables an interface through which a user is enabled select to deactivate all active personal tokens with a single action, such that a user manages killing login-based sessions independent of the server system authorizing each login-based session and independent of the client system to which the login-based session was authorized.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07743153",
	"publication_date": "2010-06-22",
	"application_number": "11334670",
	"application_date": "2006-01-18",
	"tags": null,
	"slug": "killing-loginbased-sessions-with-a-single-action",
	"match_type": "description"
},
{
	"name": "Load distribution in storage area networks",
	"summary": "",
	"abstract": "A load balancing method and system for identifying an input/output (I/O) network path from a set off I/O network paths is provided by the invention. The set off I/O network paths connect a host system via a network to a storage subsystem. The host system comprises at least one host bus adapter (HBA) and the storage subsystem comprises at least one I/O device and the network comprises at least one network device. Each of the HBA, the I/O device and the network device comprise at least one I/O port. For each I/O port of each HBA, an HBA port limit is determined. Additionally the set of I/O network paths which connect the I/O port of each of the HBA via the I/O ports of the network device to the I/O port of the I/O device is identified. Then a fabric utilization limit is determined for each I/O network path and a HBA port utilization is determined for each I/O port of the at least one HBA. All network paths are discarded for which the HBA port utilization is greater than the HBA port limit. For each of the remaining paths a network path distance is determined. All I/O network paths for which the network path distance is greater than the path distance limit are discarded. Then for each of the remaining paths a fabric utilization is determined. All I/O network paths for which the fabric utilization is greater than the fabric utilization limit are discarded and the I/O network path is determined from the remaining network paths.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07743198",
	"publication_date": "2010-06-22",
	"application_number": "12066247",
	"application_date": "2006-07-13",
	"tags": null,
	"slug": "load-distribution-in-storage-area-networks",
	"match_type": "description"
},
{
	"name": "Loading software on a plurality of processors",
	"summary": "",
	"abstract": "Loading software on a plurality of processors is presented. A processing unit (PU) retrieves a file from system memory and loads it into its internal memory. The PU extracts a processor type from the file's header which identifies whether the file should execute on the PU or a synergistic processing unit (SPU). If an SPU should execute the file, the PU DMA's the file to the SPU for execution. In one embodiment, the file is a combined file which includes both PU and SPU code. In this embodiment, the PU identifies one or more section headers included in the file which indicates embedded SPU code within the combined file. In this embodiment, the PU extracts the SPU code from the combined file and DMA's the extracted code to an SPU for execution.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07748006",
	"publication_date": "2010-06-29",
	"application_number": "12131348",
	"application_date": "2008-06-02",
	"tags": null,
	"slug": "loading-software-on-a-plurality-of-processors",
	"match_type": "description"
},
{
	"name": "Location aware, on demand, media delivery to remote devices",
	"summary": "",
	"abstract": "A method, system and computer program and method for delivering a streaming data to a remote device from a wireless transmitter. In one embodiment, a transmitter is configured to send units of the streaming data to the remote device. A receiver is configured to receive usage data about the streaming data from the remote device. An adjusting module is configured to automatically adjust a transmission strategy of unsent units of the streaming data based, at least in part, on the usage data as a function of time according to a transmission policy. The usage data may include at least location information about the remote device or time of day information at the remote device. A user interface at the remote device may be configured to adjust the predefined transmission policy.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07647037",
	"publication_date": "2010-01-12",
	"application_number": "11344059",
	"application_date": "2006-01-31",
	"tags": null,
	"slug": "location-aware-on-demand-media-delivery-to-remote-devices",
	"match_type": "description"
},
{
	"name": "Low-impact performance sampling within a massively parallel computer",
	"summary": "",
	"abstract": "An apparatus, program product and method sample at different times nodes that are performing similar work. Performance data associated with first and second node subsets performing the similar work are sampled at different times, e.g., in a round-robin fashion, and in accordance with a given sampling rate. The performance data is analyzed. Nodes whose performance suffers as a result of a sampling operation may be identified and removed from a subsequent operation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07647484",
	"publication_date": "2010-01-12",
	"application_number": "11678208",
	"application_date": "2007-02-23",
	"tags": null,
	"slug": "lowimpact-performance-sampling-within-a-massively-parallel-computer",
	"match_type": "description"
},
{
	"name": "Maintaining screen and form state in portlets",
	"summary": "",
	"abstract": "A portlet state maintenance system can include a portal page setup component configured to generate a logical form in a single portal page from a multiplicity of forms defined within portlet markup aggregated into the single portal page. A portal state save component further can be configured to save state values for selected portlets defined within the logical form. Finally, a portal state restore component can be configured to restore the saved state values in refreshed portlet markup for the selected portlets. Notably, a refresh timing component further can be configured to embed submit auto-initiation logic in the single portal page responsive to identifying a dynamic refresh requirement associated with the portlet markup in the single portal page. Finally, a portlet markup cache can be coupled to the portal state restore component.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07770101",
	"publication_date": "2010-08-03",
	"application_number": "11555337",
	"application_date": "2006-11-01",
	"tags": null,
	"slug": "maintaining-screen-and-form-state-in-portlets",
	"match_type": "description"
},
{
	"name": "Management of enterprise systems and applications using three-dimensional visualization technology",
	"summary": "",
	"abstract": "An approach that manages enterprise systems and applications using three-dimensional visualization technology is described. In one embodiment, a system for streaming visual representations of an enterprise in near-real time. A multitude of geographically distributed enterprise datacenters are each configured to obtain event data from hardware and software elements in the enterprise. A virtual command center is configured to receive the event data, aggregate the event data into a composite dataset representative of the current operation of the enterprise, compare the composite dataset to at least one three-dimensional model representative of the operation of the geographically distributed enterprise, and provide a visualization of the composite data and any difference that may exist. The visualization is a composite of a three-dimensional visual image of the current operation of the geographically distributed enterprise.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07839401",
	"publication_date": "2010-11-23",
	"application_number": "11747182",
	"application_date": "2007-05-10",
	"tags": null,
	"slug": "management-of-enterprise-systems-and-applications-using-threedimensional-visualization-technology",
	"match_type": "description"
},
{
	"name": "Managing analysis of a degraded service in a grid environment",
	"summary": "",
	"abstract": "A method, system, and program managing analysis of a degraded service in a grid environment are provided. In a grid environment of multiple diverse systems, a service availability management agent is enabled to receive multiple types of error messages generated from the multiple diverse systems within the grid environment. Each error message is parsed to determine a general error indicator. Then, the service availability management agent attempts to resolve the general error indicator and return a solution to each parsed error message. Solutions may include an adjustment of resource usage by a particular service, an explanation of a particular error message, or a recommendation of alternate resources. The service availability management agent preferably specifies the transmission of the solution in a format specified for the requester system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07734679",
	"publication_date": "2010-06-08",
	"application_number": "12211243",
	"application_date": "2008-09-16",
	"tags": null,
	"slug": "managing-analysis-of-a-degraded-service-in-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Managing compliance with service level agreements in a grid environment",
	"summary": "",
	"abstract": "A computer-implemented method, system, and program for managing compliance with service level agreements in a grid environment are provided. A grid service for managing compliance with service level agreements in a grid environment detects a grid job passing a timing entry point, and flowing towards a grid environment provided by a grid vendor. When the grid job is detected passing the timing entry point, the grid service starts a timer to monitor an amount of time from the grid job passing the timing entry point until a result of the grid job passes a timing exit point while flowing away from the grid environment. When the grid service detects the result of the grid job passing the timing exit point, the grid service determines whether a value of the timer exceeds a timing term agreed to in a service level agreement specifying performance requirements for said grid job agreed to by said grid vendor, such that compliance with the service level agreement is automatically managed within the grid environment.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07668741",
	"publication_date": "2010-02-23",
	"application_number": "11031403",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "managing-compliance-with-service-level-agreements-in-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Mechanism for improving accessibility of JMX monitoring information in web content",
	"summary": "",
	"abstract": "System, method and computer program product for monitoring the status of components in a data processing system that improves the accessibility of JMX monitoring information in web content. The system includes a mechanism for acquiring a text representation of component status for display as ALT and TITLE content associated with each status image. Because the component status is displayed in a manner that is indistinguishable from ALT/TITLE text that has already been statically included in an image attribute, user experience is improved for users with and without accessibility needs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797569",
	"publication_date": "2010-09-14",
	"application_number": "12021011",
	"application_date": "2008-01-28",
	"tags": null,
	"slug": "mechanism-for-improving-accessibility-of-jmx-monitoring-information-in-web-content",
	"match_type": "description"
},
{
	"name": "Mechanism to provide software guaranteed reliability for GSM operations",
	"summary": "",
	"abstract": "In a global shared memory (GSM) environment, an initiating task at a first node with a host fabric interface (HFI) uses epochs to provide reliability of transmission of packets via a network fabric to a target task. The HFI generates a packet for the initiating task addressed to the target task, and automatically inserts a current epoch of the initiating task into the packet. A copy of the current epoch is maintained by the target task, which accepts for processing only packets having the correct epoch, unless the packet is tagged for guaranteed-once delivery. When a packet delivery is accepted, the target task sends a notification to the initiating task. If the initiating task does not receive the notification of delivery for the issued packet, the initiating task updates the epoch at both the target node and the initiating node and re-transmits the packet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797588",
	"publication_date": "2010-09-14",
	"application_number": "12024637",
	"application_date": "2008-02-01",
	"tags": null,
	"slug": "mechanism-to-provide-software-guaranteed-reliability-for-gsm-operations",
	"match_type": "description"
},
{
	"name": "Message communications of particular message types between compute nodes using DMA shadow buffers",
	"summary": "",
	"abstract": "Message communications of particular message types between compute nodes using DMA shadow buffers includes: receiving a buffer identifier specifying an application buffer having a message of a particular type for transmission to a target compute node through a network; selecting one of a plurality of shadow buffers for a DMA engine on the compute node for storing the message, each shadow buffer corresponding to a slot of an injection FIFO buffer maintained by the DMA engine; storing the message in the selected shadow buffer; creating a data descriptor for the message stored in the selected shadow buffer; injecting the data descriptor into the slot of the injection FIFO buffer corresponding to the selected shadow buffer; selecting the data descriptor from the injection FIFO buffer; and transmitting the message specified by the selected data descriptor through the data communications network to the target compute node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836143",
	"publication_date": "2010-11-16",
	"application_number": "11739948",
	"application_date": "2007-04-25",
	"tags": null,
	"slug": "message-communications-of-particular-message-types-between-compute-nodes-using-dma-shadow-buffers",
	"match_type": "description"
},
{
	"name": "Message digest instruction",
	"summary": "",
	"abstract": "A method, system and computer program product for digesting data in storage of a computing environment. The digesting computes a condensed representation of a message or data stored in the computer storage. A COMPUTE INTERMEDIATE MESSAGE DIGEST (KIMD) and a COMPUTE LAST MESSAGE DIGEST (KLMD) instruction are disclosed which specify a unit of storage to be digested by a secure hashing algorithm.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07725736",
	"publication_date": "2010-05-25",
	"application_number": "11551292",
	"application_date": "2006-10-20",
	"tags": null,
	"slug": "message-digest-instruction",
	"match_type": "description"
},
{
	"name": "Message system and method",
	"summary": "",
	"abstract": "A method and system for bridging services is provided. The method and system includes retrieving at last one message from a first messaging tool using at least one processing thread to retrieve message objects from a messaging queue of the first messaging tool. This aspect of the invention further includes executing a preprocessing on the retrieved message object using a predefined application programming interface (API) and placing the preprocessed message on an API of a second messaging tool. A computer program product comprising a computer useable medium including a computer readable program which, when executed causes the computer to implement the steps of the method.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07853956",
	"publication_date": "2010-12-14",
	"application_number": "11117449",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "message-system-and-method",
	"match_type": "abstract"
},
{
	"name": "Method and apparatus for checkpoint and restart of pseudo terminals",
	"summary": "",
	"abstract": "A computer implemented method, apparatus, and computer program product for restarting pseudo terminal streams. In one embodiment, a device associated with a file descriptor in a set of file descriptors is opened. The set of file descriptors are identified in checkpoint data for restarting the pseudo terminal streams. In response to identifying the device as a pseudo terminal slave device, an entry for the identified pseudo terminal slave device is added to a list of open pseudo terminal slave devices. The entry for the identified pseudo terminal slave device is marked as an open pseudo terminal slave device. The list of open pseudo terminal slave devices permit pseudo terminal master devices and pseudo terminal slave devices to be restored and restarted in random order during a restart of the pseudo terminal streams.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792983",
	"publication_date": "2010-09-07",
	"application_number": "11831678",
	"application_date": "2007-07-31",
	"tags": null,
	"slug": "method-and-apparatus-for-checkpoint-and-restart-of-pseudo-terminals",
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic web service client application update",
	"summary": "",
	"abstract": "A method for managing a web service client update without recompiling or redeploying of the client code includes the following steps or acts of: receiving a request for the web service from a subscribed client; transmitting the request to the web service; receiving notification of the web service update from a service provider or registry or some other means; parsing the notification and retrieving parameters describing the web service update; marshalling the parameters; determining whether the new web service update is compatible with the current web service invoked by the client application; updating the local service proxy instance with the marshaled parameters if the new web service update is compatible with the current web service invoked by the client application; and transmitting a notification if the web service update is not compatible with the current web service invoked by the client application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822840",
	"publication_date": "2010-10-26",
	"application_number": "11877479",
	"application_date": "2007-10-23",
	"tags": null,
	"slug": "method-and-apparatus-for-dynamic-web-service-client-application-update",
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamically adjusting page size in a virtual memory range",
	"summary": "",
	"abstract": "The illustrative embodiments described herein provide a computer implemented method, apparatus, and computer program product for adjusting a page size for a virtual memory range. The process identifies a set of pages in the virtual memory range that reside on a primary memory to form a page occupancy. Each of the set of pages has a first page size. The process changes the first page size to a second page size in response to a comparison of the page occupancy to a threshold value indicating that the first page size should be adjusted.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07747838",
	"publication_date": "2010-06-29",
	"application_number": "11751005",
	"application_date": "2007-05-19",
	"tags": null,
	"slug": "method-and-apparatus-for-dynamically-adjusting-page-size-in-a-virtual-memory-range",
	"match_type": "description"
},
{
	"name": "Method and apparatus for persistent real-time collaboration",
	"summary": "",
	"abstract": "A collaboration server is described that enables both real-time conferencing and content management. Thus, client applications can connect to the server to share data and collaborate in real-time. The server allows fine grained sharing of any type of content using generic shared objects (GSO). Each GSO holds one or more pieces of persistent information and defines a list of people who are allowed to access the information. Each GSO also represents a persistent conferencing session, i.e., if clients modify GSOs, modifications are broadcast to all the other clients on the list of the shared object if they are connected. The server also manages relationships between shared objects; i.e., shared objects could be contained in other shared objects or reference other shared objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07840596",
	"publication_date": "2010-11-23",
	"application_number": "11854629",
	"application_date": "2007-09-13",
	"tags": null,
	"slug": "method-and-apparatus-for-persistent-realtime-collaboration",
	"match_type": "description"
},
{
	"name": "Method and apparatus for projecting the effect of maintaining an auxiliary database structure for use in executing database queries",
	"summary": "",
	"abstract": "A database management system maintains a record of queries which can be executed against the database. For a given auxiliary database structure, an advisory function automatically reviews the query record and identifies those queries which might execute with greater efficiency using the auxiliary database structure, presenting analytical information to the user. Preferably, the auxiliary database structure is an index, and the information is used for determining whether to include the index in the database definition. Preferably, a query optimizer records potentially useful indexes when considering multiple alternative database optimizations, and this information is later retrieved to identify queries which would benefit from an index.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07743052",
	"publication_date": "2010-06-22",
	"application_number": "11353515",
	"application_date": "2006-02-14",
	"tags": null,
	"slug": "method-and-apparatus-for-projecting-the-effect-of-maintaining-an-auxiliary-database-structure-for-use-in-executing-database-queries",
	"match_type": "description"
},
{
	"name": "Method and apparatus for striping message payload data over a network",
	"summary": "",
	"abstract": "A method, an apparatus and a recording medium are provided for communicating message payload data, especially noncontiguous message data, from a first node of a network to a second node of the network in response to a request to transmit a message. Such method includes dividing the length of a data payload to be transmitted into a plurality of submessage payload lengths, i.e., into at least a first submessage payload length and a second submessage payload length. Then, a first ordered submessage is transmitted from the first node for delivery to the second node, the first ordered submessage having the first submessage payload length. A first state of an environment is then determined in the first node as if the step of transmitting the first ordered submessage were already completed. Without having to complete the step of transmitting the first ordered submessage, a second ordered submessage is then transmitted from the first node for delivery to the second node, the second submessage having the second submessage payload length, the second submessage being transmitted in a way that takes into account the first state of the environment in the first node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07835359",
	"publication_date": "2010-11-16",
	"application_number": "11298322",
	"application_date": "2005-12-08",
	"tags": null,
	"slug": "method-and-apparatus-for-striping-message-payload-data-over-a-network",
	"match_type": "description"
},
{
	"name": "Method and apparatus for thread-safe handlers for checkpoints and restarts",
	"summary": "",
	"abstract": "A method, apparatus, and computer instructions for executing a handler in a multi-threaded process handling a number of threads in a manner that avoids deadlocks. A value equal to the number of threads executing in the data processing system is set. The value is decremented each time a lock count for a thread within the number of threads is zero. A thread within the number of threads is suspended if the thread requests a lock and has a lock count of zero. A procedure, such as a handler, is executed in response to all of the threads within the number of threads having no locks.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797706",
	"publication_date": "2010-09-14",
	"application_number": "11873540",
	"application_date": "2007-10-17",
	"tags": null,
	"slug": "method-and-apparatus-for-threadsafe-handlers-for-checkpoints-and-restarts",
	"match_type": "description"
},
{
	"name": "Method and apparatus for virtualizing network resources",
	"summary": "",
	"abstract": "A method and apparatus for managing communications for collaborative applications. Middleware uses, network, application, and middleware resource information together with user information to facilitate communications between the application resources and the users via a hierarchical control structure that implements a communication overlay tree. That overlay tree is implemented in view of network constraints, and on the users and on their communication constraints. The middleware provides user index identifiers that inform the application that specific users have communication interests in specific parts of the application space. To send data to users that are interested in a specific part of the application space the application sends that data with a list of user index identifiers. The middleware then associates the user index identifiers with individual users and routes sent data to the individual users along the overlay tree.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792936",
	"publication_date": "2010-09-07",
	"application_number": "10726002",
	"application_date": "2003-12-01",
	"tags": null,
	"slug": "method-and-apparatus-for-virtualizing-network-resources",
	"match_type": "description"
},
{
	"name": "Method and data processing system for managing user roles",
	"summary": "",
	"abstract": "The illustrative embodiment provides a computer implemented method, a data processing system, and a computer program product for managing user roles. A customization application receives a request to modify a user role for an application. In response to the request, the customization application allows a user to modify a set of features associated with the user role to form a set of customized features. A role database stores the set of customized features for the user role. The user roles in the role database are available for use by a plurality of users of the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07676498",
	"publication_date": "2010-03-09",
	"application_number": "11422214",
	"application_date": "2006-06-05",
	"tags": null,
	"slug": "method-and-data-processing-system-for-managing-user-roles",
	"match_type": "description"
},
{
	"name": "Method and system for administering devices with multiple user metric spaces",
	"summary": "",
	"abstract": "Methods, systems, and products are disclosed for administering devices that include creating a user metric vector including a plurality of disparate user metrics, creating a plurality of user metric spaces, each user metric space including a plurality of metric ranges, and selecting, from the plurality of user metric spaces, a user metric space. Administering devices also includes determining whether the user metric vector is outside the selected user metric space, identifying an action in dependence upon the user metric vector, if the user metric vector is outside the selected user metric space, and executing the action.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779114",
	"publication_date": "2010-08-17",
	"application_number": "10418596",
	"application_date": "2003-04-17",
	"tags": null,
	"slug": "method-and-system-for-administering-devices-with-multiple-user-metric-spaces",
	"match_type": "description"
},
{
	"name": "Method and system for approximate string matching",
	"summary": "",
	"abstract": "Approximate string matching of a target string to a trie data structure. The trie data structure has a root node and generations of child nodes each node representing at least one character in an alphabet to provide a lexicon of words and word fragments. The trie data structure is traversed starting from the root node by comparing each node of a branch of the trie data structure to characters in the target string and adding characters traversed in a branch of the trie data structure to a gathered string to provide suggestions of approximate matches. If a node is reached that is flagged as a node for a word or a word fragment and, if the target string is longer than the gathered string, the traversal loops back to the root node, and continues to traverse from the root node. This enables the trie data structure to use word fragments for compound words and to split non-delimited words where appropriate. A determination may be made, at each node, as to whether there is a correction rule for one or more characters in the remainder of the target string from the current node, and if so, the correction rule is applied to the target string to obtain a modified target string.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07809744",
	"publication_date": "2010-10-05",
	"application_number": "11154120",
	"application_date": "2005-06-16",
	"tags": null,
	"slug": "method-and-system-for-approximate-string-matching",
	"match_type": "description"
},
{
	"name": "Method and system for calculating and displaying risk",
	"summary": "",
	"abstract": "A system for calculating and rendering a risk level. In response to receiving an input to perform an action within a data processing system, a level of risk to the data processing system to perform the action is calculated based on a set of rules. It is determined whether the calculated level of risk presents an elevated risk. In response to determining that the calculated level of risk does present the elevated risk, a user interface is rendered with an appropriate elevated visual warning based on the calculated level of risk.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836348",
	"publication_date": "2010-11-16",
	"application_number": "11776846",
	"application_date": "2007-07-12",
	"tags": null,
	"slug": "method-and-system-for-calculating-and-displaying-risk",
	"match_type": "description"
},
{
	"name": "Method and system for creation and retrieval of global annotations",
	"summary": "",
	"abstract": "Methods, systems, and articles of manufacture for managing global annotations made for data elements that may be instantiated (e.g., displayed) by a variety of different type applications are provided. By anchoring the global annotations to the data element, rather than the particular data source containing the data element at the time the data element was annotated, the annotation may be retrieved from any application that instantiates or displays it.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07669117",
	"publication_date": "2010-02-23",
	"application_number": "10803619",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": "method-and-system-for-creation-and-retrieval-of-global-annotations",
	"match_type": "description"
},
{
	"name": "Method and system for defining page size when displaying a data list",
	"summary": "",
	"abstract": "A system for setting data list parameters for displaying a data list in pages. An application program receives a first and second user input, wherein the first user input defines a number of items displayed within a page, and wherein the second user input defines a page size tolerance. In response to receiving the first and second user input, the application program sets the number of items displayed within the page and the page size tolerance. Then the application program displays the data list in a graphical user interface according to the set number of items displayed within the page and the set page size tolerance.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07735006",
	"publication_date": "2010-06-08",
	"application_number": "11250673",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": "method-and-system-for-defining-page-size-when-displaying-a-data-list",
	"match_type": "description"
},
{
	"name": "Method and system for displaying prioritization of metric values",
	"summary": "",
	"abstract": "A computing system, method, and computer program product display a plurality of metric values by forming a plurality of cells within a two-dimensional array and generating and displaying, within the plurality of cells, an indication of mutual importance for a set of metric values associated with two entities. The two entities are within one business entity or represent two business entities. The indication of mutual importance is selected from a fixed set of values of relative importance and indicated by one of a set of colors, a set of grey-scale tones, a set of backgrounds, a set of patterns, and a set of cell border styles. The method further identifies at least two metrics values in conflict, creates a diagram wherein conflicting metrics values are arranged in a circular manner, and indicates a relationship between conflicting metric values as a line with a steering direction indicated by an arrowhead.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07849396",
	"publication_date": "2010-12-07",
	"application_number": "11007986",
	"application_date": "2004-12-09",
	"tags": null,
	"slug": "method-and-system-for-displaying-prioritization-of-metric-values",
	"match_type": "description"
},
{
	"name": "Method and system for dynamically assembling presentations of web pages",
	"summary": "",
	"abstract": "A web designer defines attributes including business rules, properties and standard user interface library components. These attribute definitions allow look and feel specifications of a web page to be dynamically changed without requiring code modifications to any web application. A presentation assembly engine (PAE) receives a Uniform Resource Locator of a web page along with associated attributes and generates a unique identifier associated with a request of the web page. The PAE receives from a web application a web page request that includes the associated unique identifier. The PAE utilizes the unique identifier to identify and access the attributes needed to assemble a presentation of the web page. The PAE uses the attributes to assemble the web page presentation and sends the completed page to the web application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07765464",
	"publication_date": "2010-07-27",
	"application_number": "11622617",
	"application_date": "2007-01-12",
	"tags": null,
	"slug": "method-and-system-for-dynamically-assembling-presentations-of-web-pages",
	"match_type": "description"
},
{
	"name": "Method and system for efficiently handling navigational state in a portal",
	"summary": "",
	"abstract": "The present invention provides a method and system for efficiently handling navigational state by separating the latest navigational state into a base navigational state part and a delta navigational state part. The base navigational state which describes that part of the latest navigational state that is identical across all URLs is encoded in the header of the page markup to be submitted to the client's browser. The delta navigational part that describes the semantics of that specific URL is encoded in its associated URL. Each user interaction using such URL causes the browser to submit the base part as well as the delta part. On the server side the base and delta part are being merged resulting in new navigation state serving as a base for the rendering of the new page. The navigational state is represented as a hierarchical tree-like structure that can be serialized efficiently and compressed by prior art compression techniques. The hierarchical tree-like structure is based on a well-defined state model that is optimized in terms of state serialization. The state model arranges the contained navigational state information in character based information. That saves processing time as it avoids type conversion of navigational information. In addition the present invention includes further strategies to reduce the amount of information that must be serialized.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07801970",
	"publication_date": "2010-09-21",
	"application_number": "11299450",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": "method-and-system-for-efficiently-handling-navigational-state-in-a-portal",
	"match_type": "description"
},
{
	"name": "Method and system for establishing a trust framework based on smart key devices",
	"summary": "",
	"abstract": "A mechanism is provided for securing cryptographic functionality within a host system such that it may only be used when a system administrator physically allows it via a hardware security token. In addition, a hardware security unit is integrated into a data processing system, and the hardware security unit acts as a hardware certificate authority. The hardware security unit may be viewed as supporting a trust hierarchy or trust framework within a distributed data processing system. The hardware security unit can sign software that is installed on the machine that contains the hardware security unit. Server processes that use the signed software that is run on the machine can establish mutual trust relationships with the hardware security unit and amongst the other server processes based on their common trust of the hardware security unit.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07711951",
	"publication_date": "2010-05-04",
	"application_number": "10753820",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": "method-and-system-for-establishing-a-trust-framework-based-on-smart-key-devices",
	"match_type": "description"
},
{
	"name": "Method and system for file system synchronization between a central site and a plurality of remote sites",
	"summary": "",
	"abstract": "A method and system of synchronizing files between a central site and a plurality of remote sites is disclosed. The method and system comprises providing a list of files to the plurality of remote sites by the central site, prior to a callback time of the remote sites and reporting which of the files are missing by each of the plurality of remote sites to the central site. The method and system further includes determining within the central site which of the files needs to be sent to each of the plurality of remote sites. Accordingly, a system and method in accordance with the present invention helps deliver content from a central site to multiple remote sites. A system and method in accordance with the present invention uses the DMD in conjunction with a software client described below to maintain the file synchronization between the central server and remote site servers.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07689598",
	"publication_date": "2010-03-30",
	"application_number": "09784865",
	"application_date": "2001-02-15",
	"tags": null,
	"slug": "method-and-system-for-file-system-synchronization-between-a-central-site-and-a-plurality-of-remote-sites",
	"match_type": "description"
},
{
	"name": "Method and system for fragment linking and fragment caching",
	"summary": "",
	"abstract": "A method, a system, an apparatus, and a computer program product are presented for fragment caching. After a message is received at a computing device that contains a cache management unit, a fragment in the message body of the message is cached. Subsequent requests for the fragment at the cache management unit result in a cache hit. The cache management unit operates equivalently in support of fragment caching operations without regard to whether the computing device acts as a client, a server, or a hub located throughout the network; in other words, the fragment caching technique is uniform throughout a network. Cache ID rules accompany a fragment from an origin server; the cache ID rules describe a method for forming a unique cache ID for the fragment such that dynamic content can be cached away from an origin server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07730154",
	"publication_date": "2010-06-01",
	"application_number": "10034772",
	"application_date": "2001-12-19",
	"tags": null,
	"slug": "method-and-system-for-fragment-linking-and-fragment-caching",
	"match_type": "description"
},
{
	"name": "Method and system for hiding sensitive data in an electronic spreadsheet environment",
	"summary": "",
	"abstract": "A method and system for hiding sensitive data in an electronic spreadsheet. A first output equation expresses output data as a function of at least one first input data and at least one first intermediary result. The at least one first and second intermediary result are assigned as content of intermediary cells of the spreadsheet. A second output equation is generated and expresses the output data as a function of a subset of the at least one first and second input data with no functional dependence on the plurality of intermediary results. Generation of the second output equation utilizes the first output equation and the plurality of first intermediary equations. The output data of the second output equation is assigned as content of an output cell of the spreadsheet. The content of the intermediary cells is removed, resulting in the plurality of intermediary results not being identifiable in the spreadsheet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07743316",
	"publication_date": "2010-06-22",
	"application_number": "11375151",
	"application_date": "2006-03-14",
	"tags": null,
	"slug": "method-and-system-for-hiding-sensitive-data-in-an-electronic-spreadsheet-environment",
	"match_type": "description"
},
{
	"name": "Method and system for implementing privacy policy enforcement with a privacy proxy",
	"summary": "",
	"abstract": "A method is presented for enforcing a privacy policy concerning management of personally identifiable information in a centralized manner through a privacy proxy agent. A proxy intercepts a message from a first system to a second system, e.g., from a server to a client, and determines whether the message is associated with an operation on personally identifiable information; if not, then the proxy sends the message to the second system, but if so, then the proxy determines whether the operation on the personally identifiable information is compliant with a privacy policy and with user preference information with respect to the privacy policy for a user who is associated the personally identifiable information. If the message is compliant with the privacy policy and user preference data, then the proxy sends the first message to the second system; otherwise, an error indication is returned to the first system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797726",
	"publication_date": "2010-09-14",
	"application_number": "11014561",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": "method-and-system-for-implementing-privacy-policy-enforcement-with-a-privacy-proxy",
	"match_type": "description"
},
{
	"name": "Method and system for protecting master secrets using smart key devices",
	"summary": "",
	"abstract": "A data processing system accepts a removable hardware device, which becomes electrically engaged with a system unit within the data processing system, after which the removable hardware device and the hardware security unit mutually authenticate themselves. The removable hardware device stores a private key of a first asymmetric cryptographic key pair and a public key of a second asymmetric cryptographic key pair that is associated with the hardware security unit, and the hardware security unit stores a private key of the second asymmetric cryptographic key pair and a public key of the first asymmetric cryptographic key pair that is associated with the removable hardware device. In response to successfully performing the mutual authentication operation between the removable hardware device and the hardware security unit, the system unit is enabled to invoke cryptographic functions on the hardware security unit while the removable hardware device remains electrically engaged with the system unit.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07849326",
	"publication_date": "2010-12-07",
	"application_number": "10753818",
	"application_date": "2004-01-08",
	"tags": null,
	"slug": "method-and-system-for-protecting-master-secrets-using-smart-key-devices",
	"match_type": "description"
},
{
	"name": "Method and system for protecting the security of an open file in a computing environment",
	"summary": "",
	"abstract": "A file security protection method and system. The method is performed by an operating system of a computer system. A metadata token is received from a software application executing on the computer system. The metadata token denotes that the application has opened a file. The metadata token includes the name of the file. An initial time is set to about a time at which the metadata token was received. A loop is executed. Each iteration of the loop includes determining whether a first or second condition has been satisfied. The loop is exited if it is determined that the first or second condition has been satisfied. The first condition is that an elapsed time relative the initial time exceeds a specified threshold. The second condition is that a closeout token denoting that the file has been closed has been received from the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07845013",
	"publication_date": "2010-11-30",
	"application_number": "11442910",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": "method-and-system-for-protecting-the-security-of-an-open-file-in-a-computing-environment",
	"match_type": "description"
},
{
	"name": "Method and system for providing a trusted platform module in a hypervisor environment",
	"summary": "",
	"abstract": "A method is presented for implementing a trusted computing environment within a data processing system. A hypervisor is initialized within the data processing system, and the hypervisor supervises a plurality of logical, partitionable, runtime environments within the data processing system. The hypervisor reserves a logical partition for a hypervisor-based trusted platform module (TPM) and presents the hypervisor-based trusted platform module to other logical partitions as a virtual device via a device interface. Each time that the hypervisor creates a logical partition within the data processing system, the hypervisor also instantiates a logical TPM within the reserved partition such that the logical TPM is anchored to the hypervisor-based TPM. The hypervisor manages multiple logical TPM's within the reserved partition such that each logical TPM is uniquely associated with a logical partition.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707411",
	"publication_date": "2010-04-27",
	"application_number": "12261060",
	"application_date": "2008-10-30",
	"tags": null,
	"slug": "method-and-system-for-providing-a-trusted-platform-module-in-a-hypervisor-environment",
	"match_type": "description"
},
{
	"name": "Method and system for sequential compilation and execution of rules",
	"summary": "",
	"abstract": "Systems and methods for matching objects against a set of rules are described. The present invention is a novel rule execution algorithm that generally operates with greater efficiency than known algorithms. The algorithm uses a test analyzer to determine the relationships that exist between pairs of tests within a ruleset. Each rule is then translated into loops and tests, and merged into a unified series of loops and tests using the output of the test analyzer. The algorithm then generates pattern matching code corresponding to the unified series of loops and tests for evaluation by a virtual machine, and auxiliary code that provides object manipulations and rule actions at the service of the pattern matching code. In its runtime, the algorithm loads objects into the pattern matching code through an access interface. The pattern matching code is then executed by the virtual machine against the loaded objects.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07809666",
	"publication_date": "2010-10-05",
	"application_number": "11635918",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": "method-and-system-for-sequential-compilation-and-execution-of-rules",
	"match_type": "description"
},
{
	"name": "Method and system for server support of pluggable authorization systems",
	"summary": "",
	"abstract": "A method, system, apparatus, and computer program product is presented for plugging in a standard authorization system in a manner such that legacy applications can use the authorization APIs and backend remote interfaces of a legacy authorization system. When a legacy application makes a call intended for a routine within the legacy authorization system, the call is redirected to make the appropriate calls to the APIs of the standard authorization system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752661",
	"publication_date": "2010-07-06",
	"application_number": "11930509",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "method-and-system-for-server-support-of-pluggable-authorization-systems",
	"match_type": "description"
},
{
	"name": "Method and system for transparently controlling the behavior of service methods in a service oriented architecture",
	"summary": "",
	"abstract": "A method and system for transparently controlling infrastructure service methods in a service oriented architecture by enabling a higher level application component that is a consumer of infrastructure services to be alerted both before and after an infrastructure service is executed, by either that component or from an external source, such as another higher level application component. The pre-execution event enables a higher level application component to run additional business logic, change arguments passed to the infrastructure service before the call to the infrastructure service, or completely cancel execution of the infrastructure service method and route execution flow to other business logic. Since higher level application components can also be alerted after infrastructure service execution, they can also introduce additional business logic at that point, and/or change the return value passed from the service call. The system advantageously provides transparent control over behavior of infrastructure services without requiring large amounts of code to be added to providers and consumers of such services.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07684349",
	"publication_date": "2010-03-23",
	"application_number": "11189972",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": "method-and-system-for-transparently-controlling-the-behavior-of-service-methods-in-a-service-oriented-architecture",
	"match_type": "description"
},
{
	"name": "Method and system for visualizing weblog social network communities",
	"summary": "",
	"abstract": "A system for providing a visual representation of electronic, on-line journals, such as those generally referred to as u201cWeblogsu201d or u201cBlogsu201d, that uses a treemap display object in a graphical user interface to represent social networking characteristics discovered in, and aggregated from a set of on-line journals. The generated display object includes on-line journal representations shown within the social network communities to which they belong. This visual organization is provided through a treemap representation, in which an enclosing region for a set of journals is broken up into sub-regions corresponding to social network communities. Representations of individual on-line journals are provided as inner regions within the sub-regions for the communities. The enclosing region, sub-regions and inner regions may be rectangular, or any other specific geometric shape as appropriate for a given application. The relative size of an inner region representing a specific journal may be determined based on how strongly related that journal is to the other members of the community, or on how active that journal is in terms of reads or writes, or based on some other criteria.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07730409",
	"publication_date": "2010-06-01",
	"application_number": "12048779",
	"application_date": "2008-03-14",
	"tags": null,
	"slug": "method-and-system-for-visualizing-weblog-social-network-communities",
	"match_type": "description"
},
{
	"name": "Method for a SCSI target controller to safely shut down an operating system by the use of a standard SCSI initiator command",
	"summary": "",
	"abstract": "The present invention relates to a method for the safe shut down of an operating system. The invention utilizes a shutdown-monitoring program that is running in an initiator operating system to periodically transmit and pass-through SCSI command to a SCSI target to determine if a shutdown operations is to be performed upon the operating system. In response to the SCSI command the SCSI target returns data back to the initiator operating system, wherein the shutdown-monitoring program analyzes the data. In the event that the shutdown-monitoring program determines that the operating system is to be shut down, then an operating system shutdown is initiated using at least one appropriate API that is provided by the operating system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07822959",
	"publication_date": "2010-10-26",
	"application_number": "11621403",
	"application_date": "2007-01-09",
	"tags": null,
	"slug": "method-for-a-scsi-target-controller-to-safely-shut-down-an-operating-system-by-the-use-of-a-standard-scsi-initiator-command",
	"match_type": "description"
},
{
	"name": "Method for automatic detection of display sharing and alert generation in instant messaging",
	"summary": "",
	"abstract": "A method and apparatus is provided for automatically detecting display sharing, setting display sharing status, and generating alerts in instant messaging. If the display is shared, the present invention intercepts an instant message before it is displayed and generates alerts to senders. Senders have options to display the message, delete the message, or allow the message to be queued until display is no longer shared. Alternatively, if the sender's instant messaging application supports the functionality, the mechanism of the present invention may present the user with options to display the message or allow the message to be queued until display is no longer shared without sending an alert message. A privacy list of contacts may be automatically built when integrated with a calendar system for controlling instant messaging access and behavior.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07747685",
	"publication_date": "2010-06-29",
	"application_number": "11039510",
	"application_date": "2005-01-20",
	"tags": null,
	"slug": "method-for-automatic-detection-of-display-sharing-and-alert-generation-in-instant-messaging",
	"match_type": "description"
},
{
	"name": "Method for automatic dump assurance",
	"summary": "",
	"abstract": "A computer implemented method, an apparatus, and a computer usable program product are provided for adjusting a dump file space in a data processing system. Events with a potential to cause a dump are detected in a data processing system. A dump file size is estimated based on the detected events. The estimated dump file size is compared to the size of an allocated dump file space. A value results from the comparison reflecting the difference between the estimated dump file size and the size of the allocated dump file space. If the allocated dump file space is insufficient to hold a dump file of the estimated size, storage space is reclaimed and the allocated dump file space is expanded to at least the estimated size.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836344",
	"publication_date": "2010-11-16",
	"application_number": "11678826",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "method-for-automatic-dump-assurance",
	"match_type": "description"
},
{
	"name": "Method for automatically searching for documents related to calendar and email entries",
	"summary": "",
	"abstract": "A method is provided for enabling a user to search for documents that the user has previously viewed on its local machine. The method may rely upon three main system components: the desktop integration module, the index module, and the graphical user interface module. The desktop integration module is an application which monitors documents with which the user interacts for predetermined events, and obtains content data and metadata from the monitored documents. The index module indexes the content data and metadata received from the desktop integration module. The graphical user interface module then permits a user to utilize the desktop integration module and index module by allowing a user to search for a document.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07831601",
	"publication_date": "2010-11-09",
	"application_number": "10910604",
	"application_date": "2004-08-04",
	"tags": null,
	"slug": "method-for-automatically-searching-for-documents-related-to-calendar-and-email-entries",
	"match_type": "description"
},
{
	"name": "Method for controlling security function execution with a flexible, extendable, and non-forgable block",
	"summary": "",
	"abstract": "A method, article, and system for providing an effective implementation of data structures, and application programming interface (API) functions that allow secure execution of functions behind a secure boundary. The controlling mechanism is a flexible, extendable, and non-forgeable block that details how values and parameters behind the secure boundary can be changed. The invention allows for one entity to execute a security function that will normally require extensive authorizations or dual or multiple control. The method and system comprise instructions that are cryptographically protected against alteration or misuse, wherein the instructions further comprise a trusted block that defines security policies that are permitted when an application program employs the trusted block in APIs. The trusted block has a number of fields containing rules that provide an ability to limit how the trusted block is used, thereby reducing the risk of the trusted block being employed in unintended ways.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779258",
	"publication_date": "2010-08-17",
	"application_number": "11534236",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "method-for-controlling-security-function-execution-with-a-flexible-extendable-and-nonforgable-block",
	"match_type": "abstract"
},
{
	"name": "Method for implementing MPI-2 one sided communication",
	"summary": "",
	"abstract": "A method for implementing Message Passing Interface (MPI-2) one-sided communication by using Low-level Applications Programming Interface (LAPI) active messaging capabilities, including providing at least three data transfer types, one of which is used to send a message with a message header greater than one packet where Data Gather and Scatter Programs (DGSP) are placed as part of the message header; allowing a multi-packet header by using a LAPI data transfer type; sending the DGSP and data as one message; reading the DSGP with a header handler; registering the DSGP with the LAPI to allow the LAPI to scatter the data to one or more memory locations; defining two sets of counters, one counter set for keeping track of a state of a prospective communication partner, and another counter set for recording activities of local and Remote Memory Access (RMA) operations; comparing local and remote counts of completed RMA operations to complete synchronization mechanisms; and creating a mpci_wait_loop function.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07694310",
	"publication_date": "2010-04-06",
	"application_number": "11467946",
	"application_date": "2006-08-29",
	"tags": null,
	"slug": "method-for-implementing-mpi2-one-sided-communication",
	"match_type": "description"
},
{
	"name": "Method for managing keyboard navigation within a tree control structure user interface component via a linked list",
	"summary": "",
	"abstract": "A method, data processing system and computer program product for maintaining/updating managing keyboard navigation using a linked list. In particular, a Dynamic Tree Control Linkage (DTCL) utility creates a doubly linked list with list nodes having assigned values based on a tree control structure UI component. Each list node of the doubly linked list corresponds to a visible tree item of the tree structure UI component. Responding to a keyboard event signal, the DTCL utility finds a current list node corresponding to a first current tree item. The DTCL utility finds a next (i.e. previous or subsequent) list node corresponding to a next tree item. The DTCL utility detects a list node exists. The DTCL utility detects whether the next list node is associated with a null value. When the next list node is associated with a non-null value, the next tree item is identified. The DTCL utility returns an identification of the next tree item representing a second current tree item. The DTCL utility also updates the doubly linked list in response to the expansion/collapsion of the current list item. The DTCL utility avoids the need to number all tree items (both visible and hidden tree items) sequentially by adding list node(s) to or removing list node(s) from the linked list to represent the visible tree items.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07844637",
	"publication_date": "2010-11-30",
	"application_number": "11855798",
	"application_date": "2007-09-14",
	"tags": null,
	"slug": "method-for-managing-keyboard-navigation-within-a-tree-control-structure-user-interface-component-via-a-linked-list",
	"match_type": "description"
},
{
	"name": "Method for protecting against denial of service attacks using trust, quality of service, personalization, and hide port messages",
	"summary": "",
	"abstract": "According to an embodiment of the invention, a method for processing a plurality of service requests in a client-server system includes server steps of receiving at least one request for service from a client and providing a level of service based on a trust level provided in the at least one request. According to another embodiment, a method of authenticating messages includes steps of: embedding authentication information into a message at the application level; downloading a script from a computer for sending the message; running said script to send said message to a server; and checking said message by said server at the network level.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07721091",
	"publication_date": "2010-05-18",
	"application_number": "11433534",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "method-for-protecting-against-denial-of-service-attacks-using-trust-quality-of-service-personalization-and-hide-port-messages",
	"match_type": "description"
},
{
	"name": "Method for providing high performance scalable file I/O through persistent file domain and functional partitioning",
	"summary": "",
	"abstract": "A method for implementing large scale parallel file I/O processing includes steps of: separating processing nodes into compute nodes specializing in computation and I/O nodes (computer processors restricted to running I/O daemons); organizing the compute nodes and the I/O nodes into processing sets, the processing sets including: one dedicated I/O node corresponding to a plurality of compute nodes. I/O related system calls are received in the compute nodes then sent to the corresponding I/O nodes. The I/O related system calls are processed through a system I/O daemon residing in the I/O node. The plurality of compute nodes are evenly distributed across participating processing sets. Additionally, for collective I/O operations, compute nodes from each processing set are assigned as I/O aggregators to issue I/O requests to their corresponding I/O node, wherein the I/O aggregators are evenly distributed across the processing set. Additionally, a file domain is partitioned using a collective buffering technique wherein data is aggregated in memory prior to writing to a file; portions of the partitioned file domain are assigned to the processing sets.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07721009",
	"publication_date": "2010-05-18",
	"application_number": "11604162",
	"application_date": "2006-11-22",
	"tags": null,
	"slug": "method-for-providing-high-performance-scalable-file-io-through-persistent-file-domain-and-functional-partitioning",
	"match_type": "description"
},
{
	"name": "Method for pruning objects in a service registry and repository",
	"summary": "",
	"abstract": "Embodiments of the invention relate to a service registry and repository system, method and computer program product for accessing objects in an object repository. There is provided a method of managing an object database for objects that includes receiving an object query; querying the object database using the object query; receiving a hierarchical collection of objects including a root object; and returning only those objects that are within a specific depth of the root object and that do not represent user-defined relationships. The returning step maps the objects from a proprietary object format into a standard object format and optionally the standard object format is the Service Definition Object format (SDO).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07844612",
	"publication_date": "2010-11-30",
	"application_number": "11844299",
	"application_date": "2007-08-23",
	"tags": null,
	"slug": "method-for-pruning-objects-in-a-service-registry-and-repository",
	"match_type": "description"
},
{
	"name": "Method for recommending upgrade components for a computer system",
	"summary": "",
	"abstract": "Method and computer program product for recommending cost effective upgrades for a computer system. At least one performance parameter is determined for an existing computer system. Up to date performance specifications for available upgrade components are obtained. A variety of potential systems are modeled utilizing at least one upgrade component, and at least one component from the existing system to create upgrade scenarios. At least one performance parameter is predicted for each upgrade scenario. The performance parameters for the upgrade scenarios are compared to the performance parameters of the existing computer system. The cost-effectiveness is determined for each upgrade scenario, and upgrade recommendations are made when the cost-effectiveness meets or exceeds a target value.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07702497",
	"publication_date": "2010-04-20",
	"application_number": "11567019",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": "method-for-recommending-upgrade-components-for-a-computer-system",
	"match_type": "description"
},
{
	"name": "Method of generically specifying congestion control and avoidance behavior",
	"summary": "",
	"abstract": "A method for controlling congestion control and avoidance behavior of a plurality of heterogeneous network processors in a network is disclosed. The network also includes at least one host processor that utilizes at least one congestion control application. The method include providing a plurality of generic application program interfaces (APIs). The generic APIs communicate with the congestion control application(s) and the heterogeneous network processors. The generic APIs communicate with the congestion control application(s) in the host processor(s) in a network processor independent manner, but manage the congestion control and avoidance behavior of the heterogeneous network processors in a network processor specific manner. Thus, the generic APIs allow the control application(s) to be network processor independent and to manage the congestion control and avoidance behavior of the heterogeneous network processors in the network processor specific manner.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07796508",
	"publication_date": "2010-09-14",
	"application_number": "12131489",
	"application_date": "2008-06-02",
	"tags": null,
	"slug": "method-of-generically-specifying-congestion-control-and-avoidance-behavior",
	"match_type": "description"
},
{
	"name": "Method of returning data during insert statement processing",
	"summary": "",
	"abstract": "A method for generating an execution plan for updating and retrieving data from a database in a single process includes: receiving a statement by a server to update a database with a first set of data and to retrieve a second set of data from the database; building a first execution plan to update the database with the first set of data; building a second execution plan to retrieve the second set of data from the database; and building a single execution plan including a combination of the first and second execution plans. The single execution plan allows for the updating and retrieval of data with a single crossing of an interface between a client and the database. By performing both functions in this manner, the efficiency of performing such tasks on the database is significantly increased.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07711730",
	"publication_date": "2010-05-04",
	"application_number": "10744633",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": "method-of-returning-data-during-insert-statement-processing",
	"match_type": "description"
},
{
	"name": "Method, apparatus and program storage device for preserving locked pages in memory when in user mode",
	"summary": "",
	"abstract": "A method, apparatus and program storage device for preserving locked pages in memory when in user mode. A user command daemon is provided for executing a command string received from a user application. A socket interface is disposed between the user command daemon and the application for routing signals between the user application and the user command daemon. The user command daemon provides a returned value to application for loading into memory without causing latencies to the running of the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07661115",
	"publication_date": "2010-02-09",
	"application_number": "11342493",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": "method-apparatus-and-program-storage-device-for-preserving-locked-pages-in-memory-when-in-user-mode",
	"match_type": "description"
},
{
	"name": "Method, system and article for improved TCP performance during packet reordering",
	"summary": "",
	"abstract": "TCP congestion avoidance is implemented upon retransmission of a packet and is reverted back to the original congestion state upon receipt of an early acknowledgement (ACK), indicating reordering of packets, thereby eliminating a needless restriction on TCP bandwidth. Upon receiving an ACK to a retransmitted packet, it is determined if the ACK resulted from receipt of the original reordered packet or the retransmitted packet, based on the arrival time of the ACK at the sender. If the round-trip-time (RTT) for the retransmitted packet is much lower than the average or current calculated RTT for the network link between sender and receiver, then the retransmission occurred as a result of a reordering event, and the congestion window is restored back to its value prior to the retransmission, thereby permitting the network link to continue operating at its original increased throughput.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07742419",
	"publication_date": "2010-06-22",
	"application_number": "12101765",
	"application_date": "2008-04-11",
	"tags": null,
	"slug": "method-system-and-article-for-improved-tcp-performance-during-packet-reordering",
	"match_type": "description"
},
{
	"name": "Method, system, and article of manufacture for providing service components",
	"summary": "",
	"abstract": "Provided are a method, system, and article of manufacture, wherein a client component including at least one client interface is provided. Also provided is a target component including at least one service interface, wherein the at least one client interface is capable of matching the at least one service interface. A service interface implementation corresponding to the at least one service interface is provided, wherein the service interface implementation is a dynamic service interface implementation. The dynamic service interface implementation is executed to allow access to the client component to a service provided by the target component.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779430",
	"publication_date": "2010-08-17",
	"application_number": "11014536",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": "method-system-and-article-of-manufacture-for-providing-service-components",
	"match_type": "description"
},
{
	"name": "Method, system, and computer program product for virtualizing a physical storefront",
	"summary": "",
	"abstract": "An interactive virtual model of a physical storefront can be presented to a shopper within a user interactive interface of a computing device remotely located from the physical storefront. At least a portion of the organizational structure of the interactive virtual model can be identical a portion of the organizational structure of the physical storefront. The organization structure can varies from storefront-to-storefront of different physical storefronts, each being related to a different interactive virtual model. A change involving at least one physical object within the physical storefront can be sensed. Responsive to sensing the change, a virtual object presented in the interactive virtual model can be changed so that the change to the physical object occurring in the physical storefront is reflected in the interactive virtual model and is shown in the user interactive interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07685023",
	"publication_date": "2010-03-23",
	"application_number": "12343892",
	"application_date": "2008-12-24",
	"tags": null,
	"slug": "method-system-and-computer-program-product-for-virtualizing-a-physical-storefront",
	"match_type": "description"
},
{
	"name": "Method, system, and program product for generating a virtual database",
	"summary": "",
	"abstract": "The present invention provides a virtual database as well as a method, system, and program product for generating a virtual database. Specifically, under the present invention, Service Data Objects (SDOs) corresponding to a plurality of database tables are provided within a virtual container. Once provided, two or more of the SDOs are interrelated to yield the virtual database (having a Virtual Bounded Persistent Memory). In accordance with the present invention, the database tables can be stored within a single (e.g., conventional) database, or databases. In addition, the virtual database can be generated and removed on-demand. Still yet, the virtual database of the present invention can be queried using standard Structured Query Language (SQL) queries.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07849114",
	"publication_date": "2010-12-07",
	"application_number": "11424938",
	"application_date": "2006-06-19",
	"tags": null,
	"slug": "method-system-and-program-product-for-generating-a-virtual-database",
	"match_type": "description"
},
{
	"name": "Method, system, and program product for monitoring message flow in a message queuing system",
	"summary": "",
	"abstract": "System, method, and computer program product for automatically monitoring message flow in a message queuing system in an asynchronous messaging network. A message queuing application programming interface appends, in a message descriptor field for recording and monitoring message flow, unique application identification keys of applications that process the message, operation codes applied to the message, and time stamps of operations applied during message processing. The keys are generated by the start-up of the applications and are filled in by each PUT and GET function of the API. After processing of the message, the entries included in the message descriptor field are monitored, and any deviation from a predefined message flow is automatically detected and reported.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707585",
	"publication_date": "2010-04-27",
	"application_number": "11254007",
	"application_date": "2005-10-19",
	"tags": null,
	"slug": "method-system-and-program-product-for-monitoring-message-flow-in-a-message-queuing-system",
	"match_type": "abstract"
},
{
	"name": "Methods and apparatus for business rules authoring and operation employing a customizable vocabulary",
	"summary": "",
	"abstract": "In one embodiment, a method comprises creating at least one individualized language resource, creating at least one individualized language rule referencing at least one of said individualized language resource, and transforming said at least one individualized language rule into computer executable format.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07818277",
	"publication_date": "2010-10-19",
	"application_number": "12236310",
	"application_date": "2008-09-23",
	"tags": null,
	"slug": "methods-and-apparatus-for-business-rules-authoring-and-operation-employing-a-customizable-vocabulary",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for information hyperchain management for on-demand business collaboration",
	"summary": "",
	"abstract": "Hyperchain information management techniques are provided for use in applications such as on-demand business collaboration. In accordance with such techniques, a hyperchain annotation methodology is provided. Such an annotation methodology enables interaction between loosely-coupled business processes or interacting partners and business entities. Annotated information components and process components for collaboration may be expressed as links. Further, techniques for realizing an on-demand message exchange, embedded status/state information, flexible collaborative business message exchange patterns, and a collaborative directory are provided.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07797381",
	"publication_date": "2010-09-14",
	"application_number": "10665699",
	"application_date": "2003-09-19",
	"tags": null,
	"slug": "methods-and-apparatus-for-information-hyperchain-management-for-ondemand-business-collaboration",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for processing markup language messages in a network",
	"summary": "",
	"abstract": "A markup language processing device processes markup language messages by receiving a message containing portions of tagged data formatted in a markup language and applying a transform selection rule set to at least one tagged rule selection data portion in the message to select at least one markup language transformation to apply to the tagged pre-transform data portion within the message. The markup language processing device applies the selected markup language transformation to transform the tagged pre-transform data portion to a tagged post-transform data portion according to a transformation function and then conditionally forwards the message. The markup language processing device operates on behalf of a computerized device that is not required to process the message due to operation of the at least one markup language transformation within the markup language processing device. The markup language processing device can process XML message for security and other purposes thus offloading such processing requirement from server computer systems.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774831",
	"publication_date": "2010-08-10",
	"application_number": "10745326",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": "methods-and-apparatus-for-processing-markup-language-messages-in-a-network",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for reducing the number of server interactions in network-based applications using a dual-MVC approach",
	"summary": "",
	"abstract": "In accordance with a dual-MVC (Model-View-Controller) approach of the invention, the client machine maintains part of the Model, eliminating many round-trips to the server. The invention provides an implementation approach for constructing the frame(s) contained in the client's browser software to allow it to be refreshed locally. The invention addresses development and maintenance by specifying a library of functions that a programmer can use to construct the View and Controller on the client machine. When part of the Model is maintained on the client, the client has the ability to respond to user interaction without paying the performance penalty of continually interacting with the server.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07702719",
	"publication_date": "2010-04-20",
	"application_number": "09500208",
	"application_date": "2000-02-08",
	"tags": null,
	"slug": "methods-and-apparatus-for-reducing-the-number-of-server-interactions-in-networkbased-applications-using-a-dualmvc-approach",
	"match_type": "description"
},
{
	"name": "Methods and computer programs for database structure comparison",
	"summary": "",
	"abstract": "Methods and computer programs for comparing database structures such as database schemas and descriptions of application programming interfaces are disclosed. The methods involve identifying incompatibilities between information repositories such as relational databases and byte code repositories by extracting a first database structure from a first information repository, extracting a second database structure from a second information repository, filtering relevant sections from each database structure, asymmetrically comparing the relevant sections, and identifying any incompatibilities between database schemas or byte code repositories.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07788282",
	"publication_date": "2010-08-31",
	"application_number": "10943064",
	"application_date": "2004-09-16",
	"tags": null,
	"slug": "methods-and-computer-programs-for-database-structure-comparison",
	"match_type": "abstract"
},
{
	"name": "Methods and systems for distributed caching in presence of updates and in accordance with holding times",
	"summary": "",
	"abstract": "Techniques for cache management including cache replacement are provided. In one aspect, a distributed caching technique of the invention comprises the use of a central cache and one or more local caches. The central cache communicates with the one or more local caches and coordinates updates to the local caches, including cache replacement. The invention also provides techniques for adaptively determining holding times associated with data storage applications such as those involving caches.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07673108",
	"publication_date": "2010-03-02",
	"application_number": "10995601",
	"application_date": "2004-11-23",
	"tags": null,
	"slug": "methods-and-systems-for-distributed-caching-in-presence-of-updates-and-in-accordance-with-holding-times",
	"match_type": "description"
},
{
	"name": "Methods and systems for managing persistent storage of small data objects",
	"summary": "",
	"abstract": "Techniques are disclosed for managing storage of objects of sizes smaller than a storage transfer unit in a computer system. A plurality of storage transfer units are maintained in a first storage medium (e.g., disk storage) organized by a quantity of free space in a storage transfer unit. A cache is maintained in a second storage medium (e.g., main memory), the cache including a copy of at least one of the plurality of storage transfer units. In response to a request to store an object of a size less than a storage transfer unit, the technique searches for a cached storage transfer unit with sufficient free space to store the object. If no such cached storage transfer unit can be found, the technique identifies an uncached storage transfer unit with sufficient free space to store the object and stores a copy of the identified storage transfer unit in the cache. The object is stored in the identified storage transfer unit by modifying at least one data structure in the cache and subsequently writing a cached copy of the storage transfer unit to the first storage medium.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836248",
	"publication_date": "2010-11-16",
	"application_number": "10629284",
	"application_date": "2003-07-29",
	"tags": null,
	"slug": "methods-and-systems-for-managing-persistent-storage-of-small-data-objects",
	"match_type": "description"
},
{
	"name": "Methods for facilitating application development",
	"summary": "",
	"abstract": "Application development is facilitated by initializing a page token in response to receiving a request. The page token comprises an abstract model component containing a specification for obtaining data designated to be sent in a response to the request or a specification for updating data obtained from the request, and also a view component for providing referential format specifications for data provided in the abstract model component. The page token is passed between at least two components of a modified model-view-controller architecture via a standard interface. The components include a user interface controller, a user interface builder implementing a first standard interface, an application layer implementing a second standard interface, a data access manager implementing a third standard interface, and at least one data access utility implementing a fourth standard interface. Business logic is applied to contents of the page token as a result of the passing, and a response is presented to the request based upon results of applying the business logic.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07814125",
	"publication_date": "2010-10-12",
	"application_number": "11856128",
	"application_date": "2007-09-17",
	"tags": null,
	"slug": "methods-for-facilitating-application-development",
	"match_type": "description"
},
{
	"name": "Methods, apparatus and computer programs for visualization and management of data organization within a data processing system",
	"summary": "",
	"abstract": "Folders of data from disparate application programs are organized in conformity to a reference taxonomy. A reference taxonomy for representing an organization of stored data found in multiple disparate application programs is created. Each application taxonomy from the multiple disparate application programs is compared to the reference taxonomy by a user. If the user decides to use the reference taxonomy, then the reference taxonomy replaces the application taxonomy for each of the multiple disparate application programs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07769768",
	"publication_date": "2010-08-03",
	"application_number": "11770404",
	"application_date": "2007-06-28",
	"tags": null,
	"slug": "methods-apparatus-and-computer-programs-for-visualization-and-management-of-data-organization-within-a-data-processing-system",
	"match_type": "description"
},
{
	"name": "Methods, systems and computer program products for CPU signaturing to aide in performance analysis",
	"summary": "",
	"abstract": "Methods, systems and computer program products for CPU signaturing to aide in performance analysis. Exemplary embodiments include a performance analysis method including identifying a workload having one or more testcases, assigning a CPU signature to each of the one or more testcases, calling a CPU signature application programming interface that toggles the CPU to generate the CPU signature, passing four parameters to the CPU signature application programming interface, prior to running each of the one or more testcases of the workload, generating the CPU signature, dynamically determining a run order of the one or more testcases at a run time of the workload and reviewing performance data during the running of each of the one or more testcases, each of the one or more testcases being identifiable by its respective CPU signature.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07823018",
	"publication_date": "2010-10-26",
	"application_number": "12120955",
	"application_date": "2008-05-15",
	"tags": null,
	"slug": "methods-systems-and-computer-program-products-for-cpu-signaturing-to-aide-in-performance-analysis",
	"match_type": "abstract"
},
{
	"name": "Methods, systems, and computer program products for recreating events occurring within a web application",
	"summary": "",
	"abstract": "A method, system, and computer program product for re-creating events occurring within a Web application is provided. The method includes receiving a request to perform an action from a client system accessing the Web application over a network. The method also includes generating a log file for the client system and recording the request and a timestamp of the request in the log file. The method further includes collecting client system information, executing the request, and recording the client system information and request execution details in the log file. Upon the occurrence of a triggering event, the method includes generating scripts to re-create the request and the request execution details, executing the scripts within the Web application and the operating environment of the client system that is re-produced using the client system information, and recording and evaluating results of execution of the scripts to identify any issues or evaluate client system experiences with the Web application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07805675",
	"publication_date": "2010-09-28",
	"application_number": "11419221",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": "methods-systems-and-computer-program-products-for-recreating-events-occurring-within-a-web-application",
	"match_type": "description"
},
{
	"name": "Mitigating address book weaknesses that permit the sending of e-mail to wrong addresses",
	"summary": "",
	"abstract": "A computer-implemented method for mitigating address book weaknesses that permit sending of e-mail to wrong addresses includes determining prior to sending an e-mail message whether one of a plurality of recipients of an e-mail message should receive the e-mail message, the determining prior to sending the e-mail message including analyzing history information of a sender of the e-mail message to determine whether the one of the plurality of recipients is ordinarily connected with the plurality of recipients and whether the one of the plurality of recipients is ordinarily connected with a subject of the e-mail message, the analyzing history information including comparing the plurality of recipients to a database indicative of recipients that received e-mail from the sender, and, responsive to the history information, determining whether the one of the plurality of recipients is one of a new recipient and an ordinary recipient, and presenting the determining to the sender.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774421",
	"publication_date": "2010-08-10",
	"application_number": "12165116",
	"application_date": "2008-06-30",
	"tags": null,
	"slug": "mitigating-address-book-weaknesses-that-permit-the-sending-of-email-to-wrong-addresses",
	"match_type": "description"
},
{
	"name": "Network performance by dynamically setting a reassembly timer based on network interface",
	"summary": "",
	"abstract": "The reassembly timer in a TCP/IP receiver is dynamically set to avoid data corruption on fast networks caused by IP identification wrap-around. A receiver independently sets the reassembly timer to a first reassembly time set by the user for fast networks or to a second reassembly timer set by the user for slow networks based on whether the receiver and sender are on the same subnet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07742454",
	"publication_date": "2010-06-22",
	"application_number": "11014054",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": "network-performance-by-dynamically-setting-a-reassembly-timer-based-on-network-interface",
	"match_type": "description"
},
{
	"name": "Notifying users of a device events in a networked environment",
	"summary": "",
	"abstract": "Notifying a user of a device event, including receiving a device event, associating the device event with a user, receiving an RFID signal from a user's RFID tag, determining the user's location in dependence upon the RFID signal, selecting a user notification appliance in dependence upon the user's location, and notifying the user of the device event with the selected user notification appliance. In typical embodiments, associating the device event with a user also includes reading a user ID from a device record for the device. In typical embodiments, associating the device event with a user also includes identifying the location of the device, identifying a previous location of the user, and associating the device event with a user in dependence upon the location of the device and the previous location of the user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07791472",
	"publication_date": "2010-09-07",
	"application_number": "12179147",
	"application_date": "2008-07-24",
	"tags": null,
	"slug": "notifying-users-of-a-device-events-in-a-networked-environment",
	"match_type": "description"
},
{
	"name": "On-demand translator for localized operating systems",
	"summary": "",
	"abstract": "A method of testing a computer program written for use in a foreign language can include identifying text presented upon a display screen, wherein the text is in a first language, and automatically acquiring the text from the display screen. The text can be translated from the first language to a second language. The translated text can be presented in the second language upon the display screen.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07669198",
	"publication_date": "2010-02-23",
	"application_number": "10992585",
	"application_date": "2004-11-18",
	"tags": null,
	"slug": "ondemand-translator-for-localized-operating-systems",
	"match_type": "description"
},
{
	"name": "Open multi-processing reduction implementation in cell broadband engine (CBE) single source compiler",
	"summary": "",
	"abstract": "The present disclosure is directed to a method for providing an OpenMP reduction implementation. The method may comprise creating an aggregate of at least one reduction variable in a parallel region or a work-sharing construct; defining a pointer variable, the pointer variable pointing to a dynamic array of the aggregate; creating an initialization routine, an outlined routine and a reduction accumulation routine; replacing the parallel region or the work-sharing construct with a runtime routine, the runtime routine taking a plurality of arguments including an address of the initialization routine, an address of the outlined routine, an address of the reduction accumulation routine, an address of the pointer variable, and a size of the aggregate; and executing the runtime routine when the at least one reduction variable is in the parallel region or the work-sharing construct.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07689977",
	"publication_date": "2010-03-30",
	"application_number": "12423894",
	"application_date": "2009-04-15",
	"tags": null,
	"slug": "open-multiprocessing-reduction-implementation-in-cell-broadband-engine-cbe-single-source-compiler",
	"match_type": "description"
},
{
	"name": "Optimal display of multiple windows within a computer display",
	"summary": "",
	"abstract": "An apparatus and method for optimally displaying multiple windows on a display is provided. The multiple windows can be sequentially or simultaneously resized and/or repositioned. The method performs at least one of resizing or repositioning operation on at least one of the multiple windows to fit within the available display area. The method provides the user the ability to see a maximum of information from multiple windows and allows access to the scroll bars, title bars, status bars and command window of the multiple windows.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07844917",
	"publication_date": "2010-11-30",
	"application_number": "11669314",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": "optimal-display-of-multiple-windows-within-a-computer-display",
	"match_type": "description"
},
{
	"name": "Orthogonal Integration of de-serialization into an interpretive validating XML parser",
	"summary": "",
	"abstract": "A computer-implemented method of creating a schema specific parser for processing Extensible Markup Language (XML) documents can include receiving an XML schema comprising a plurality of components, determining a hierarchy of the plurality of components of the XML schema, and creating an execution plan specifying a hierarchy of XML processing instructions. Each XML processing instruction can be associated with an XML processing function of a virtual machine that performs an XML document processing task. The hierarchy of XML processing instructions can be determined according to the hierarchy of components of the XML schema. An instruction causing the virtual machine to invoke a de-serialization module that extracts at least one item of information from the XML document can be inserted into the execution plan. The execution plan can be compiled into a bytecode version of the execution plan that is interpretable by the virtual machine. The bytecode version of the execution plan can be output.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752212",
	"publication_date": "2010-07-06",
	"application_number": "11758054",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "orthogonal-integration-of-deserialization-into-an-interpretive-validating-xml-parser",
	"match_type": "description"
},
{
	"name": "Parallel computing system using coordinator and master nodes for load balancing and distributing work",
	"summary": "",
	"abstract": "Embodiments of the invention provide a method, system and article of manufacture for parallel application load balancing and distributed work management. In one embodiment, a hierarchy of master nodes may be used to coordinate the actions of pools of worker nodes. Further, the activity of the master nodes may be controlled by a u201ccoordinatoru201d node. A coordinator node may be configured to distribute work unit descriptions to the collection of master nodes. If needed, embodiments of the invention may be scaled to deeper hierarchies.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07647590",
	"publication_date": "2010-01-12",
	"application_number": "11469107",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": "parallel-computing-system-using-coordinator-and-master-nodes-for-load-balancing-and-distributing-work",
	"match_type": "description"
},
{
	"name": "Parallel-prefix broadcast for a parallel-prefix operation on a parallel computer",
	"summary": "",
	"abstract": "A parallel-prefix broadcast for a parallel-prefix operation on a parallel computer includes: configuring, on each node, a parallel-prefix contribution buffer for storing the node's parallel-prefix contribution; configuring, on each node, a parallel-prefix results buffer for storing results of a operation, the results buffer having a position for each node that corresponds to node's rank; and repeatedly for each position in the results buffer: processing in parallel by each node, including: determining, by the node, whether the current position in the results buffer is to include the node's contribution, if the current position is not to include the contribution, contributing the identity element, and if the current position is to include the contribution, contributing the contribution, performing, by each node, the operation using the contributed identity elements and the contributed contributions, yielding a result from the operation, and storing, by each node, the result in the position in the results buffer.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752421",
	"publication_date": "2010-07-06",
	"application_number": "11737209",
	"application_date": "2007-04-19",
	"tags": null,
	"slug": "parallelprefix-broadcast-for-a-parallelprefix-operation-on-a-parallel-computer",
	"match_type": "description"
},
{
	"name": "Password management",
	"summary": "",
	"abstract": "A password management solution which provides a user with convenient access to multiple resources (e.g. systems and services), and also provides the flexibility to establish varying password security requirements for each resource is disclosed. In an embodiment, there is provided a password registry for registering resources and securely storing user ID and encrypted password information. An unencrypted user-provided password may be encrypted by a process associated with each resource, using an encryption algorithm specific to that resource, before storage of the encrypted password in the password registry. An encrypted password retrieved from the password registry may be decrypted by a process associated with each resource using a decryption algorithm specific to that resource.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07650632",
	"publication_date": "2010-01-19",
	"application_number": "10809563",
	"application_date": "2004-03-25",
	"tags": null,
	"slug": "password-management",
	"match_type": "description"
},
{
	"name": "Performance monitoring within an enterprise software system",
	"summary": "",
	"abstract": "A large-scale enterprise system is described that includes a flexible and scalable performance monitoring software. The system comprises a plurality of enterprise software applications having one or more collector components that collect performance data from the enterprise software applications. A performance manager receives the performance data from the collector components and aggregates the performance data within a hierarchical data structure. A performance manager interface receives the performance data from performance manager and formats the data for communication to a performance monitoring tool for presentment to a user.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761556",
	"publication_date": "2010-07-20",
	"application_number": "10996856",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": "performance-monitoring-within-an-enterprise-software-system",
	"match_type": "description"
},
{
	"name": "Performing temporal checking",
	"summary": "",
	"abstract": "An apparatus for performing temporal checking is disclosed. A signal logger for performing temporal checking includes a group of edge detection modules and a group of counting modules. During testing, the signal logger is coupled to a device under testing (DUT). Each of the edge detection modules is capable of maintaining edge information after a state transition on a signal within the DUT has been detected. Each of the counting modules is associated with one of the edge detection modules. Each of the countering modules is capable of maintaining a clock cycle count information associated with a detected edge. After the testing has been completed, temporal checking information on a signal within the DUT can be obtained by reconstructing the edge information and the associated clock cycle count information of the signal collected during the test.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07853420",
	"publication_date": "2010-12-14",
	"application_number": "12102510",
	"application_date": "2008-04-14",
	"tags": null,
	"slug": "performing-temporal-checking",
	"match_type": "description"
},
{
	"name": "Pluggable merge patterns for data access services",
	"summary": "",
	"abstract": "Provided are techniques for storing data. Invocation of a data access service is received, wherein the invocation identifies a data structure storing one or more data elements having a data format. An update handler to be plugged into a data access framework is identified, wherein the update handler processes data elements having the data format. Under control of the update handler, data elements are accessed in the data structure; one or more statements for storing the data elements into the data store are determined; and the one or more statements are forwarded to the data access framework.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07779047",
	"publication_date": "2010-08-17",
	"application_number": "11767450",
	"application_date": "2007-06-22",
	"tags": null,
	"slug": "pluggable-merge-patterns-for-data-access-services",
	"match_type": "description"
},
{
	"name": "Pluggable state meta-data processors based on meta information modeling in a service oriented architecture",
	"summary": "",
	"abstract": "A method and system for managing service state data of a service in a service-oriented architecture by establishing a pluggable meta-data processor comprising: establishing a platform independent, extensible meta-data information model to define meta-data about service state data; establishing an extensible meta-data definition comprising an extensible set of service state data attributes; configuring one or more extensible semantic processors; configuring a controller meta-data processor; and defining contracts among the semantic processors.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07693973",
	"publication_date": "2010-04-06",
	"application_number": "10652963",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": "pluggable-state-metadata-processors-based-on-meta-information-modeling-in-a-service-oriented-architecture",
	"match_type": "description"
},
{
	"name": "Portable device for fibre channel configuration and analysis",
	"summary": "",
	"abstract": "Apparatus, method, and computer program product embodiments for analyzing and configuring a fibre channel link and topology using a portable device are provided. A network microchip is programmed to select at least one of an available plurality of operating modes based on a first user input. The plurality of operating modes include a manual speed selection mode for manually selecting a link speed based on a second user input, an auto speed selection mode for automatically negotiating a highest supported link speed, an auto topology negotiation mode for discovering and reporting all possible port configurations, and a manual topology selection mode for selecting a fibre channel topology based on a third user input.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07843852",
	"publication_date": "2010-11-30",
	"application_number": "12108385",
	"application_date": "2008-04-23",
	"tags": null,
	"slug": "portable-device-for-fibre-channel-configuration-and-analysis",
	"match_type": "description"
},
{
	"name": "Presentation of a simulated or hardware system including configuration entities",
	"summary": "",
	"abstract": "Within a display device, a respective one of a plurality of design graphical representations is displayed for each of a plurality of hierarchically arranged design entity instances within a simulated system. The design entity instances include a particular design entity instance containing a latch that is represented by a particular design graphical representation. A configuration entity instance associated with the particular design entity is identified within a configuration database associated with the simulated system. The configuration entity instance has a plurality of different settings that each reflects a value of the latch. Within the display device, a configuration graphical representation of the configuration entity instance is presented in association with the particular design graphical representation corresponding to the particular design entity instance. In addition, a current setting of the configuration entity instance is presented concurrently with the configuration graphical representation.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07805695",
	"publication_date": "2010-09-28",
	"application_number": "11829447",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": "presentation-of-a-simulated-or-hardware-system-including-configuration-entities",
	"match_type": "description"
},
{
	"name": "Presenting an alternative product package offer from a web vendor",
	"summary": "",
	"abstract": "The server system, communicatively connected to multiple client systems via a network, facilitates at least one web page for download to the client systems, where the web page offers multiple products for purchase. Responsive to the server system detecting a particular product selection from a particular client system, the server system downloads to the particular client system a first package offer of the client selected product and at least one second product from among at least one vendor selected product at a first price at a first discounted rate for purchase of both the client selected particular product and the at least one second product. In addition, the server system includes a selectable option for replacing the first package offer in the download of the first package offer. Responsive to detecting, at the server system a user selection of the selectable option from the particular client system, the server system creates at least one alternative product package offer for purchase of both the client selected product and at least one third product from among a different set of vendor selected products. The server system downloads the alternative product package offer to the client system for selection for purchase by the user, wherein the user is enabled to select a final product package including the client selected product and at least one third product form the different set of vendor selected products at a total price having a final discounted rate.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07672875",
	"publication_date": "2010-03-02",
	"application_number": "11146477",
	"application_date": "2005-06-06",
	"tags": null,
	"slug": "presenting-an-alternative-product-package-offer-from-a-web-vendor",
	"match_type": "description"
},
{
	"name": "Processing messages in a message queueing system",
	"summary": "",
	"abstract": "A system, method, and a computer program product for processing messages in a message queuing system includes an application repository, a message store, and a queue-less application programming interface in each message queuing system. The application repositories may store application identification data provided by applications. The application programming interfaces may put messages to and get messages from the message queuing systems, and provide with each connect and put request application identification data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07716678",
	"publication_date": "2010-05-11",
	"application_number": "11290080",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": "processing-messages-in-a-message-queueing-system",
	"match_type": "abstract"
},
{
	"name": "Providing enterprise management of amorphous communities",
	"summary": "",
	"abstract": "A method of managing online communities within an online community management system can include declaratively specifying a taxonomy of online community types, declaratively specifying a plurality of roles for members of online communities, and declaratively specifying a security policy that associates permissions with roles and online community types. A plurality of online community profiles can be maintained. Each online community profile can represent an online community, specify an online community type from the taxonomy, and specify a list of members of that online community as well as an associated role for each member. Access can be provided to a selected online community according to the online community type of the selected online community, a role within the selected online community that is associated with a user attempting to access the selected online community, and the security policy.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07849496",
	"publication_date": "2010-12-07",
	"application_number": "11617305",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "providing-enterprise-management-of-amorphous-communities",
	"match_type": "description"
},
{
	"name": "Query framework system and method",
	"summary": "",
	"abstract": "A query framework system is provided. The query framework system comprises a query framework service for consuming a query and returning a result set, a provider application programming interface for defining a consistent application programming interface for providers, one or more providers incorporating query processing logic, and a configuration repository for storing the list of the providers in the query framework system and their properties.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07716212",
	"publication_date": "2010-05-11",
	"application_number": "11473375",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "query-framework-system-and-method",
	"match_type": "abstract"
},
{
	"name": "Query rebinding for high-availability database systems",
	"summary": "",
	"abstract": "Embodiments of the invention allow for managing execution of queries with respect to different data sources. The different data sources are logically represented by data abstraction models. One embodiment comprises receiving a first abstract query against physical data in a first data source. The first abstract query has result fields configured to return requested data from the first data source. In response it is detected whether the first data source is available. If the first data source is unavailable, a second abstract query against physical data in a second data source containing a portion of the requested data is created on the basis of the first abstract query. The second abstract query has result fields configured to return the portion of the requested data from the second data source. The second abstract query is executed against the second data source to obtain the portion of the requested data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07668807",
	"publication_date": "2010-02-23",
	"application_number": "11064717",
	"application_date": "2005-02-24",
	"tags": null,
	"slug": "query-rebinding-for-highavailability-database-systems",
	"match_type": "description"
},
{
	"name": "Querying markup language data sources using a relational query processor",
	"summary": "",
	"abstract": "An XML wrapper queries an XML document in an on-the-fly manner so that only parent nodes in the document that satisfy the query are extracted and then unnested. The parent nodes and associated descendent nodes are located using XPath expressions contained as options in data definition language (DDL) statements. The parent nodes satisfying the query and associated descendent nodes are extracted and stored outside of a database according to a relational schema. The wrapper facilitates applications that use convention SQL queries and views to operate on that information stored according to the relational schema. The wrapper also responds to query optimizer requests for costs associated with queries against external data sources associated with the wrapper.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07844629",
	"publication_date": "2010-11-30",
	"application_number": "11837567",
	"application_date": "2007-08-13",
	"tags": null,
	"slug": "querying-markup-language-data-sources-using-a-relational-query-processor",
	"match_type": "description"
},
{
	"name": "Quick and accurate detection and reporting of component failures using RFID",
	"summary": "",
	"abstract": "Component failures are reported using a radio-frequency identification tag associated with an electronic component of a computer system installed on a common communications bus and power bus among at least one other electronic component wherein failure of a component may cause disruption of the power bus, the communications bus, or both busses; a system-level diagnostic function within the computer system but external to the first electronic component receiving a diagnostic failure indication from the first electronic component, and responsive to receipt of the diagnostic failure indication, sending a latching signal to the first electronic component; and a latch controllable by the latching signal, the latch having at least two stable modes including an unlatched mode which prevents the tag from transmitting signals upon query by a radio-frequency identification reader, and a latched mode which enables the tag to transmit signals upon query by a radio-frequency identification reader.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07796039",
	"publication_date": "2010-09-14",
	"application_number": "11769918",
	"application_date": "2007-06-28",
	"tags": null,
	"slug": "quick-and-accurate-detection-and-reporting-of-component-failures-using-rfid",
	"match_type": "description"
},
{
	"name": "Rendering GUI widgets with generic look and feel",
	"summary": "",
	"abstract": "Rendering GUI widgets with generic look and feel by receiving in a display device a master definition of a graphics display, the master definition including at least one graphics definition element, the graphics definition element including a reference to a protowidget and one or more instance parameter values characterizing an instance of the protowidget, the protowidget includes a definition of a generic GUI object, including generic display values affecting overall look and feel of the graphics display, and rendering at least one instance of the protowidget to a graphics display in dependence upon the generic display values and the instance parameter values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07694271",
	"publication_date": "2010-04-06",
	"application_number": "10787663",
	"application_date": "2004-02-26",
	"tags": null,
	"slug": "rendering-gui-widgets-with-generic-look-and-feel",
	"match_type": "description"
},
{
	"name": "Resource efficient software tracing for problem diagnosis",
	"summary": "",
	"abstract": "The present invention discloses a solution that defines multiple retry points for a software application which are operable to generate and record trace information only as part of a retry execution in response to an exception. Outside these conditions, the burdens of generating and recording trace information can be avoided. Furthermore, the determination of a preferred one of these retry points can be made to focus the retry execution in a way that only the retry point which generates the most helpful, or informative, trace information is necessarily reverted to in response to an exception.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07765434",
	"publication_date": "2010-07-27",
	"application_number": "11831786",
	"application_date": "2007-07-31",
	"tags": null,
	"slug": "resource-efficient-software-tracing-for-problem-diagnosis",
	"match_type": "description"
},
{
	"name": "Resource reservation for massively parallel processing systems",
	"summary": "",
	"abstract": "Disclosed are a method, information processing system, and computer readable medium for reserving resources in a massively parallel processing system comprising. The method includes receiving a reservation request for reserving at least one resource within a massively parallel processing system. The massively parallel processing system includes compute nodes, base partitions, switches, wires, and node cards. The reservation type associated with the reservation is determined. The reservation type is at least one of a number of compute nodes, a base partition list, a particular shape configuration, a particular job, and a particular partition. A set of requirements is generated based on the reservation type. A set of resources is identified for satisfying the set of requirements and the set of resources is reserved.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07716336",
	"publication_date": "2010-05-11",
	"application_number": "11553511",
	"application_date": "2006-10-27",
	"tags": null,
	"slug": "resource-reservation-for-massively-parallel-processing-systems",
	"match_type": "description"
},
{
	"name": "Search framework metadata",
	"summary": "",
	"abstract": "A user selectable evaluation indicia associated with a displayed unit of information within an application is provided. Responsive to a user interaction with the evaluation indicia, an evaluation opportunity is presented to the user. At least a portion of a user's activities comprising the user participation is transformed, responsive to the user's participation with the evaluation opportunity, into search framework metadata for the unit of information. The search framework metadata may facilitate ranking search results comprising the unit of information.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836411",
	"publication_date": "2010-11-16",
	"application_number": "10866140",
	"application_date": "2004-06-10",
	"tags": null,
	"slug": "search-framework-metadata",
	"match_type": "description"
},
{
	"name": "Semantic business model management",
	"summary": "",
	"abstract": "A computer-implemented solution for managing a semantic business model is provided. In particular, one or more business area models for a business entity are obtained and transformed into intermediate model(s). Each intermediate model is represented using a substantially similar meta-modeling language. Subsequently, the semantic business model is generated by merging the set of intermediate models. In this manner, the semantic business model can be generated in a manner that reduces the overall burden on a user. The semantic business model can be provided for display to the user and/or use in performing qualitative analysis on various aspects of the business entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761478",
	"publication_date": "2010-07-20",
	"application_number": "11286609",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": "semantic-business-model-management",
	"match_type": "description"
},
{
	"name": "Service broker realizing structuring of portlet services",
	"summary": "",
	"abstract": "The present invention relates to network computing and in particular to a method and respective system for operating a Web Services search method in a networked environmentu2014in particular the Internet, wherein a Service Broker is requested by a Service Consumer for offering Web Services, and a Service Provider provides a requested Web Service to the Service Consumer, and wherein a Service Provider registers Web Services at the Service Broker and wherein the Web Services are implemented preferably by respective Remote Portlets running on a Portal Server of the Service Provider. In order to increase the search precision and the recall rate it is proposed to perform the steps of: a) retrieving data mining input data relating to description details of the inquired Web Services from respective Service descriptions of the inquired Web Services, b) performing a data mining function on said data mining input data, wherein a clustering is performed with a distance calculation function including said description details and wherein the clustering yields a cluster model comprising a plurality of clusters and a mapping for each Web Service to one of said clusters, wherein Web Services having a similar semantic meaning are collected in a single cluster, yielding a data mining result, c) adding cluster information comprised of said data mining result to a service model and storing this cluster information in a database, d) offering search response data based on said cluster model and service model.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07836460",
	"publication_date": "2010-11-16",
	"application_number": "11531233",
	"application_date": "2006-09-12",
	"tags": null,
	"slug": "service-broker-realizing-structuring-of-portlet-services",
	"match_type": "description"
},
{
	"name": "Setting operation based resource utilization thresholds for resource use by a process",
	"summary": "",
	"abstract": "An efficiency-based workload manager samples multiple actual resource use characteristics while a process executes, where the actual resource use characteristics designate a portion of a total amount of system resources available to the process that are utilized by the process at multiple times over a sampling period. Next, responsive to detecting the conclusion of the sampling period, the efficiency-based workload manager determines an operation based resource utilization threshold for the process based on a maximum resource use within the multiple samplings of actual resource use characteristics. Then, the efficiency-based workload manager stores the operation based resource utilization threshold for access by a workload manager, where the workload manager uses the operation based resource utilization threshold to restrict the process to resource use up to the operation based resource utilization threshold within an execution environment managed by the workload manager.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07793308",
	"publication_date": "2010-09-07",
	"application_number": "11031426",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "setting-operation-based-resource-utilization-thresholds-for-resource-use-by-a-process",
	"match_type": "description"
},
{
	"name": "Smart radio-frequency identification (RFID) infrastructure and method",
	"summary": "",
	"abstract": "The present invention provides a smart RFID infrastructure and method. Specifically, under the present invention, the infrastructure includes a set (e.g., one or more) of smart RFID tags adapted to communicate with one another, wherein each operating smart RFID tag is adapted to create an individual table of information pertaining to operation of other smart RFID tags. In addition, the infrastructure includes a set of writeable RFID tags adapted to communicate with and receive the individual table of information from each operating smart RFID tag, wherein each of the set of writeable RFID tags is further adapted to create a master table of information based on the individual table of information received from each operating smart RFID tag.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07659821",
	"publication_date": "2010-02-09",
	"application_number": "11531723",
	"application_date": "2006-09-14",
	"tags": null,
	"slug": "smart-radiofrequency-identification-rfid-infrastructure-and-method",
	"match_type": "description"
},
{
	"name": "Software tool configured to generate test cases characterized by a linear range of integral values",
	"summary": "",
	"abstract": "The present invention is a system for efficiently generating test cases characterized by a linear range of integral values. A software testing tool which has been configured to generate test cases characterized by a linear range of integral values in accordance with the present invention can include a user interface coupled to a test case generator. The test case generator can be configured for range bounding for a range of integral values in a software application under test. In particular, the test case generator can include a halving module programmed to identify changes in response states in the software application under test evoked from input tokens having selected ones of the lengths defined within sub-ranges of a specified range of integral values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07730461",
	"publication_date": "2010-06-01",
	"application_number": "10738814",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": "software-tool-configured-to-generate-test-cases-characterized-by-a-linear-range-of-integral-values",
	"match_type": "description"
},
{
	"name": "Speaker annotation objects in a presentation graphics application",
	"summary": "",
	"abstract": "A method, system, and program product for controlling the content displayed during a computer driven presentation of a presentation graphics application. Hidden object presentation properties are assigned to presentation graphics objects during creation of a presentation graphics file, the properties controlling the circumstances under which hidden objects are displayed during a computer driven presentation or screenshow. One type of hidden object presentation property indicates whether an object is viewable on an audience display and presenter display, or only a presenter display, during a multi-display screenshow. Another type of hidden object presentation property, such as hidden object value, determines the audience to which the object is displayed. Hidden object value properties may be hierarchical, individually selectable in any combination, or mutually exclusive. During screenshow setup, one or more display attributes are assigned to each logical display to be used in the screenshow, the display attributes determining the objects viewable thereon.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07672997",
	"publication_date": "2010-03-02",
	"application_number": "10706372",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": "speaker-annotation-objects-in-a-presentation-graphics-application",
	"match_type": "description"
},
{
	"name": "Specifying a configuration for a digital system utilizing dial biasing weights",
	"summary": "",
	"abstract": "In a method of data processing, a database defines a Dial entity and at least one instance of the Dial entity. Each instance of the Dial entity has an input having a plurality of different possible input values and one or more outputs, and each of the plurality of different possible input values has a different associated output value set for the one or more outputs. Each instance of the Dial entity determines a value of at least one of a plurality of configuration latches in a digital system separate from the database. The database also associates with the Dial entity at least one set of biasing weights that, when applied, determines a probability of each instance of the Dial entity having particular ones of the plurality of different possible input values. In response to a call to set the plurality of configuration latches, the database is accessed to apply the at least one set of biasing weights to select one of the plurality of different possible input values for the at least one instance of the Dial entity. The plurality of configuration latches in the digital system are set based upon the output value set for the one or more outputs of the at least one instance of the Dial entity.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774724",
	"publication_date": "2010-08-10",
	"application_number": "12102116",
	"application_date": "2008-04-14",
	"tags": null,
	"slug": "specifying-a-configuration-for-a-digital-system-utilizing-dial-biasing-weights",
	"match_type": "description"
},
{
	"name": "Split socket send queue apparatus and method with efficient queue flow control, retransmission and sack support mechanisms",
	"summary": "",
	"abstract": "A mechanism for offloading the management of send queues in a split socket stack environment, including efficient split socket queue flow control and TCP/IP retransmission support. An Upper Layer Protocol (ULP) creates send work queue entries (SWQEs) for writing to the send work queue (SWQ). The Internet Protocol Suite Offload Engine (IPSOE) is notified of a new entry to the SWQ and it subsequently reads this entry that contains pointers to the data that is to be transmitted. After the data is transmitted and acknowledgments are received, the IPSOE creates a completion queue entry (CQE) that is written into the completion queue (CQ). The flow control between the ULP and the IPSOE is credit based. The passing of CQ credits is the only explicit mechanism required to manage flow control of both the SWQ and the CQ between the ULP and the IPSOE.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07818362",
	"publication_date": "2010-10-19",
	"application_number": "11418606",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": "split-socket-send-queue-apparatus-and-method-with-efficient-queue-flow-control-retransmission-and-sack-support-mechanisms",
	"match_type": "description"
},
{
	"name": "Streaming multidimensional data by bypassing multidimensional query processor",
	"summary": "",
	"abstract": "A data warehouse comprises a multidimensional data storage area to store multidimensional data and a transactional data storage area to store underlying transactional data from which the multidimensional data is generated. The data warehouse also comprises a multidimensional query processor to provide one or more interfaces to issue a first set of queries conforming to one or more multidimensional query languages to retrieve the multidimensional data from the multidimensional data storage area. Furthermore, the data warehouse comprises a dynamic query engine to provide an additional interface to issue a second set of queries that bypass the interfaces provided by the multidimensional query processor to retrieve the transactional data from the transactional data storage area, wherein the second set of queries do not conform to any of the one or more multidimensional query languages.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792784",
	"publication_date": "2010-09-07",
	"application_number": "11765277",
	"application_date": "2007-06-19",
	"tags": null,
	"slug": "streaming-multidimensional-data-by-bypassing-multidimensional-query-processor",
	"match_type": "description"
},
{
	"name": "Supporting multiple security mechanisms in a database driver",
	"summary": "",
	"abstract": "A method for connecting a client to a database server are provided. The method provide for providing a generic interface, the generic interface being operable to interoperate with one or more non-GSSAPI (Generic Security Services Application Programming Interface) compliant security mechanisms, providing a set of specialized interfaces, the set of specialized interface being operable to interoperate with one or more GSSAPI compliant security mechanisms, and establishing a connection between a client and a database server using the generic interface or the set of specialized interfaces depending on a security mechanism used by the client. The one or more non-GSSAPI compliant security mechanisms and the one or more GSSAPI compliant security mechanisms may be predefined or user-defined.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761468",
	"publication_date": "2010-07-20",
	"application_number": "11538518",
	"application_date": "2006-10-04",
	"tags": null,
	"slug": "supporting-multiple-security-mechanisms-in-a-database-driver",
	"match_type": "abstract"
},
{
	"name": "Synthesizing information-bearing content from multiple channels",
	"summary": "",
	"abstract": "A computing system and method receive a query; separate a plurality of information sources into individual elements of content (EOC); tag each EOC with metadata that indicate source, date, and other relevant information; pattern match each EOC; calculate the respective distance function from every EOC to every other EOC; and output EOC to a set of virtual buffers () containing appropriately related EOC less than a given distance value. The method further creates virtual summary buffers (); then concatenates the EOC in each virtual buffer (); applies a comparative analysis filter () to remove redundant sub-elements; and presents the results as summary digests ().",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07711731",
	"publication_date": "2010-05-04",
	"application_number": "11929093",
	"application_date": "2007-10-30",
	"tags": null,
	"slug": "synthesizing-informationbearing-content-from-multiple-channels",
	"match_type": "description"
},
{
	"name": "System and computer program product for synchronizing direct access storage volumes",
	"summary": "",
	"abstract": "A system and computer program product for synchronizing direct access storage volumes designated as managed by storage management software with direct access storage volumes available to a computer system. An identifier of a volume is provided. The volume is connected to and available to a computer system, and is not managed by storage management software. The identifier is matched with an identification pattern included in a record of a database accessible to the computer system. Management options that facilitate managing the volume by the storage management software, and that are included in the record are retrieved from the record. The volume is automatically added to a set of volumes being managed by the storage management software. The adding of the volume includes designating the volume as being managed by the storage management software and providing the management options to the storage management software.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07669006",
	"publication_date": "2010-02-23",
	"application_number": "11968675",
	"application_date": "2008-01-03",
	"tags": null,
	"slug": "system-and-computer-program-product-for-synchronizing-direct-access-storage-volumes",
	"match_type": "description"
},
{
	"name": "System and method for automated on demand replication setup",
	"summary": "",
	"abstract": "A method of automatic replication setup is disclosed. The method allows the business application user to focus on the requirements posed by the business application and to abstract from the low level infrastructure details. Information specific to the databases and infrastructure design decisions can be provided by a subject matter expert. By automating the requirements analysis and infrastructure setup process, the time to deliver can be decreased significantly and the potential for errors reduced.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07814459",
	"publication_date": "2010-10-12",
	"application_number": "11456349",
	"application_date": "2006-07-10",
	"tags": null,
	"slug": "system-and-method-for-automated-on-demand-replication-setup",
	"match_type": "description"
},
{
	"name": "System and method for improving virtual machine performance using an offline profile repository",
	"summary": "",
	"abstract": "A system, method, and computer readable medium, for automatically improving performance of, and optimizing, a program based on on-line profile data of the program and profile data () collected across multiple runs of the program and stored in a persistent off-line repository (). The method includes executing a program in an execution environment. Profile data () is collected for the program across multiple runs thereof. The performance of the program is improved, such as by optimization of the program, based on on-line profile data of the executing program and the collected profile data in the persistent off-line repository.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07770157",
	"publication_date": "2010-08-03",
	"application_number": "11199455",
	"application_date": "2005-08-08",
	"tags": null,
	"slug": "system-and-method-for-improving-virtual-machine-performance-using-an-offline-profile-repository",
	"match_type": "description"
},
{
	"name": "System and method for movement of non-aligned data in network buffer model",
	"summary": "",
	"abstract": "A method is provided for transferring data between first and second nodes of a network. Such method includes requesting first data to be transferred by a first upper layer protocol (ULP) operating on the first node of the network; and buffering second data for transfer to the second node by a lower protocol layer lower than the first ULP, the second data including an integral number of standard size units of data including the first data. The method further includes posting the second data to the network for delivery to the second node; receiving the second data at the second node; and from the received data, delivering the first data to a second ULP operating on the second node. The method is of particular application when transferring the data in unit size is faster than transferring the data in other than unit size.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07840643",
	"publication_date": "2010-11-23",
	"application_number": "10959801",
	"application_date": "2004-10-06",
	"tags": null,
	"slug": "system-and-method-for-movement-of-nonaligned-data-in-network-buffer-model",
	"match_type": "description"
},
{
	"name": "System and method for planning and generating queries for multi-dimensional analysis using domain models and data federation",
	"summary": "",
	"abstract": "Data integration and data analysis using computing equipment, software as well as hardware, includes a system and method for integrating data from various data sources, structured and unstructured, without physically creating a data warehouse and automatically generating queries for analysis of the integrated data from a multitude of different views.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07716174",
	"publication_date": "2010-05-11",
	"application_number": "11930917",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "system-and-method-for-planning-and-generating-queries-for-multidimensional-analysis-using-domain-models-and-data-federation",
	"match_type": "description"
},
{
	"name": "System and method for protecting sensitive data",
	"summary": "",
	"abstract": "A method, system and article of manufacture for protecting sensitive data in databases and, more particularly, for managing access to sensitive data in a database. One embodiment comprises receiving a query against the data in the database comprising at least (i) a result field specification, and (ii) a sorting instruction. The method further comprises retrieving a result set from the database, and filtering the retrieved result set on the basis of predefined filtering rules to remove selected data from a selected result field of at least one data record included with the retrieved result set. The filtered result set is sorted according to the sorting instruction to produce the sorted result set, whereby the sorting is done independently of the removed selected data so that the sorted result set places the at least one data record at a position which is non-indicative of a value of the removed selected data.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07752215",
	"publication_date": "2010-07-06",
	"application_number": "11246792",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": "system-and-method-for-protecting-sensitive-data",
	"match_type": "description"
},
{
	"name": "System and method for the managed security control of processes on a computer system",
	"summary": "",
	"abstract": "Managing and controlling the execution of software programs with a computing device to protect the computing device from malicious activities. A protector system implements a two-step process to ensure that software programs do not perform malicious activities which may damage the computing device or other computing resources to which the device is coupled. In the first phase, the protector system determines whether a software program has been previously approved and validates that the software program has not been altered. If the software program is validated during the first phase, this will minimize or eliminate security monitoring operations while the software program is executing during the second phase. If the software program cannot be validated, the protector system enters the second phase and detects and observes executing activities at the kernel level of the operating system so that suspicious actions can be anticipated and addressed before they are able to do harm to the computing device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07673137",
	"publication_date": "2010-03-02",
	"application_number": "10336299",
	"application_date": "2003-01-03",
	"tags": null,
	"slug": "system-and-method-for-the-managed-security-control-of-processes-on-a-computer-system",
	"match_type": "description"
},
{
	"name": "System and method of remotely managing and loading artifacts",
	"summary": "",
	"abstract": "A system and method for remotely loading artifacts is disclosed. The system and method involves monitoring application installation events on a computing device. In response to detecting an application installation event, the application installation event is intercepted. The application associated with the application installation event is searched for artifacts, and any artifacts found within the application are stored in a centralized location. The artifacts are further indexed according to a target namespace. In one embodiment, the system and method further involved receiving a query from a client to locate an artifact, locating the artifact from previously extracted artifacts and returning the artifact as URL address.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761559",
	"publication_date": "2010-07-20",
	"application_number": "11549616",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "system-and-method-of-remotely-managing-and-loading-artifacts",
	"match_type": "description"
},
{
	"name": "System and method of remotely managing and loading artifacts",
	"summary": "",
	"abstract": "A system and method of remotely loading artifacts is disclosed. The method involves storing and indexing a plurality of artifacts in a centralized location. A query is received from a client to locate an artifact, and the artifact is located within the central location. A reply is then returned to the client, wherein the reply includes a location of the artifact. In one embodiment, the method of remotely loading artifacts further involves the artifacts being previously extracted from an application during the installation of the application.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07720931",
	"publication_date": "2010-05-18",
	"application_number": "11549623",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "system-and-method-of-remotely-managing-and-loading-artifacts",
	"match_type": "description"
},
{
	"name": "System and methods for on-demand document provisioning using ad hoc networking",
	"summary": "",
	"abstract": "A method of providing data content obtained from one or more network-connected nodes to a mobile computing device is provided. The method includes determining whether a previously-established network connection between the mobile computing device and a network-connected node has been interrupted after the mobile computing device receives a first set of data content and an identifier corresponding to a second set of data content from the network-connected node via the previously-established network connection. The method also includes establishing a wireless connection between the mobile computing device and another computing device if the previously-established network connection has been interrupted and the second set of data content is stored by the other computing device. The method further includes conveying the second set of data content to the mobile computing device from the other computing device via the wireless connection if the previously-established network connection has been interrupted and the second set of data content is stored at the other computing device.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07860491",
	"publication_date": "2010-12-28",
	"application_number": "11609160",
	"application_date": "2006-12-11",
	"tags": null,
	"slug": "system-and-methods-for-ondemand-document-provisioning-using-ad-hoc-networking",
	"match_type": "description"
},
{
	"name": "System and program product for caching web content",
	"summary": "",
	"abstract": "The invention provides a system and program product for caching dynamic portal pages without changing the existing caching proxy infrastructure or the transportation protocol used by providing an advanced caching component. An advanced caching component provides the functionality that additional dynamic page specific cache information is provided as part of the response including the portal page. Each component in the portal that dynamically contributes page fragments to be aggregated to a portal page provides dynamic component specific cache information which includes component specific cache scope and expiration values.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07774427",
	"publication_date": "2010-08-10",
	"application_number": "12123634",
	"application_date": "2008-05-20",
	"tags": null,
	"slug": "system-and-program-product-for-caching-web-content",
	"match_type": "description"
},
{
	"name": "System and program products for pruning objects in a service registry and repository",
	"summary": "",
	"abstract": "This invention relates to a service registry and repository system, method and computer program product for accessing objects in an object repository. There is provided a method of managing an object database for objects comprising: receiving an object query; querying the object database using the object query; receiving a hierarchical collection of objects including a root object; and returning only those objects that are within a specific depth of the root object and that do not represent user-defined relationships. The returning step maps the objects from a proprietary object format into a standard object format and optionally the standard object format is the Service Definition Object format (SDO).",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07725469",
	"publication_date": "2010-05-25",
	"application_number": "11844322",
	"application_date": "2007-08-23",
	"tags": null,
	"slug": "system-and-program-products-for-pruning-objects-in-a-service-registry-and-repository",
	"match_type": "description"
},
{
	"name": "System for automatic arrangement of portlets on portal pages according to semantical and functional relationship",
	"summary": "",
	"abstract": "The present invention relates to the field of network computing, and in particular to method and system for designing a Web Portal comprising a hierarchical structure of portal pages and portlets for accessing Web contents accessible via the Portal. A typical larger enterprise's portal contains large numbers, e.g., thousands of pages and portlets. Due to the complexity of an enterprise portal, manual administration is inefficient as it is time-consuming, error-prone and thus expensive. In order to overcome these disadvantages, it is proposed that a Portal according to the invention performs some mining of the portlet markup and/or that of the portlet description in order to autonomously compute and propose an enhanced portal content structure. This helps to provide a user-friendly content structure that reflects well the relationships between portlets.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07653659",
	"publication_date": "2010-01-26",
	"application_number": "11531251",
	"application_date": "2006-09-12",
	"tags": null,
	"slug": "system-for-automatic-arrangement-of-portlets-on-portal-pages-according-to-semantical-and-functional-relationship",
	"match_type": "description"
},
{
	"name": "System for first pass filtering of anomalies and providing a base confidence level for resource usage prediction in a utility computing environment",
	"summary": "",
	"abstract": "Provided is a system for monitoring resources in a utility computing environment (UCE). Measurements are evaluated to determine whether or not a particular resource requires remedial or other type of action. A sliding measurement window is employed to assemble a number of measurements corresponding to a particular resource. The number of intervals in a sliding measurement window is based upon best practices corresponding to the resource being measured and analyzed. A first threshold-crossing event and subsequent events are stored until the window is full, or closed. When the window is closed, the threshold-crossing measurements are analyzed to determine whether or not there exists an issue with the resource that requires action. Once a window has been closed and analyzed, the first threshold-crossing event and each subsequent event up to a second threshold-crossing event are discarded and the window reopens.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07689382",
	"publication_date": "2010-03-30",
	"application_number": "12119224",
	"application_date": "2008-05-12",
	"tags": null,
	"slug": "system-for-first-pass-filtering-of-anomalies-and-providing-a-base-confidence-level-for-resource-usage-prediction-in-a-utility-computing-environment",
	"match_type": "description"
},
{
	"name": "System for object retransmission without a continuous network connection in a digital media distributor system",
	"summary": "",
	"abstract": "The present invention provides a system and computer readable medium for object retransmission in an asynchronous environment without a continuous network connection in a digital media distributor (DMD) system. The system and computer readable medium include receiving objects in a receiver from a central site, generating a response document in the receiver, and sending the response document asynchronously to the central site. The received response documents are then utilized in the central site to determine which object to retransmit to the receiver. In another aspect of the present invention, the central site manages the inventory of objects in the receiver by instructing the receiver to delete objects not needed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07818765",
	"publication_date": "2010-10-19",
	"application_number": "12330922",
	"application_date": "2008-12-09",
	"tags": null,
	"slug": "system-for-object-retransmission-without-a-continuous-network-connection-in-a-digital-media-distributor-system",
	"match_type": "description"
},
{
	"name": "System for prevention of buffer overflow intrusions",
	"summary": "",
	"abstract": "Disclosed as a system and method for providing enhanced security to processes running on a data processing system. The disclosed system and method selectively revokes execute privileges from memory pages being used for stacks of susceptible processes running on the data processing system. By selectively resetting execute privileges on a per page and per process basis, the system and method maintains system performance and provides enhanced security to processes running on the data processing system.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07793349",
	"publication_date": "2010-09-07",
	"application_number": "12019353",
	"application_date": "2008-01-24",
	"tags": null,
	"slug": "system-for-prevention-of-buffer-overflow-intrusions",
	"match_type": "description"
},
{
	"name": "Systems, methods and computer products for database cluster modeling",
	"summary": "",
	"abstract": "Generating in a computer system and deploying a data model of a plurality of database cluster configuration availability solutions over a computer network by creating a database cluster configuration modeling specification including objects contained in a unified model language diagram providing a definition of a database cluster configuration data model. Creating the database cluster configuration data model using the database cluster configuration modeling specification and upon receiving signals from a graphical user interface or from XML batch data files or from application programming interfaces, indicating the definition of the cluster configuration model. After creating the graphical database cluster configuration data model, constraints that specify a valid logical configuration are validated and the solution is transformed into data understandable by database cluster manager software applications and then transmitted over a network to multiple cluster manager targets to be incorporated as database cluster configuration availability solutions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07730091",
	"publication_date": "2010-06-01",
	"application_number": "11848783",
	"application_date": "2007-08-31",
	"tags": null,
	"slug": "systems-methods-and-computer-products-for-database-cluster-modeling",
	"match_type": "abstract"
},
{
	"name": "Systems, methods and computer products for traversing schematic hierarchy using a scrolling mechanism",
	"summary": "",
	"abstract": "A method and a system for displaying hierarchical navigating, debugging and editing of selected hierarchical levels of design of a plurality of hierarchical levels of design in graphical hierarchical design applications, by assigning, from a schematic of the integrated circuit, a viewable scope of a block element desired for traversing. Opening the viewable scope of the block element, by using a mouse scrolling device to cause a cursor to highlight and roll in a downward direction over the highlighted block element, while holding down a predefined keyboard key. Then closing the viewable scope of the block element, by causing the cursor to be positioned in an empty area of the schematic, while holding down an other predefined keyboard key and rolling the mouse scrolling device in an upward direction.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07810064",
	"publication_date": "2010-10-05",
	"application_number": "11848821",
	"application_date": "2007-08-31",
	"tags": null,
	"slug": "systems-methods-and-computer-products-for-traversing-schematic-hierarchy-using-a-scrolling-mechanism",
	"match_type": "description"
},
{
	"name": "Systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models",
	"summary": "",
	"abstract": "Systems, methods, and computer products that include an automated discovery process that discovers useful metadata objects from an intelligent starting point thereby generating at least one multidimensional model for OLAP analysis. Further, generation of the intelligent starting point may be derived by use of a multidimensional analysis program that analyzes the results of query mining and query analysis. The preferred embodiment of the present invention determines whether metadata useful for OLAP analysis exists by evaluating patterns found in the queries. In addition to using the starting point derived from the results of query mining and query analysis, the preferred embodiment of the present invention may also limit search parameters to narrow the scope of searching for an intelligent starting point and thereby both increase the probability of producing an accurate cube multidimensional model and increase the efficiency of determining the intelligent starting point.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707143",
	"publication_date": "2010-04-27",
	"application_number": "10867970",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "systems-methods-and-computer-program-products-that-automatically-discover-metadata-objects-and-generate-multidimensional-models",
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a peek adapter or a read adapter from multiple adapters of a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating peeking and reading of messages from multiple adapters connected, for example, to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to peek or read a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to peek or read the next message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07792146",
	"publication_date": "2010-09-07",
	"application_number": "11874344",
	"application_date": "2007-10-18",
	"tags": null,
	"slug": "technique-for-controlling-selection-of-a-peek-adapter-or-a-read-adapter-from-multiple-adapters-of-a-high-speed-switch",
	"match_type": "description"
},
{
	"name": "Technique for controlling selection of a write adapter from multiple adapters connected to a high speed switch",
	"summary": "",
	"abstract": "A technique is provided for facilitating writing of messages to multiple adapters connected to a high speed switch in a distributed computing environment. The technique employs a first, relatively quick filter to initially test whether a previously used adapter of the multiple adapters should be used to send a new message. If the first filter fails to select the previously used adapter, then the technique includes employing a second, more complicated filter to determine which adapter of the multiple adapters should be used to send the message. The first filter includes a first set of tests, and the second filter includes a second set of tests.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07796645",
	"publication_date": "2010-09-14",
	"application_number": "11872823",
	"application_date": "2007-10-16",
	"tags": null,
	"slug": "technique-for-controlling-selection-of-a-write-adapter-from-multiple-adapters-connected-to-a-high-speed-switch",
	"match_type": "description"
},
{
	"name": "Techniques for processing data from a multilingual database",
	"summary": "",
	"abstract": "A method, system and article of manufacture for providing natural language support for users running queries against a multilingual database. One embodiment comprises identifying one or more physical values defined by physical data in the multilingual database for a query result associated with an executed query. At least one translation function configured to transform at least a portion of the identified physical values defined in one or more different natural languages into alternative values defined in a selected language is executed. From each executed translation function, a data structure mapping at least a portion of the identified physical values to translated values defined in the selected language is identified and the translated values defining the alternative values defined in the selected language are retrieved from each identified data structure. The query result associated with the executed query including the alternative values defined in the selected language is output.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07680780",
	"publication_date": "2010-03-16",
	"application_number": "11697377",
	"application_date": "2007-04-06",
	"tags": null,
	"slug": "techniques-for-processing-data-from-a-multilingual-database",
	"match_type": "description"
},
{
	"name": "Timeout request scheduling using grouping and nonsynchronized processing to enhance performance",
	"summary": "",
	"abstract": "An invention is disclosed for a computer software timeout algorithm that reduces the amount of list manipulation needed to satisfy system or network requirements for scheduling and cancelling timeout requests to determine whether the expiration time has been reached for execution of an input/output (I/O) request, thereby requiring action to cancel the I/O operation if it has not yet been completed.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07707464",
	"publication_date": "2010-04-27",
	"application_number": "12353743",
	"application_date": "2009-01-14",
	"tags": null,
	"slug": "timeout-request-scheduling-using-grouping-and-nonsynchronized-processing-to-enhance-performance",
	"match_type": "description"
},
{
	"name": "Tunneling IPv6 packets",
	"summary": "",
	"abstract": "Methods, systems, and products are provided for tunneling IPv6 packets. Embodiments include receiving, by an origin IPv6 border router from an origin IPv6 host, an IPv6 packet having an IPv6 destination address; receiving, by an origin IPv6 border router from an origin IPv6 host, an IPv4 address for a destination IPv6 border router retrieved from a data structure associating IPv6 destination addresses with IPv4 addresses for destination IPv6 border routers; encapsulating, by the origin IPv6 border router, the IPv6 packet in an IPv4 packet; and sending the encapsulated packet to a destination IPv6 border router at the IPv4 address. In many embodiments, encapsulating, by the origin IPv6 border router, the IPv6 packet in an IPv4 packet is carried out by adding an IPv4 header to the IPv6 packet.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07769878",
	"publication_date": "2010-08-03",
	"application_number": "12183779",
	"application_date": "2008-07-31",
	"tags": null,
	"slug": "tunneling-ipv6-packets",
	"match_type": "description"
},
{
	"name": "Ultrascalable petaflop parallel supercomputer",
	"summary": "",
	"abstract": "A massively parallel supercomputer of petaOPS-scale includes node architectures based upon System-On-a-Chip technology, where each processing node comprises a single Application Specific Integrated Circuit (ASIC) having up to four processing elements. The ASIC nodes are interconnected by multiple independent networks that optimally maximize the throughput of packet communications between nodes with minimal latency. The multiple networks may include three high-speed networks for parallel algorithm message passing including a Torus, collective network, and a Global Asynchronous network that provides global barrier and notification functions. These multiple independent networks may be collaboratively or independently utilized according to the needs or phases of an algorithm for optimizing algorithm processing performance. The use of a DMA engine is provided to facilitate message passing among the nodes without the expenditure of processing resources at the node.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07761687",
	"publication_date": "2010-07-20",
	"application_number": "11768905",
	"application_date": "2007-06-26",
	"tags": null,
	"slug": "ultrascalable-petaflop-parallel-supercomputer",
	"match_type": "description"
},
{
	"name": "Use of hardware to manage dependencies between groups of network data packets",
	"summary": "",
	"abstract": "A task obtained by a communications processor is decomposed into one or more requests that form a request group. The requests of the request group are sent to main memory and responses to those requests are expected. There may be requests for a plurality of request groups being processed concurrently. However, responses to the request groups are to be returned to the communications processor in the order in which the request groups were sent from the communications processor. To ensure this ordering, dependencies between the request groups are tracked by hardware coupled to the communications processor.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07724757",
	"publication_date": "2010-05-25",
	"application_number": "12142128",
	"application_date": "2008-06-19",
	"tags": null,
	"slug": "use-of-hardware-to-manage-dependencies-between-groups-of-network-data-packets",
	"match_type": "description"
},
{
	"name": "Use of virtual targets for preparing and servicing requests for server-free data transfer operations",
	"summary": "",
	"abstract": "A system, a storage manager server and a computer program product for utilizing virtual targets and abstract copy orders in preparing and servicing requests for server-free data transfer operations in a data storage network. The abstract copy orders represent data transfers between virtual targets and real devices. They allow source target copy orders to be prepared separately from destination target copy orders. The abstract copy orders may then be converted into concrete copy orders involving only real device targets for execution by a data mover that implements the server-free data transfer operations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07660866",
	"publication_date": "2010-02-09",
	"application_number": "12182173",
	"application_date": "2008-07-30",
	"tags": null,
	"slug": "use-of-virtual-targets-for-preparing-and-servicing-requests-for-serverfree-data-transfer-operations",
	"match_type": "description"
},
{
	"name": "Using a directory service for a user registry",
	"summary": "",
	"abstract": "An apparatus and method provide an architected way for a web server to access a user registry in a directory service such as LDAP. In the preferred embodiments, the logic for presenting and processing a web page is encapsulated from the logic that interacts with the directory service, making it easy for a programmer to make changes to the a user registration form without having to have a detailed knowledge of the directory service and its interfaces.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07653750",
	"publication_date": "2010-01-26",
	"application_number": "11751703",
	"application_date": "2007-05-22",
	"tags": null,
	"slug": "using-a-directory-service-for-a-user-registry",
	"match_type": "description"
},
{
	"name": "Verifying resource functionality before use by a grid job submitted to a grid environment",
	"summary": "",
	"abstract": "A method, system, and program for verifying resource functionality before use by a grid job submitted to a grid environment are provided. When a new resource is allocated to a particular execution environment within a grid environment managed by a grid management system, then a grid verification service automatically selects and runs at least one functionality test on the new resource as controlled by the grid management system. Responsive to a result of the functionality test, the grid verification system verifies whether the result meets an expected result before enabling routing of the grid job to the new resource, such that the functionality of the new resource is automatically verified before access to the new resource is allowed to maintain quality of service in processing grid jobs.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07743142",
	"publication_date": "2010-06-22",
	"application_number": "12359216",
	"application_date": "2009-01-23",
	"tags": null,
	"slug": "verifying-resource-functionality-before-use-by-a-grid-job-submitted-to-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Virtual foldering system for blending process and content in a collaborative environment",
	"summary": "",
	"abstract": "A computer system that includes a processor and a storage medium. The storage medium stores a database of tables and a calculation engine. Each table includes columns and rows. The tables describe components of a hierarchy in which hierarchical relationships between components of the hierarchy are defined. The tables include a component table and component-specific tables. The components of the hierarchy encompass component types. Each component-specific table encompasses only components of the hierarchy. The calculation engine includes a popup calculator being displayed to a user via a display interface of the computer system upon the calculation engine being executed by the processor. The popup calculator performs, under interactive control by the user via the display interface, an evaluation of a specified function of set of functions and displays a result of the evaluation to the user via the display interface.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07853610",
	"publication_date": "2010-12-14",
	"application_number": "11969437",
	"application_date": "2008-01-04",
	"tags": null,
	"slug": "virtual-foldering-system-for-blending-process-and-content-in-a-collaborative-environment",
	"match_type": "description"
},
{
	"name": "Virtual multidimensional datasets for enterprise software systems",
	"summary": "",
	"abstract": "Techniques are described for specifying virtual datasets within an enterprise software system. A computer-implemented system, for example, includes an enterprise planning system and a computing device coupled to the enterprise planning system via a network connection. The computing device includes an object store that stores a dataset, an application programming interface (API) that defines an operation for specifying the virtual dataset from the dataset, and an object model that stores a virtual dataset to the object store in response to receiving the operation defined by the API. The computing device further includes a plurality of applications that utilize the virtual dataset for a further operation defined by the API without resolving the virtual dataset. Because virtual dataset may be utilized without first resolving them, the virtual datasets may require less storage space within a memory, may automatically remain synchronous with the underlying dataset, and may quickly layer to more readily perform complicated operations.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07747562",
	"publication_date": "2010-06-29",
	"application_number": "11564011",
	"application_date": "2006-11-28",
	"tags": null,
	"slug": "virtual-multidimensional-datasets-for-enterprise-software-systems",
	"match_type": "abstract"
},
{
	"name": "Voice processing system",
	"summary": "",
	"abstract": "A voice processing complex has a plurality of host machines, each host machine supporting one or more voice applications, at least one host in the complex including telephony hardware for providing access to a plurality of telephone lines. Such a host provides telephony functions to the complex. This is achieved by maintaining a mapping of voice applications to telephone lines, and creating a call object in response to an incoming call on one of the lines. It is then determined which voice application to associate with the incoming call on the basis of this mapping, and an identifier to the call object is then passed to the determined voice application. Thereafter the call object is responsive to requests from this voice application for providing telephony functions for the call. This includes receiving a media object from the voice processing application which represents desired output over a telephone line. This media object is then processed into a plurality of output components in accordance with one or more presentation criteria, and these components are then output over the telephone line.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07660399",
	"publication_date": "2010-02-09",
	"application_number": "10818837",
	"application_date": "2004-04-06",
	"tags": null,
	"slug": "voice-processing-system",
	"match_type": "description"
},
{
	"name": "Workload categorization for detecting role changes in a host computing device",
	"summary": "",
	"abstract": "A method, system and apparatus for workload categorization for detecting role changes in a host computing device. A workload characterization system for detecting role changes in a host computing device can include a transaction logging and change detection processor. The processor can be configured to log and detect role changes in the host computing device through an instrumentation monitoring interface to underlying applications supporting a workload based upon a comparison of workload patterns generated from logged transaction executions.",
	"url": null,
	"owner": "International Business Machines Corporation",
	"publication_number": "07681198",
	"publication_date": "2010-03-16",
	"application_number": "10946256",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": "workload-categorization-for-detecting-role-changes-in-a-host-computing-device",
	"match_type": "description"
},
{
	"name": "Layered multicast and fair bandwidth allocation and packet prioritization",
	"summary": "",
	"abstract": "Embodiments include an overlay multicast network. The overlay multicast network may provide a set of features to ensure reliable and timely arrival of multicast data. The embodiments include a congestion control system that may prioritize designated layers of data within a data stream over other layers of the same data stream. Each data stream transmitted over the network may be given an equal share of the bandwidth. Addressing in routing tables maintained by routers may utilize summarized addressing based on the difference in location of the router and destination address. Summarization levels may be adjusted to minimize travel distances for packets in the network. Data from high priority data stream layers may also be retransmitted upon request from a destination machine to ensure reliable delivery of data.",
	"url": null,
	"owner": "Internet Broadcasting Corp.",
	"publication_number": "07733868",
	"publication_date": "2010-06-08",
	"application_number": "11342167",
	"application_date": "2006-01-26",
	"tags": null,
	"slug": "layered-multicast-and-fair-bandwidth-allocation-and-packet-prioritization",
	"match_type": "description"
},
{
	"name": "Tracking, auto-calibration, and map-building system",
	"summary": "",
	"abstract": "A navigation or motion tracking system includes components associated with particular sensors, which are decoupled from a tracking component that takes advantage of information in the sensor measurements. The architecture of this system enables development of sensor-specific components independently of the tracking component, and enables sensors and their associated components to be added or removed without having to re-implement the tracking component. In a software implementation of the system, sensor-specific software components may be dynamically incorporated into the system and the tracking component is then automatically configured to take advantage of measurements from the corresponding sensors without having to modify the tracking component.",
	"url": null,
	"owner": "InterSense, Inc.",
	"publication_number": "07725253",
	"publication_date": "2010-05-25",
	"application_number": "11147688",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "tracking-autocalibration-and-mapbuilding-system",
	"match_type": "description"
},
{
	"name": "Data protection systems and methods",
	"summary": "",
	"abstract": "Systems and methods are provided for protecting electronic content from the time it is packaged through the time it is experienced by an end user. Protection against content misuse is accomplished using a combination of encryption, watermark screening, detection of invalid content processing software and hardware, and/or detection of invalid content flows. Encryption protects the secrecy of content while it is being transferred or stored. Watermark screening protects against the unauthorized use of content. Watermark screening is provided by invoking a filter module to examine content for the presence of a watermark before the content is delivered to output hardware or software. The filter module is operable to prevent delivery of the content to the output hardware or software if it detects a predefined protection mark. Invalid content processing software is detected by a monitoring mechanism that validates the software involved in processing protected electronic content. Invalid content flows can be detected by scanning the information passed across system interfaces for the attempted transfer of bit patterns that were released from an application and/or a piece of content management software.",
	"url": null,
	"owner": "Intertrust Technologies Corp.",
	"publication_number": "07770031",
	"publication_date": "2010-08-03",
	"application_number": "12142688",
	"application_date": "2008-06-19",
	"tags": null,
	"slug": "data-protection-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Systems and methods for secure transaction management and electronic rights protection",
	"summary": "",
	"abstract": "The present invention provides systems and methods for secure transaction management and electronic rights protection. Electronic appliances such as computers equipped in accordance with the present invention help to ensure that information is accessed and used only in authorized ways, and maintain the integrity, availability, and/or confidentiality of the information. Such electronic appliances provide a distributed virtual distribution environment (VDE) that may enforce a secure chain of handling and control, for example, to control and/or meter or otherwise monitor use of electronically stored or disseminated information. Such a virtual distribution environment may be used to protect rights of various participants in electronic commerce and other electronic or electronic-facilitated transactions. Distributed and other operating systems, environments and architectures, such as, for example, those using tamper-resistant hardware-based processors, may establish security at each node. These techniques may be used to support an all-electronic information distribution, for example, utilizing the u201celectronic highway.u201d",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07844835",
	"publication_date": "2010-11-30",
	"application_number": "11231355",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": "systems-and-methods-for-secure-transaction-management-and-electronic-rights-protection",
	"match_type": "description"
},
{
	"name": "Trusted storage systems and methods",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing a trusted database system that leverages a small amount of trusted storage to secure a larger amount of untrusted storage. Data are encrypted and validated to prevent unauthorized modification or access. Encryption and hashing are integrated with a low-level data model in which data and meta-data are secured uniformly. Synergies between data validation and log-structured storage are exploited.",
	"url": null,
	"owner": "Intertrust Technologies Corporation",
	"publication_number": "07681240",
	"publication_date": "2010-03-16",
	"application_number": "11338187",
	"application_date": "2006-01-23",
	"tags": null,
	"slug": "trusted-storage-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Trusted storage systems and methods",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing a trusted database system that leverages a small amount of trusted storage to secure a larger amount of untrusted storage. Data are encrypted and validated to prevent unauthorized modification or access. Encryption and hashing are integrated with a low-level data model in which data and meta-data are secured uniformly. Synergies between data validation and log-structured storage are exploited.",
	"url": null,
	"owner": "Intertust Technologies Corp.",
	"publication_number": "07752455",
	"publication_date": "2010-07-06",
	"application_number": "11340326",
	"application_date": "2006-01-25",
	"tags": null,
	"slug": "trusted-storage-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Software bridge for multi-point multi-media teleconferencing and telecollaboration",
	"summary": "",
	"abstract": "A multimedia bridge which enables enterprise-class voice, Web, and video teleconferencing. The multimedia bridge is a distributed media server architecture that efficiently routes, bridges, manages integrated voice, data and video streams across multiple sites in real-time. The multimedia bridge includes media services, session control, content distribution and any-device access layer.",
	"url": null,
	"owner": "Interwise Ltd.",
	"publication_number": "07764632",
	"publication_date": "2010-07-27",
	"application_number": "11509253",
	"application_date": "2006-08-24",
	"tags": null,
	"slug": "software-bridge-for-multipoint-multimedia-teleconferencing-and-telecollaboration",
	"match_type": "description"
},
{
	"name": "Bill payment optimization using a genetic algorithm",
	"summary": "",
	"abstract": "A genetic algorithm determines a plan for payment of payment obligations in accounts payable of a finance account. The genetic algorithm operates to satisfy certain objectives, including maximizing or minimizing the total amount of payments of the payment obligations on a given day within the amount of cash available for the given day. A genome population including a number of vectors is generated. The genome population is modified using a genetic algorithm, until at least one vector represents an optimal bill payment plan for the payment obligations such that payment of each payment obligation in accordance with the vector most nearly satisfies one or more objectives.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07756787",
	"publication_date": "2010-07-13",
	"application_number": "10916668",
	"application_date": "2004-08-11",
	"tags": null,
	"slug": "bill-payment-optimization-using-a-genetic-algorithm",
	"match_type": "description"
},
{
	"name": "Cash generation from portfolio disposition using multi objective genetic algorithms",
	"summary": "",
	"abstract": "A plan for disposing of assets in a given asset portfolio is determined using a genetic algorithm, which operates to satisfy certain objectives, including the generation of a cash amount. A genome population including a number of vectors is generated. The genome population is modified using a genetic algorithm, until at least one vector represents a change in the percentage of each asset such that the disposition of each asset in accordance with the vector most nearly satisfies one or more objectives.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07680747",
	"publication_date": "2010-03-16",
	"application_number": "10099043",
	"application_date": "2002-03-14",
	"tags": null,
	"slug": "cash-generation-from-portfolio-disposition-using-multi-objective-genetic-algorithms",
	"match_type": "description"
},
{
	"name": "Method and system for generating an employment metric",
	"summary": "",
	"abstract": "A method for generating an employment metric involves obtaining employer payroll data from multiple business applications and obtaining personal income data from multiple financial management applications, where personal income data indicate at least one income source absent from employer payroll data. The method further involves aggregating employer payroll data and personal income data to obtain aggregated employment data, and generating the employment metric using aggregated employment data.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07809622",
	"publication_date": "2010-10-05",
	"application_number": "12060060",
	"application_date": "2008-03-31",
	"tags": null,
	"slug": "method-and-system-for-generating-an-employment-metric",
	"match_type": "description"
},
{
	"name": "Operations manager infrastructure for dynamically updating software operational policy",
	"summary": "",
	"abstract": "An Operations Manager subsystem decouples the generation of operational events from an associated behavior triggered by those events. The Operations Manager subsystem allows changing the associated behavior without requiring rebuilds or recompilations of the source code. In addition, changes to policies are possible even at runtime in order to enable more agile debugging and better application supportability. The Operations Manger subsystem includes separate reporting and subscription services. The reporting services provide an API defining operational code for the generation of operational events. The subscription services include a file system and an API that support multiple user subscriptions to the various code operational events defining the behavior associated with those events.",
	"url": null,
	"owner": "Intuit Inc.",
	"publication_number": "07765525",
	"publication_date": "2010-07-27",
	"application_number": "10932987",
	"application_date": "2004-09-01",
	"tags": null,
	"slug": "operations-manager-infrastructure-for-dynamically-updating-software-operational-policy",
	"match_type": "description"
},
{
	"name": "Digital data processing apparatus and methods for improving plant performance",
	"summary": "",
	"abstract": "The invention provides, in one aspect, human machine interface (HMI) methods and apparatus that permit users to search and/or view plant and other real-time process automation data in a manner similar to that with which they search and/or view pages on the Internet (web). Related aspects of the invention provide such methods and apparatus as permit users to search and/or view such real-time process automation data concurrently with such Internet web pages. Further related aspects of the invention provide such methods and apparatus as permit users to search and/or view such real-time process automation data concurrently with business data maintained in pages on an enterprise network (e.g., a LAN, WAN or otherwise).",
	"url": null,
	"owner": "Invensys Systems, Inc.",
	"publication_number": "07860857",
	"publication_date": "2010-12-28",
	"application_number": "11731629",
	"application_date": "2007-03-30",
	"tags": null,
	"slug": "digital-data-processing-apparatus-and-methods-for-improving-plant-performance",
	"match_type": "description"
},
{
	"name": "Obtaining user assistance",
	"summary": "",
	"abstract": "An apparatus, device, method, computer program product, and system that detects a first electronic device in a proximity to a second electronic device; and obtains an end user assistance corresponding to an at least substantially common aspect of the first electronic device and the second electronic device.",
	"url": null,
	"owner": "Invention Science Fund 1, LLC",
	"publication_number": "07798401",
	"publication_date": "2010-09-21",
	"application_number": "11037827",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": "obtaining-user-assistance",
	"match_type": "description"
},
{
	"name": "Method and system to secure a connection application for distribution to multiple end-users",
	"summary": "",
	"abstract": "A method and system is provided to secure a connection application in a multi-party access environment including a plurality of service providers. The method includes generating a customized connection application, and cryptographically signing the customized connection application, the customized connection application being for installation on a client machine. In certain embodiments, the customized connection application is in the form of a self-extracting executable to automatically install the connection application on the client machine. The customized connection application may be signed using Authenticode technology.",
	"url": null,
	"owner": "iPass Inc.",
	"publication_number": "07761606",
	"publication_date": "2010-07-20",
	"application_number": "10365856",
	"application_date": "2003-02-12",
	"tags": null,
	"slug": "method-and-system-to-secure-a-connection-application-for-distribution-to-multiple-endusers",
	"match_type": "description"
},
{
	"name": "Method and system for managing computer systems",
	"summary": "",
	"abstract": "A management system for a computer system is disclosed. The computer system operates or includes various products (e.g., software products) that can be managed in a management system or collectively by a group of management systems. Typically, the management system operates on a computer separate from the computer system being managed. The management system can make use of a knowledge base of causing symptoms for previously observed problems at other sites or computer systems. In other words, the knowledge base can built from and shared by different users across different products to leverage knowledge that is otherwise disparate. The knowledge base typically grows over time. The management system can use its ability to request information from the computer system being managed together with the knowledge base to infer a problem root cause in the computer system being managed. The computer system being managed can also request the management system to process its knowledge base for possible problem cause analysis. The management system can also continually identify persisting problem causing symptoms.",
	"url": null,
	"owner": "IPVenture, Inc.",
	"publication_number": "07707133",
	"publication_date": "2010-04-27",
	"application_number": "11585660",
	"application_date": "2006-10-23",
	"tags": null,
	"slug": "method-and-system-for-managing-computer-systems",
	"match_type": "description"
},
{
	"name": "Method and system of externalising / internalising a data record that allow processing of part or all of the record",
	"summary": "",
	"abstract": "A method of external data storage in a system including a primary processing device, having a processor and a primary data storage unit, adapted to run application programs for processing active records in the processor and configured to store data belonging to active records in the primary data storage unit; and a secondary data storage system, accessible to the primary processing device, includes loading data belonging to an active record into the primary data storage unit and externalising the record by transferring at least a piece of data belonging to the record to the secondary data storage system for storage. The step of externalising a record includes the making of a call by an application program using data belonging to the record to an interface, arranged to transfer the piece of data to the secondary data storage system.",
	"url": null,
	"owner": "Irdeto Access B.V.",
	"publication_number": "07814269",
	"publication_date": "2010-10-12",
	"application_number": "12333097",
	"application_date": "2008-12-11",
	"tags": null,
	"slug": "method-and-system-of-externalising--internalising-a-data-record-that-allow-processing-of-part-or-all-of-the-record",
	"match_type": "description"
},
{
	"name": "System and process for gathering, recording and validating requirements for computer applications",
	"summary": "",
	"abstract": "The system includes a novel software application interactive representation modeling language, a software application () operative to use the modeling language to create, read and modify interactive representation models of the proposed applications, a memory () to store requirement data and interactive representation model data, a software application () operative to read and update the interactive representation model data across a computer network, a software application () operative to maintain a record of the requirements and to administer operation of the system, a software application () operative to render interactive representations of the proposed applications in browser readable format, a software application () operative to allow multiple instances of other applications to access interactive representation data and requirement data residing in the memory and a software application () operative to allow an individual user's interactions with the system to be broadcast across a networked system to other users.",
	"url": null,
	"owner": "IRISE",
	"publication_number": "07861158",
	"publication_date": "2010-12-28",
	"application_number": "10484541",
	"application_date": "2002-07-26",
	"tags": null,
	"slug": "system-and-process-for-gathering-recording-and-validating-requirements-for-computer-applications",
	"match_type": "description"
},
{
	"name": "Systems and methods for collaborative programming of simulations of computer programs",
	"summary": "",
	"abstract": "The system includes a novel software application interactive representation modeling language, a software application () operative to use the modeling language to create, read and modify interactive representation models of the proposed applications, a memory () to store requirement data and interactive representation model data, a software application () operative to read and update the interactive representation model data across a computer network, a software application () operative to maintain a record of the requirements and to administer operation of the system, a software application () operative to render interactive representations of the proposed applications in browser readable format, a software application () operative to allow multiple instances of other applications to access interactive representation data and requirement data residing in the memory and a software application () operative to allow an individual user's interactions with the system to be broadcast across a networked system to other users.",
	"url": null,
	"owner": "iRise",
	"publication_number": "07788647",
	"publication_date": "2010-08-31",
	"application_number": "10763012",
	"application_date": "2004-01-22",
	"tags": null,
	"slug": "systems-and-methods-for-collaborative-programming-of-simulations-of-computer-programs",
	"match_type": "description"
},
{
	"name": "Systems and methods for backing up data files",
	"summary": "",
	"abstract": "The invention provides systems and methods for continuous back up of data stored on a computer network. To this end the systems of the invention include a synchronization process that replicates selected source data files data stored on the network and to create a corresponding set of replicated data files, called the target data files, that are stored on a back up server. This synchronization process builds a baseline data structure of target data files. In parallel to this synchronization process, the system includes a dynamic replication process that includes a plurality of agents, each of which monitors a portion of the source data files to detect and capture, at the byte-level, changes to the source data files. Each agent may record the changes to a respective journal file, and as the dynamic replication process detects that the journal files contain data, the journal files are transferred or copied to the back up server so that the captured changes can be written to the appropriate ones of the target data files.",
	"url": null,
	"owner": "Iron Mountain Incorporated",
	"publication_number": "07644113",
	"publication_date": "2010-01-05",
	"application_number": "11743875",
	"application_date": "2007-05-03",
	"tags": null,
	"slug": "systems-and-methods-for-backing-up-data-files",
	"match_type": "description"
},
{
	"name": "Apparatus for filtering server responses",
	"summary": "",
	"abstract": "A data processing apparatus can perform HTTP traffic monitoring and filtering of HTTP requests from clients and responses from servers. Example apparatus comprises a processor; a first network interface to a protected network; a second network interface to an external network; a core hypertext transfer protocol (HTTP) proxy coupled to the processor and coupled to a content cache, wherein the HTTP proxy is configured to receive an HTTP request from a client computer in the protected network, send the request to a network resource in the external network on behalf of the client, and receive an HTTP response from the network resource on behalf of the client computer; and a plurality of spyware scanning engines (SSEs), wherein each of the SSEs is coupled to stored content signatures, and wherein each of the SSEs is configured to detect a particular kind of malicious software in an HTTP response.",
	"url": null,
	"owner": "Ironport Systems, Inc.",
	"publication_number": "07849507",
	"publication_date": "2010-12-07",
	"application_number": "11742080",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": "apparatus-for-filtering-server-responses",
	"match_type": "description"
},
{
	"name": "Apparatus for monitoring network traffic",
	"summary": "",
	"abstract": "A data processing apparatus can perform HTTP traffic monitoring and filtering of HTTP requests from clients and responses from servers. Example apparatus comprises a processor, a first network interface to a protected network, a second network interface to an external network, and a traffic monitor having an address-domain name database, a firewall rules manager, and a DNS snooper. The traffic monitor accesses a blacklist and can perform receiving, from a client computer, a request to access a resource in the external network; blocking the request to the resource when a user agent of the client is in the blacklist as malicious software or when a file extension in a response to the request is in the blacklist; requesting, from a web reputation service, and receiving a reputation score indicating a reputation of the resource; blocking sending the request to the resource when the reputation is below a specified threshold.",
	"url": null,
	"owner": "Ironport Systems, Inc.",
	"publication_number": "07849502",
	"publication_date": "2010-12-07",
	"application_number": "11742015",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": "apparatus-for-monitoring-network-traffic",
	"match_type": "description"
},
{
	"name": "Controlling a message quarantine",
	"summary": "",
	"abstract": "Controlling a message quarantine is disclosed. A message scanning method is described in which early exit from parsing and scanning can occur by matching threat rules only to selected message elements and stopping rule matching as soon as a match on one message element exceeds a threat threshold.",
	"url": null,
	"owner": "IronPort Systems, Inc.",
	"publication_number": "07712136",
	"publication_date": "2010-05-04",
	"application_number": "11636150",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": "controlling-a-message-quarantine",
	"match_type": "description"
},
{
	"name": "Identifying threats in electronic messages",
	"summary": "",
	"abstract": "Early detection of computer viruses and other message-borne threats is provided by applying heuristic tests to message content and examining sender reputation information when no virus signature information is available. As a result, a messaging gateway can suspend delivery of messages early in a virus outbreak, providing sufficient time for updating an anti-virus checker that can strip virus code from the messages. A dynamic and flexible threat quarantine queue is provided with a variety of exit criteria and exit actions that permits early release of messages in other than first in, first-out order. A message scanning method is described in which early exit from parsing and scanning can occur by matching threat rules only to selected message elements and stopping rule matching as soon as a match on one message element exceeds a threat threshold.",
	"url": null,
	"owner": "Ironport Systems, Inc.",
	"publication_number": "07854007",
	"publication_date": "2010-12-14",
	"application_number": "11418812",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": "identifying-threats-in-electronic-messages",
	"match_type": "description"
},
{
	"name": "Apparatus, systems and methods for online, multi-parcel, multi-carrier, multi-service parcel returns shipping management",
	"summary": "",
	"abstract": "The present invention provides a computer system (the u201cSystemu201d, or the u201cReturn Systemu201d) that is configured and programmed to provide online stores with a fast, simple, convenient way for eCommerce customers of an online store to return merchandise purchased from that store from within that online store. The Return System provides multi-carrier shipment rating, shipment labeling, shipment tracking, shipment tracking management reports, returns analysis and returns management reporting In an exemplary embodiment, the Return System has three major components: 1.) A Returns Manager Subsystem that provides a user interface to each Merchant to setup the Merchant's account, setup the Merchant's return policy and rules, and to monitor the status and movement of return shipments; 2.) A Consumer Returns Subsystem (also sometimes referred to as a u201cCustomer Returns Subsystemu201d) that provides each consumer using the Returns System with an online user interface that leads the consumer through the returns process, displays the return policies and rules to the consumer, provides shipping document to ship the return package if appropriate, and permits the consumer to track their return shipments; and 3.) a Returns Processing Subsystem that, in the exemplary embodiment, provides background shipping and tracking functionality. In one exemplary embodiment of the present invention, the Online Merchant integrates the Merchant's online system with the Returns Processing Subsystem. In another exemplary embodiment, the Returns Processing Subsystem is provided as an independent web-based application service (referred to as a u201cReturn Merchant Service Systemu201d) operated by a common provider. In such an embodiment, the Merchant's system interacts with the Return Merchant Service System through Application Program Interfaces (u201cAPIu201d).",
	"url": null,
	"owner": "iShip Inc.",
	"publication_number": "07660721",
	"publication_date": "2010-02-09",
	"application_number": "09820292",
	"application_date": "2001-03-27",
	"tags": null,
	"slug": "apparatus-systems-and-methods-for-online-multiparcel-multicarrier-multiservice-parcel-returns-shipping-management",
	"match_type": "description"
},
{
	"name": "Network modeling system and method of simulating network operation with configurable node models",
	"summary": "",
	"abstract": "A node model of the present invention is employed by a network modeling and simulation system and includes a communication protocol stack with a plurality of protocol layers. Each protocol layer includes communication functions. The protocol layer functions are each represented by one or more distinct software implementations that are optimized for different simulation purposes. A configurable module switch is disposed between protocol layers within the stack to selectively control information flow between functions within adjacent protocol layers. The node model enables a user to perform network simulation or analysis of varying detail or granularity.",
	"url": null,
	"owner": "ITT Manufacturing Enterprises, Inc.",
	"publication_number": "07765093",
	"publication_date": "2010-07-27",
	"application_number": "11228227",
	"application_date": "2005-09-19",
	"tags": null,
	"slug": "network-modeling-system-and-method-of-simulating-network-operation-with-configurable-node-models",
	"match_type": "description"
},
{
	"name": "Application-generic sequence diagram generator driven by a non-proprietary language",
	"summary": "",
	"abstract": "An application-generic sequence diagram generator is driven by a non-proprietary language. According to one embodiment, a source file describes, in a non-proprietary language, a flow (e.g., a message exchange) of an application. An automatic sequence diagram generator is operable to receive as input the source file, and generate, based on such source file, a sequence diagram representing the flow described by the source file. In an exemplary embodiment, the non-proprietary language is a markup language, such as Extensible Markup Language (XML). The sequence diagram generator is general purpose (or u201capplication-genericu201d), as it can generate a sequence diagram representing the flow of any application described in the source file. The application for which the source file describes the flow may be any type of application, including without limitation a computer-executable software application, a communication protocol, or any message exchange between actors.",
	"url": null,
	"owner": "Ixia",
	"publication_number": "07849439",
	"publication_date": "2010-12-07",
	"application_number": "11038597",
	"application_date": "2005-01-19",
	"tags": null,
	"slug": "applicationgeneric-sequence-diagram-generator-driven-by-a-nonproprietary-language",
	"match_type": "description"
},
{
	"name": "System and method for network traffic and I/O transaction monitoring of a high speed communications network",
	"summary": "",
	"abstract": "A network monitoring architecture and methodology enabling performance detection and diagnostics in storage area networks or other networks. The network monitoring is performed using a three-tiered distributed computing system architecture, including a data source tier, a portal tier and a client tier. The data source tier monitors the physical data on the network medium using multiple data collection sources, or data probes, connected to the network. The probes analyze network data and generate metrics that describe attributes of the network data. The metrics are synchronized in time by virtue of time stamps associated with the data monitored by the data probes. The time-synchronized metrics are used by the data portal tier, which is the second tier of the system. The portal tier encapsulates the metrics into data containers. The data containers may be requested by the client tier, which is the third tier in the network monitoring system. The client tier provides a user interface for displaying various types of network information derived from the contents of data containers.",
	"url": null,
	"owner": "JDS Uniphase Corporation",
	"publication_number": "07860965",
	"publication_date": "2010-12-28",
	"application_number": "10424363",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": "system-and-method-for-network-traffic-and-io-transaction-monitoring-of-a-high-speed-communications-network",
	"match_type": "description"
},
{
	"name": "Method and system for selecting content items to be presented to a viewer",
	"summary": "",
	"abstract": "A rules evaluation engine operable to select optimal content for presentation to the viewer at each presentation opportunity. The engine evaluates segmentation rules associated with each particular content item in parallel, and then selects the best content to be presented. Priorities determined during evaluation sort out which content items will be presented. Real time dynamic enrichment of the decision making context occurs by retrieving additional information required to evaluate the rules. Logging and administrative processes for managing the segmentation rules are also realized.",
	"url": null,
	"owner": "Jericho Systems Corporation",
	"publication_number": "07792828",
	"publication_date": "2010-09-07",
	"application_number": "10852406",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": "method-and-system-for-selecting-content-items-to-be-presented-to-a-viewer",
	"match_type": "description"
},
{
	"name": "Method and system for processing internet payments using the electronic funds transfer network",
	"summary": "",
	"abstract": "Embodiments of the invention include a method and system for effectuating an electronic payment between a payor and a payee using an Electronic Funds Transfer (EFT) network. The method is implemented by a system having multiple processors. The payor may hold a payor account at a payor institution and the payee may have a payee account at a payee institution. The method includes generating a payment authorization identifying the payee institution, the payee account, and an amount of the payment and transmitting the payment authorization to the payor institution. The method further includes debiting the payor account by the amount of the payment; transmitting from the payor institution to the payee institution though the EFT network an EFT credit message representing a credit in the amount of the payment; and crediting the payee account in the amount of the payment in response to the receipt of the EFT credit message.",
	"url": null,
	"owner": "JPMorgan Chase Bank, NA",
	"publication_number": "07676431",
	"publication_date": "2010-03-09",
	"application_number": "10356171",
	"application_date": "2003-01-31",
	"tags": null,
	"slug": "method-and-system-for-processing-internet-payments-using-the-electronic-funds-transfer-network",
	"match_type": "description"
},
{
	"name": "Managing sponsored content based on usage history",
	"summary": "",
	"abstract": "Improved search capabilities are disclosed for mobile communications devices such as cell phones, as well as improved techniques for delivering sponsored content in a mobile communication environment.",
	"url": null,
	"owner": "Jumptap, Inc.",
	"publication_number": "07660581",
	"publication_date": "2010-02-09",
	"application_number": "11282120",
	"application_date": "2005-11-16",
	"tags": null,
	"slug": "managing-sponsored-content-based-on-usage-history",
	"match_type": "description"
},
{
	"name": "Diagnosis of network fault conditions",
	"summary": "",
	"abstract": "In general, the invention facilitates diagnosing fault conditions, such as flapping, by permitting users to request information for specific components in a network device such as a router. The invention also facilitates the diagnosis of other fault conditions, including, but not limited to, excessive numbers of dropped packets, hard drive crashes, high temperature readings, and inactive interface cards. A user may obtain a targeted log containing information relating to selected fault conditions or other network device events, rather than a system log containing information relating to all network device events, some of which may not be of interest to the user. The targeted log may be parsed and analyzed with greater ease than the system log.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07761746",
	"publication_date": "2010-07-20",
	"application_number": "11934468",
	"application_date": "2007-11-02",
	"tags": null,
	"slug": "diagnosis-of-network-fault-conditions",
	"match_type": "description"
},
{
	"name": "Distribution of network communications based on server power consumption",
	"summary": "",
	"abstract": "A network device is described that load-balances network traffic among a set of network servers based on electrical power consumption of the network servers. The network device may measure electrical power consumption in a variety of ways, and may generate and maintain a power consumption profile for each of the network server. The power consumption profile may describe the respective server power consumption in increasing granularity. For instance, each power consumption profile may specify electrical power consumption according to watts consumed by a server per average transaction, watts consumed per transaction for a specific type of software application, watts consumed per transaction for a software application for individual network resources, and so on. Furthermore, the profiles may be maintained for individual servers or aggregated for groups or sequences of servers.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07844839",
	"publication_date": "2010-11-30",
	"application_number": "11625629",
	"application_date": "2007-01-22",
	"tags": null,
	"slug": "distribution-of-network-communications-based-on-server-power-consumption",
	"match_type": "description"
},
{
	"name": "Network acceleration device cache supporting multiple historical versions of content",
	"summary": "",
	"abstract": "A network acceleration device simultaneously caches and intelligently serves different historical versions of stored network content. For example, the network acceleration device may receive one or more requests for original content; however, subsequent updates to the content may create varying versions of the content, e.g., a pre-update version and one or more post-update versions. Client devices that requested the content prior to the update receive the pre-update version from the network acceleration device. Client devices that requested content after the update receive the post-update version from the network device. Moreover, the network acceleration device facilitates the simultaneous delivery of the pre-update version and the post-update version without waiting for delivery of the pre-update version to be complete. Thus, the network acceleration device may facilitate decreased download times by seamlessly and transparently providing both versions of the content simultaneously.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07644108",
	"publication_date": "2010-01-05",
	"application_number": "11227451",
	"application_date": "2005-09-15",
	"tags": null,
	"slug": "network-acceleration-device-cache-supporting-multiple-historical-versions-of-content",
	"match_type": "description"
},
{
	"name": "Network acceleration device having persistent in-memory cache",
	"summary": "",
	"abstract": "A network acceleration device includes a persistent, in-memory cache of network content. For example, the cache may store content in a manner that allows a software process to map virtual memory to specific, known regions of an underlying physical memory. Upon detecting a failure of a process executing within the network device, the network acceleration device may restart the software process and remap data structures of the cache to the known regions of the physical memory without necessarily requiring that the cache content be reloaded from a non-volatile memory, such as a hard drive. In this manner, the network acceleration device may accelerate download speeds by avoiding timely cache content restoration in the event of a software process failure.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07676554",
	"publication_date": "2010-03-09",
	"application_number": "11228006",
	"application_date": "2005-09-15",
	"tags": null,
	"slug": "network-acceleration-device-having-persistent-inmemory-cache",
	"match_type": "description"
},
{
	"name": "Network device having universal address pool manager and a multi-protocol network address pool",
	"summary": "",
	"abstract": "The invention relates to a universal Address Pool Manager (APM) for processing network access address requests from clients operating at one of many access protocols. The APM, located within a network device, such as a router, manages an aggregated pool of network addresses and assigns addresses to the clients from the pool in accordance with the multiple access protocols. The aggregated address pool may be co-located within the network device with the APM, or alternatively, the address pool may be located within an off-box network device, such as an off-box authentication server or an off-box DHCP server. Utilization of an APM that manages an aggregated address pool for processing requests from multiple access protocols may reduce operational costs for network service providers that support multiple access networks.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07836182",
	"publication_date": "2010-11-16",
	"application_number": "11300850",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "network-device-having-universal-address-pool-manager-and-a-multiprotocol-network-address-pool",
	"match_type": "description"
},
{
	"name": "Restoration of archived configurations for a network device",
	"summary": "",
	"abstract": "Techniques are described for reliable restoration of archived configuration. For example, a device, such as a router, comprises a first memory to store operational configuration data and a second memory to store candidate configuration data. The candidate configuration data represents a working copy of the operational configuration data. The device further includes a control unit to lock the candidate configuration data, load archived configuration data to replace the locked candidate configuration data and commit the candidate configuration data to restore the archived configuration data as the operational configuration data of the device. In locking the candidate configuration, the device ensures reliable restoration of the candidate configuration by helping prevent the device from becoming both unreachable and inoperable.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07822718",
	"publication_date": "2010-10-26",
	"application_number": "12427468",
	"application_date": "2009-04-21",
	"tags": null,
	"slug": "restoration-of-archived-configurations-for-a-network-device",
	"match_type": "description"
},
{
	"name": "Routing instances for network system management and control",
	"summary": "",
	"abstract": "A network device and a method are provided. The network device may include a plurality of elements and a routing infrastructure. The routing infrastructure may be configured to route network traffic received at the network device, and transfer, among two or more of the elements, packets that include management information related to the routing of the network traffic.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07774480",
	"publication_date": "2010-08-10",
	"application_number": "11682153",
	"application_date": "2007-03-05",
	"tags": null,
	"slug": "routing-instances-for-network-system-management-and-control",
	"match_type": "description"
},
{
	"name": "Scalable route resolution",
	"summary": "",
	"abstract": "A router comprises a route resolution module to maintain routing information in accordance with a topology of a network, and an indirect next hop manager to maintain indirect next hop data that associates protocol next hops with forwarding next hops. The route resolution module invokes an application programming interface (API) of the indirect next hop manager for associating and disassociating protocol next hops and forwarding next hops. In response to a network event, the route resolution module can modify the indirect next hop data to reduce the time and resources necessary to perform route resolution.",
	"url": null,
	"owner": "Juniper Networks, Inc.",
	"publication_number": "07746790",
	"publication_date": "2010-06-29",
	"application_number": "11670272",
	"application_date": "2007-02-01",
	"tags": null,
	"slug": "scalable-route-resolution",
	"match_type": "abstract"
},
{
	"name": "Method and system for enabling collaborative authoring of hierarchical documents with locking",
	"summary": "",
	"abstract": "A method in a computer system is disclosed for enabling authors to work on hierarchical documents. The method comprises retrieving a hierarchical document from a server computing device, modifying the retrieved hierarchical document, sending an indication of the modification to the server computing device, and when the modification cannot be applied on the server computing device, reverting the modified hierarchical document to a current form of the hierarchical document on the server computing device. A system is disclosed for receiving an indication to lock a node, the indication identifying an owner of the lock, receiving an indication of a request to mutate the node, determining whether the request is from a user other than the owner of the lock, and when the user is not the owner of the lock, denying the request.",
	"url": null,
	"owner": "Justsystems Canada Inc.",
	"publication_number": "07849401",
	"publication_date": "2010-12-07",
	"application_number": "10817682",
	"application_date": "2004-04-02",
	"tags": null,
	"slug": "method-and-system-for-enabling-collaborative-authoring-of-hierarchical-documents-with-locking",
	"match_type": "description"
},
{
	"name": "Message exchange",
	"summary": "",
	"abstract": "A message exchange method can realize a chat easily in an interface with users who are on-line using a chat window. First status information of a receiving client that will receive a message is confirmed. Then, when the receiving client is connected to a message server, a sender is asked whether chat should be carried out. A chat window is displayed in accordance with a chat instruction received from the sender, and then, the message is stored in a message log, displayed on the chat window and sent to the receiving client.",
	"url": null,
	"owner": "Kabushiki Kaisha Square Enix",
	"publication_number": "07761512",
	"publication_date": "2010-07-20",
	"application_number": "10186669",
	"application_date": "2002-07-02",
	"tags": null,
	"slug": "message-exchange",
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamic information connection engine",
	"summary": "",
	"abstract": "A method and apparatus are provided for a dynamic information connection engine. User actions are detected on at least one client system. In response, a determination is made whether the user is searching for supported information. When the user is searching for supported information, information is extracted electronically from third party web sites, direct supplier connections, and intermediate databases. Potential information suppliers are automatically selected in response to the detected user search. Queries are formulated from the user search and transferred to each selected supplier over a network coupling. The queries include a request for information. Responses are received from the suppliers, and the responses are used to generate a result list for the user. The result list includes information and query status information. Further, an electronic link may be provided to a web site of each supplier from which the information was derived.",
	"url": null,
	"owner": "Kayak Software Corporation",
	"publication_number": "07774331",
	"publication_date": "2010-08-10",
	"application_number": "11091852",
	"application_date": "2005-03-28",
	"tags": null,
	"slug": "method-and-apparatus-for-dynamic-information-connection-engine",
	"match_type": "description"
},
{
	"name": "Updating prices of search results during a search for a travel related item",
	"summary": "",
	"abstract": "A method and apparatus are provided for a dynamic information connection engine. User actions are detected on at least one client system. In response, a determination is made whether the user is searching for supported information. When the user is searching for supported information, information is extracted electronically from third party web sites, direct supplier connections, and intermediate databases. Potential information suppliers are automatically selected in response to the detected user search. Queries are formulated from the user search and transferred to each selected supplier over a network coupling. The queries include a request for information. Responses are received from the suppliers, and the responses are used to generate a result list for the user. The result list includes information and query status information. Further, an electronic link may be provided to a web site of each supplier from which the information was derived.",
	"url": null,
	"owner": "Kayak Software Corporation",
	"publication_number": "07668811",
	"publication_date": "2010-02-23",
	"application_number": "11367552",
	"application_date": "2006-03-03",
	"tags": null,
	"slug": "updating-prices-of-search-results-during-a-search-for-a-travel-related-item",
	"match_type": "description"
},
{
	"name": "System and method for dynamic assistance in software applications using behavior and host application models",
	"summary": "",
	"abstract": "A Cooperative Help Assistance (CHA) system and method provide real-time user assistance for one or more windows-based Graphic User Interface (GUI) applications or a single application's different subsections such as web pages, running concurrently in any operating system. The CHA System enables the development of an informative assistance object independently from the original source code or development environment of the target Host Application. The assistance object can be selected by any number of user interfaces from sophisticated inference driven interactive interface search tools or categorized lists. By intercepting and monitoring user actions on a Host Application, the CHA system performs intelligent assistance in the context of the target host application program. Utilizing a Host Application Model, the CHA System and method dynamically assemble many elements in real-time or just-in-time to produce assistance sequences or elements very efficiently without having to code every interface path permutation. Paths can be dynamically generated from the Host Application Model, which enables a real-time module to offer intelligent, contextual assistance as well as real-time construction of automated, accelerated CHA Sequences or Procedures that require little or no user interaction. All assistance and information are processed and expressed by an extensive multitasking, multimedia subsystem for two dimensional (2D) and real-time three-dimensional (3D) application interfaces, which greatly enhances and extends the effectiveness of any explanation or material expression. The production of Assistant Sequences is facilitated by the Host Application Model and 2D and 3D GUI u201cdrag and dropu201d interface tools.",
	"url": null,
	"owner": "KNOA Software, Inc.",
	"publication_number": "07861178",
	"publication_date": "2010-12-28",
	"application_number": "11387456",
	"application_date": "2006-03-22",
	"tags": null,
	"slug": "system-and-method-for-dynamic-assistance-in-software-applications-using-behavior-and-host-application-models",
	"match_type": "description"
},
{
	"name": "Parser, code generator, and data calculation and transformation engine for spreadsheet calculations",
	"summary": "",
	"abstract": "A system including spreadsheet sheets, makes calculations and data transformations, which is available through a programming interface, and conforms to the grammar and syntax of a target software development language is presented. The system includes an Object Model with Data Structures representing entities involved in spreadsheets. The system includes a Parser and Code Generator that extracts data from a body of spreadsheet data, instantiates instances of Data Structures of the Object Model to represent the spreadsheet data, parses the data and formulas contained in the cells of the spreadsheets, iterates through the instantiated instances of the Data Structures, and generates source code that performs the calculations and data transformations embodied in the spreadsheet data. The system includes a Calculation Engine with software base classes that implement the common structural and data access features of spreadsheet data, and further implement the operations of common spreadsheet functions and operators.",
	"url": null,
	"owner": "Knowledge Dynamics, Inc.",
	"publication_number": "07836425",
	"publication_date": "2010-11-16",
	"application_number": "11301734",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "parser-code-generator-and-data-calculation-and-transformation-engine-for-spreadsheet-calculations",
	"match_type": "description"
},
{
	"name": "User interfaces for peripheral configuration",
	"summary": "",
	"abstract": "Systems and methods consistent with embodiments of the present invention provide a method for the configuration of peripheral devices. In some methods for configuring peripheral devices, configuration options available for a peripheral device are enumerated and listed as files associated with a virtual drive representing the peripheral device. In some embodiments the files may be given descriptive names related to the configuration options they represent. In some embodiments, icons in a user window may denote the virtual drive, and its associated files and folders. In some methods for configuring peripheral devices, when the icon for a file associated with the virtual drive is dragged onto the icon for the virtual drive, the configuration of the scanning device associated with the virtual drive is automatically changed to match the configuration associated with the file.",
	"url": null,
	"owner": "Konica Minolta Systems Laboratory, Inc.",
	"publication_number": "07822880",
	"publication_date": "2010-10-26",
	"application_number": "11075718",
	"application_date": "2005-03-10",
	"tags": null,
	"slug": "user-interfaces-for-peripheral-configuration",
	"match_type": "description"
},
{
	"name": "System and method for controlling a telecom network",
	"summary": "",
	"abstract": "A system for controlling a telecommunications network, e.g., a public switched switching network, which has a first switch fabric, for controlling connections or calls in the network. This fabric has first and second ports, and third ports for communicating with, e.g., a second switch fabric and/or peripheral apparatus. A bridging circuit, also located within the network, may be connected between the first and second ports. A computer apparatus, external to the network, is connected to the first and the second ports of the first switch fabric in order to control connections among the first, second and third ports.",
	"url": null,
	"owner": "Koninklijke KPN N.V.",
	"publication_number": "07760714",
	"publication_date": "2010-07-20",
	"application_number": "10521058",
	"application_date": "2003-07-18",
	"tags": null,
	"slug": "system-and-method-for-controlling-a-telecom-network",
	"match_type": "description"
},
{
	"name": "Record carrier, apparatus and method",
	"summary": "",
	"abstract": "A record carrier () of the invention stores at least video-related user data and control data in digital form. The control data enables playback control of the user data, which control data comprises at least play control data which defines user data items which are playable, at least selection control data for enabling the user to select and control reproduction of user data and at least variable control data for operating on user and system variables. The record carrier () is characterized in that the variable control data comprises at least one instruction for a conditional arithmetical operation.",
	"url": null,
	"owner": "Koninklijke Philips Electronics N.V.",
	"publication_number": "07805057",
	"publication_date": "2010-09-28",
	"application_number": "09315707",
	"application_date": "1999-05-20",
	"tags": null,
	"slug": "record-carrier-apparatus-and-method",
	"match_type": "description"
},
{
	"name": "Apparatus and method for providing transaction services",
	"summary": "",
	"abstract": "Apparatus and method for providing transaction services, in particular a computer-based transaction machine, such as an ATM, and a method for providing transaction services using said transaction machine. One or more software applications interact with middleware software through functional interfaces that are hardware independent but provide functionality which is implemented in a manner adapted to the capabilities of the particular hardware implementation. Objects provided for standard transaction functions are independent of the interface between the user and the transaction machine, said interface being customizable. The resulting transaction machines are typically combined into networks and these networks may readily be combined to form an Extranet.",
	"url": null,
	"owner": "Korala Associates Limited",
	"publication_number": "07747527",
	"publication_date": "2010-06-29",
	"application_number": "09646796",
	"application_date": "1999-03-24",
	"tags": null,
	"slug": "apparatus-and-method-for-providing-transaction-services",
	"match_type": "description"
},
{
	"name": "Method and system for authenticating software",
	"summary": "",
	"abstract": "The invention relates to a method and system for authenticating software. One embodiment of the invention provides a system for authenticating software in a mobile terminal, wherein the system is configured to: receive an execution instruction for software installed in the mobile terminal through an inputting means, generate a first error code for the software, extract a mobile terminal identifier of the mobile terminal, generate a first authentication key by combining the mobile terminal identifier and the first error code, and execute the software when the first authentication key corresponds to a second authentication key stored in the mobile terminal. By authenticating the software for a wireless mobile terminal, one embodiment of the invention can prevent unauthorized duplication and execution of the software at the mobile terminal.",
	"url": null,
	"owner": "KT Corporation",
	"publication_number": "07707409",
	"publication_date": "2010-04-27",
	"application_number": "10971597",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": "method-and-system-for-authenticating-software",
	"match_type": "description"
},
{
	"name": "Systems and methods for managing and detecting fraud in image databases used with identification documents",
	"summary": "",
	"abstract": "We provide a system for issuing identification documents to a plurality of individuals, comprising a first database, a first server, and a workstation. The first database stores a plurality of digitized images, each digitized image comprising a biometric image of an individual seeking an identification document. The first server is in operable communication with the first database and is programmed to send, at a predetermined time, one or more digitized images from the first database to a biometric recognition system, the biometric recognition system in operable communication with a second database, the second database containing biometric templates associated with individuals whose images have been previously captured, and to receive from the biometric recognition system, for each digitized image sent, an indicator, based on the biometric searching of the second database, as to whether the second database contains any images of individuals who may at least partially resemble the digitized image that was sent. The a workstation is in operable communication with the first server and is configured to permit a user to review the indicator and to make a determination as to whether the individual is authorized to be issued an identification document or to keep an identification document in the individual's possession.",
	"url": null,
	"owner": "L-1 Secure Credentialing, Inc.",
	"publication_number": "07804982",
	"publication_date": "2010-09-28",
	"application_number": "10723240",
	"application_date": "2003-11-26",
	"tags": null,
	"slug": "systems-and-methods-for-managing-and-detecting-fraud-in-image-databases-used-with-identification-documents",
	"match_type": "description"
},
{
	"name": "Multifunction all in one capture station for creating identification documents",
	"summary": "",
	"abstract": "A capture station for creating identification documents comprises a housing including a camera and lighting device, a base, and at least one leg extending from the base. The housing is mounted to the leg to enable height adjustment of the camera. One configuration of the capture station has two substantially rigid and parallel legs with the housing mounted between the legs. Configurations of the capture station can include a processor, such a CPU or embedded controller, enabling ID document data capture functions to be executed within the capture station, and to be controlled via a remote computer via a network connection. In one embodiment, the processor is housed in the base and communicates with the camera via wiring routed through the leg. Peripherals used in capture functions, such as a fingerprint reader, signature pad, display, etc., may be mounted to the leg via clamps, or a plug in receptacle with power and communication wiring provided in the leg.",
	"url": null,
	"owner": "L-I Secure Credentialing, Inc.",
	"publication_number": "07646425",
	"publication_date": "2010-01-12",
	"application_number": "11112965",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "multifunction-all-in-one-capture-station-for-creating-identification-documents",
	"match_type": "description"
},
{
	"name": "Systems and methods for monitoring a modem in a networked environment",
	"summary": "",
	"abstract": "A system for monitoring modem use in a computer system is disclosed. The system includes a computing device and a computer-readable medium that is part of the computing device or in electronic communication with the computing device. The computer-readable medium includes instructions for the system to implement a method for monitoring the system for modem use. The method starts a background application on the system. A communication port is monitored for communication data. It is determined whether the communication data is a modem instruction. If the communication data is a modem instruction, a notification is prepared to be sent to an administrative system. The notification is sent to the administrative system. The notification includes identification information.",
	"url": null,
	"owner": "LANDesk Software, Inc.",
	"publication_number": "07672992",
	"publication_date": "2010-03-02",
	"application_number": "10460079",
	"application_date": "2003-06-12",
	"tags": null,
	"slug": "systems-and-methods-for-monitoring-a-modem-in-a-networked-environment",
	"match_type": "description"
},
{
	"name": "Systems and methods for monitoring time-dependent subsurface changes",
	"summary": "",
	"abstract": "Systems and methods for monitoring time-dependant subsurface changes from imperfectly repeated data measurements.",
	"url": null,
	"owner": "Landmark Graphics Corporation",
	"publication_number": "07843766",
	"publication_date": "2010-11-30",
	"application_number": "12054159",
	"application_date": "2008-03-24",
	"tags": null,
	"slug": "systems-and-methods-for-monitoring-timedependent-subsurface-changes",
	"match_type": "description"
},
{
	"name": "Systems and methods for enhancing a seismic data image",
	"summary": "",
	"abstract": "Systems and methods for enhancing the resolution of a seismic data image displayed on a face of a sampling probe. The enhanced image represents a maximum resolution of at least a portion of the seismic data image. The seismic data image is enhanced by extracting seismic data that are perpendicular to a reflection surface that is closest to a center of the sampling probe and positioning the extracted seismic data in a visible planar face of the sampling probe.",
	"url": null,
	"owner": "Landmark Graphics Corporation, a Halliburton Company",
	"publication_number": "07702463",
	"publication_date": "2010-04-20",
	"application_number": "11954596",
	"application_date": "2007-12-12",
	"tags": null,
	"slug": "systems-and-methods-for-enhancing-a-seismic-data-image",
	"match_type": "description"
},
{
	"name": "Secure communication port redirector",
	"summary": "",
	"abstract": "A method and system that allows a host system application to securely communicate with a legacy device is provided. A redirector software module receives data that is destined for a host system serial COM port. Data is secured and re-directed to a legacy device via a network port instead of the serial COM port. Conversely, data destined for the host system is provided to a device server via a server COM port by the legacy serial device. The data can be encrypted and sent to the host system via the network. The redirector software module decrypts the encrypted data and presents it to the consumer application as if the data had arrived via the local COM port.",
	"url": null,
	"owner": "Lantronix, Inc.",
	"publication_number": "07660910",
	"publication_date": "2010-02-09",
	"application_number": "10929858",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": "secure-communication-port-redirector",
	"match_type": "description"
},
{
	"name": "Method and system for integrating and controlling components and subsystems",
	"summary": "",
	"abstract": "A method and system for integrating and controlling a hardware device having one or more embedded systems including one or more hardware components configurable for use with the hardware device and one or more operating systems for use with the one or more hardware components. A control module configurable for use with the one or more hardware components and one or more operating systems accesses and controls the one or more hardware components with the hardware device. The control module generates and displays access and control commands on the hardware device to allow user to operate and manage the embedded system.",
	"url": null,
	"owner": "Lectronix",
	"publication_number": "07681201",
	"publication_date": "2010-03-16",
	"application_number": "11834183",
	"application_date": "2007-08-06",
	"tags": null,
	"slug": "method-and-system-for-integrating-and-controlling-components-and-subsystems",
	"match_type": "description"
},
{
	"name": "System for integrating security and access for facilities and information systems",
	"summary": "",
	"abstract": "A system for integrating security and access for facilities and information systems is provided including a computer server, information systems, and facility protection systems. The information systems and facility protection systems are coupled for communication to the computer server via a network. Facility protection systems represent an access control system for controlling entry/exit to areas of buildings, such as with badges or other ID Credentials and other systems, such as intrusion detection and fire systems, to provide protection in facility environments. Information systems each represent a computer system requiring user authorization, via computers or terminals capable of connecting thereto, to access information resources or network environments protected by the computer system. Information systems may also include information protection systems requiring user authorization for external access to other information systems. The computer server has a central database which stores at least information defining users and their access privileges to the information systems and to areas of facilities controlled by access control system. Each of the information systems and facility protection systems sends event data to the computer server when an event occurs on its respective system, and an event transaction processor in the computer server determines action(s), if any, to take in response to one or more received events and accordingly sends action data to other information systems and facility protection systems to instruct such systems to automatically respond to security risks representing by such events in real-time. Central management of users and their access privileges, and monitoring of events is further provided.",
	"url": null,
	"owner": "Lenel Systems International, Inc.",
	"publication_number": "07752652",
	"publication_date": "2010-07-06",
	"application_number": "11983322",
	"application_date": "2007-11-08",
	"tags": null,
	"slug": "system-for-integrating-security-and-access-for-facilities-and-information-systems",
	"match_type": "description"
},
{
	"name": "Apparatus for reproducing data, method thereof and recording medium",
	"summary": "",
	"abstract": "An apparatus for reproducing data, method thereof and recording medium are disclosed. In reproducing a title configured with data within a recording medium and/or data within a local storage, a method of reproducing data, the present invention includes the steps of checking information of identifying an application associated with the title from an object file corresponding to the title, authenticating the associated application, and reproducing the title by executing the application. Accordingly, the present invention can protect contents provided by a content provider and a user's playback system. Hence, the content provider can provide contents safely and the user can reproduce the contents with security. Therefore, the present invention can provide more convenient functions.",
	"url": null,
	"owner": "LG Electronics Inc.",
	"publication_number": "07668439",
	"publication_date": "2010-02-23",
	"application_number": "11325457",
	"application_date": "2006-01-05",
	"tags": null,
	"slug": "apparatus-for-reproducing-data-method-thereof-and-recording-medium",
	"match_type": "description"
},
{
	"name": "Interfacing system between digital TV and plurality of remote controllers, method thereof, remote controller thereof, and remote controller signal transmitting method thereof",
	"summary": "",
	"abstract": "The present invention provides a system and method for interfacing between a digital TV and a plurality of remote controllers, remote controller thereof, and remote controller signal transmitting method thereof, by which Java API enabling to support a plurality of remote controllers is defined to enable interfacing between the digital TV and a plurality of the remote controllers. In interfacing between a digital TV and a plurality of remote controllers, the present invention includes the steps of defining an event class including remote controller identifiers enabling to identify a plurality of the remote controllers, respectively and identifying a plurality of the remote controllers using the event class including the remote controller identifiers, respectively and controlling the digital TV according to a signal received from the identified remote controller.",
	"url": null,
	"owner": "LG Electronics Inc.",
	"publication_number": "07647610",
	"publication_date": "2010-01-12",
	"application_number": "10920191",
	"application_date": "2004-08-18",
	"tags": null,
	"slug": "interfacing-system-between-digital-tv-and-plurality-of-remote-controllers-method-thereof-remote-controller-thereof-and-remote-controller-signal-transmitting-method-thereof",
	"match_type": "description"
},
{
	"name": "Interacting with a computer-based management system",
	"summary": "",
	"abstract": "A method, and apparatus, and a software product for implementing a method for interacting with a computer-based management system including authoring and communicating composite data messages, each composite data message comprising both free-text and structured data, such that the structured data represents the intended meaning of the free-text in a form understandable by the computer-based management system. In one version, authoring includes converting free-text to structured data. One version includes communicating the composite message.",
	"url": null,
	"owner": "Liaise, Inc.",
	"publication_number": "07669138",
	"publication_date": "2010-02-23",
	"application_number": "11553594",
	"application_date": "2006-10-27",
	"tags": null,
	"slug": "interacting-with-a-computerbased-management-system",
	"match_type": "description"
},
{
	"name": "System and method for automated migration from Windows to Linux",
	"summary": "",
	"abstract": "A system and method for automating the migration of configuration settings and data from computer systems running the Windowsu00ae operating system to computer systems running the Linuxu00ae operating system. The method utilizes data from one or more sources to create the configuration of the target system, and translates between settings related to the Windowsu00ae systems and Linuxu00ae systems involved. As a result, it simplifies the otherwise complex and time-consuming task of migrating from one server to another, specifically when migrating between two operating systems that provide similar functionality but are configured in distinctly different ways.",
	"url": null,
	"owner": "Likewise Software, Inc.",
	"publication_number": "07805721",
	"publication_date": "2010-09-28",
	"application_number": "10867081",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "system-and-method-for-automated-migration-from-windows-to-linux",
	"match_type": "description"
},
{
	"name": "End to end data transfer",
	"summary": "",
	"abstract": "A method, apparatus and system for data transfer is disclosed. For example, settings from multiple entities arranged in a multi-tier control plane are used to set data transfer policies. The policies are use to govern data transfers such as between end users or from an origin server.",
	"url": null,
	"owner": "Limelight Networks, Inc.",
	"publication_number": "07720933",
	"publication_date": "2010-05-18",
	"application_number": "12268350",
	"application_date": "2008-11-10",
	"tags": null,
	"slug": "end-to-end-data-transfer",
	"match_type": "description"
},
{
	"name": "Systems and methods for the real-time and realistic simulation of natural atmospheric lighting phenomenon",
	"summary": "",
	"abstract": "Systems and methods are provided for visually realistic simulation and real-time rendering of natural atmospheric lighting and related phenomena in an outdoor scene represented by an image provided by a simulation environment. The systems and methods of the present invention provide techniques to approximate the visual effects of natural atmospheric lighting and related phenomena that are visually realistic and that can be computed in real-time to render frames of a scene at real-time frame rates per second. The techniques consider the light scattering effects due to sunlight and ambient light in relation to objects, atmospheric particles and other scene elements represented by the image.",
	"url": null,
	"owner": "Linden Acquisition Corporation",
	"publication_number": "07710418",
	"publication_date": "2010-05-04",
	"application_number": "11051318",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": "systems-and-methods-for-the-realtime-and-realistic-simulation-of-natural-atmospheric-lighting-phenomenon",
	"match_type": "description"
},
{
	"name": "Transcoding SMS-based streamed messages to SIP-based IP signals in wireless and wireline networks",
	"summary": "",
	"abstract": "A communication gateway for communicating presence information between a connectionless packet-switched signaling network and an Internet Protocol (IP) network includes a message bearer configured to receive and send messages over a connectionless packet-switched signaling network and a translator, in communication with the message bearer, operable to translate messages received from the connectionless packet-switched signaling network into messages suitable for transport over an IP network and operable to translate messages received from the IP network into messages suitable for transport over the connectionless packet-switched signaling network.",
	"url": null,
	"owner": "Link Us All, LLC",
	"publication_number": "07711002",
	"publication_date": "2010-05-04",
	"application_number": "10183031",
	"application_date": "2002-06-25",
	"tags": null,
	"slug": "transcoding-smsbased-streamed-messages-to-sipbased-ip-signals-in-wireless-and-wireline-networks",
	"match_type": "description"
},
{
	"name": "Electronic securities marketplace having integration with order management systems",
	"summary": "",
	"abstract": "An electronic trading marketplace (ETM) communicates with interfacing modules interfacing directly with order management systems (OMS's) at trading institutions. The interfacing modules automatically transmit orders from the OMS databases to the ETM and update the OMS databases in response to orders executed at the ETM. Traders can communicate with the ETM to anonymously negotiate trades of securities.",
	"url": null,
	"owner": "Liquidnet Holdings, Inc.",
	"publication_number": "07831507",
	"publication_date": "2010-11-09",
	"application_number": "12797882",
	"application_date": "2010-06-10",
	"tags": null,
	"slug": "electronic-securities-marketplace-having-integration-with-order-management-systems",
	"match_type": "description"
},
{
	"name": "Electronic securities marketplace having integration with order management systems",
	"summary": "",
	"abstract": "An electronic trading marketplace (ETM) communicates with interfacing modules interfacing directly with order management systems (OMS's) at trading institutions. The interfacing modules automatically transmit orders from the OMS databases to the ETM and update the OMS databases in response to orders executed at the ETM. Traders can communicate with the ETM to anonymously negotiate trades of securities.",
	"url": null,
	"owner": "Liquidnet Holdings, Inc.",
	"publication_number": "07747515",
	"publication_date": "2010-06-29",
	"application_number": "11556661",
	"application_date": "2006-11-03",
	"tags": null,
	"slug": "electronic-securities-marketplace-having-integration-with-order-management-systems",
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for utilizing an interface client in an interface roaming network framework",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for utilizing an interface client in an interface roaming network. In general, an interface client in the interface roaming network submits information about the interface client to a wireless link in vicinity to the interface client. The interface client may then subsequently receive content and then display the content on a display.",
	"url": null,
	"owner": "LitePoint Corporation",
	"publication_number": "07849198",
	"publication_date": "2010-12-07",
	"application_number": "12536015",
	"application_date": "2009-08-05",
	"tags": null,
	"slug": "system-method-and-article-of-manufacture-for-utilizing-an-interface-client-in-an-interface-roaming-network-framework",
	"match_type": "description"
},
{
	"name": "Resistive force sensing device and method with an advanced communication interface",
	"summary": "",
	"abstract": "Several methods and a system of a resistive force sensing device and method with an advanced communication interface are disclosed. An exemplary embodiment provides a force measuring device. The force measuring device includes a resistive sensor having a fixed surface and a movable surface. A spring assembly is positioned between the fixed surface and the movable surface. The spring assembly alters in height in response to a force applied perpendicular to the movable surface and causes a change in a resistance of the resistive sensor. A circuit generates a measurement of the force based on an algorithm that considers a change in the resistance of the resistive sensor. A universal serial bus (USB) interface of the circuit provides digital output of the measurement to a computing device.",
	"url": null,
	"owner": "Loadstar Sensors, Inc.",
	"publication_number": "07644628",
	"publication_date": "2010-01-12",
	"application_number": "12477927",
	"application_date": "2009-06-04",
	"tags": null,
	"slug": "resistive-force-sensing-device-and-method-with-an-advanced-communication-interface",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for interfacing external systems with vehicle electronic systems",
	"summary": "",
	"abstract": "One embodiment is directed to providing access between external systems and embedded vehicle electronic systems. That is, an interface module may receive information from a system external to the vehicle, determine an embedded system of the vehicle to which to provide the information, and provide the information to the embedded system. Similarly, the interface module may receive information a embedded electronic systems of a vehicle, determine a system external the vehicle to which to provide the information, and provide the information to the external system.",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07809673",
	"publication_date": "2010-10-05",
	"application_number": "11603326",
	"application_date": "2006-11-21",
	"tags": null,
	"slug": "methods-and-apparatus-for-interfacing-external-systems-with-vehicle-electronic-systems",
	"match_type": "description"
},
{
	"name": "Multi-disciplinary information engine for total ownership cost estimation of complex systems",
	"summary": "",
	"abstract": "A system and method for determining a total ownership cost associated with a complex system (or a component thereof) includes a multi-disciplinary environment including at least one tool, a product data manager, and a total ownership costs assessment tools. The tools in the multi-disciplinary environment are used to gather information regarding the complex system. The product data manager receives the information from the tools and organizes the information as an information model representing the complex system. The total ownership cost assessment tool extracts various system and related scheduling aspects from the information model and determines the total ownership cost associated with the complex system (or the component thereof).",
	"url": null,
	"owner": "Lockheed Martin Corporation",
	"publication_number": "07752144",
	"publication_date": "2010-07-06",
	"application_number": "09577039",
	"application_date": "2000-05-24",
	"tags": null,
	"slug": "multidisciplinary-information-engine-for-total-ownership-cost-estimation-of-complex-systems",
	"match_type": "description"
},
{
	"name": "Control system for enabling use of wireless telephones",
	"summary": "",
	"abstract": "Disclosed herein is a control system for enabling use of wireless telephones. In an exemplary embodiment of the present invention, each one of the wireless telephones are a prepaid wireless telephone associated with one of a plurality of carrier systems having disparate communication protocols. The control system receives a request having transaction information from a client system and processes the request in accordance with stored procedures corresponding with the associated carrier system. The control system sends the request to the carrier system to case usage of the prepaid wireless telephone to be enabled.",
	"url": null,
	"owner": "Locus Telecommunications, Inc.",
	"publication_number": "07706774",
	"publication_date": "2010-04-27",
	"application_number": "11500861",
	"application_date": "2006-08-08",
	"tags": null,
	"slug": "control-system-for-enabling-use-of-wireless-telephones",
	"match_type": "description"
},
{
	"name": "Log collection, structuring and processing",
	"summary": "",
	"abstract": "The present invention generally relates to log message processing such that events can be detected and alarms can be generated. For example, log messages are generated by a variety of network platforms (e.g., Windows servers, Linux servers, UNIX servers, databases, workstations, etc.). Often, relatively large numbers of logs are generated from these platforms in different formats. A log manager described herein collects such log data using various protocols (e.g., Syslog, SNMP, SMTP, etc.) to determine events. That is, the log manager may communicate with the network platforms using appropriate protocols to collect log messages therefrom. The log manager may then determine events (e.g., unauthorized access, logins, etc.) from the log data and transfer the events to an event manager. The event manager may analyze the events and determine whether alarms should be generated therefrom.",
	"url": null,
	"owner": "LogRhythm, Inc.",
	"publication_number": "07653633",
	"publication_date": "2010-01-26",
	"application_number": "11559352",
	"application_date": "2006-11-13",
	"tags": null,
	"slug": "log-collection-structuring-and-processing",
	"match_type": "description"
},
{
	"name": "Proton beam therapy control system",
	"summary": "",
	"abstract": "A tiered communications architecture for managing network traffic in a distributed system. Communication between client or control computers and a plurality of hardware devices is administered by agent and monitor devices whose activities are coordinated to reduce the number of open channels or sockets. The communications architecture also improves the transparency and scalability of the distributed system by reducing network mapping dependence. The architecture is desirably implemented in a proton beam therapy system to provide flexible security policies which improve patent safety and facilitate system maintenance and development.",
	"url": null,
	"owner": "Loma Linda University Medical Center",
	"publication_number": "07801988",
	"publication_date": "2010-09-21",
	"application_number": "12167893",
	"application_date": "2008-07-03",
	"tags": null,
	"slug": "proton-beam-therapy-control-system",
	"match_type": "description"
},
{
	"name": "Application programming interface for fusion message passing technology",
	"summary": "",
	"abstract": "A data-processing system and method are disclosed, which generally includes a plurality of components connected to a bus within a data-processing apparatus utilizing one or more input/output interfaces (e.g., IOCTL) in communication with the bus. A dynamic interface is implemented, which includes a plurality of interface modules that permits varying data-processing applications to scan, identify and interface with the plurality of components utilizing the input/output interface, thereby increasing data-processing application development efficiency relative to one or more components within the data-processing system.",
	"url": null,
	"owner": "LSI Corporation",
	"publication_number": "07761630",
	"publication_date": "2010-07-20",
	"application_number": "11148395",
	"application_date": "2005-06-07",
	"tags": null,
	"slug": "application-programming-interface-for-fusion-message-passing-technology",
	"match_type": "name"
},
{
	"name": "Systems and methods for gathering debug information",
	"summary": "",
	"abstract": "System and methods are disclosed for gathering debug information of a storage system of a computer system without requiring additional external hardware directly connected to the controller of the storage system.",
	"url": null,
	"owner": "LSI Corporation",
	"publication_number": "07818627",
	"publication_date": "2010-10-19",
	"application_number": "11234700",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": "systems-and-methods-for-gathering-debug-information",
	"match_type": "description"
},
{
	"name": "Acquiring, storing, and correlating profile data of cellular mobile communications system's users to events",
	"summary": "",
	"abstract": "A system to collect personal and demographic data from user's of cellular mobile communications system devices. This system uses a standard web browser to collect the personal and demographic data instead of the device itself because of the limited interactive experience available to cellular mobile communications system device users. After obtaining data from the user including the user's cellular mobile communications system device's cellular phone number, a message is sent to the device. When a link is the message is activated a small event collection data software module is downloaded to the cellular mobile communications system device. The return message to the data collection entity incorporates the cellular mobile communications system device's International Mobile Equipment Identifier (IMEI) number. This number then ties the event data collected by the module to the personal and demographic information collected from the cellular mobile communications system device user.",
	"url": null,
	"owner": "M:Metrics, Inc.",
	"publication_number": "07849154",
	"publication_date": "2010-12-07",
	"application_number": "11183339",
	"application_date": "2005-07-18",
	"tags": null,
	"slug": "acquiring-storing-and-correlating-profile-data-of-cellular-mobile-communications-systems-users-to-events",
	"match_type": "description"
},
{
	"name": "Single-track load meter for audio applications",
	"summary": "",
	"abstract": "There is provided herein a system and method for implementing a track-specific CPU load meter or a similar track-specific indication of CPU performance in a multi-track multimedia-editing environment. The instant invention is preferably presented to the user in the form of a real time meter for use in multi-track multimedia editing applications, wherein the CPU usage associated with sounding/playing each track will be separately displayed in near or actual real time as the musical work is performed. The system allows the user to instantly determine the CPU load for each particular track of the multi-track environment of the underlying application and therefore allows the user to more quickly identify potential problems in the multi-track arrangement and playback of the multimedia work.",
	"url": null,
	"owner": "Magix AG",
	"publication_number": "07716015",
	"publication_date": "2010-05-11",
	"application_number": "11828874",
	"application_date": "2007-07-26",
	"tags": null,
	"slug": "singletrack-load-meter-for-audio-applications",
	"match_type": "description"
},
{
	"name": "Automatically updating performance-based online advertising system and method",
	"summary": "",
	"abstract": "A system, method, and computer program product for online advertising, including computing and dynamically updating a cost-per-click (CPC) value of an advertisement for an advertisement traffic source based on a variable; and automatically uploading and distributing the advertisement to the traffic source. The variable includes price, advertisement traffic source, and/or advertiser variables. Further embodiments include dynamically updating an advertisement listing that has a cost-per-acquisition (CPA)-based value with associated CPC or cost-per-1000 (CPM) values; and distributing the advertisement listing to an advertisement distribution network that serves the listing based on the CPC or CPM values. The distribution network includes CPC-based, CPA-based, and/or CPM-based distribution networks. Further embodiments include determining a CPC value for a CPA-based advertisement; and placing the advertisement on an advertising network at the determined CPC based on a ratio of an expected number of conversions at a CPA value divided by a number of clicks at the CPC.",
	"url": null,
	"owner": "Marchex, Inc.",
	"publication_number": "07668950",
	"publication_date": "2010-02-23",
	"application_number": "10947384",
	"application_date": "2004-09-23",
	"tags": null,
	"slug": "automatically-updating-performancebased-online-advertising-system-and-method",
	"match_type": "description"
},
{
	"name": "Automated order protection trading system",
	"summary": "",
	"abstract": "Methods and systems for trading financial or commodity assets are presented. In particular, the invention relates to a trading system and method that operates with third party data and a Third Party Inside Market to promote fair and orderly transactions. In some embodiments, a client order or client bid/offer is protected by automated order protection (AOP), which may be a set of rules or specifications that can modify a client's order. In certain embodiments, an average weighted price function is used to protect a client order that might be larger than the best bid/offer. In other embodiments, an autofill, a tie-breaking, and a wait-for-follow process can be used to promote trading opportunities for dealers and/or clients.",
	"url": null,
	"owner": "MarketAxess Holdings, Inc.",
	"publication_number": "07860796",
	"publication_date": "2010-12-28",
	"application_number": "11341309",
	"application_date": "2006-01-27",
	"tags": null,
	"slug": "automated-order-protection-trading-system",
	"match_type": "description"
},
{
	"name": "Electronic price-based inquiry lists for financial products",
	"summary": "",
	"abstract": "Price-based inquiry lists for financial interests are submitted, negotiated and traded between investors and dealers over a network or networks. An investor interface for display is provided to an investor. A dealer interface for display is provided to a plurality of dealers. The investor can create a price-based inquiry list via the investor interface containing a plurality of inquiries for a corresponding plurality of different financial interests and can transmit the price-based inquiry list to one or more selected dealers, where an established relationship exists between the investor and the dealers. One or more of the selected dealers may provide responses to the received price-based inquiry list, where the response contains one or more offers/bids on the plurality of inquiries contained in the inquiry list via the dealer interface. The respective offers/bids are displayed in the price-based inquiry list on the investor interface. The investor may receive the best response for each bond on the price-based inquiry list and, if desired, execute one or more trades using the investor interface.",
	"url": null,
	"owner": "MarketAxess Holdings, Inc.",
	"publication_number": "07822677",
	"publication_date": "2010-10-26",
	"application_number": "11899775",
	"application_date": "2007-09-07",
	"tags": null,
	"slug": "electronic-pricebased-inquiry-lists-for-financial-products",
	"match_type": "description"
},
{
	"name": "Domain name ownership validation",
	"summary": "",
	"abstract": "Embodiments of the invention provide systems and methods for validating ownership of a domain name. According to one embodiment, a validating ownership of a domain name can comprise retrieving one or more domain name ownership records. For example, the one or more domain name ownership records comprise Who Is records. Validity of the one or more domain name records can be confirmed with a designated domain manager. According to one embodiment, confirming validity of the one or more domain name records with the designated domain manager can comprise authenticating the designated domain manager based on a certificate provided by the designated domain manager.",
	"url": null,
	"owner": "MarkMonitor Inc.",
	"publication_number": "07761583",
	"publication_date": "2010-07-20",
	"application_number": "12349042",
	"application_date": "2009-01-06",
	"tags": null,
	"slug": "domain-name-ownership-validation",
	"match_type": "description"
},
{
	"name": "Fast port failover in a network switch",
	"summary": "",
	"abstract": "A network switch comprises a port that includes a redirect circuit and a loopback circuit that selectively redirects an egress frame to the redirect circuit when the port is non-operational. The redirect circuit replaces a destination port identifier associated with the egress frame to create a modified frame. The loopback circuit loops back the modified frame in an ingress direction. A transfer circuit transfers the modified frame to another port identified by the destination port identifier.",
	"url": null,
	"owner": "Marvell International Ltd.",
	"publication_number": "07818628",
	"publication_date": "2010-10-19",
	"application_number": "12001292",
	"application_date": "2007-12-11",
	"tags": null,
	"slug": "fast-port-failover-in-a-network-switch",
	"match_type": "description"
},
{
	"name": "Wake on wireless LAN schemes",
	"summary": "",
	"abstract": "A power-management system for wireless network devices includes a media access control module (MAC) that receives a first enable signal and based thereon selectively transmits and receives data packets. A clock generator module receives a second enable signal and based thereon selectively generates a clock signal that is communicated to the MAC. A power management module receives configuration information associated with a plurality of power savings modes. The power management module generates the first and second enable signals based on a selected one of the power savings modes and the configuration information.",
	"url": null,
	"owner": "Marvell Interntional Ltd.",
	"publication_number": "07684835",
	"publication_date": "2010-03-23",
	"application_number": "11472056",
	"application_date": "2006-06-21",
	"tags": null,
	"slug": "wake-on-wireless-lan-schemes",
	"match_type": "description"
},
{
	"name": "Content distribution system using an alternative domain name system (DNS) and content servers",
	"summary": "",
	"abstract": "The present invention is a network architecture or framework that supports hosting and content distribution on a truly global scale. The inventive framework allows a Content Provider to replicate and serve its most popular content at an unlimited number of points throughout the world. The inventive framework comprises a set of servers operating in a distributed manner. The actual content to be served is preferably supported on a set of hosting servers (sometimes referred to as ghost servers). This content comprises HTML page objects that, conventionally, are served from a Content Provider site. In accordance with the invention, however, a base HTML document portion of a Web page is served from the Content Provider's site while one or more embedded objects for the page are served from the hosting servers, preferably, those hosting servers near the client machine. By serving the base HTML document from the Content Provider's site, the Content Provider maintains control over the content.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07693959",
	"publication_date": "2010-04-06",
	"application_number": "11515171",
	"application_date": "2006-09-01",
	"tags": null,
	"slug": "content-distribution-system-using-an-alternative-domain-name-system-dns-and-content-servers",
	"match_type": "description"
},
{
	"name": "High speed subscribe-and-alert service using content graphs",
	"summary": "",
	"abstract": "Described are techniques used in connection with subscribe and alert services as may be embodied in a subscription system. The subscription system uses a preprocessor for preprocessing subscription and notification messages prior to submission to the subscription/publication server. The preprocessor outputs a preprocessed message including one or more identifiers categorizing an input subscription or notification message. The preprocessor uses a content graph to produce the preprocessed message. The subscription system uses a content based routing system with a tree-like topology to process preprocessed subscriptions and notifications using content graphs maintained at each node in the system. Also described is a loss detection technique using sequence numbers.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07680951",
	"publication_date": "2010-03-16",
	"application_number": "10935843",
	"application_date": "2004-09-08",
	"tags": null,
	"slug": "high-speed-subscribeandalert-service-using-content-graphs",
	"match_type": "description"
},
{
	"name": "Object name system",
	"summary": "",
	"abstract": "An object name system (ONS) for locating one or more servers associated with an Electronic Product Code (EPC) is described. The system utilizes translation format strings to translate an EPC to an EPC domain prefix. The ONS server matches the EPC number to the address of a second server which has extensive information about the product. The second server recognizes the incoming EPC's as belonging to a particular object or service.",
	"url": null,
	"owner": "Massachusetts Institute of Technology",
	"publication_number": "07765253",
	"publication_date": "2010-07-27",
	"application_number": "12249195",
	"application_date": "2008-10-10",
	"tags": null,
	"slug": "object-name-system",
	"match_type": "description"
},
{
	"name": "Online game advertising system",
	"summary": "",
	"abstract": "In one embodiment an online game advertising system provides an architecture for enabling the definition, sales, distribution, and management of interactive advertisements, sponsorships, and placements that appear within an online video game as part of the game experience or during idle load, wait, and pause screens. For example, in a race car game, when a driver pulls in for a pit stop, the engine oil brand that the game player may choose may be defined as locations for advertisements or product placements for real life engine oils and game publishers and advertisers may manage what specific advertisements to place in these locations.",
	"url": null,
	"owner": "Massive Incorporated",
	"publication_number": "07729946",
	"publication_date": "2010-06-01",
	"application_number": "10351031",
	"application_date": "2003-01-24",
	"tags": null,
	"slug": "online-game-advertising-system",
	"match_type": "description"
},
{
	"name": "Detecting e-mail propagated malware",
	"summary": "",
	"abstract": "An e-mail client serves to detect mass mailing malware by detecting if over a threshold number of addressees from within the address book of that e-mail client are being sent an e-mail or over a predetermined number of substantially identical e-mails are being sent by that e-mail client. A quarantine queue may be provided in which e-mail messages are held for a predetermined period prior to being sent out in order that separate e-mail messages being sent to a large proportion of the address book addressees may be identified and linked together.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07673342",
	"publication_date": "2010-03-02",
	"application_number": "09912391",
	"application_date": "2001-07-26",
	"tags": null,
	"slug": "detecting-email-propagated-malware",
	"match_type": "description"
},
{
	"name": "Enabling dynamic authentication with different protocols on the same port for a switch",
	"summary": "",
	"abstract": "The invention enables a client device that does not support IEEE 802.1X authentication to access at least some resources provided through a switch that supports 802.1X authentication by using dynamic authentication with different protocols. When the client device attempts to join a network, the switch monitors for an 802.1X authentication message from the client device. In one embodiment, if the client fails to send an 802.1X authentication message, respond to an 802.1X request from the switch, or a predefined failure condition is detected the client may be deemed incapable of supporting 802.1X authentication. In one embodiment, the client may be initially placed on a quarantine VLAN after determination that the client fails to perform an 802.1X authentication within a backoff time limit. However, the client may still gain access to resources based on various non-802.1X authentication mechanisms, including name/passwords, digital certificates, or the like.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07810138",
	"publication_date": "2010-10-05",
	"application_number": "11337408",
	"application_date": "2006-01-23",
	"tags": null,
	"slug": "enabling-dynamic-authentication-with-different-protocols-on-the-same-port-for-a-switch",
	"match_type": "description"
},
{
	"name": "Method and system for tracking an operating performed on an information asset with metadata associated therewith",
	"summary": "",
	"abstract": "A system and method are provided for tracking an operation performed on an information asset. The information asset has metadata associated therewith. In use, the metadata is preserved during the at least one operation.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07673324",
	"publication_date": "2010-03-02",
	"application_number": "11733153",
	"application_date": "2007-04-09",
	"tags": null,
	"slug": "method-and-system-for-tracking-an-operating-performed-on-an-information-asset-with-metadata-associated-therewith",
	"match_type": "description"
},
{
	"name": "System and method for providing application services with controlled access into privileged processes",
	"summary": "",
	"abstract": "A system for providing application services in a computing environment having both user-mode processes and privileged-mode processes. A user-mode component is provided with an interface configured to access an exposed privileged-mode interface. A configuration component specifies a list of installable code components that are authorized for installation, wherein privileged-mode functions will only be executed in response to accesses by the user-mode code component when the installable code component is represented on the list.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07716719",
	"publication_date": "2010-05-11",
	"application_number": "11110747",
	"application_date": "2005-04-21",
	"tags": null,
	"slug": "system-and-method-for-providing-application-services-with-controlled-access-into-privileged-processes",
	"match_type": "description"
},
{
	"name": "System, method and computer program product for authenticating users using a lightweight directory access protocol (LDAP) directory server",
	"summary": "",
	"abstract": "A system, method and computer program product for providing authentication to a firewall using a lightweight directory access protocol (LDAP) directory server is disclosed. The firewall can be configured through a graphical user interface to implement an authentication scheme. The authentication scheme is based upon a determination of whether at least part of one or more LDAP entries satisfy an authorization filter.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07861285",
	"publication_date": "2010-12-28",
	"application_number": "11672296",
	"application_date": "2007-02-07",
	"tags": null,
	"slug": "system-method-and-computer-program-product-for-authenticating-users-using-a-lightweight-directory-access-protocol-ldap-directory-server",
	"match_type": "description"
},
{
	"name": "Systems and methods for secure communication delivery",
	"summary": "",
	"abstract": "Systems and methods for secure delivery of electronic communications are provided. A communication transmitted over a communications network is received by a system processor. The system processor selects a secure delivery mechanism for delivering the communication. The system processor attempts to deliver the communication to the predetermined recipient via the selected secure delivery mechanism. Some systems can further provide for determining whether a particular received communication requires secure delivery.",
	"url": null,
	"owner": "McAfee, Inc.",
	"publication_number": "07694128",
	"publication_date": "2010-04-06",
	"application_number": "10384924",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": "systems-and-methods-for-secure-communication-delivery",
	"match_type": "description"
},
{
	"name": "Medical triage system",
	"summary": "",
	"abstract": "A method of determining a triage disposition for a person includes providing a plurality of triage categories that includes questions grouped into a plurality of tiers ranked according to urgency. Each of the plurality of tiers corresponds to one of a set of triage dispositions. At least a first relevant triage category and a second relevant triage category can be selected from the plurality of triage categories based on information about a medical condition of the person and then accessed. The person can be triaged by (a) identifying from all of the selected relevant triage categories a highest urgency tier that has at least one unasked question; (b) asking the person one of the at least one unasked question of the highest urgency tier; and (c) repeating (a) and (b) for all of the selected triage categories until the triage disposition is determined.",
	"url": null,
	"owner": "Medcor, Inc.",
	"publication_number": "07716070",
	"publication_date": "2010-05-11",
	"application_number": "10985732",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": "medical-triage-system",
	"match_type": "description"
},
{
	"name": "Providing adaptive medical triage",
	"summary": "",
	"abstract": "A method of adaptively operating a medical triage system includes triaging a plurality of persons using a set of triage questions to select particular dispositions from a plurality of triage disposition. Triage-related data is acquired as a result of the triaging of the plurality of persons. The triage-related data is analyzed and the set of triage questions or the dispositions are modified based on the analysis of the triage-related data.",
	"url": null,
	"owner": "Medcor, Inc.",
	"publication_number": "07668733",
	"publication_date": "2010-02-23",
	"application_number": "10985724",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": "providing-adaptive-medical-triage",
	"match_type": "description"
},
{
	"name": "Providing standardized medical triage",
	"summary": "",
	"abstract": "A triage category for determining a medical triage disposition includes a set of tiered triage questions comprising a plurality of only yes/no questions arranged in a plurality of tiers. The tiers are ranked according to a level of urgency. There is also a plurality of dispositions corresponding to the plurality of tiers. One of the plurality of dispositions is selected when one of the plurality of only yes/no questions is answered u201cyes.u201d",
	"url": null,
	"owner": "Medcor, Inc.",
	"publication_number": "07720692",
	"publication_date": "2010-05-18",
	"application_number": "10985850",
	"application_date": "2004-11-09",
	"tags": null,
	"slug": "providing-standardized-medical-triage",
	"match_type": "description"
},
{
	"name": "Live media captioning subscription framework for mobile devices",
	"summary": "",
	"abstract": "A subscription-based system provides transcribed audio information to one or more mobile devices. Some techniques feature a system for providing subscription services for currently-generated (e.g., not stored) information (e.g., caption information, transcribed audio) for one or more mobile devices for a live/current audio event. There can be a communication network for communicating to the one or more mobile devices, a transcriber configured for transcribing the event to generate information (e.g., caption information, transcribed audio). Caption data includes transcribed data and control code data. The system includes a subscription gateway configured for live/current transfer of the transcribed data to the one or more mobile devices. The subscription gateway is configured to provide access for the transcribed data to the one or more mobile devices. User preferences for subscribers can be set and/or updated by mobile device users and/or GPS-capable mobile devices to receive feeds for the live/current audio event.",
	"url": null,
	"owner": "Media Captioning Services, Inc.",
	"publication_number": "07844684",
	"publication_date": "2010-11-30",
	"application_number": "12191265",
	"application_date": "2008-08-13",
	"tags": null,
	"slug": "live-media-captioning-subscription-framework-for-mobile-devices",
	"match_type": "description"
},
{
	"name": "Apparatus for file system management with virtual file name",
	"summary": "",
	"abstract": "An apparatus for file system management includes a non-volatile storage device, a volatile memory device, and a processing unit. The non-volatile storage device stores a file containing actual file content. The volatile memory device storing physical file handle context comprises a pointer to the beginning of the actual file content. The processing unit receives a virtual file generation request with a physical file handle corresponding to the physical file handle context, and mapping information of a segment of the actual file content, and generates a virtual file name including the physical file handle and the mapping information.",
	"url": null,
	"owner": "Mediatek, Inc.",
	"publication_number": "07831578",
	"publication_date": "2010-11-09",
	"application_number": "11738543",
	"application_date": "2007-04-23",
	"tags": null,
	"slug": "apparatus-for-file-system-management-with-virtual-file-name",
	"match_type": "description"
},
{
	"name": "Intelligent refrigerator for storing pharmaceutical product containers",
	"summary": "",
	"abstract": "Intelligent refrigerator system for storing pharmaceutical product containers, such as vials, ampules, syringes, bottles, medication tubes, blister packs and cartons, at the point of dispensing. Embodiments of the invention use product identification technology, such as radio-frequency identification (RFID) tags and readers, to uniquely identify containers as they are added to or removed from the cold storage compartment of the refrigerator, and automatically retrieve from a local or remote database a variety of details associated with the containers and their contents, such as manufacturing data, expiration dates, time out of refrigeration, inventory levels, safety information, usage statistics, known contraindications and warnings, etc. If the details indicate that there is a problem with a particular pharmaceutical (e.g., that it is counterfeit, expired, suspect, spoiled, recalled or almost depleted), then a message or warning is automatically delivered to a human operator via an attached output device, such as a display screen, speaker or printer. Embodiments of the invention may also be configured to monitor and report temperature faults, power failures and other anomalies associated with the refrigerator or cold storage compartment.",
	"url": null,
	"owner": "Merck Sharp & Dohme Corp.",
	"publication_number": "07775056",
	"publication_date": "2010-08-17",
	"application_number": "11913096",
	"application_date": "2007-01-12",
	"tags": null,
	"slug": "intelligent-refrigerator-for-storing-pharmaceutical-product-containers",
	"match_type": "description"
},
{
	"name": "Missing index analysis and index useage statistics",
	"summary": "",
	"abstract": "A method of accumulating and aggregating statistics concerning the use of database table indexes includes using a plurality of counters to register index use. The plurality of counters allow multiple instances of index usage to be recorded simultaneously. A missing index may be detected using an optimal index in a query plan. The optimal index is compared against the available indexes to determine if an index is missing. Statistics may be gathered against the used and missing indexes.",
	"url": null,
	"owner": "Microsoft Cororation",
	"publication_number": "07769744",
	"publication_date": "2010-08-03",
	"application_number": "11292679",
	"application_date": "2005-12-02",
	"tags": null,
	"slug": "missing-index-analysis-and-index-useage-statistics",
	"match_type": "description"
},
{
	"name": "System and method for adaptive interpolation of images from patterned sensors",
	"summary": "",
	"abstract": "A adaptive filter interpolation method and system for the demosaicing of color images. In general, input pixels are input in a Bayer-mosaiced pattern (only one color per pixel), and output pixels are in full RGB mode (three color values per pixel). For each pixel location, in raster scan order, the processing steps can be summarized as follows. Following a regular raster scanning order (from left to right and top to bottom), for each pixel location horizontal and vertical gradients are first computed (whose computation depends on the available color for that pixel), and from those the appropriate interpolation filters are chosen from a small set of predetermined filters. Then, the chosen filters are applied to interpolate the missing data.",
	"url": null,
	"owner": "Microsoft Corp.",
	"publication_number": "07643676",
	"publication_date": "2010-01-05",
	"application_number": "11046324",
	"application_date": "2005-01-29",
	"tags": null,
	"slug": "system-and-method-for-adaptive-interpolation-of-images-from-patterned-sensors",
	"match_type": "description"
},
{
	"name": "Access control and encryption in multi-user systems",
	"summary": "",
	"abstract": "In a storage system, multiple information units are individually associated with an access control policy (ACP) of multiple ACPs. Each respective information unit corresponds to a respective information unit encryption key (IUEK). The multiple information units are grouped into encryption zones based on their associated ACPs. In a described implementation, each ACP is associated with a zone root key (ZRK). In another described implementation, each IUEK corresponding to a given information unit is encrypted by an IUEK corresponding to an information unit at a most-proximate linked node of the storage system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07792301",
	"publication_date": "2010-09-07",
	"application_number": "11427660",
	"application_date": "2006-06-29",
	"tags": null,
	"slug": "access-control-and-encryption-in-multiuser-systems",
	"match_type": "description"
},
{
	"name": "Access control policy engine controlling access to resource based on any of multiple received types of security tokens",
	"summary": "",
	"abstract": "An access control policy engine associated with a resource determines whether to allow a request to access same. The engine receives the request with an security token, retrieves the token determines a type thereof, and maps access decision information in the token to a common format as at least one security claim setting forth adequate information to determine a right of the requestor. Thereafter, the engine retrieves a set of rules for accessing the resource, applies the rules to the security claims to determine whether to allow the request from the requestor, and if the request is to be allowed, provides the requestor access to the resource in accordance with the request and the rights of the requestor as determined based on the security claims.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774830",
	"publication_date": "2010-08-10",
	"application_number": "11080806",
	"application_date": "2005-03-14",
	"tags": null,
	"slug": "access-control-policy-engine-controlling-access-to-resource-based-on-any-of-multiple-received-types-of-security-tokens",
	"match_type": "description"
},
{
	"name": "Access point to access point range extension",
	"summary": "",
	"abstract": "An architecture and methods for extending the depth of a WLAN to a four-level hierarchal access point structure including wireless access points. The wireless access points in the WLAN can be networked by scanning for a network, collecting one or more packets that identify the network from one or more access points, each packet including an address identifying an ancestry of the access points to an ancestral wired access point; and applying an access point selection algorithm to configure a parent access point. The architecture includes a scanning object configured to issue a scan request to a network interface and collect access point data; a selection object configured to filter and sort the collected access point data; an authentication state machine configured to perform authentication and validate; and an association state machine configured to compose a packet including hierarchical data indicative of access point ancestry to a conventional access point.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07664075",
	"publication_date": "2010-02-16",
	"application_number": "11102612",
	"application_date": "2005-04-08",
	"tags": null,
	"slug": "access-point-to-access-point-range-extension",
	"match_type": "description"
},
{
	"name": "Account linking with privacy keys",
	"summary": "",
	"abstract": "A computer system includes a security module programmed to generate a first privacy key for use with secure communications with a first web site, and a second privacy key for use with secure communications with a second web site, the first and second keys being different. The computer system also includes an identity module programmed to receive a request from the first web site for linking a first user account associated with the first web site with a second user account associated with the second web site, and the identity module being programmed to present a user with an option to link the first and second user accounts.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747540",
	"publication_date": "2010-06-29",
	"application_number": "11361780",
	"application_date": "2006-02-24",
	"tags": null,
	"slug": "account-linking-with-privacy-keys",
	"match_type": "description"
},
{
	"name": "Acoustic ranging",
	"summary": "",
	"abstract": "Acoustic ranging may involve determining a distance between a first device and at least one other device using one or more acoustic signals. In an example embodiment, a first device emits a first acoustic signal and then receives the first acoustic signal at a first time. The first device also receives a second acoustic signal at a second time, with the second acoustic signal having been emitted by a second device. The first device ascertains a first value that reflects a difference between the first time and the second time. Responsive to at least the ascertained first value, the first device determines a distance between the first device and the second device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07729204",
	"publication_date": "2010-06-01",
	"application_number": "11868515",
	"application_date": "2007-10-07",
	"tags": null,
	"slug": "acoustic-ranging",
	"match_type": "description"
},
{
	"name": "Active learning framework for automatic field extraction from network traffic",
	"summary": "",
	"abstract": "An active learning framework is provided to extract information from particular fields from a variety of protocols. Extraction is performed in an unknown protocol, in which the user presents the system with a small number of labeled instances. The system then automatically generates an abundance of features and negative examples. A boosting approach is then used for feature selection and classifier combination. The system then displays its results for the user to correct and/or add new examples. The process can be iterated until the user is satisfied with the performance of the extraction capabilities provided by the classifiers generated by the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650317",
	"publication_date": "2010-01-19",
	"application_number": "11567328",
	"application_date": "2006-12-06",
	"tags": null,
	"slug": "active-learning-framework-for-automatic-field-extraction-from-network-traffic",
	"match_type": "description"
},
{
	"name": "Active spam testing system",
	"summary": "",
	"abstract": "A method and system for introducing spam into a search engine for testing purposes is provided. An active spam testing system receives from a tester a specification of spam that is to be introduced into the search engine for testing purposes. The testing system may then generate auxiliary data structures for storing indications of the spam that is to be introduced. A search engine has original data structures that may include a content index and a link data structure. The testing system stores the indications of the spam in the auxiliary data structures so that use of the search engine for non-testing purposes is not affected. When the search engine is used for testing purposes, the search engine generates search results based on a combination of the original data structures and the auxiliary data structures.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680851",
	"publication_date": "2010-03-16",
	"application_number": "11682971",
	"application_date": "2007-03-07",
	"tags": null,
	"slug": "active-spam-testing-system",
	"match_type": "description"
},
{
	"name": "Adaptation of exponential models",
	"summary": "",
	"abstract": "A method and apparatus are provided for adapting an exponential probability model. In a first stage, a general-purpose background model is built from background data by determining a set of model parameters for the probability model based on a set of background data. The background model parameters are then used to define a prior model for the parameters of an adapted probability model that is adapted and more specific to an adaptation data set of interest. The adaptation data set is generally of much smaller size than the background data set. A second set of model parameters are then determined for the adapted probability model based on the set of adaptation data and the prior model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860314",
	"publication_date": "2010-12-28",
	"application_number": "10977871",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "adaptation-of-exponential-models",
	"match_type": "description"
},
{
	"name": "Adaptive flow control protocol and kernel call handling",
	"summary": "",
	"abstract": "A method and system for directing data transfers between applications and devices residing on different computers or devices using an adaptive flow control protocol has been described. When an application or device requests to transfer data with another application or device, adaptive flow control protocol adapts the way data is transferred by observing when an application that is receiving data posts a receive buffer and detects the receive buffer's size. Based upon the application's or device's behavior, the adaptive flow control protocol transfers the data in a mode that is best suited for the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707589",
	"publication_date": "2010-04-27",
	"application_number": "11148749",
	"application_date": "2005-06-08",
	"tags": null,
	"slug": "adaptive-flow-control-protocol-and-kernel-call-handling",
	"match_type": "description"
},
{
	"name": "Adaptive picker for selecting data in disparate information systems",
	"summary": "",
	"abstract": "An adaptive picker for selecting data in disparate information systems is provided. The adaptive picker may be implemented by an application to pick items from one or more data stores, which are associated with other applications. The adaptive picker determines items provided by the data store that are available for picking and the types of data associated with the items. The adaptive picker receives key information provided by a user through the first application and searches for the available items based on the key information. The adaptive picker also filters the items to identify a desired item. The adaptive picker can determine the filtering capabilities associated with the data stores and automatically adapt to these filtering capabilities. The adaptive picker can retrieve a desired item with a key information search that matches the key information with a unique identifier associated with desired item. The key information search enables a user to pick an item without browsing. If the search returns multiple items, the adaptive picker can provide a disambiguation menu for selecting the desired. The search results can also be filtered by context determined by the adaptive filter. The context may include any parameter, such as the identity of a user, the time of day, an application the user is working within, an organizational discipline of the user, or the like.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647304",
	"publication_date": "2010-01-12",
	"application_number": "11222702",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": "adaptive-picker-for-selecting-data-in-disparate-information-systems",
	"match_type": "description"
},
{
	"name": "Aggregating metadata for media content from multiple devices",
	"summary": "",
	"abstract": "Collecting and augmenting metadata associated with media content stored on a plurality of devices for display to a user. The collected metadata remains available (e.g., visible) to a user after the device storing the corresponding media content is offline, disconnected, or otherwise unavailable. In particular, the invention permits metadata associated with media content stored on one or more devices (e.g., consumer electronic devices) to be enumerated, obtained, and promoted into another device (e.g., a personal computer) such that the metadata may be treated as if the media content is stored on the other device (e.g., the personal computer). In particular, the invention automatically detects an event generated in response to an action by a first device storing a media file. In response to the detected event, the invention matches and obtains metadata for the media content stored in the media file. A user organizes or otherwise manipulates the obtained metadata, for example, via a media player.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650563",
	"publication_date": "2010-01-19",
	"application_number": "10873599",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": "aggregating-metadata-for-media-content-from-multiple-devices",
	"match_type": "description"
},
{
	"name": "Aggregation of the knowledge base of antivirus software",
	"summary": "",
	"abstract": "In accordance with this invention, a system, method, and computer-readable medium that aggregates the knowledge base of a plurality of antivirus software applications are provided. User mode applications, such as antivirus software applications, gain access to file system operations through a common information model, which obviates the need for antivirus software vendors to create kernel mode filters. When file system operations are available to antivirus software applications, the present invention may cause each antivirus software application installed on a computing device to perform a scan to determine if the data is malware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765400",
	"publication_date": "2010-07-27",
	"application_number": "10984615",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "aggregation-of-the-knowledge-base-of-antivirus-software",
	"match_type": "description"
},
{
	"name": "Aligning hierarchal and sequential document trees to identify parallel data",
	"summary": "",
	"abstract": "A set of candidate parallel pages is identified based on trigger words in one or more pages downloaded from a given network location (such as a website). A set of document trees representing each of the candidate pages are aligned to identify translationally parallel content and hyperlinks. The parallel content is further fed into conventional sentence aligner for parallel sentences. And the parallel hyperlinks usually refer to other parallel documents, and lead to a recursive mining of parallel documents.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805289",
	"publication_date": "2010-09-28",
	"application_number": "11483941",
	"application_date": "2006-07-10",
	"tags": null,
	"slug": "aligning-hierarchal-and-sequential-document-trees-to-identify-parallel-data",
	"match_type": "description"
},
{
	"name": "Analysis hints",
	"summary": "",
	"abstract": "A system and method for assisting with analysis and recognition of ink is described. Analysis hints may be associated with a field. The field may receive electronic ink. Based on the identity of the field and the analysis hint associated with it, at least one of analysis and recognition of ink may be assisted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07643687",
	"publication_date": "2010-01-05",
	"application_number": "11083106",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": "analysis-hints",
	"match_type": "description"
},
{
	"name": "Analysis of media content via extensible object",
	"summary": "",
	"abstract": "A system and method are provided for analyzing media content and generating related metadata as it is provided to a computer. In one embodiment, the system includes an extensible analysis object managing a plurality of plug-ins for analyzing the media content and generating metadata related to the media content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730047",
	"publication_date": "2010-06-01",
	"application_number": "11400141",
	"application_date": "2006-04-07",
	"tags": null,
	"slug": "analysis-of-media-content-via-extensible-object",
	"match_type": "description"
},
{
	"name": "API communications for vertex and pixel shaders",
	"summary": "",
	"abstract": "A three-dimensional API for communicating with hardware implementations of vertex shaders and pixel shaders having local registers. With respect to vertex shaders, API communications are provided that may make use of an on-chip register index and API communications are also provided for a specialized function, implemented on-chip at a register level, that outputs the fractional portion(s) of input(s). With respect to pixel shaders, API communications are provided for a specialized function, implemented on-chip at a register level, that performs a linear interpolation function and API communications are provided for specialized modifiers, also implemented on-chip at a register level, that perform modification functions including negating, complementing, remapping, stick biasing, scaling and saturating. Advantageously, these API communications expose these very useful on-chip graphical algorithmic elements to a developer while hiding the details of the operation of the vertex shader and pixel shader chips from the developer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07659902",
	"publication_date": "2010-02-09",
	"application_number": "11426485",
	"application_date": "2006-06-26",
	"tags": null,
	"slug": "api-communications-for-vertex-and-pixel-shaders",
	"match_type": "description"
},
{
	"name": "API for programmatic retrieval and replay of database trace",
	"summary": "",
	"abstract": "Trace and replay objects can be designed to automatically perform operations concerning database trace data upon invocation by custom computer processes. Trace data can be saved to any of variety of locations. It can be manipulated for the purpose of storage or replay. Trace data can be played back against any database server using numerous replay configuration options. Replay notifications allow data to be changed just before it is submitted to a database for execution, and allow immediate examination of replay results and validation of playback correctness. Thus, trace and replay objects greatly simplify manageability of trace data. Custom processes can now completely automate security audit and health monitoring of traced database servers. Automatic verification of new server releases and security packs can also be performed. Custom processes can use the provided objects to flexibly access and manipulate the retrieval, storage, and replay of database trace data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07822741",
	"publication_date": "2010-10-26",
	"application_number": "10872633",
	"application_date": "2004-06-21",
	"tags": null,
	"slug": "api-for-programmatic-retrieval-and-replay-of-database-trace",
	"match_type": "description"
},
{
	"name": "Apparatus and computer-readable media for determining whether an existing map specifies a different content type than the content type that is specified for the specified resource name extension in a web distributed authoring and versioning (WebDAV) request",
	"summary": "",
	"abstract": "Various embodiments of the invention are directed to closely integrating functionality between an internet server and a WebDAV tool. Areas of specific focus in this document include delegation of duties between the internet server and the WebDAV tool, efficient management of a resource's content-type, support for segregation of a namespace into separate virtual roots, and determinations of whether to invoke certain processing extensions to handle requests for a given HTTP verb.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689564",
	"publication_date": "2010-03-30",
	"application_number": "10954746",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "apparatus-and-computerreadable-media-for-determining-whether-an-existing-map-specifies-a-different-content-type-than-the-content-type-that-is-specified-for-the-specified-resource-name-extension-in-a-web-distributed-authoring-and-versioning-webdav-req",
	"match_type": "description"
},
{
	"name": "Application domain manager",
	"summary": "",
	"abstract": "An application domain manager enables a host application to create, initialize, customize, and otherwise manage an isolation construct within the application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647582",
	"publication_date": "2010-01-12",
	"application_number": "11040337",
	"application_date": "2005-01-20",
	"tags": null,
	"slug": "application-domain-manager",
	"match_type": "description"
},
{
	"name": "Application launching via indexed data",
	"summary": "",
	"abstract": "Application launching on a computer via indexed data. Based on a search term entered by a user, the computer searches an index containing metadata representative of one or more applications installed on the computer. A user interface on the computer's display has a window for displaying the results of searching the index. In addition, the user interface receives user input to select an application from the search results to be initiated. The computer is responsive to the user input via the user interface for initiating the selected application installed on the computer. A computer-readable medium including a persistent component, an index component, a query component, and an execution component embodies further aspects of the invention.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720834",
	"publication_date": "2010-05-18",
	"application_number": "11159821",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": "application-launching-via-indexed-data",
	"match_type": "description"
},
{
	"name": "Application migration file scanning and conversion",
	"summary": "",
	"abstract": "An application migration planning manager is provided for scanning and reporting compatibility information of stored application files, followed by conversion of selected files from a first application version format to a target application version format. A scanning module scans selected files to determine whether the scanned files are formatted according to application versions that may be incompatible with target application versions. A reporting module reports the compatibility data for the scanned files. If scanned files include multiple versions of a given document or data, the scanned files may be passed to a version extraction module for stripping the files of all but a single version of the given document or data. Each stripped version may be saved as a separate additional file. The version-stripped files and the saved additional files then may be reported back to the reporting module for further processing. Scanned files may be automatically or manually sent to a file converter module where they may be converted to a target application version.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07778983",
	"publication_date": "2010-08-17",
	"application_number": "11714690",
	"application_date": "2007-03-06",
	"tags": null,
	"slug": "application-migration-file-scanning-and-conversion",
	"match_type": "description"
},
{
	"name": "Application of data-binding mechanism to perform command binding",
	"summary": "",
	"abstract": "A data-binding engine is used to perform command binding. A data binding engine binds user interface controls such as buttons, menus, list boxes, etc. to commands exposed on an application model. A data source and data binding path may be specified in a markup language that defines how the commands are bound to UI elements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653880",
	"publication_date": "2010-01-26",
	"application_number": "10822910",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": "application-of-databinding-mechanism-to-perform-command-binding",
	"match_type": "description"
},
{
	"name": "Application program interface for programmable graphics pipeline",
	"summary": "",
	"abstract": "Systems and methods that optimize GPU processing by front loading activities from a set time/binding time to creation time via enhancements to an API that configures the GPU. Such enhancements to the API include: implementing layering arrangements, employing state objects and view components for data objects; incorporating a pipeline stage linkage/signature, employing a detection mechanism to mitigate error conditions. Such an arrangement enables front loading of the work and reduction of associated API calls.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07659901",
	"publication_date": "2010-02-09",
	"application_number": "11565326",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "application-program-interface-for-programmable-graphics-pipeline",
	"match_type": "description"
},
{
	"name": "Application program interfaces and structures in a resource limited operating system",
	"summary": "",
	"abstract": "A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . The hard disk, magnetic disk, optical disk, ROM, RAM, and the like can be termed computer readable-storage media. A user may enter commands and information into the personal computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, touch sensitive pad, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port, or a universal serial bus (USB). In addition, input to the system may be provided by a microphone to receive audio input.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802266",
	"publication_date": "2010-09-21",
	"application_number": "10986476",
	"application_date": "2004-11-11",
	"tags": null,
	"slug": "application-program-interfaces-and-structures-in-a-resource-limited-operating-system",
	"match_type": "description"
},
{
	"name": "Application program interfaces for semantically labeling strings and providing actions based on semantically labeled strings",
	"summary": "",
	"abstract": "Application program interfaces (API) are provided for labeling strings while a user is creating a document and providing user actions based on the type of semantic label applied to the string. A recognizer API is provided and includes properties and methods or instructions which allow recognizer plug-ins to semantically label strings of text or cells or information. An action API is provided and includes properties and methods that are called upon when a user initiates particular actions such as opening a web browser, going to a particular URL, or opening an instance of a word processing or spreadsheet program. After the strings are annotated with a type label, application program modules may use the type label to provide users with a choice of actions. If the user's computer does not have any actions associated with a type label, the user may be provided with the option to surf to a download Uniform Resource Locator (URL) and download action plug-ins for that type label. One or more recognizer plug-ins perform the recognition of particular strings in an electronic document. The recognizer plug-ins may be packaged with an application program module or they may be written by third parties to recognize particular strings that are of interest. One or more action plug-ins provide possible actions to be presented to the user based upon the type label associated with the string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712024",
	"publication_date": "2010-05-04",
	"application_number": "09906467",
	"application_date": "2001-07-16",
	"tags": null,
	"slug": "application-program-interfaces-for-semantically-labeling-strings-and-providing-actions-based-on-semantically-labeled-strings",
	"match_type": "description"
},
{
	"name": "Application programming interface for implementing directory service access using directory service markup language",
	"summary": "",
	"abstract": "A set of DSML application programming interface (DSML API) functions is provided to facilitate the implementation of DSML-based directory service access. The DSML API includes a DSML document API class for building or accessing a DSML payload, and a DSML connection API class that handles connection and transport to a DSML server. To access a directory service, the client calls functions of the DSML document API class to generate a DSML request payload, and calls functions of the DSML connection API to transport a packet with the DSML request payload according to a pre-selected connection protocol, such as SOAP, to the DSML server for forwarding to the directory service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07668902",
	"publication_date": "2010-02-23",
	"application_number": "10449573",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": "application-programming-interface-for-implementing-directory-service-access-using-directory-service-markup-language",
	"match_type": "name"
},
{
	"name": "Application programming interface techniques for accessing operating system resources",
	"summary": "",
	"abstract": "An operating system includes APIs developed in part to support recent innovations in computer hardware and in part to provide enhanced services to application programs. Among their other features, these APIs provide access to operating system functionality in a manner that is comprehensive, efficient, usable, extendible and, in some cases, reusable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730500",
	"publication_date": "2010-06-01",
	"application_number": "11001248",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": "application-programming-interface-techniques-for-accessing-operating-system-resources",
	"match_type": "name"
},
{
	"name": "Application programming interface to the simple object access protocol",
	"summary": "",
	"abstract": "Systems and computer-readable media implementing methods for providing an application programming interface (API) to the Simple Object Access Protocol (SOAP) are described. The API provides mechanisms for creating all parts of SOAP request messages, for sending the created messages over HTTP to a remote server, and, if the request is successful, for retrieving the response from the remote server, or, in the case of failure, for accessing whatever error information is available. The information passed through the API can be in the form of parameters which allows both the SOAP protocol and the applications that use it to change without requiring changes to the API itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644415",
	"publication_date": "2010-01-05",
	"application_number": "11099320",
	"application_date": "2005-04-04",
	"tags": null,
	"slug": "application-programming-interface-to-the-simple-object-access-protocol",
	"match_type": "name"
},
{
	"name": "Application-centric user interface techniques",
	"summary": "",
	"abstract": "Various application-centric user interface techniques are described. A user can easily launch, add, or update applications. An application-centric activity center can be presented as part of a user interface for an operating system shell. A file defining metadata for an application can be defined. The techniques can be applied to game-related software.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07846023",
	"publication_date": "2010-12-07",
	"application_number": "10402346",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": "applicationcentric-user-interface-techniques",
	"match_type": "description"
},
{
	"name": "Approximating function properties with expander graphs",
	"summary": "",
	"abstract": "Function properties may be approximated using an expander graph. For example, an approximate average of a function may be determined by randomly exploring an expander graph. Values of the function are associated with vertices of the expander graph. The expander graph is randomly explored by traversing edges and encountering vertices. The exploration may comprise a crawl, a walk, and so forth. An approximate average of the function is determined based on the function values that are associated with encountered vertices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680871",
	"publication_date": "2010-03-16",
	"application_number": "11275625",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": "approximating-function-properties-with-expander-graphs",
	"match_type": "description"
},
{
	"name": "Associating information with an electronic document",
	"summary": "",
	"abstract": "A system for associating information comprises an association module that uses anchoring information to associate a first piece of information with a second piece of information, wherein the second piece of information is not part of the first piece of information. The system further includes a rendering module that presents the second piece of information for use. Methods for using such a system are also described.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734631",
	"publication_date": "2010-06-08",
	"application_number": "11227937",
	"application_date": "2005-09-15",
	"tags": null,
	"slug": "associating-information-with-an-electronic-document",
	"match_type": "description"
},
{
	"name": "Audio application programming interface",
	"summary": "",
	"abstract": "An audio application programming interface (API) enables an audio processing graph to be modified during processing. If they are received while the audio graph is playing or paused, graph modifying commands may be inserted into either an asynchronous command queue or a deferred command queue. The audio API may also include a clock manager for synchronizing clocks from a number of different connected audio rendering devices, applications, processors, functions, operations, modules, or other resources. The clock manager may provide an interface that enables a number of control groups to be defined. Each such control group may include a master clock, a slave clock, and a control.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07746803",
	"publication_date": "2010-06-29",
	"application_number": "11241004",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "audio-application-programming-interface",
	"match_type": "name"
},
{
	"name": "Auditing authorization decisions",
	"summary": "",
	"abstract": "The auditing of authorization decisions is facilitated by integrating or coupling an audit policy to access control decisions. In an example implementation, an audit policy of an auditing scheme is coupled to a semantic framework of an access control scheme such that the audit policy is specified using at least a portion of the semantic framework. In another example implementation, audit policy rules include audit content rules that specify what audit information from any of the inputs, the outputs, or the internal data of authorization decisions is to be included in an audit record. In yet another example implementation, a semantic of an audit trigger rule comports with a semantic framework of an access request and of a logical evaluation for an authorization decision.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07814534",
	"publication_date": "2010-10-12",
	"application_number": "11530439",
	"application_date": "2006-09-08",
	"tags": null,
	"slug": "auditing-authorization-decisions",
	"match_type": "description"
},
{
	"name": "Authenticating third party products via a secure extensibility model",
	"summary": "",
	"abstract": "Secure extensibility access to application program interfaces (APIs) is described. Techniques are described in which trust indicia are used determine relative trustworthiness of an extensibility module attempting to access of APIs of an application module. Access to APIs of the application module is managed based upon trustworthiness of the extensibility module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730539",
	"publication_date": "2010-06-01",
	"application_number": "11256671",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": "authenticating-third-party-products-via-a-secure-extensibility-model",
	"match_type": "description"
},
{
	"name": "Automated application configuration using device-provided data",
	"summary": "",
	"abstract": "Described is a technology by which a device pre-enables application programs of a computer system to work with the device when the device is connected to the computer system. A set of data is obtained from a device, such as by an installer at installation time. The set of data includes information that identifies one or more computer system application programs that the device desires to work with when each application program runs. When the data set is obtained, the application program is enabled (e.g., given appropriate permissions) such that the application program may communicate data with the device when the program is run on the computer system. In one implementation, a device driver provides an installer with access to the data set, which may also include additional information such as application configuration parameters. The installer may be automatically run on the computer system upon initial device detection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07779427",
	"publication_date": "2010-08-17",
	"application_number": "11335234",
	"application_date": "2006-01-18",
	"tags": null,
	"slug": "automated-application-configuration-using-deviceprovided-data",
	"match_type": "description"
},
{
	"name": "Automated construction of shader programs",
	"summary": "",
	"abstract": "Although GPUs have been harnessed to solve non-graphics problems, these solutions are not widespread because GPUs remain difficult to program. Instead, an interpreter simplifies the task of programming a GPU by providing language constructs such as a set of data types and operations that are more familiar to non-graphics programmers. The interpreter maps these familiar language constructs to the more difficult graphics programming resources such as DirectXu00ae, OpenGLu00ae, Cgu00ae, and/or HLSLu00ae.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07733347",
	"publication_date": "2010-06-08",
	"application_number": "11255751",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": "automated-construction-of-shader-programs",
	"match_type": "description"
},
{
	"name": "Automated response to computer users context",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations the providing includes receiving from a first client an indication of an interest in receiving values for an indicated one of the state attributes of the modeled current state, receiving from a second client an indication of an interest in receiving values for another of the state attributes of the modeled current state, and, in response to receiving a value for the indicated one attribute from a first source, determining that the first client has an interest in receiving the received value and supplying the received value to the first client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734780",
	"publication_date": "2010-06-08",
	"application_number": "12049898",
	"application_date": "2008-03-17",
	"tags": null,
	"slug": "automated-response-to-computer-users-context",
	"match_type": "description"
},
{
	"name": "Automated test case verification that is loosely coupled with respect to automated test case execution",
	"summary": "",
	"abstract": "A system and method for verifying the systemic results of an action applied to an application and for providing the expected state of the application at any time or on demand, in which a verification manager determines an expected application state and a current application state of the application, a test case in communication with the verification manager executes the action, and the verification manager compares the expected application state and the current application state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07823132",
	"publication_date": "2010-10-26",
	"application_number": "10953437",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": "automated-test-case-verification-that-is-loosely-coupled-with-respect-to-automated-test-case-execution",
	"match_type": "description"
},
{
	"name": "Automatic accompaniment for vocal melodies",
	"summary": "",
	"abstract": "A method for generating an accompaniment for a recorded audio melody includes providing a recorded audio melody that includes segments; performing a frequency analysis of the recorded audio melody; summing the total duration of each fundamental frequency within a segment of the melody; based on the summing, computing a probability for each possible chord for each segment; based on the computed probabilities, selecting a set of chords for the segments; and outputting the set of chords as an accompaniment for the recorded audio melody. Various other methods, devices, systems, etc. are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07705231",
	"publication_date": "2010-04-27",
	"application_number": "11945805",
	"application_date": "2007-11-27",
	"tags": null,
	"slug": "automatic-accompaniment-for-vocal-melodies",
	"match_type": "description"
},
{
	"name": "Automatic rules-based device synchronization",
	"summary": "",
	"abstract": "Automatic rules-based synchronization of digital files on a source device and a target device coupled to it. A source computer executes a synchronization engine for managing transfer of files from a source database to a target device coupled to the computer as a function of a defined storage capacity of the device. The synchronization engine is configured to receive user-defined rules for selecting which of the files are to be transferred to the device and assigning priorities to the files. The synchronization engine builds a designated list of the files to be transferred according to the priorities defined by the rules.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647346",
	"publication_date": "2010-01-12",
	"application_number": "11092354",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": "automatic-rulesbased-device-synchronization",
	"match_type": "description"
},
{
	"name": "Automatic update of computer-readable components to support a trusted environment",
	"summary": "",
	"abstract": "The present automatic update mechanism provides a method for determining whether computer-readable components loaded within a memory device are at a level of protection specified for protected content that a media application is attempting to process. If a current level of protection provides lower protection that the level specified, a file is updated to achieve at least the level of protection specified by the protected content. Updating the file to achieve the level of protection is performed in a manner that minimizes rebooting of a computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650492",
	"publication_date": "2010-01-19",
	"application_number": "11184556",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": "automatic-update-of-computerreadable-components-to-support-a-trusted-environment",
	"match_type": "description"
},
{
	"name": "Automatic upgrade of pluggable components",
	"summary": "",
	"abstract": "When a component is to be loaded or executed, the version of the component to be loaded may be compared with available versions of the component. If an upgraded version of the component is available, the upgraded version of the component may be enabled to dynamically and deterministically update itself. The component may be an object in an object model. The upgraded version of the component may update itself by calling an update method. The component may be upgraded with minimum user intervention, dynamically as the object is loaded.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788662",
	"publication_date": "2010-08-31",
	"application_number": "10900827",
	"application_date": "2004-07-28",
	"tags": null,
	"slug": "automatic-upgrade-of-pluggable-components",
	"match_type": "description"
},
{
	"name": "Automatically targeting and filtering shared network resources",
	"summary": "",
	"abstract": "Embodiments are provided to automatically target shared resources in a computer network which are pertinent to a query for information from a client and/or a server through the use of a shared resources portal. In one embodiment, a query is received in the shared resources portal from a requestor. The portal may then identify a target resource server to which to route the query by filtering the information provided by a number of shared resource servers in the network against information regarding an organizational role performed by the requester. The identified target resource server may be one which provides information pertinent to the organizational role performed by the requester. The query is then processed in the identified target resource server.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716365",
	"publication_date": "2010-05-11",
	"application_number": "11807591",
	"application_date": "2007-05-29",
	"tags": null,
	"slug": "automatically-targeting-and-filtering-shared-network-resources",
	"match_type": "description"
},
{
	"name": "Automatically targeting notifications about events on a network to appropriate persons",
	"summary": "",
	"abstract": "Automatically notifying, in response to an event associated with a particular server and/or application on a network, only appropriate person(s) such as, for example, only the IT member(s) responsible for supporting the server and/or application. The work schedules and the work schedule exceptions of one or more persons may be taken into account when determining whom to notify of an event on a network. Event information may be received. In response, subscription information for a plurality of subscribers may be accessed, which may include any of: one or more applications for which the subscriber is responsible; one or more servers for which the subscriber is responsible; a work schedule of the subscriber for receiving notifications, and one or more exceptions to this schedule. At least one subscriber may be selected by comparing this information to the event information, and a notification may be sent to the at least one subscriber.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07743137",
	"publication_date": "2010-06-22",
	"application_number": "11052147",
	"application_date": "2005-02-07",
	"tags": null,
	"slug": "automatically-targeting-notifications-about-events-on-a-network-to-appropriate-persons",
	"match_type": "description"
},
{
	"name": "Automation of bare metal recoveries",
	"summary": "",
	"abstract": "Completely recovering data stored on a hard disk or other computer-readable media of a computing system from scratch in an automated manner. Recovery information and post-restore customization data are stored on the backup medium that stores the backup of the computer-readable media of the computing system (e.g., operating system, application programs, user data, application data, etc.). The computing system is rebooted into a recovery environment where a recovery script automates the recovery of the backup. The recovery information and post-restore customization data are applied to the offline, recovered backup to ensure continuity. The computing system is rebooted into the recovered backup.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694165",
	"publication_date": "2010-04-06",
	"application_number": "11744066",
	"application_date": "2007-05-03",
	"tags": null,
	"slug": "automation-of-bare-metal-recoveries",
	"match_type": "description"
},
{
	"name": "Auxiliary data provider",
	"summary": "",
	"abstract": "An exemplary software architecture allows for defining and accessing data and auxiliary data for an item in a navigable namespace. For example, such an exemplary architecture can include a provider engine operable to access data for an item in a navigable namespace, an auxiliary provider engine operable to access auxiliary data for the item and an auxiliary provider class for use in defining the auxiliary data for the item and accessing the auxiliary data for the item. Various other exemplary technologies are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853605",
	"publication_date": "2010-12-14",
	"application_number": "11192536",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": "auxiliary-data-provider",
	"match_type": "description"
},
{
	"name": "Availability and scalability in a messaging system in a manner transparent to the application",
	"summary": "",
	"abstract": "Methods, systems, and computer program products that provide for a runtime messaging infrastructure, which abstracts send and receive operations for exchanging messages with partner endpoint. The messaging infrastructure improves availability and scalability of a message application by improving on the availability and scalability of the underlying message transports. In particular, availability and scalability are improved by linking the message application at runtime with any number of the message transports, without the message application specifying a transport at development time. The message infrastructure receives instructions from the message application specifying end-to-end delivery assurances. The infrastructure uses transports in order to fulfill the specified delivery assurance, and creates a link between the message application and transports for use in exchanging messages. Session state storage can be maintained in a pluggable store, which could be, for example, a durable database store or an application memory store.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693952",
	"publication_date": "2010-04-06",
	"application_number": "10402052",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": "availability-and-scalability-in-a-messaging-system-in-a-manner-transparent-to-the-application",
	"match_type": "description"
},
{
	"name": "Availability data service",
	"summary": "",
	"abstract": "Real time availability data (free/busy data) is provided for potential meeting attendees and/or assets. An availability service is queried for availability data for one or more attendees and/or meeting assets. The availability service determines the identity of an electronic mailbox server on which is stored current real time calendaring data for the desired attendees and/or assets. The requested data is retrieved by the availability service from one or more mailbox servers having data for each attendee and/or asset. Potential attendees may set permissions on their respective availability data to restrict the amount and types of data that may be retrieved by a given data requester. Data queries and data responses may be structured according to the Extensible Markup Language (XML) and application programming interfaces (API) may be exposed for allowing requesting applications to efficiently call the availability service for availability data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849102",
	"publication_date": "2010-12-07",
	"application_number": "11267349",
	"application_date": "2005-11-04",
	"tags": null,
	"slug": "availability-data-service",
	"match_type": "abstract"
},
{
	"name": "Bi-directional data modification with synchronization",
	"summary": "",
	"abstract": "Systems and methods for synchronizing data between endpoints, including the modification of data on an endpoint without necessarily modifying data that is communicated between endpoints are disclosed. In such systems and methods the representation of data on an endpoint may be modified so that constraints on that particular endpoint are enforced, without requiring a similar or the same modification to the data when it is synchronized to other endpoints.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831558",
	"publication_date": "2010-11-09",
	"application_number": "11767001",
	"application_date": "2007-06-22",
	"tags": null,
	"slug": "bidirectional-data-modification-with-synchronization",
	"match_type": "description"
},
{
	"name": "Bifurcation of messages in an extensible message transfer system",
	"summary": "",
	"abstract": "Within a mail transfer agent of a message transfer system, a message is received and if the recipient entity resolves to a number of recipients exceeding a specified quantity, the original message is not processed. Instead, at least two messages are created, with each of the created messages addressed to a subset of the original set of recipients. The created messages are returned to the calling module for processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730140",
	"publication_date": "2010-06-01",
	"application_number": "11067776",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": "bifurcation-of-messages-in-an-extensible-message-transfer-system",
	"match_type": "description"
},
{
	"name": "Binary function database system",
	"summary": "",
	"abstract": "A binary function database system is provided in which binary functions are extracted from compiled and linked program files and stored in a database as robust abstractions which can be matched with others using one or more function matching heuristics. Such abstraction allows for minor variations in function implementation while still enabling matching with an identical stored function in the database, or with a stored function with a given level of confidence. Metadata associated with each function is also typically generated and stored in the database. In an illustrative example, a structured query language database is utilized that runs on a central database server, and that tracks function names, the program file from which the function is extracted, comments and other associated information as metadata during an analyst's live analysis session to enable known function information that is stored in the database to be applied to binary functions of interest that are disassembled from the program file.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802299",
	"publication_date": "2010-09-21",
	"application_number": "11784801",
	"application_date": "2007-04-09",
	"tags": null,
	"slug": "binary-function-database-system",
	"match_type": "description"
},
{
	"name": "Bluetooth TDI and winsock interface",
	"summary": "",
	"abstract": "A method, apparatus, and computer program product provide applications and application developers with generic access from user mode to the L2CAP layer of Bluetooth by exposing the L2CAP layer to user mode via a socket interface. In particular, a kernel mode primary component and user mode helper component cooperate to expose a Winsock interface to user mode components, and to manage various Bluetooth-specific functions and operations, allowing a user mode user application to access Bluetooth functionality without providing Bluetooth-specific commands or actions, and without being required to use RFCOMM.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07690005",
	"publication_date": "2010-03-30",
	"application_number": "11251978",
	"application_date": "2005-10-17",
	"tags": null,
	"slug": "bluetooth-tdi-and-winsock-interface",
	"match_type": "description"
},
{
	"name": "Bonus depreciation record and proposal system",
	"summary": "",
	"abstract": "A system has been invented that enables recording and proposing bonus depreciations, with a variety of advantageous features. The system enables a computing device to receive user-defined bonus depreciations, receive records of assets, and propose values for the bonus depreciations as applied to the assets. Bonus depreciations may be recorded and associated with several different classifications of assets, enabling the right bonus depreciations to be proposed for the right assets as they are recorded. This may include applying several bonus depreciations to the same assets while maximizing bonus depreciations within statutory requirements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07778892",
	"publication_date": "2010-08-17",
	"application_number": "11449071",
	"application_date": "2006-06-08",
	"tags": null,
	"slug": "bonus-depreciation-record-and-proposal-system",
	"match_type": "description"
},
{
	"name": "Boot negotiation among multiple boot-capable devices",
	"summary": "",
	"abstract": "A first device discovers the capabilities of a second device. The first device determines which of the first device and the second device is to execute a controlling boot image based at least in part on the capabilities of the first device and the second device. A first boot image is executed by the first device when the first device is determined to execute the controlling boot image, the second device to be a resource for the first boot image. The first device sends a second boot image stored on the first device to the second device when the second device is determined to execute the controlling boot image, wherein the first device to be a resource for the second boot image.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818559",
	"publication_date": "2010-10-19",
	"application_number": "11680040",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "boot-negotiation-among-multiple-bootcapable-devices",
	"match_type": "description"
},
{
	"name": "Browser elements for communicating with other browser elements and with external applications",
	"summary": "",
	"abstract": "Browser elements are configurable as web services and communicate using various communication architectures and protocols. Application programming interfaces associated with browser elements configured as web services are accessible to web browsers through web scripting modules.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805728",
	"publication_date": "2010-09-28",
	"application_number": "11687429",
	"application_date": "2007-03-16",
	"tags": null,
	"slug": "browser-elements-for-communicating-with-other-browser-elements-and-with-external-applications",
	"match_type": "abstract"
},
{
	"name": "Business alerts on process instances based on defined conditions",
	"summary": "",
	"abstract": "System and method for notifying a user of an occurrence of a defined condition in a process. The process includes a plurality of event records associated with the process; each of the plurality of event records includes a plurality of data fields having data relating to the process. A subset of the plurality of event records is defined where the subset relates to the defined condition. The data in the defined subset is updated at a predetermined time interval. The user is notified when the updated data of the defined subset indicates that the defined condition has occurred. The subset may alternatively be defined as a function of a current time, a last run time and the defined condition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774359",
	"publication_date": "2010-08-10",
	"application_number": "11114444",
	"application_date": "2005-04-26",
	"tags": null,
	"slug": "business-alerts-on-process-instances-based-on-defined-conditions",
	"match_type": "description"
},
{
	"name": "Bypassing software services to detect malware",
	"summary": "",
	"abstract": "A method, apparatus, and computer readable medium are provided by aspects of the present invention to determine whether a malware is resident on a host computer. In one embodiment, a method determines whether data that is characteristic of malware is loaded in the system memory of a host computer. More specifically, the method includes causing a device communicatively connected to a host computer to issue a request to obtain data loaded in the system memory. Then, when the requested data is received, a determination is made regarding whether the data is characteristic of malware. Since, the method causes data to be obtained directly from system memory without relying on software services on the host computer, malware that employs certain stealth techniques will be identified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757290",
	"publication_date": "2010-07-13",
	"application_number": "11344360",
	"application_date": "2006-01-30",
	"tags": null,
	"slug": "bypassing-software-services-to-detect-malware",
	"match_type": "description"
},
{
	"name": "Calculating and storing data structures including using calculated columns associated with a database system",
	"summary": "",
	"abstract": "Embodiments are provided to calculate and provide information based in part on a defined expression. In an embodiment, a database system can be configured to include a number of calculated columns as part of a database table structure. The database system can be configured to present a calculated result based in part on a determined result type. In one embodiment, a database system can be configured to enable calculated columns to be defined on a table of a database, wherein a component can be used to evaluate an expression associated with a column calculation to determine a proper result type. The proper result type can be stored and used when presenting a result of the calculation. Other embodiments are available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836100",
	"publication_date": "2010-11-16",
	"application_number": "11924838",
	"application_date": "2007-10-26",
	"tags": null,
	"slug": "calculating-and-storing-data-structures-including-using-calculated-columns-associated-with-a-database-system",
	"match_type": "description"
},
{
	"name": "Calibration based beamforming, non-linear adaptive filtering, and multi-sensor headset",
	"summary": "",
	"abstract": "A first set of signals from an array of one or more microphones, and a second signal from a reference microphone are used to calibrate a set of filter parameters such that the filter parameters minimize a difference between the second signal and a beamformer output signal that is based on the first set of signals. Once calibrated, the filter parameters are used to form a beamformer output signal that is filtered using a non-linear adaptive filter that is adapted based on portions of a signal that do not contain speech, as determined by a speech detection sensor.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07813923",
	"publication_date": "2010-10-12",
	"application_number": "11251164",
	"application_date": "2005-10-14",
	"tags": null,
	"slug": "calibration-based-beamforming-nonlinear-adaptive-filtering-and-multisensor-headset",
	"match_type": "description"
},
{
	"name": "Centralized KPI framework systems and methods",
	"summary": "",
	"abstract": "The subject invention pertains to a centralized key performance indicator (KPI) framework and systems and methods of utilization. In particular, KPIs can be defined and centrally stored as data or metadata in a data store. Systems and methods are provided to enable, among other things, KPI definition, storage, identification of defined or available KPIs, and interaction with the KPIs. For instance, an interface is provided to allow KPI data to be requested and retrieved from a source such as a database. A generic application program or users thereof can then interact with and display KPI data without knowing anything a priori about the stored data or the structure thereof.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716253",
	"publication_date": "2010-05-11",
	"application_number": "11050130",
	"application_date": "2005-02-03",
	"tags": null,
	"slug": "centralized-kpi-framework-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Change notification query multiplexing",
	"summary": "",
	"abstract": "In order to efficiently handle change notification requests to a storage system based on a database data store and a database engine, the change notification requests are multiplexed. This can be done by issuing a query which refers, for information about what changes are being tracked, to a data structure. The information about what changes to track for each request to be multiplexed is stored in the data structure. Additionally, information about the request can be stored in the data structure. By adding information to the data structure, the query can be altered without needing to directly modify or reissue the query.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805422",
	"publication_date": "2010-09-28",
	"application_number": "11067778",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": "change-notification-query-multiplexing",
	"match_type": "description"
},
{
	"name": "Changed file identification, software conflict resolution and unwanted file removal",
	"summary": "",
	"abstract": "As computer programs grow more complex, extensible, and connected, it becomes increasingly difficult for users to understand what has changed on their machines and what impact those changes have. An embodiment of the invention is described via a software tool, called AskStrider, that answers those questions by correlating volatile process information with persistent-state context information and change history. AskStrider scans a system for active components, matches them against a change log to identify recently updated and hence more interesting state, and searches for context information to help users understand the changes. Several real-world cases are provided to demonstrate the effectiveness of using AskStrider to quickly identify the presence of unwanted software, to determine if a software patch is potentially breaking an application, and to detect lingering components left over from an unclean uninstallation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765592",
	"publication_date": "2010-07-27",
	"application_number": "10830334",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": "changed-file-identification-software-conflict-resolution-and-unwanted-file-removal",
	"match_type": "description"
},
{
	"name": "Class scheduler for increasing the probability of processor access by time-sensitive processes",
	"summary": "",
	"abstract": "A method and apparatus for enabling a general purpose operating system to maximize the probability of time-sensitive threads, e.g., multimedia threads, gaining access to CPU resources quickly enough to meet the demands of time-sensitive tasks while allowing time-insensitive threads to meet the demands of time-insensitive tasks, is disclosed. The priorities of time-sensitive threads in an operating system are adjusted so that the time-sensitive threads have a high probability of gaining access to CPU resources quickly enough to meet the demands of time-sensitive tasks while allowing time-insensitive threads to meet the demands of time-insensitive tasks. A system responsiveness cell (SRC) value is used to determine how quickly the operating system needs to respond to time-sensitive threads and time-insensitive threads. Priorities of threads are dynamically changed according to the relative CPU resource access requirements of system profile tasks. Criteria for mapping time-sensitive tasks are contained in system profile tasks. Priorities of cross-process groups of time-sensitive threads related to specific instances of tasks are adjusted according to the criteria in the system profile tasks. System profile tasks are stored in a system profile which may vary by machine. Priorities of system profile tasks are the regrouped priorities used by the operating system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802256",
	"publication_date": "2010-09-21",
	"application_number": "11169071",
	"application_date": "2005-06-27",
	"tags": null,
	"slug": "class-scheduler-for-increasing-the-probability-of-processor-access-by-timesensitive-processes",
	"match_type": "description"
},
{
	"name": "Clickable snippets in audio/video search results",
	"summary": "",
	"abstract": "Search results are provided in a format that allows users to efficiently determine whether audio or video documents identified from a search query actually contain the words in the query. This is achieved by returning snippets of text around query term matches and allowing the user to play a segment of the audio signal by selecting a word in the snippet. In other embodiments, markers are placed on a timeline that represents the duration of the audio signal. Each marker represents a query term match and when selected causes the audio signal to begin to play near the temporal location represented by the marker.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680853",
	"publication_date": "2010-03-16",
	"application_number": "11401048",
	"application_date": "2006-04-10",
	"tags": null,
	"slug": "clickable-snippets-in-audiovideo-search-results",
	"match_type": "description"
},
{
	"name": "Client side based data synchronization and storage",
	"summary": "",
	"abstract": "Client side based data synchronization and storage is accomplished through a smart way of data off-lining coupled with a synchronization technique implemented on the client side that does not require any modifications to the server side. The customized client utilizes the server as a temporary placeholder for document synchronization. Attached documents to an item will be off-loaded from the client based on a predetermined policy. The clients make off-line copies of the items and documents. The server will maintain only the document store skeleton or metadata for such processed items. Any client which has not made an off-line copy of an item will pass a synchronization request via the server to the other clients so that at least one of its peers may upload the document onto the server. The requesting client can then retrieve the item from the server and synchronize/off-line that item on its local store.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720920",
	"publication_date": "2010-05-18",
	"application_number": "11769616",
	"application_date": "2007-06-27",
	"tags": null,
	"slug": "client-side-based-data-synchronization-and-storage",
	"match_type": "description"
},
{
	"name": "Client store synchronization through intermediary store change packets",
	"summary": "",
	"abstract": "The subject invention pertains to systems and methods of data item synchronization. More specifically, the invention concerns synchronization of data entities utilizing an intermediary or shared storage system and associated data store. Each client sync device can include or be associated with an interface that facilitates communication between client synchronization devices and the intermediary storage system. The interface can send change information to the shared store utilizing change data packets including a data change attribute, a prerequisite knowledge attribute and a learned knowledge attribute. The data change attribute can specify changes to be made to certain data, while the attribute can include a complete copy or reference to a complete copy or single instance of data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07778962",
	"publication_date": "2010-08-17",
	"application_number": "11110159",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": "client-store-synchronization-through-intermediary-store-change-packets",
	"match_type": "description"
},
{
	"name": "Clipboard for application sharing",
	"summary": "",
	"abstract": "A software application can be shared by multiple users. A system clipboard of a first computing system is synchronized with a system clipboard of a second computing system when the user of the second computing system is in control of the shared software application. Information contained in the system clipboard of the first computing system is copied to a state buffer and associated with the user who copied the information. The information is returned to the system clipboard when the associated user regains control of the software application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818458",
	"publication_date": "2010-10-19",
	"application_number": "11949730",
	"application_date": "2007-12-03",
	"tags": null,
	"slug": "clipboard-for-application-sharing",
	"match_type": "description"
},
{
	"name": "Collaborative invitation system and method",
	"summary": "",
	"abstract": "A set of collaborative contacts may be selected with an invitation user interface. An invitation to participate in a collaborative activity may be sent to the selected contacts from the invitation user interface or from a collaborative application. The invitation may be received by a collaborative services platform. A user of the collaborative services platform may be presented with the invitation along with an ability to choose one of accept, decline and ignore in response to the invitation. The user may choose to accept, decline or explicitly ignore the invitation, and a response may be sent to the sender of the invitation indicating the user's choice. An application programming interface for a collaborative invitation service of the collaborative services platform may include an invitation element, a send invitation element, a respond to invitation element and a cancel invitation element. The cancel invitation element may be used to cancel issued invitations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752253",
	"publication_date": "2010-07-06",
	"application_number": "11114634",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": "collaborative-invitation-system-and-method",
	"match_type": "abstract"
},
{
	"name": "Collecting user attributes and device attributes to target users with promotions",
	"summary": "",
	"abstract": "The present disclosed system is directed toward a communication and management system that dynamically targets network devices for content deployment, such as application programs, device drivers, configuration files, and registry subhives. Moreover, the present system targets users of network devices for promotions, such as advertisements offered by Internet e-commerce sites. Network devices and their users are targeted through user profiles. User profiles are created when network devices register with the system server and are continually updated with information provided by user activity and event logs that are periodically uploaded from each device. A scalable messaging system provides for data transmission between the system server and among the network devices such that it is neutral as to the specific hardware platforms on which it is implemented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689672",
	"publication_date": "2010-03-30",
	"application_number": "12012608",
	"application_date": "2008-02-04",
	"tags": null,
	"slug": "collecting-user-attributes-and-device-attributes-to-target-users-with-promotions",
	"match_type": "description"
},
{
	"name": "Color management system that supports legacy and advanced color management applications",
	"summary": "",
	"abstract": "The present invention provides method and apparatus for supporting a legacy application programming interface (API) set between a component and a color management system. The legacy API set supports both the new capabilities as well as the legacy capabilities. The color management system determines the format type for an object that is referenced by an API call. If the object is associated with a legacy format, the API call is processed by a legacy processing module. If the object is associated with an advanced format, the API call is processed by an advanced processing module. If a plurality of objects is associated with an API call with mixed formats, the color management system converts some of the objects so that the objects have a consistent format. A common structure supports an object that may have either a legacy format or an advanced format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647347",
	"publication_date": "2010-01-12",
	"application_number": "11276245",
	"application_date": "2006-02-20",
	"tags": null,
	"slug": "color-management-system-that-supports-legacy-and-advanced-color-management-applications",
	"match_type": "abstract"
},
{
	"name": "Color management system that supports legacy and advanced color management applications",
	"summary": "",
	"abstract": "The present invention provides method and apparatus for supporting a legacy application programming interface (API) set between a component and a color management system. The legacy API set supports both the new capabilities as well as the legacy capabilities. The color management system determines the format type for an object that is referenced by an API call. If the object is associated with a legacy format, the API call is processed by a legacy processing module. If the object is associated with an advanced format, the API call is processed by an advanced processing module. If a plurality of objects is associated with an API call with mixed formats, the color management system converts some of the objects so that the objects have a consistent format. A common structure supports an object that may have either a legacy format or an advanced format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647348",
	"publication_date": "2010-01-12",
	"application_number": "11276246",
	"application_date": "2006-02-20",
	"tags": null,
	"slug": "color-management-system-that-supports-legacy-and-advanced-color-management-applications",
	"match_type": "abstract"
},
{
	"name": "Common concurrency runtime",
	"summary": "",
	"abstract": "The common concurrency runtime (CCR) provides a simple and self-consistent set of concurrency primitives that developers can use to more readily split their computation into more discrete chunks that can scale better with additional processors. This set of primitives provides for very scalable applications that are well suited for the coming world of ubiquitous communication and very large scale out for the number of local processors. The CCR may be implemented as a single library in C# that implements channels with input and asynchronous output capabilities, along with an atomic test-and-input primitive. On top of this, richer derived operators (e.g., choice, join, replication, reader-writers, scatter-gather, etc.) may be encoded. Thus, existing C# may be built upon to provide the capability to concurrently issue I/O requests to remote systems while simultaneously performing other functions locally to increase the efficiency of the distributed system. Because it is based on C#, the CCR allows users to take advantage of a well-known programming model to address unique issues in a new programming environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774750",
	"publication_date": "2010-08-10",
	"application_number": "11184285",
	"application_date": "2005-07-19",
	"tags": null,
	"slug": "common-concurrency-runtime",
	"match_type": "description"
},
{
	"name": "Communication of information via an in-band channel using a trusted configuration space",
	"summary": "",
	"abstract": "Communication of information via an in-band channel using a trusted configuration space is provided. The introduction of using a trusted configuration space associated with a computer bus system, such as PCI Expressu00ae (PCIeu2122), for example, enables the design of trusted computing platforms capable of providing compliant devices with assurance that their trusted configuration registers can only be accessed by software running in the trusted software environment. Establishing device trust in the software that initiates trusted configuration requests makes it possible to secure and control access to certain secret, sensitive, or personally-identifiable information these devices may contain (e.g., a uniquely-identifying public key, as described above or certificate which the device provides for revocation purposes).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07779275",
	"publication_date": "2010-08-17",
	"application_number": "11285882",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": "communication-of-information-via-an-inband-channel-using-a-trusted-configuration-space",
	"match_type": "description"
},
{
	"name": "Compaction, de-fragmentation, and merging of virtual storage device of virtual machine",
	"summary": "",
	"abstract": "A computing device is partitioned to include a host partition (HP) instantiated at least in part to provide storage capabilities, and also to include a client partition (CP) instantiated at least in part to consume such storage capabilities of the HP in the form of a virtual storage device at the CP. The HP implements the virtual storage device of the CP as an image file on a physical storage device. The image file at the HP is compacted while the CP is active and employing the corresponding virtual storage device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647468",
	"publication_date": "2010-01-12",
	"application_number": "11408564",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": "compaction-defragmentation-and-merging-of-virtual-storage-device-of-virtual-machine",
	"match_type": "description"
},
{
	"name": "Complete mapping between the XML infoset and dynamic language data expressions",
	"summary": "",
	"abstract": "Converting data to an appropriate format for use with a service. An example method is illustrated where a message including data expressed using dynamic language data expressions is received. The dynamic language data expressions include a tree structure organization for the data. The data expressed using dynamic language data expressions is expressed in an XML data structure. The XML data structure preserves the original tree structure organization for the data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07761484",
	"publication_date": "2010-07-20",
	"application_number": "11673349",
	"application_date": "2007-02-09",
	"tags": null,
	"slug": "complete-mapping-between-the-xml-infoset-and-dynamic-language-data-expressions",
	"match_type": "description"
},
{
	"name": "Compliance interface for compliant applications",
	"summary": "",
	"abstract": "A compliance interface is disclosed that takes in queries from applications which may want to know if they are compliant with associated polices stored on a computing system. The interface can then interpret these queries and provide notifications and instructions to the applications. Notifications may give notice of how a policy may impact an application, and instructions may tell an application how to behave in order to stay compliant with the policies. In one aspect, the interface exposes policies set forth by parents. Via a management control panel, parents can set or alter various policies, stored in a settings store, to protect children from contact with undesirable content. The interface interprets these policies to ensure that applications, such as those provided by third party vendors, are compliant with the wishes set forth in the parents' policies.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802267",
	"publication_date": "2010-09-21",
	"application_number": "11266143",
	"application_date": "2005-11-03",
	"tags": null,
	"slug": "compliance-interface-for-compliant-applications",
	"match_type": "description"
},
{
	"name": "Composite user interface and framework",
	"summary": "",
	"abstract": "Computer-implemented methods of processing contact records are provided. A user may merge and unmerge contact records to control which records are synchronized with each other. Identity claims of records may be compared to identify possible duplicate records. Identity claims may include addresses, phone numbers, instant messenger addresses or other contact data that is likely to be uniquely associated with a contact. When possible duplicate contact records are found, a dialog box is displayed that identifies the possible duplicate records and includes an option for merging the possible duplicate contact records.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734577",
	"publication_date": "2010-06-08",
	"application_number": "11853111",
	"application_date": "2007-09-11",
	"tags": null,
	"slug": "composite-user-interface-and-framework",
	"match_type": "description"
},
{
	"name": "Compositing desktop window manager",
	"summary": "",
	"abstract": "A method and system for rendering a desktop on a computer using a composited desktop model operating system are disclosed. A composited desktop window manager, upon receiving content information from application programs, draws the window to a buffer memory for future reference, and takes advantage of advanced graphics hardware and visual effects to render windows based on content on which they are drawn. The windows may also be rendered based on environment variables including virtual light sources. The frame portion of each window may be generated by pixel shading a bitmap having the appearance of frosted glass based on the content of the desktop on top of which the frame is displayed. Legacy support is provided so that the operating system can draw and render windows generated by legacy applications to look consistent with non-legacy application windows.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07839419",
	"publication_date": "2010-11-23",
	"application_number": "10691450",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": "compositing-desktop-window-manager",
	"match_type": "description"
},
{
	"name": "Computer file system",
	"summary": "",
	"abstract": "A file system that does not conflate item lifetime with the item's inclusion in an organizational structure of the file system is described herein. In addition, the file system's organizational structure is not limited to directory trees, but instead may use any directed acyclic graph (DAG). Items, once stored into the file system, may be maintained until affirmatively deleted by a client of the file system, regardless of whether the item is part of a DAG or not. Items may be placed in file regions, which are conceptual workspaces for a client to control item lifetime and to organize items into any DAG structure of the user's choosing. Items may be concurrently stored in multiple DAGs, and each file region may have one or more independent DAGs. An item's placement in a DAG may also be used to govern file properties such as namespace, security, privacy, and read/write attributes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730114",
	"publication_date": "2010-06-01",
	"application_number": "10985907",
	"application_date": "2004-11-12",
	"tags": null,
	"slug": "computer-file-system",
	"match_type": "description"
},
{
	"name": "Computer interaction based upon a currently active input device",
	"summary": "",
	"abstract": "Described is a computer-implemented system and method that dynamically detects which input device (e.g., pen or mouse) is currently in use, and based on the device, varies a program's user interaction model to better optimize the user's ability to interact with the program via that input device. A tablet input subsystem receives pen and touch data, and also obtains keyboard and mouse data. The subsystem analyzes the data and determines which input device is currently active. The active device is mapped to an interaction model, whereby different user interface appearances, behaviors and the like may be presented to the user to facilitate improved interaction. For example, a program may change the size of user interface elements to enable the user to more accurately scroll and make selections. Timing, tolerances and thresholds may change. Pen hovering can become active, and interaction events received at the same location can be handled differently.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802202",
	"publication_date": "2010-09-21",
	"application_number": "11083896",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": "computer-interaction-based-upon-a-currently-active-input-device",
	"match_type": "description"
},
{
	"name": "Configuration profiles for output cached pages",
	"summary": "",
	"abstract": "Profiles hold cache settings externally from a requesting resource. The external cache settings stored within a profile may be associated with one or more resources. This allows the external cache settings for a group of resources to be managed from one location rather than having to change the internal cache settings for each resource. When a resource is processed by the server, the external cache settings are obtained from a cache profile and applied to the requesting resource. The external cache settings may also be merged with any internal resource settings. As a result of merging the settings some of the external cache settings and/or some of the internal cache settings may be overridden.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756909",
	"publication_date": "2010-07-13",
	"application_number": "11117860",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "configuration-profiles-for-output-cached-pages",
	"match_type": "description"
},
{
	"name": "Configuration system",
	"summary": "",
	"abstract": "A configuration system is described. In an implementation, a method includes determining through execution of a configuration system whether an application qualifies as a member of one or more of a plurality of groups. Each of the groups defines one or more criteria for membership and has at least one corresponding block having configuration data. The determining is performed based on whether the application satisfies the one or more criteria. For each of the groups, of which, the application qualifies as a member, the configuration data of the at least one corresponding block is loaded.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836458",
	"publication_date": "2010-11-16",
	"application_number": "10891543",
	"application_date": "2004-07-15",
	"tags": null,
	"slug": "configuration-system",
	"match_type": "description"
},
{
	"name": "Contact management in a serverless peer-to-peer system",
	"summary": "",
	"abstract": "Systems and methods are described that facilitate the management of contact information, at least some of the contact information related to entities in a serverless, peer-to-peer system. A contact store may store information regarding which other entities of a plurality of other entities are authorized to monitor presence of a user entity. Presence of an entity may generally indicate the willingness and/or ability of the entity to communicate and/or collaborate with other entities, for example. The contact store may also store information regarding which other entities of the plurality of other entities the presence of which should be monitored by the system. A user entity may be able to add contacts to and/or delete contacts from the contact store, for example. The user entity may also be able to modify the contact store to modify which other entities are authorized to monitor presence of the user entity and/or which other entities the presence information of which should be monitored by the system, for example.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07814214",
	"publication_date": "2010-10-12",
	"application_number": "12483507",
	"application_date": "2009-06-12",
	"tags": null,
	"slug": "contact-management-in-a-serverless-peertopeer-system",
	"match_type": "description"
},
{
	"name": "Contact picker interface",
	"summary": "",
	"abstract": "An interface for enabling a user to quickly access contact information automatically displays a list of expected contacts that are most likely to be selected by the user when attention is directed to an appropriate object requiring contact information. When a contact is selected, the corresponding and appropriate contact information is automatically entered. If a user does not select a listed contact, but instead begins manually typing in the contact information then the interface performs a search and displays a list of unexpected contacts having contact information matching the typed input from the user. Various criteria can be used to identify which contacts will be presented to the user and how they will be presented.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802191",
	"publication_date": "2010-09-21",
	"application_number": "12195214",
	"application_date": "2008-08-20",
	"tags": null,
	"slug": "contact-picker-interface",
	"match_type": "description"
},
{
	"name": "Content distribution using network coding",
	"summary": "",
	"abstract": "A content distribution mechanism that relies on cooperative desktop PCs to distribute content is disclosed. The mechanism distributes content in a robust manner by allowing at least one intermediate network node (i.e., between a source and client) to generate and send packets that contain a linear combination of the portions of content available at the node. Such linear combinations may be created by the source and client using at least a portion of the original content file in either encoded or unencoded form. After the client has received enough linearly independent combinations of packets, the original content may be reconstructed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756051",
	"publication_date": "2010-07-13",
	"application_number": "11152754",
	"application_date": "2005-06-13",
	"tags": null,
	"slug": "content-distribution-using-network-coding",
	"match_type": "description"
},
{
	"name": "Context-based routing in multi-hop networks",
	"summary": "",
	"abstract": "Context-based routing in multi-hop networks involves using a context-based routing metric. In a described implementation, respective path values are calculated for respective ones of multiple paths using the context-based routing metric. A path is selected from the multiple paths responsive to the calculated path values. Data is transmitted over at least one link of the selected path. In an example embodiment, the context-based routing metric is ascertained responsive to an estimated service interval (ESI) of a bottleneck link of each path of the multiple paths. In another example embodiment, the context-based routing metric is ascertained responsive to an expected resource consumption (ERC) metric. In an example embodiment of path selection, the path is selected using a context-based path pruning (CPP) technique that involves maintaining multiple local contexts at each intermediate node, with each local context representing at least one partial path.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693939",
	"publication_date": "2010-04-06",
	"application_number": "11745340",
	"application_date": "2007-05-07",
	"tags": null,
	"slug": "contextbased-routing-in-multihop-networks",
	"match_type": "description"
},
{
	"name": "Controlling computer applications' access to data",
	"summary": "",
	"abstract": "Systems and methods are described that control attempts made by an application to access data. In one embodiment, the application is associated with a security token that includes an application ID. In operation, the system receives a request, initiated by the application, for access to the data. The system is configured to evaluate the request for access based in part on comparison of the security token and a listing of approved application IDs associated with the data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802294",
	"publication_date": "2010-09-21",
	"application_number": "11046281",
	"application_date": "2005-01-28",
	"tags": null,
	"slug": "controlling-computer-applications-access-to-data",
	"match_type": "description"
},
{
	"name": "Controlling installation update behaviors on a client computer",
	"summary": "",
	"abstract": "A method for controlling the update installation behavior of a computing device according to installation attributes is presented. When present, a mandatory installation attribute associated with a software update causes the installation process executed on the computing device to disallow a user to selectively not install the software update. A priority installation attribute causes the computing device to request a higher amount of network bandwidth for obtaining the software update's content for installation on the client computing device. A deadline installation attribute associated with the software update causes the computing device to permit a user to selectively not install the software update until an associated deadline passes, at which time the software update is installed without further user interaction. A zero system interruption (ZSI) installation attribute causes the computing device to automatically install the software update without user interaction if the computing device is properly configured.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676448",
	"publication_date": "2010-03-09",
	"application_number": "10799336",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": "controlling-installation-update-behaviors-on-a-client-computer",
	"match_type": "description"
},
{
	"name": "Controlling the listening horizon of an automatic speech recognition system for use in handsfree conversational dialogue",
	"summary": "",
	"abstract": "Conversational dialog with a computer or other processor-based device without requiring push-to-talk functionality. In one embodiment, a computer-implemented method first determines that a user desires to engage in a dialog. Based thereon the method turns on a speech recognition functionality for a period of time referred to as a listening horizon. Upon the listening horizon expiring, the method turns off the speech recognition functionality.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716057",
	"publication_date": "2010-05-11",
	"application_number": "11764082",
	"application_date": "2007-06-15",
	"tags": null,
	"slug": "controlling-the-listening-horizon-of-an-automatic-speech-recognition-system-for-use-in-handsfree-conversational-dialogue",
	"match_type": "description"
},
{
	"name": "Converting information into different formats",
	"summary": "",
	"abstract": "A software layer (filter driver) residing between software components or application programs running locally or on a client across a network and a persistent store of an operating system provides on-the-fly conversions of persistent information formats. The filter driver determines which format a program expects, and dynamically converts the information from its storage format to the format expected by the program. Conversion includes both data format conversion, and conversion of access semantics. Loadable conversion modules are provided for converting application specific formats due to the potential large number of such formats which can be encountered. The filter driver may change the format that information is stored in based on access history or other system requirements. The software components or application programs may be ignorant of the true storage format used by the system, and thus the filter driver can be used to give old versions of software access to information stored in newer formats.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747594",
	"publication_date": "2010-06-29",
	"application_number": "10856656",
	"application_date": "2004-05-28",
	"tags": null,
	"slug": "converting-information-into-different-formats",
	"match_type": "description"
},
{
	"name": "Converting SPARQL queries to SQL queries",
	"summary": "",
	"abstract": "RDF store database designs and efficient techniques for converting SPARQL queries to SQL queries are described that provide faster triplet access, and which can reduce the computational overhead and cost associated with storing large volumes of RDF metadata. In various embodiments RDF data can be stored in de-normalized tables tailored to provide efficient query and storage performance. The provided query conversion techniques provide reliable and efficient query performance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818352",
	"publication_date": "2010-10-19",
	"application_number": "11945110",
	"application_date": "2007-11-26",
	"tags": null,
	"slug": "converting-sparql-queries-to-sql-queries",
	"match_type": "description"
},
{
	"name": "Coordination of set enumeration information between independent agents",
	"summary": "",
	"abstract": "A type server on a first machine assigns a sequential small integer identifier of fixed length to lengthy information. Identifying information using a small integer identifier provides efficiencies in communication between processes on a single machine as well as efficiencies in communication between processes on different machines. Storage of this information is also more efficient. The information so identified may be, for example, interface type. The small integer identifier assigned to the interface types may be assigned in a set enumeration scheme, that is the first interface type encountered when generating a list or table of interfaces types may be assigned the integer identifier u201c1u201d, the second u201c2u201d and so on. Similarly, the small integer identifiers may be assigned whenever a new interface type is encountered during execution. A translation table including interface type name and interface type identifier for may be generated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774405",
	"publication_date": "2010-08-10",
	"application_number": "11130300",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": "coordination-of-set-enumeration-information-between-independent-agents",
	"match_type": "description"
},
{
	"name": "Copy and paste extensibility",
	"summary": "",
	"abstract": "Described is technology allowing computer programs to participate in the copy and paste process at various times. A source program, from which data is requested to be copied to the clipboard, may participate as desired, including, for example, to cancel the copy, or to determine which data formats will be placed on the clipboard, including one or more custom data formats. A target program, to which data may be copied from the clipboard, may also participate as desired, including, for example, to cancel the paste, or to determine which data format will be pasted, which may be a custom data format. In one implementation, events provide notifications and APIs may be called to facilitate the communication.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689925",
	"publication_date": "2010-03-30",
	"application_number": "11225725",
	"application_date": "2005-09-13",
	"tags": null,
	"slug": "copy-and-paste-extensibility",
	"match_type": "description"
},
{
	"name": "Crawling databases for information",
	"summary": "",
	"abstract": "A system facilitates the search engine to search for pieces of information in various databases and application documents without the need to know the specific protocols to communicate with the various databases and application documents, such as Microsoft Excel documents. Despite the multitude of possible protocols which a crawler would have to use to connect to the databases, the system includes a unifying application programming interface to unify the way to access pieces of information in the databases and application documents.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07801880",
	"publication_date": "2010-09-21",
	"application_number": "11096429",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": "crawling-databases-for-information",
	"match_type": "abstract"
},
{
	"name": "Creating adaptive, deferred, incremental indexes",
	"summary": "",
	"abstract": "A request logging component formulates an index that could have been utilized by a query to a database, if the index had existed. The request logging component stores the formulated query as an unsatisfied request. The index creation component creates the index of the database from the unsatisfied request.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734618",
	"publication_date": "2010-06-08",
	"application_number": "11427986",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "creating-adaptive-deferred-incremental-indexes",
	"match_type": "description"
},
{
	"name": "Cross version customization of design environment",
	"summary": "",
	"abstract": "A client or Web application assembly or group of assemblies is bound to a version of shared assemblies associated with a particular targeted execution environment. The targeted execution environment (and thus the version of shared assemblies associated with it) may be selected or detected. A file such as a configuration file is automatically modified. The selected or detected execution environment may be the same as or different than the local version. The client or Web assembly is automatically bound to the targeted shared assemblies. A user interface enables the selection of a particular execution environment. Alternatively, a user interface informs of the detected targeted execution environment and enables the reconfiguration of the Web assembly. This invention provides a mechanism and process for maintaining legacy software after a new software development tool is installed, without deploying a new version of shared assemblies.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694277",
	"publication_date": "2010-04-06",
	"application_number": "10438042",
	"application_date": "2003-05-14",
	"tags": null,
	"slug": "cross-version-customization-of-design-environment",
	"match_type": "description"
},
{
	"name": "Cybersquatter patrol",
	"summary": "",
	"abstract": "An exemplary method includes providing a typographically erroneous domain name, tracing the domain name where tracing includes entering the domain name as part of a URL and recording one or more subsequent URLs, identifying a domain parking service for the domain name based at least in part on information in one of the recorded URLs, determining client identification information in at least one of the recorded URLs where the client identification information identifies a customer of the domain parking service and blocking one or more domain names based at least in part on the client identification information. Other exemplary technologies are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756987",
	"publication_date": "2010-07-13",
	"application_number": "11696580",
	"application_date": "2007-04-04",
	"tags": null,
	"slug": "cybersquatter-patrol",
	"match_type": "description"
},
{
	"name": "Cyclic buffer management",
	"summary": "",
	"abstract": "Systems and methods for cyclic buffer management are described. In one aspect, the systems and methods enable cyclic buffer wrap-around write operations independent of temporary buffer allocations and corresponding multiple data copies. To this end, the systems and methods map the cyclic buffer's physical addresses two-times (u201cdoubly mapu201d) to a consecutive block of virtual memory. When an application desires to write beyond the end of what represents the cyclic buffer, the systems and methods provide a logical pointer to the doubly mapped virtual memory, enabling the application to directly write into the virtual memory from the end of the first cyclic buffer mapping to the beginning of the second cyclic buffer mapping. The memory management operations automatically transfer the data out of this doubly mapped virtual memory into the cyclic buffer for subsequent extraction and presentation to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788463",
	"publication_date": "2010-08-31",
	"application_number": "11674439",
	"application_date": "2007-02-13",
	"tags": null,
	"slug": "cyclic-buffer-management",
	"match_type": "description"
},
{
	"name": "Data binding in a word-processing application",
	"summary": "",
	"abstract": "A word processor application is provided for creating word processor documents wherein the data and presentation can be separated. Data can be stored in a separate location from the presentation surface of the word processor document. Users of the word processor application can establish links (or bindings) between the contents of the data and the presentation surface. A user can modify contents of a word processor document by directly changing the linked data without having to deal with the complexity of the presentation format, which can be constantly changing. A user can modify content of a word processor document, by editing a data store without any knowledge of the current layout of the presentation surface. A user can modify complex backing data through simple document edits, without exposure to the complexities of the data structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730394",
	"publication_date": "2010-06-01",
	"application_number": "11030423",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "data-binding-in-a-wordprocessing-application",
	"match_type": "description"
},
{
	"name": "Data center scheduler",
	"summary": "",
	"abstract": "An exemplary data stream includes value information for use by consumers of global computing resources in making requests for global computing resources. An exemplary method includes receiving information about data center resources from one or more data centers, based at least in part on the information estimating value information for consumption of computing resources of the one or more data centers and streaming the value information via a network. An exemplary medium or media includes instructions to instruct a computing device to receive, from a data stream, value information for computing resources of one or more data centers, to format the value information for display and to issue requests for consumption of at least some of the computing resources. Other methods, devices and systems are also disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860973",
	"publication_date": "2010-12-28",
	"application_number": "12163161",
	"application_date": "2008-06-27",
	"tags": null,
	"slug": "data-center-scheduler",
	"match_type": "description"
},
{
	"name": "Data cube script development and debugging systems and methodologies",
	"summary": "",
	"abstract": "The subject invention pertains to systems and methods that facilitate development and debugging of calculations in a multidimensional data environment or model. Data cube calculation scripts, including those provided in MDX (Multidimensional Expressions), can be executed or applied incrementally. Breakpoints can be set with respect to a calculation script and the cube state can be viewed and queried via a user interface. Users are enabled by the subject systems and methods to step through calculation scripts, identify the effects on a cube, and alter the script if the desired results failed to occur. In addition to debugging, the systems and methods can be employed for initial development of scripts.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694278",
	"publication_date": "2010-04-06",
	"application_number": "11133557",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "data-cube-script-development-and-debugging-systems-and-methodologies",
	"match_type": "description"
},
{
	"name": "Data parsing with annotated patterns",
	"summary": "",
	"abstract": "The subject disclosure pertains to data parsing with patterns or regular expressions. A mechanism is provided for annotating a regular expression with additional information regarding data extraction such as output fields and mapping of the output fields to sub-sections of matched data. A parser can utilize the annotation information to facilitate mapping and transfer of at least a portion of pattern matched data from a source to a destination. The disclosed systems and methods thus enable data to be exacted while it is being matched.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860881",
	"publication_date": "2010-12-28",
	"application_number": "11371449",
	"application_date": "2006-03-09",
	"tags": null,
	"slug": "data-parsing-with-annotated-patterns",
	"match_type": "description"
},
{
	"name": "Data store for software application documents",
	"summary": "",
	"abstract": "A data store is provided for storing, relating and for allowing use of data associated with a computer-generated document. Data for structuring information associated with a document, such as document metadata, is maintained in the data store where relationships between different pieces of data are maintained in a location distinct from the surface level view of a document. The data store exposes interfaces to the various pieces of data in the data store for allowing different applications to access and operate on one or more of the data pieces. The pieces of data may be structured according to a markup language such as the Extensible Markup Language (XML), and XML schemas may be associated with each piece of data for allowing the data store to validate the structure applied to the data based on an XML schema associated with a given piece of data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07668873",
	"publication_date": "2010-02-23",
	"application_number": "11066117",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "data-store-for-software-application-documents",
	"match_type": "description"
},
{
	"name": "Database application including split views",
	"summary": "",
	"abstract": "A database application is provided which includes functionality for providing split views. The database application includes an object model having a number of objects, methods, and properties. The object model preferably includes a form object which includes a split view representation. A number of properties are associated with the split view which provides for the presentation of data to a user of the database application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734664",
	"publication_date": "2010-06-08",
	"application_number": "11159763",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": "database-application-including-split-views",
	"match_type": "description"
},
{
	"name": "Delayed loading and instantiation of resources defined in markup",
	"summary": "",
	"abstract": "Techniques for delayed loading and instantiation of resources in a resource dictionary are provided. These techniques can be used to delay or defer the loading of values (or u201cvalue recordsu201d) into the resource dictionary until the values are actually needed or requested by an application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07823063",
	"publication_date": "2010-10-26",
	"application_number": "11273780",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "delayed-loading-and-instantiation-of-resources-defined-in-markup",
	"match_type": "description"
},
{
	"name": "Delegating right to access resource or the like in access management system",
	"summary": "",
	"abstract": "A resource of a first organization provides access thereto to a requestor of a second organization. A first administrator of the first organization issues a first credential to a second administrator of the second organization, including policy that the second administrator may issue a second credential to the requestor on behalf of the first administrator. The second administrator issues the second credential to the requester, including the issued first credential. The requestor requests access from the resource and includes the issued first and second credentials. The resource validates that the issued first credential ties the first administrator to the second administrator, and that the issued second credential ties the second administrator to the requester. The resource thus knows that the request is based on rights delegated from the first administrator to the requester by way of the second administrator.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770206",
	"publication_date": "2010-08-03",
	"application_number": "11077574",
	"application_date": "2005-03-11",
	"tags": null,
	"slug": "delegating-right-to-access-resource-or-the-like-in-access-management-system",
	"match_type": "description"
},
{
	"name": "Delivering a geographic-specific comprehensive program guide",
	"summary": "",
	"abstract": "Providing a program guide for digital and analog broadcast television channels specific to a geographic region. A computing device sends a program guide request including a geographic identifier to another computing device. In response, the other computing device filters a master program guide as a function of the geographic identifier to create the requested program guide. The created program guide includes a call sign, physical channel, major channel, and content listing for each of the digital broadcast television channels. In one embodiment, the digital broadcast television channels conform the Advanced Television Systems Committee (ATSC) standard.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07793321",
	"publication_date": "2010-09-07",
	"application_number": "10939618",
	"application_date": "2004-09-13",
	"tags": null,
	"slug": "delivering-a-geographicspecific-comprehensive-program-guide",
	"match_type": "description"
},
{
	"name": "Deployment of configuration information",
	"summary": "",
	"abstract": "A system and methods providing the automated configuration management and configuration information communication/deployment for a business process server computing application operating in a distributed computing environment is provided. In an illustrative implementation, a configuration management and configuration information communication/deployment tool operating in a distributed computing environment allows cooperating parties cooperating to operate a business process server computing application to more easily and efficiently update the configuration information of one or components of the business process server computing application responsive to changes in business practice changes between the cooperating parties. In the contemplated implementation, packages are requested by the cooperating parties using the configuration tool. The packages contain information indicative of desired business practice changes and the information required to reconfigure the business application to accommodate such changes. The tool allows for closed loop and real-time testing of the configuration changes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07797403",
	"publication_date": "2010-09-14",
	"application_number": "10193891",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": "deployment-of-configuration-information",
	"match_type": "description"
},
{
	"name": "Design of arbitrary linear and non-linear maps",
	"summary": "",
	"abstract": "Various software mapping aspects are provided. They include, but are not limited to, providing linear map to non-linear map conversion or transformation (and vice versa) in a symmetric fashion, so that data in one map upon conversion is symmetric in another map with respect to the former map. One way this is accomplished is by the use of dual-triangles that are mapped into the former and latter map, by having, in one exemplary aspect, the same vertices in both maps. Additional features, such as selection regions for regions to be converted or not converted are used. Furthermore, dual-triangle subdivision or aggregation techniques can be used to provide a desired mapping scenario. Finally, APIs are presented that allow developers and users of such mapping technology to implement the various aspects disclosed herein.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07649534",
	"publication_date": "2010-01-19",
	"application_number": "11344827",
	"application_date": "2006-02-01",
	"tags": null,
	"slug": "design-of-arbitrary-linear-and-nonlinear-maps",
	"match_type": "description"
},
{
	"name": "Designating, setting and discovering parameters for spreadsheet documents",
	"summary": "",
	"abstract": "For standalone spreadsheet applications and/or Web-based spreadsheet services, the ability to designate, discover and set parameters for spreadsheet documents is provided. When creating a spreadsheet document, the ability to designate certain cells or ranges of cells as parameters to a spreadsheet is enabled. Furthermore, whether viewed in a standalone spreadsheet application or via a Web service, the ability to discover these parameters through the user interface or object model is provided. The ability to set or change these parameters one at a time or in bulk and drive the changes into the calculation model is also provided. Accordingly, whether viewed in a standalone spreadsheet application or via a Web rendering service, the effect of the parameters entered by the user can be calculated and viewed at once. The ability to suspend recalculation of a workbook until all relevant values, such as a current set of parameters, are obtained is also enabled.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752536",
	"publication_date": "2010-07-06",
	"application_number": "11223180",
	"application_date": "2005-09-09",
	"tags": null,
	"slug": "designating-setting-and-discovering-parameters-for-spreadsheet-documents",
	"match_type": "description"
},
{
	"name": "Detection of security vulnerabilities in computer programs",
	"summary": "",
	"abstract": "Methods and systems for analyzing a computer program use static and interprocedural analysis techniques and engines. A data processing operation, such as a function, is automatically identified within the computer program. It is determined whether the function represents a potential source for entry of untrusted data into the computer program. A course of the untrusted data is modeled through the identified function to produce a validation result, such as a call stack. Based on an attribute of the untrusted data (for example, whether the untrusted data is an unbounded integer or a string), it is determined whether the validation result identifies a security vulnerability of the computer program. A security vulnerability may exist, for example, when the modeled course of an unbounded integer through the function produces a buffer overrun in a call stack. The validation result is provided, via an API, software development tool, or user interface, for example.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849509",
	"publication_date": "2010-12-07",
	"application_number": "11246391",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": "detection-of-security-vulnerabilities-in-computer-programs",
	"match_type": "description"
},
{
	"name": "Determining an actual amount of time a processor consumes in executing a portion of code",
	"summary": "",
	"abstract": "Systems and methods are provided that determine the actual amount of time a processor consumes in executing a code portion. The actual execution time of a code portion may be accurately determined by taking into consideration context switches and/or overhead time corresponding to the code portion. Determining the actual execution time of a code portion may include recording context switches and time values that occur during the execution of the code portion. This information along with overhead measurements may be used to generate the actual execution time of a code portion, as will be described in more detail below. For example, the switched-out intervals resulting from the context switches and the overhead time associated with the time measurements may be subtracted from the elapsed time to produce the actual execution time of a code portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774784",
	"publication_date": "2010-08-10",
	"application_number": "11082398",
	"application_date": "2005-03-17",
	"tags": null,
	"slug": "determining-an-actual-amount-of-time-a-processor-consumes-in-executing-a-portion-of-code",
	"match_type": "description"
},
{
	"name": "Determining fields for presentable files",
	"summary": "",
	"abstract": "Fields for presentable files can be determined by an application (i) based on a field type and at least one parameter of the fields and (ii) responsive to raw data and a separate transformation engine, even when the application is unaware of the mechanics of the separate transformation engine. In a described implementation for a given field, the field type indicates that the given field is to be evaluated based on raw data that is referenced by the at least one parameter of the given field. The transformation engine is applied to the referenced raw data to produce a result for the given field that is suitable for presentation. In an example implementation, the transformation engine includes multiples sets of presentation rules that may be selectively established for application to the fields. In an example embodiment, respective presentation rule subsets target respective types of raw data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818668",
	"publication_date": "2010-10-19",
	"application_number": "11109415",
	"application_date": "2005-04-19",
	"tags": null,
	"slug": "determining-fields-for-presentable-files",
	"match_type": "description"
},
{
	"name": "Device color characterization profile format",
	"summary": "",
	"abstract": "A color characterization profile format and data structure are provided for allowing a color management solution to convert colors into or out of a color space. The color characterization profile format contains a color management measurement data portion and a container that is configured to provide digital rights management capabilities over the color characterization profile format. The container can include linked and embedded objects and extensible markup language. Further, the container can be an advanced systems format container. The container can be configured to perform different functions, including enabling private data extensions, operating interface description language, storing a rendering intent separate from the color management measurement data portion, the ability to be edited by a text editor application, operability across a plurality of operating platforms, and preventing a user from tampering with the color characterization profile format.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07813000",
	"publication_date": "2010-10-12",
	"application_number": "10747628",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "device-color-characterization-profile-format",
	"match_type": "description"
},
{
	"name": "Device, method, and system for generating per-pixel light values using texture parameters",
	"summary": "",
	"abstract": "A method for applying texture mapping in per-pixel operations includes receiving a plurality of parameters. The parameters define a pixel value at a pixel in a graphics primitive. From among these parameters, a set of parameters is selected to be associated with textures. The parameters that are not selected define a set of unselected parameters that have constant values over the primitive. A texture value is then determined for each of the selected parameters by accessing a set of textures, with the texture value for the selected parameters varying over the primitive. The pixel value at the pixel is then evaluated using the constant unselected parameters and the texture values for the selected parameters. A device and system for applying texture mapping in per-pixel operations also are described.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07733349",
	"publication_date": "2010-06-08",
	"application_number": "09265493",
	"application_date": "1999-03-09",
	"tags": null,
	"slug": "device-method-and-system-for-generating-perpixel-light-values-using-texture-parameters",
	"match_type": "description"
},
{
	"name": "Digital application operating according to aggregation of plurality of licenses",
	"summary": "",
	"abstract": "A plurality of digital licenses correspond to a piece of content, including a base license and at least one add-on license. Each add-on license includes a reference to the base license, and each of the base license and each add-on license sets forth rules specifying how the content may be employed. Each add-on license is identified by way of the reference therein to the base license, and the rules in the base license and in each identified add-on license are aggregated into an aggregated set of rules that is evaluated to determine if such aggregated set of rules allows employing the content in a particular manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747533",
	"publication_date": "2010-06-29",
	"application_number": "11259677",
	"application_date": "2005-10-26",
	"tags": null,
	"slug": "digital-application-operating-according-to-aggregation-of-plurality-of-licenses",
	"match_type": "description"
},
{
	"name": "Digital identity management",
	"summary": "",
	"abstract": "One aspect relates to a process and associated device for managing digital ID lifecycles for application programs, and abstracting application programs for multiple types of credentials through a common Digital Identity Management System (DIMS) and Application Programming Interface (API) layer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07703128",
	"publication_date": "2010-04-20",
	"application_number": "10365878",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": "digital-identity-management",
	"match_type": "abstract"
},
{
	"name": "Digital license migration from first platform to second platform",
	"summary": "",
	"abstract": "A digital license is migrated from a source platform to a target platform. At the source platform, a migration image is produced to include the license and corresponding data therein, and the license is deleted from such source platform. At the target platform, permission is requested from a centralized migration service to migrate the license in the migration image to the target platform. The migration service determines whether to permit migration of the license based on predetermined migration policy. Upon receiving the requested permission as a response from the migration service, the migration image is applied to the target platform by un-tying the license from the source platform and re-tying the license to the target platform.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805375",
	"publication_date": "2010-09-28",
	"application_number": "11316509",
	"application_date": "2005-12-21",
	"tags": null,
	"slug": "digital-license-migration-from-first-platform-to-second-platform",
	"match_type": "description"
},
{
	"name": "Digital user interface for inputting Indic scripts",
	"summary": "",
	"abstract": "A system and method for displaying a base character in response to user input and displaying characters related to the base character to allow the user to select one of the displayed characters for a message string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707515",
	"publication_date": "2010-04-27",
	"application_number": "11437463",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": "digital-user-interface-for-inputting-indic-scripts",
	"match_type": "description"
},
{
	"name": "Discovery and distribution of game session information",
	"summary": "",
	"abstract": "Discovery and distribution of game session security information includes receiving a request to generate a new game session from a computing device and maintaining a record of a game session identifier for the new game session and a game session key for the new game session, and making the new game session available for other computing devices to join. A request for information describing one or more of a plurality of game sessions may also be received and responded to with the information describing the one or more game sessions as well as a session key that can be used to communicate with at least one of the one or more other computing devices that are part of the game session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07803052",
	"publication_date": "2010-09-28",
	"application_number": "10184225",
	"application_date": "2002-06-28",
	"tags": null,
	"slug": "discovery-and-distribution-of-game-session-information",
	"match_type": "description"
},
{
	"name": "Discriminative training for language modeling",
	"summary": "",
	"abstract": "A method of training language model parameters trains discriminative model parameters in the language model based on a performance measure having discrete values.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680659",
	"publication_date": "2010-03-16",
	"application_number": "11142432",
	"application_date": "2005-06-01",
	"tags": null,
	"slug": "discriminative-training-for-language-modeling",
	"match_type": "description"
},
{
	"name": "Distributed overlay multi-channel media access control for wireless ad hoc networks",
	"summary": "",
	"abstract": "Systems and methods for distributed overlay multi-channel MAC for wireless ad hoc networks are described. In one aspect, the systems and methods divide channel frequencies defined by a wireless network protocol into a single home channel and multiple guest channels that are orthogonal to the home channel. Each of the network nodes in the ad hoc network operates on the home channel for respective variable and overlapping amounts of time to maintain network connectivity with other respective network nodes. Additionally, each of the network nodes determines whether and when to switch from the home channel to a particular guest channel of the guest channels for a variable amount of time to increase data throughput over one or more corresponding communication links in the ad hoc network with other network node(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720086",
	"publication_date": "2010-05-18",
	"application_number": "11687951",
	"application_date": "2007-03-19",
	"tags": null,
	"slug": "distributed-overlay-multichannel-media-access-control-for-wireless-ad-hoc-networks",
	"match_type": "description"
},
{
	"name": "Distributed testing for computing features",
	"summary": "",
	"abstract": "A new method is provided for using distributed computing for computing process testing. The method includes distributing a feature testing tool, computing feature builds, and data sets to client computing systems. The feature testing tool is run on the client computing systems during times when the client computing system is not otherwise in active use. The feature testing tool prompts the computing feature build to process the data sets, and collects results from the processing of the data set, including any erroneous results. The results from processing the data sets on the client computing systems are provided to a managing computing system. The managing computing system may try to reproduce the erroneous results on other client computing systems with alternate hardware-software configurations, to send erroneous results to an investigation queue to isolate their cause, and to report useful information on the erroneous results to developers working on the computing feature.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07823138",
	"publication_date": "2010-10-26",
	"application_number": "11599022",
	"application_date": "2006-11-14",
	"tags": null,
	"slug": "distributed-testing-for-computing-features",
	"match_type": "description"
},
{
	"name": "Distributing data in a peer to peer network",
	"summary": "",
	"abstract": "A system and method for data distribution is disclosed. A bulletin board is employed to maintain a list of requests from nodes in the system. The requests indicate data requested and identify the node making the request. Nodes are able to post requests for data as long as they maintain a minimum performance level. Additionally, the nodes periodically check in with the bulletin board and receive the list of requests from the bulletin board. On determining to satisfy a particular request by a node, the node (serving node) contacts a requesting node (identified in the request) and transfers the requested data to the requesting node. After successful completion of the transfer, the requesting node reports to the bulletin board that the node has filled the request and the request is removed from the list of requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734678",
	"publication_date": "2010-06-08",
	"application_number": "12045512",
	"application_date": "2008-03-10",
	"tags": null,
	"slug": "distributing-data-in-a-peer-to-peer-network",
	"match_type": "description"
},
{
	"name": "Document layout verification",
	"summary": "",
	"abstract": "A test document is parsed into components which may include bounding boxes, segments, and points. Test code makes calls to properties and methods of components in order to verify document layout. Rather than take absolute measurements of component placement, components are evaluated relative to each other. Layout verification logic may be part of a larger software test system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756333",
	"publication_date": "2010-07-13",
	"application_number": "11411620",
	"application_date": "2006-04-26",
	"tags": null,
	"slug": "document-layout-verification",
	"match_type": "description"
},
{
	"name": "Dynamic channel assignment and connectivity maintenance in wireless networks",
	"summary": "",
	"abstract": "Dynamic channel assignment and connectivity maintenance in wireless networks may involve switching channels while maintaining connectivity in wireless ad hoc networks. In a described implementation, a wireless network may be separated into two or more respective virtual wireless networks with respective wireless node subsets operating on respective channels. Connectivity may nevertheless be maintained when a wireless node on one channel is to send a communication to another wireless node on another wireless channel. In another described implementation, monitored network information may be shared among wireless nodes by broadcast.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680089",
	"publication_date": "2010-03-16",
	"application_number": "11560680",
	"application_date": "2006-11-16",
	"tags": null,
	"slug": "dynamic-channel-assignment-and-connectivity-maintenance-in-wireless-networks",
	"match_type": "description"
},
{
	"name": "Dynamic database memory management policies",
	"summary": "",
	"abstract": "A database engine is provided with memory management policies to dynamically configure an area of memory called a buffer pool into which data pages are held during processing. The data pages are also buffered as an I/O (input/output) stream when read and written to a persistent storage medium, such as a hard disk, through use of a system file cache that is managed by the computer's operating system. The memory management policies implement capping the amount of memory used within the buffer pool to minimize the number of data pages that are double-buffered (i.e., held in both the buffer pool and system file cache). In addition, trimming data pages from the buffer pool, after the database engine completes all pending operations and requests, frees additional memory and further minimizes the number of processes associated with the database.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07840752",
	"publication_date": "2010-11-23",
	"application_number": "11589664",
	"application_date": "2006-10-30",
	"tags": null,
	"slug": "dynamic-database-memory-management-policies",
	"match_type": "description"
},
{
	"name": "Dynamic mechanism for providing metadata",
	"summary": "",
	"abstract": "Dynamic metadata allows for metadata that can be configured for an application programming interface (API) after the API has shipped. Multiple entities can provide metadata for the same API or portions of an API. The metadata provided for an API can be set up for each application domain, allowing customization within a single process. Metadata can be provided in several ways, including traditional compiled code and declarative markup as well as databases and other more dynamic approaches. Metadata is separated from its runtime components, so that the metadata that is used by the runtime components can be changed. For example, metadata may be declared on the objects separately. The metadata is then tied back to the runtime components.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716246",
	"publication_date": "2010-05-11",
	"application_number": "11291703",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": "dynamic-mechanism-for-providing-metadata",
	"match_type": "abstract"
},
{
	"name": "Dynamic queue for use in threaded computing environment",
	"summary": "",
	"abstract": "The present invention provides a dynamic queue for managing jobs in a threaded computing environment. Jobs may be placed in the queue, which may be maintained within a context of the computing environment, at a given priority level. The priority of jobs within the queue and the receipt time of each job is maintained. A job may also be placed within the queue with triggers that, if met, will result in the priority of the job being changed or will result in the job being removed from the queue entirely. Methods in accordance with the present invention also provide a method for raising an exception should multiple threads seek to access objects within a single context. Methods in accordance with the present invention also provide compatibility with prior computing systems and methodologies by providing for integration of prior static queues with dynamic queues in accordance with the present invention, and by providing methods for a given thread to be pinned to a particular context of a computing environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07823157",
	"publication_date": "2010-10-26",
	"application_number": "10716111",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": "dynamic-queue-for-use-in-threaded-computing-environment",
	"match_type": "description"
},
{
	"name": "Dynamic redirection of streaming media between computing devices",
	"summary": "",
	"abstract": "Dynamic redirection of streaming media between computing devices is described. In an implementation, a method listening at an application programming interface for a notification indicating that a change is to be made in a topology of streaming media software components. When the notification is received, a media engine that is capable of reconfiguring the topology in accordance with the indicated change is notified. At least one of the topology or the reconfigured topology have one of the streaming media software components located on a comprising device and another one of the streaming media software components located on another computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669206",
	"publication_date": "2010-02-23",
	"application_number": "10828402",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": "dynamic-redirection-of-streaming-media-between-computing-devices",
	"match_type": "abstract"
},
{
	"name": "Dynamic user experience with semantic rich objects",
	"summary": "",
	"abstract": "Semantic rich objects for a dynamic user experience. One or more actions in the process are represented by semantic rich objects (SROs) for exposing functionality of the process. Each of the SROs includes metadata associated with an action and an execution environment therefor. In response to an interactive gesture from a user selecting at least one of the SROs to perform a desired action in the process, metadata is extracted from the selected SROs to determine whether the desired action is available in the execution environment of the process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774713",
	"publication_date": "2010-08-10",
	"application_number": "11168913",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "dynamic-user-experience-with-semantic-rich-objects",
	"match_type": "description"
},
{
	"name": "Dynamic window anatomy",
	"summary": "",
	"abstract": "A method and system for rendering a desktop on a computer using a composited desktop model operating system are provided. A composited desktop window manager, upon receiving base object and content object information for one or more content objects from an application program, draws the window to a buffer memory, and takes advantage of advanced graphics hardware and visual effects to render windows based on content on which they are drawn. The frame portion of each window may be generated by pixel shading a bitmap having the appearance of frosted glass based on the content of the desktop on top of which the frame is displayed. Legacy support is provided so that the operating system can draw and render windows generated by legacy applications to look consistent with non-legacy application windows.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07817163",
	"publication_date": "2010-10-19",
	"application_number": "10691442",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": "dynamic-window-anatomy",
	"match_type": "description"
},
{
	"name": "Dynamically exchanging computer user's context",
	"summary": "",
	"abstract": "Techniques for providing information about a current state modeled with multiple attributes is described. The providing of information can include receiving from a first source an indication of an ability to supply values for one of the state attributes of the modeled current state, and supplying to a client a value for the one attribute received from the first source. After the supplying of the value, the providing can include receiving from a second source a value supplying ability for the one attribute and supplying of a value for the one attribute based on values received for the one attribute from the first and second sources. After the supplying of that value, the providing can include receiving from the first source an indication of a value supplying inability for the one attribute and supplying a value for the one attribute received from the second source.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647400",
	"publication_date": "2010-01-12",
	"application_number": "11567902",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": "dynamically-exchanging-computer-users-context",
	"match_type": "description"
},
{
	"name": "Dynamically exposing relationships among entities contained in data stores",
	"summary": "",
	"abstract": "Dynamically exposing relationships among entities contained in data stores. A method disclosed herein can include receiving data related to a given object that is contained in a given data store, and dynamically determining one or more relationships between the given object and one or more further objects. These relationships can include group memberships, management relationships, containment relationships, or the like. As the data related to the stored objects changes, the relationships among the objects can be updated. Once the relationships are defined, representations thereof may be presented to a user via a suitable user interface. The user interface may present these relationships as graphic icons, hypertext, or the like, and may further depict the dynamic relationships distinctly from static directory listings. The user may then navigate these relationships by interacting with these representations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716252",
	"publication_date": "2010-05-11",
	"application_number": "11192509",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": "dynamically-exposing-relationships-among-entities-contained-in-data-stores",
	"match_type": "description"
},
{
	"name": "Dynamically extensible application program framework including message and notification routing",
	"summary": "",
	"abstract": "Dynamically configuring an application program at run-time via one or more extension objects. The invention software implements a framework with one or more extension objects providing functionality to an application program and an application manager for integrating the functionality with the application program during execution of the application program. The framework of the invention also formulates and routes application messages between extensible objects of one application program and extensible objects of other application programs implementing a similar, dynamically extensible application program framework. On receipt of messages or notifications, the framework of the receiving application program facilitates the discovery of the intended recipient extension object and routes the message accordingly.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07861167",
	"publication_date": "2010-12-28",
	"application_number": "11343719",
	"application_date": "2006-01-31",
	"tags": null,
	"slug": "dynamically-extensible-application-program-framework-including-message-and-notification-routing",
	"match_type": "description"
},
{
	"name": "Dynamically resolving recipients to retrieve public keys during send/receive",
	"summary": "",
	"abstract": "Systems and methods are disclosed that facilitate identifying messages generated on a mobile device while the device is offline as requiring encryption, storing the messages in a message outbox with a flag indicating that encryption is required, and identifying recipients of the flagged messages to generate a recipient list. The recipient list can be piggybacked on a server synchronization request when the mobile device enters a period of online activity, and a server can return public keys associated with identified recipients to permit an encryption component, such as a secure/multipurpose Internet mail extension protocol (S/MIME) encryption component, in the mobile device to encrypt the messages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716479",
	"publication_date": "2010-05-11",
	"application_number": "11144896",
	"application_date": "2005-06-03",
	"tags": null,
	"slug": "dynamically-resolving-recipients-to-retrieve-public-keys-during-sendreceive",
	"match_type": "description"
},
{
	"name": "E-mail tool management shell command set",
	"summary": "",
	"abstract": "A method to execute verb-noun cmdlets to retrieve mailbox information or receive connector information from an e-mail server includes opening an e-mail management tool and receiving and parsing at least one cmdlet having a verb-noun syntax. A get-mailbox cmdlet retrieves mailbox information from an e-mail server and a get-receiveconnector cmdlet retrieves receive connector information from the e-mail server. Both cmdlets may have parameters that allow the retrieval of all, one or many mailboxes or receive connectors associated with the e-mail server. One implementation of the e-mail management tool is in a WINDOWSu2122 computing environment where the management host executes in a POWERSHELLu2122 scripting environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836137",
	"publication_date": "2010-11-16",
	"application_number": "11690467",
	"application_date": "2007-03-23",
	"tags": null,
	"slug": "email-tool-management-shell-command-set",
	"match_type": "description"
},
{
	"name": "Easy-to-use data report specification",
	"summary": "",
	"abstract": "A method and system for the graphical specification and modification of reports is disclosed which enables data reports to be easily created via a report design dialogue. The report design dialogue includes a group-level outline panel containing controls for grouping, as well as other report controls such as those for sorting and aggregating. A method and system for creating a group-level outline panel using an existing database report is also disclosed. Finally, a computer-readable medium storing a computer-interpretable data structure that stores one or more report specifications is disclosed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788257",
	"publication_date": "2010-08-31",
	"application_number": "11925671",
	"application_date": "2007-10-26",
	"tags": null,
	"slug": "easytouse-data-report-specification",
	"match_type": "description"
},
{
	"name": "Efficient data handling representations",
	"summary": "",
	"abstract": "Embodiments are provided to use metadata to provide readable and/or writeable regions of a multi-dimensional space. In an embodiment, metadata can be used to define readable and/or writeable regions of a multi-dimensional data store. The various embodiments also use relational and/or multi-dimensional representations to resolve and validate readable and/or writeable regions of a multi-dimensional space. Metadata can also be used to designate a number of writeable and/or readable regions of a relational and/or multi-dimensional representation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07743071",
	"publication_date": "2010-06-22",
	"application_number": "11710806",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "efficient-data-handling-representations",
	"match_type": "description"
},
{
	"name": "Elevated patching",
	"summary": "",
	"abstract": "Allowing a non-privileged user to apply a patch to a software product. A patch is received from a non-privileged user. It is determined if the received patch may be elevated by the non-privileged user for applying to a target software product. The received patch is applied to the target software product if it is determined that the received patch may be elevated by the non-privileged user for applying to the target software product.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747998",
	"publication_date": "2010-06-29",
	"application_number": "10930718",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": "elevated-patching",
	"match_type": "description"
},
{
	"name": "Embedded device update service",
	"summary": "",
	"abstract": "A method and system for updating an OS of an embedded device. The embedded device provides its current OS version information to a mobile operation network via a SMS message. The embedded device can provide its current OS version information to a mobile operation network in response to a request from a mobile operator network that has implemented the SyncML specifications promulgated by the Open Mobile Alliance (OMA). The mobile operator network interacts with the datacenter to provide the embedded devices's current OS version and get the address of the image update. The mobile operator service sends the address to the embedded device via another SMS message. The embedded device downloads the image update using the RF link via a global packet radio service (GPRS) connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716661",
	"publication_date": "2010-05-11",
	"application_number": "11082441",
	"application_date": "2005-03-16",
	"tags": null,
	"slug": "embedded-device-update-service",
	"match_type": "description"
},
{
	"name": "Employing a servicing user-interface shell to service a presented user-interface shell",
	"summary": "",
	"abstract": "A set of embodied Application Program Interface(s) () are provided for facilitating a method of presenting a presented user-interface shell (UIS) () that cooperates with a servicing user-interface shell (UIS) (). The method includes receiving data indicative of one or more tasks to be completed, coordinating the completion of said one or more tasks, and returning control to said presented UIS ().",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07810100",
	"publication_date": "2010-10-05",
	"application_number": "11202832",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": "employing-a-servicing-userinterface-shell-to-service-a-presented-userinterface-shell",
	"match_type": "description"
},
{
	"name": "Employing abstract pipeline component connections to maintain data flow",
	"summary": "",
	"abstract": "The subject disclosure pertains to systems and methods for connecting pipeline components such as data flow pipeline components. Pipeline components are wrapped in metadata components that include the component as well as abstracted metadata in the form of input and output metadata descriptors. A connector can arbitrate metadata differences between pipeline components based on the metadata descriptors, thereby preventing upstream modifications from invalidating or breaking components downstream. Native or plug-in heuristic and/or related components can provide the functionality necessary to resolve metadata differences.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07779017",
	"publication_date": "2010-08-17",
	"application_number": "11330842",
	"application_date": "2006-01-12",
	"tags": null,
	"slug": "employing-abstract-pipeline-component-connections-to-maintain-data-flow",
	"match_type": "description"
},
{
	"name": "Enabling terminal services through a firewall",
	"summary": "",
	"abstract": "Systems and methods are described that provide terminal services through a firewall. In one implementation, data is wrapped with an RPC-based protocol, wherein the data to be wrapped is configured according to a stream-based protocol consistent with establishing a server/client relationship. The RPC-based protocol is then layered over HTTPS. The wrapped data is then passed through the firewall.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07810148",
	"publication_date": "2010-10-05",
	"application_number": "11067125",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "enabling-terminal-services-through-a-firewall",
	"match_type": "description"
},
{
	"name": "Encryption scheme for streamed multimedia content protected by rights management system",
	"summary": "",
	"abstract": "A stream of content has multiple sub-streams, where each sub-stream comprises a part of the content and is divisible into logical blocks bounded by intrinsic partitions. For each sub-stream, a specification of the logical blocks bounded by the intrinsic partitions is defined and the sub-stream is divided into the logical blocks bounded by the intrinsic partitions. Each divided logical block is encrypted and then divided into one or more portions to produce corresponding pieces of data, and each piece of data is placed into a data packet as a payload thereof. Each data packet is transmitted to a recipient thereof, and the recipient can retrieve the pieces of data from the payloads of the packets, reconstruct the encrypted logical blocks, and manipulate the sub-stream on a per-logical block basis without necessarily decrypting each encrypted logical block.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07684566",
	"publication_date": "2010-03-23",
	"application_number": "11139956",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "encryption-scheme-for-streamed-multimedia-content-protected-by-rights-management-system",
	"match_type": "description"
},
{
	"name": "Exporting a document in multiple formats",
	"summary": "",
	"abstract": "Systems and methods are disclosed for exporting a document in multiple formats. The disclosed systems and methods may include creating a metafile including content associated with the document and injecting comments into the metafile. The comments may comprise semantic information corresponding to the document. Also, the metafile may be parsed to create at least one call. The at least one call may be configured to enable an export engine to render the document. Furthermore, the at least one call may be sent to the export engine configured to render the document in an output format associated with the export engine. In addition, the export engine maybe selected from a plurality of export engines based upon user input indicating the output format associated with the selected export engine.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844898",
	"publication_date": "2010-11-30",
	"application_number": "11364681",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": "exporting-a-document-in-multiple-formats",
	"match_type": "description"
},
{
	"name": "Extending access to a device in a limited connectivity network to devices residing outside the limited connectivity network",
	"summary": "",
	"abstract": "The invention makes possible remote control of devices in a piconet by remote users communicating over the Internet and the like by providing a proxy-bridge device. The proxy-bridge device is a bridge for sending packets to and from between an external device and a device in the piconet. Moreover, the proxy-bridge device also serves as a proxy for the external device to devices in the piconet and as a proxy for devices in the piconet accessing an external device. The proxy-bridge wireless device's protocol stack allows communications with the piconet devices within the piconet. In addition, the protocol stack allows an application to communicate with a remote device e.g., via the Internet Protocol. Thus, the proxy-bridge device, using two protocols, enables remote users discover the presence of a service offered by a device in a piconet as a logical embedded device within the proxy-bridge device and vice-versa.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07733885",
	"publication_date": "2010-06-08",
	"application_number": "10977167",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "extending-access-to-a-device-in-a-limited-connectivity-network-to-devices-residing-outside-the-limited-connectivity-network",
	"match_type": "description"
},
{
	"name": "Extracting data content items using template matching",
	"summary": "",
	"abstract": "Systems and methods for extracting data content items from a web page are provided. A template is created by labeling data content items of interest associated with a web page and generating a template Document Object Model (DOM) tree based on the labeled web page. DOM trees are also generated for additional web pages that contain data content items for which extraction may be desired. These DOM trees are compared to the template DOM tree to determine alignment there between. The aligned data content items may then be extracted from the additional web pages and indexed, as desired. Labeling the data content items of interest prior to generating a template DOM tree allows for the desired data content items to be specified and more accurately extracted from related and/or similarly structured web pages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765236",
	"publication_date": "2010-07-27",
	"application_number": "11848987",
	"application_date": "2007-08-31",
	"tags": null,
	"slug": "extracting-data-content-items-using-template-matching",
	"match_type": "description"
},
{
	"name": "Extraction, transformation and loading designer module of a computerized financial system",
	"summary": "",
	"abstract": "An extraction, transformation and loading (ETL) designer module of a computerized financial system that is used to configure an ETL package for loading data elements from a financial table of a financial database into a reporter table in accordance with a predefined format. The ETL designer module includes a transformation class that defines transformation objects. Each transformation object is responsible for a transformation of the source data elements of a source column of the financial table into a reporter format of an associated destination column of the reporter table.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805341",
	"publication_date": "2010-09-28",
	"application_number": "10823145",
	"application_date": "2004-04-13",
	"tags": null,
	"slug": "extraction-transformation-and-loading-designer-module-of-a-computerized-financial-system",
	"match_type": "description"
},
{
	"name": "Fault-tolerant communications in routed networks",
	"summary": "",
	"abstract": "A method for providing fault-tolerant network communications between a plurality of nodes for an application, including providing a plurality of initial communications pathways over a plurality of networks coupled between the plurality of nodes, receiving a data packet on a sending node from the application, the sending node being one of the plurality of nodes, the data packet being addressed by the application to an address on one of the plurality of nodes, and selecting a first selected pathway for the data packet from among the plurality of initial communications pathways where the first selected pathway is a preferred pathway.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07821930",
	"publication_date": "2010-10-26",
	"application_number": "11275185",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "faulttolerant-communications-in-routed-networks",
	"match_type": "description"
},
{
	"name": "Features such as titles, transitions, and/or effects which vary according to positions",
	"summary": "",
	"abstract": "A software program for creating features for use with a plurality of media objects in a sequence. The program comprises a feature component specifying a feature having parameters affecting at least one variable aspect of the feature. An indicator component identifies a position of the specified feature relative to the media objects in the sequence. The program comprises a sequence generator for modifying the specified feature by varying its parameters of the specified feature as a function of the position of the specified feature relative to the media objects and/or relative to other features in the sequence. The sequence generator also modifies the specified feature by varying its parameters of the feature as a function of the content of the media objects around it or to which it has been applied. A rendering component renders the specified feature according to the varied parameters at the identified position.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752548",
	"publication_date": "2010-07-06",
	"application_number": "10976833",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "features-such-as-titles-transitions-andor-effects-which-vary-according-to-positions",
	"match_type": "description"
},
{
	"name": "File handling for naming conflicts",
	"summary": "",
	"abstract": "A file operations engine is provided that manages many user interactions with their files via a computer system. The operation engine may provide a user with the option to keep both files that have a file name conflict. It may further permit the user to rename a file involved with a file name conflict. The operations engine may also automatically rename one of the files of a file name conflict by appending a character to a root of the filename. The character may include the lowest integer available for the root in a destination for the files. The operations engine may provide the option to keep both files as part of a pre-calculation of potential errors for a requested operation. The operations engine may place file name conflicts in an error queue and permit the user to select an option to keep both files after the conflict is encountered.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844645",
	"publication_date": "2010-11-30",
	"application_number": "12785178",
	"application_date": "2010-05-21",
	"tags": null,
	"slug": "file-handling-for-naming-conflicts",
	"match_type": "description"
},
{
	"name": "File transfer error handling",
	"summary": "",
	"abstract": "A file operations engine is provided that manages many user interactions with their files via a computer system. The operation engine may provide a user with the option to keep both files that have a file name conflict. It may further permit the user to rename a file involved with a file name conflict. The operations engine may also automatically rename one of the files of a file name conflict by appending a character to a root of the filename. The character may include the lowest integer available for the root in a destination for the files. The operations engine may provide the option to keep both files as part of a pre-calculation of potential errors for a requested operation. The operations engine may place file name conflicts in an error queue and permit the user to select an option to keep both files after the conflict is encountered.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774322",
	"publication_date": "2010-08-10",
	"application_number": "11136522",
	"application_date": "2005-05-25",
	"tags": null,
	"slug": "file-transfer-error-handling",
	"match_type": "description"
},
{
	"name": "First computer process and second computer process proxy-executing code on behalf thereof",
	"summary": "",
	"abstract": "A first process operating on a computer comprises code to be executed in connection therewith, where the code includes at least one triggering device. A digital license corresponds to the first process and sets forth terms and conditions for operating the first process. A second process operating on the computer proxy-executes code corresponding to each triggering device of the first process on behalf of such first process. The second process includes a license evaluator for evaluating the license to determine whether the first process is to be operated in accordance with the terms and conditions set forth in such license, and the second process chooses whether to in fact proxy-execute based at least in part on determination of the license evaluator. Thus, the first process is dependent upon the second process for operation thereof.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788496",
	"publication_date": "2010-08-31",
	"application_number": "10681017",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": "first-computer-process-and-second-computer-process-proxyexecuting-code-on-behalf-thereof",
	"match_type": "description"
},
{
	"name": "Flexible architecture for notifying applications of state changes",
	"summary": "",
	"abstract": "Described is a method and system a unified mechanism for storing device, application, and service state, as well as a rich notification brokerage architecture. Clients register with a notification broker to receive notifications for changes to state properties. When a registered state property changes, a notification broker determines which clients to notify of the state change and provides the client with a notification regarding the change. Clients may be notified whenever a state changes, when a state change meets a predetermined condition, or based on a schedule. An application may also be launched in response to a state change. An application programming interface (API) is provided that provides a unified way of accessing state change information across different components within the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644376",
	"publication_date": "2010-01-05",
	"application_number": "10873881",
	"application_date": "2004-06-22",
	"tags": null,
	"slug": "flexible-architecture-for-notifying-applications-of-state-changes",
	"match_type": "abstract"
},
{
	"name": "Flexible display translation",
	"summary": "",
	"abstract": "A user interface for displaying source data and a translated copy of a segment of the source data is provided. The user interface includes a first display portion for displaying at least a subset of the source data on the display. The user interface includes a second display portion for displaying a translated copy of a selected segment of source data on the display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07822596",
	"publication_date": "2010-10-26",
	"application_number": "11294231",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": "flexible-display-translation",
	"match_type": "description"
},
{
	"name": "Flexible licensing architecture for licensing digital application",
	"summary": "",
	"abstract": "An application includes a plurality of features. A transaction is engaged with a retailer to obtain a product license corresponding to the application. The product license defines at least one feature of the application that may be employed. A base copy of the application is obtained from a distributor and is actuated. A use license corresponding to the product license is acquired from a licensor by way of the actuated application sending the product license to the licensor along with an identification of at least one of a user, the computing device, and a trusted component operating on the computing device, where the use license includes feature policy granting rights to employ each feature defined in the product license.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07801821",
	"publication_date": "2010-09-21",
	"application_number": "11051162",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": "flexible-licensing-architecture-for-licensing-digital-application",
	"match_type": "description"
},
{
	"name": "Flexible licensing architecture in content rights management systems",
	"summary": "",
	"abstract": "A license is issued to a user as decryption and authorization portions. The decryption portion is accessible only by such user and has a decryption key (KD) for decrypting corresponding encrypted digital content and validating information including an identification of a root trust authority. The authorization portion sets forth rights granted in connection with the digital content and conditions that must be satisfied to exercise the rights granted, and has a digital signature that is validated according to the identified root trust authority in the decryption portion. The user issued accesses the decryption portion and employs the validation information therein to validate the digital signature of the authorization portion. If the conditions in the authorization portion so allow, the rights in the authorization portion are exercised by decrypting the encrypted content with the decryption key (KD) from the decryption portion and rendering the decrypted content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860802",
	"publication_date": "2010-12-28",
	"application_number": "11048087",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": "flexible-licensing-architecture-in-content-rights-management-systems",
	"match_type": "description"
},
{
	"name": "Framework for creating user interfaces containing interactive and dynamic 3-D objects",
	"summary": "",
	"abstract": "An arrangement for creating a fully interactive user interface containing 3-D objects is provided by a suite of attached dependency properties in a single class that operates under the Windows Presentation Foundation (u201cWPFu201d) programming model. The framework for exposing such 3-D interactive functionality, named Facade 3-D, enables application developers to extend the existing functionality of WPF visual objects called FrameworkElements through mapping objects they have defined with 2-D visual trees to 3-D trees which contain arbitrary, application-defined 3-D models. Application users are enabled with highly-configurable ways to interact with the underlying source 2-D FrameworkElements vicariously through manipulation of their 3-D representations called u201cFacades.u201d",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818690",
	"publication_date": "2010-10-19",
	"application_number": "11818599",
	"application_date": "2007-06-15",
	"tags": null,
	"slug": "framework-for-creating-user-interfaces-containing-interactive-and-dynamic-3d-objects",
	"match_type": "description"
},
{
	"name": "Framework for database transactions",
	"summary": "",
	"abstract": "Various mechanisms are presented that allow for the coordination of transactions in a managed runtime environment. In one aspect, a runtime environment that is hosted in a database system, includes an application programming interface (API). The API can surface the database transactions as ambient transactions, and present them to some user code. When the user code connects to some remote resource, the ambient transaction can be implicitly propagated to the remoter resource, resulting in coordination of the database transaction with any given transaction running in the remote resource.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770186",
	"publication_date": "2010-08-03",
	"application_number": "11326947",
	"application_date": "2006-01-06",
	"tags": null,
	"slug": "framework-for-database-transactions",
	"match_type": "abstract"
},
{
	"name": "General programming language support for nullable types",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that provide null capabilities within the context of programming languages. In one aspect, a system is provided that facilitates null-support in various programming languages. The system includes one or more types associated with at least one programming language. A type modifier is provided to signal that the type is nullable. The type modifier enables a multi-element structure to be automatically created in association with the type wherein, the multi-element structure includes the type and a Boolean element indicating whether or not the variable is null.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647580",
	"publication_date": "2010-01-12",
	"application_number": "10935247",
	"application_date": "2004-09-07",
	"tags": null,
	"slug": "general-programming-language-support-for-nullable-types",
	"match_type": "description"
},
{
	"name": "Generating a word-processing document from database content",
	"summary": "",
	"abstract": "Documents are automatically generated from data within a database. The look and feel of the document is defined externally from the data in the database such that a consistent look and feel is applied to the retrieved data. Templates are defined that specify the structure of the document including its look and feel for the documents created by using data from the database. When a document is requested to be generated for viewing and/or editing, the appropriate data from the database is retrieved and placed within the document according to the defined look and feel that is contained within the templates.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720885",
	"publication_date": "2010-05-18",
	"application_number": "11784097",
	"application_date": "2007-04-04",
	"tags": null,
	"slug": "generating-a-wordprocessing-document-from-database-content",
	"match_type": "description"
},
{
	"name": "Generating an optimized restore plan",
	"summary": "",
	"abstract": "A restore advisor may generate and apply a recovery plan to restore a database to a specified point in time. A restore/recovery scenario may be specified; resources, and backups available may be specified and one or more optimized restore plans may be generated. One or more alternate plans may be requested. The plans may be applied, verified or saved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650356",
	"publication_date": "2010-01-19",
	"application_number": "10924511",
	"application_date": "2004-08-24",
	"tags": null,
	"slug": "generating-an-optimized-restore-plan",
	"match_type": "description"
},
{
	"name": "Generating histograms of population data by scaling from sample data",
	"summary": "",
	"abstract": "Histograms formed based on samples of a population, such as histograms created from random page-level samples of a data store, are intelligently scaled to histograms estimating distribution of the entire population of the data store. As an optional optimization, where a threshold number of duplicate samples are observed during page-level sampling, the number of distinct values in the overall population data is presumed to be the number of distinct values in the sample data. Also, during estimation of distinct values of an overall population, a u201cChaou201d estimator can optionally be utilized as a lower bound of the estimate. The resulting estimate is then used when scaling, which can take domain knowledge of the data being scaled into account in order to prevent scaled estimates from exceeding the limits of the domain. Also, a u201csum of the partsu201d mathematical relationship can be taken into account during scaling that the sum of the scaled distinct values for each bin of an estimate histogram should total an estimate for the total distinct values of the entire population.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707005",
	"publication_date": "2010-04-27",
	"application_number": "11469855",
	"application_date": "2006-09-02",
	"tags": null,
	"slug": "generating-histograms-of-population-data-by-scaling-from-sample-data",
	"match_type": "description"
},
{
	"name": "Generic interface for deep embedding of expression trees in programming languages",
	"summary": "",
	"abstract": "The claimed subject matter provides a system and/or a method that facilitates querying data utilizing an explicit representation of an embedded language. An IEnumberable component can receive a data operation that can be employed on a collection of data utilizing at least one of an IEnumerable interface and an IEnumerable<T> interface. A mirror component can provide a generic interface to query the collection of data by representing the collection of data as an expression tree utilizing at least one function that mirrors the at least one IEnumerable interface and the IEnumerable<T> interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860823",
	"publication_date": "2010-12-28",
	"application_number": "11464874",
	"application_date": "2006-08-16",
	"tags": null,
	"slug": "generic-interface-for-deep-embedding-of-expression-trees-in-programming-languages",
	"match_type": "description"
},
{
	"name": "Generic RootKit detector",
	"summary": "",
	"abstract": "A generic RootKit detector is disclosed that identifies when a malware, commonly known as RootKit, is resident on a computer. In one embodiment, the generic RootKit detector performs a method that compares the properties of different versions of a library used by the operating system to provide services to an application program. In this regard, when a library is loaded into memory, an aspect of the generic RootKit detector compares two versions of the library; a potentially infected version in memory and a second version stored in a protected state on a storage device. If certain properties of the first version of the library are different from the second version, a determination is made that a RootKit is infection the computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647636",
	"publication_date": "2010-01-12",
	"application_number": "11210565",
	"application_date": "2005-08-24",
	"tags": null,
	"slug": "generic-rootkit-detector",
	"match_type": "description"
},
{
	"name": "Generic USB drivers",
	"summary": "",
	"abstract": "Techniques are disclosed to provide generic USB drivers. More particularly, a generic USB device driver architecture is described which enables development through a user-mode USB library that accesses a generic kernel-mode driver. In a described implementation, a method includes loading a kernel-mode generic device driver in response to a plug-in event of a device. A user software component accesses the device by utilizing routines provided by the generic user-mode library (e.g., a dynamic link library (DLL)) that communicates with the generic device driver.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802022",
	"publication_date": "2010-09-21",
	"application_number": "10837444",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": "generic-usb-drivers",
	"match_type": "description"
},
{
	"name": "GPU timeline with render-ahead queue",
	"summary": "",
	"abstract": "Video editing and video playback utilizing a render-ahead queue for storing rendered video frames. The render-ahead queue facilitates the smooth playback of video in forward and reverse timeline direction, avoiding video glitches that occur when video frames are rendered at a rate that is less than the timeline rate of the video file. Embodiments of the present invention also include the use of a graphics processing unit in conjunction with the render-ahead queue to further ensure smooth playback of video.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07817900",
	"publication_date": "2010-10-19",
	"application_number": "11170930",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "gpu-timeline-with-renderahead-queue",
	"match_type": "description"
},
{
	"name": "Grammar confusability metric for speech recognition",
	"summary": "",
	"abstract": "Architecture for testing an application grammar for the presence of confusable terms. A grammar confusability metric (GCM) is generated for describing a likelihood that a reference term will be confused by the speech recognizer with another term phrase currently allowed by active grammar rules. The GCM is used to flag processing of two phrases in the grammar that have different semantic meaning, but that the speech recognizer could have difficulty distinguishing reliably. A built-in acoustic model is analyzed and feature vectors generated that are close to the acoustic properties of the input term. The feature vectors are then sent for recognition. A statistically random sampling method is applied to explore the acoustic properties of feature vectors of the input term phrase spatially and temporally. The feature vectors are perturbed in the neighborhood of the time domain and the Gaussian mixture model to which the feature vectors belong.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844456",
	"publication_date": "2010-11-30",
	"application_number": "11716210",
	"application_date": "2007-03-09",
	"tags": null,
	"slug": "grammar-confusability-metric-for-speech-recognition",
	"match_type": "description"
},
{
	"name": "Granular control over the authority of replicated information via fencing and unfencing",
	"summary": "",
	"abstract": "A method and system for controlling which content gets precedence and is replicated. A replica set is comprised of a set of resources. Each resource is associated with resource data and resource meta-data. For files-based systems, resource data includes file contents and attributes, while resource meta-data includes additional attributes that are relevant for negotiating synchronization during replication. An extra field called a u201cfence valueu201d is added to the meta-data associated with each resource. During synchronization, first fence values are compared. The resource with the highest fence value includes the content that is controlling and replicated. If fence values are equal (and greater than a particular value), the controlling resource is determined based on other meta-data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07660833",
	"publication_date": "2010-02-09",
	"application_number": "10733459",
	"application_date": "2003-12-10",
	"tags": null,
	"slug": "granular-control-over-the-authority-of-replicated-information-via-fencing-and-unfencing",
	"match_type": "description"
},
{
	"name": "Graphic user interface schemes for supporting speech recognition input systems",
	"summary": "",
	"abstract": "A numbering scheme is disclosed for implementation in the context of an application display. A user is able to select an item on the display by speaking a number corresponding to a desired control item. In some cases, the screen can include so many numbers that the user loses context and is unable to identify which number they want to select. For this reason, in one embodiment, a temporal switching mechanism is implemented wherein periodic switches (e.g., second-long intervals) occur between showing numbered items and showing a non-numbered screen. In one embodiment, an optional secondary confirmation step is implemented wherein the user sees only the item they just selected and has the chance to (a) learn the programmatic name of the item they selected and/or (b) either confirm and proceed with their selection, or cancel. In one embodiment, the optional secondary confirmation step is omitted if the user speaks a number followed by a predetermined command word.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07742923",
	"publication_date": "2010-06-22",
	"application_number": "10950020",
	"application_date": "2004-09-24",
	"tags": null,
	"slug": "graphic-user-interface-schemes-for-supporting-speech-recognition-input-systems",
	"match_type": "description"
},
{
	"name": "Graphical interface for defining mutually exclusive destinations",
	"summary": "",
	"abstract": "A user defines mutually exclusive inbox and spam folders to which emails are routed based on a rating assigned to each email. A variable user-defined range defines a mapping of the ratings to each folder. Incoming emails are routing to one of the folders according to the range. A reference set of emails is designated, each having a rating and either an inbox label or a spam label. A display indicates the number the reference emails in each folder if the reference emails are routed to one of the folders according to their ratings and according to the user-defined range.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730141",
	"publication_date": "2010-06-01",
	"application_number": "11303523",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "graphical-interface-for-defining-mutually-exclusive-destinations",
	"match_type": "description"
},
{
	"name": "GSM/UMTS emulator",
	"summary": "",
	"abstract": "A GSM/UMTS emulator is disclosed for emulating a real network so that certain device functionalities can be easily tested. The architecture of such a GSM/UMTS emulator may include a terminal PC and a server. The terminal PC runs the device (including a radio interface layer and a multiplexer). The server acts as the application server to emulate UMTS network performance. Such an emulator may enable testing of both control information and data applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747249",
	"publication_date": "2010-06-29",
	"application_number": "11092523",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": "gsmumts-emulator",
	"match_type": "description"
},
{
	"name": "Guided performance optimization for graphics pipeline state management",
	"summary": "",
	"abstract": "Techniques are provided for efficiently arranging shader constants into constant buffers to more efficiently set shader constants to a GPU. Techniques are provided for tracking runtime usage patterns of shader constants, and then generating usage pattern data regarding usage patterns of shader constants. This usage pattern data can then be fed into an optimization algorithm to efficiently lay out the data for maximal performance given certain heuristics. Factors considered include, for example, frequency of client update of the values, usage by certain shaders, and size and number of the resulting buffers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07692660",
	"publication_date": "2010-04-06",
	"application_number": "11477609",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": "guided-performance-optimization-for-graphics-pipeline-state-management",
	"match_type": "description"
},
{
	"name": "Handling multi-dimensional data including writeback data",
	"summary": "",
	"abstract": "Embodiments are provided to use metadata to provide readable and/or writeable regions of a multi-dimensional space. In an embodiment, metadata can be used to define readable and/or writeable regions of a multi-dimensional data store. The various embodiments also use relational and/or multi-dimensional representations to resolve and validate readable and/or writeable regions of a multi-dimensional space. Metadata can also be used to in conjunction with writeback operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720831",
	"publication_date": "2010-05-18",
	"application_number": "11710799",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "handling-multidimensional-data-including-writeback-data",
	"match_type": "description"
},
{
	"name": "Hidden trajectory modeling with differential cepstra for speech recognition",
	"summary": "",
	"abstract": "A novel system for speech recognition uses differential cepstra over time frames as acoustic features, together with the traditional static cepstral features, for hidden trajectory modeling, and provides greater accuracy and performance in automatic speech recognition. According to one illustrative embodiment, an automatic speech recognition method includes receiving a speech input, generating an interpretation of the speech, and providing an output based at least in part on the interpretation of the speech input. The interpretation of the speech uses hidden trajectory modeling with observation vectors that are based on cepstra and on differential cepstra derived from the cepstra. A method is developed that can automatically train the hidden trajectory model's parameters that are corresponding to the components of the differential cepstra in the full acoustic feature vectors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805308",
	"publication_date": "2010-09-28",
	"application_number": "11655704",
	"application_date": "2007-01-19",
	"tags": null,
	"slug": "hidden-trajectory-modeling-with-differential-cepstra-for-speech-recognition",
	"match_type": "description"
},
{
	"name": "Honey monkey network exploration",
	"summary": "",
	"abstract": "A network can be explored to investigate exploitive behavior. For example, network sites may be actively explored by a honey monkey system to detect if they are capable of accomplishing exploits, including browser-based exploits, on a machine. Also, the accomplishment of exploits may be detected by tracing events occurring on a machine after visiting a network site and analyzing the traced events for illicit behavior. Alternatively, site redirections between and among uniform resource locators (URLs) may be explored to discover relationships between sites that are visited.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774459",
	"publication_date": "2010-08-10",
	"application_number": "11276483",
	"application_date": "2006-03-01",
	"tags": null,
	"slug": "honey-monkey-network-exploration",
	"match_type": "description"
},
{
	"name": "Hosting controls in a window via an interface for controlling the window",
	"summary": "",
	"abstract": "Hosting user interface controls in a window via an interface for controlling the window is disclosed. One aspect of the invention is a computerized system having an operating system and at least one program. The operating system provides for hosting controls of a predetermined type within windows of a predetermined type via an interface for controlling the windows. The programs utilize the interface to host one or more controls within one or more windows. Thus, with respect to versions of the MICROSOFT WINDOWS operating system, a program may utilize the WIN32 API (i.e., interface) to host ACTIVEX-type controls within windows hosted by the program, also via the WIN32 API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730496",
	"publication_date": "2010-06-01",
	"application_number": "11473222",
	"application_date": "2006-06-21",
	"tags": null,
	"slug": "hosting-controls-in-a-window-via-an-interface-for-controlling-the-window",
	"match_type": "description"
},
{
	"name": "Hybrid pen mouse user input device",
	"summary": "",
	"abstract": "A novel hybrid pointing device combines elements of both a digital pen and a mouse, to collect the advantages of both types of devices in a single user input device. The hybrid input pointing device includes both a digital pen and a cradle. The cradle has a docking bay in which the digital pen can be docked, with an unobstructed path between the electromagnetic tracking signal receptor and a tracking surface on which the cradle is disposed. The electromagnetic signal receptor is enabled to receive tracking signals reflected off the tracking surface from an electromagnetic signal emitter. Information based on the reflected signal may be communicated to a computing device. A user can thereby use the digital pen in a pen-like user scenario, or dock the digital pen in the mouse-like cradle and use the combined device in a mouse-like user scenario.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07791598",
	"publication_date": "2010-09-07",
	"application_number": "11651656",
	"application_date": "2007-01-10",
	"tags": null,
	"slug": "hybrid-pen-mouse-user-input-device",
	"match_type": "description"
},
{
	"name": "I/O handling in generic USB drivers",
	"summary": "",
	"abstract": "Techniques are disclosed to provide I/O handling in generic USB drivers. More particularly, a generic USB device driver architecture is described which enables development through a user-mode USB library that accesses a generic kernel-mode driver. The architecture may be utilized to provide efficient development for I/O handling. In a described implementation, a method includes defining a data structure utilized to access a plugged-in device. A pipe policy of the data structure is defined and utilizing to access the plugged-in device through a plurality of routines provided by a generic user-mode library (e.g., a dynamic link library (DLL)). The generic user-mode library is communicatively coupled to a kernel-mode generic device driver. In another described implementation, a separate generic device driver is loaded for each plugged-in device or for each functionality supported by the device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650436",
	"publication_date": "2010-01-19",
	"application_number": "10854408",
	"application_date": "2004-05-25",
	"tags": null,
	"slug": "io-handling-in-generic-usb-drivers",
	"match_type": "description"
},
{
	"name": "Image frame abstraction model for image codecs",
	"summary": "",
	"abstract": "A method and architecture for obtaining a desired frame and identifying a selected frame in an image container. A request for a frame of an image is received. The request may include an identifier that identifies a type of frame. In response thereto, a frame is located corresponding to the identifier and a reference to the frame is provided. In another aspect, a request is received to identify a frame of an image. A determination is made as to what identifier identifies the frame. The identified frame is returned to the requesting component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07672542",
	"publication_date": "2010-03-02",
	"application_number": "11111355",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": "image-frame-abstraction-model-for-image-codecs",
	"match_type": "description"
},
{
	"name": "Implementation for collecting unmanaged memory",
	"summary": "",
	"abstract": "A method and system for garbage collecting managed and unmanaged memory that is no longer referenced. The time between allocations is compared with a threshold to determine if the garbage collector needs to collect unused memory. Unmanaged memory referenced by objects in the unused managed memory may be freed during the collection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707232",
	"publication_date": "2010-04-27",
	"application_number": "11129545",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": "implementation-for-collecting-unmanaged-memory",
	"match_type": "description"
},
{
	"name": "Implementing a tree data storage structure in a distributed environment",
	"summary": "",
	"abstract": "Tree data storage structures are implemented on respective computers in a distributed environment, such as on a network, so that information associated with nodes of one computer's tree data storage structure may be read or written to by another computer in the network. To promote efficiency, a cache may be employed on the computers in the network such that each computer caches information associated with nodes of tree data storage structures located on the computers in the network. A lock service may implement a caching protocol to provide efficient concurrency of caching operations while ensuring that current information associated with the nodes is available to all computers in the network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730101",
	"publication_date": "2010-06-01",
	"application_number": "11149656",
	"application_date": "2005-06-10",
	"tags": null,
	"slug": "implementing-a-tree-data-storage-structure-in-a-distributed-environment",
	"match_type": "description"
},
{
	"name": "Importing and exporting markup language data in a spreadsheet application document",
	"summary": "",
	"abstract": "Data presented in a hierarchical format is rendered in a form allowing the data to be imported into a spreadsheet document where the data can be modified and new data can be added. A data file containing the hierarchically formatted data is selected for importing. A mapping relating a plurality of elements within the hierarchical data to a plurality of respective locations in the spreadsheet document is accessed. The hierarchical data is rendered in the spreadsheet document according to the mapping. Input is received to modify the hierarchical data rendered in the spreadsheet document. The mapping is updated to include the modifications to the hierarchical data. The modifications to the hierarchical data and the updated mapping are exported for subsequent rendering in a second spreadsheet document according to the updated mapping.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07703007",
	"publication_date": "2010-04-20",
	"application_number": "11318688",
	"application_date": "2005-12-27",
	"tags": null,
	"slug": "importing-and-exporting-markup-language-data-in-a-spreadsheet-application-document",
	"match_type": "description"
},
{
	"name": "Incremental approach to an object-relational solution",
	"summary": "",
	"abstract": "The claimed subject matter relates to an architecture that can facilitate an incremental approach to an Object-Relational mapping solution. The architecture can provide a rich data model that is defined at the value layer. The rich data model can expose an interface that conforms with the interfaces exposed by common storage-specific data providers. The architecture can extend common storage-specific data provider to support common command representations, and provide entity services that work in terms of the rich data model as well as object services such as identity management, updating and change tracking.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676493",
	"publication_date": "2010-03-09",
	"application_number": "11364060",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": "incremental-approach-to-an-objectrelational-solution",
	"match_type": "description"
},
{
	"name": "Indexing and searching speech with text meta-data",
	"summary": "",
	"abstract": "An index for searching spoken documents having speech data and text meta-data is created by obtaining probabilities of occurrence of words and positional information of the words of the speech data and combining it with at least positional information of the words in the text meta-data. A single index can be created because the speech data and the text meta-data are treated the same and considered only different categories.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07809568",
	"publication_date": "2010-10-05",
	"application_number": "11269872",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": "indexing-and-searching-speech-with-text-metadata",
	"match_type": "description"
},
{
	"name": "Inheritance context for graphics primitives",
	"summary": "",
	"abstract": "An inheritance context is created for a graphics primitive object that is a property of a visual element. The inheritance context can be used to make some element information (e.g., information in resource dictionaries, name dictionaries, and inheritable properties that reside in the element tree containing the visual element) available to the graphics primitive object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07743387",
	"publication_date": "2010-06-22",
	"application_number": "11252374",
	"application_date": "2005-10-18",
	"tags": null,
	"slug": "inheritance-context-for-graphics-primitives",
	"match_type": "description"
},
{
	"name": "Instant messaging with data sharing",
	"summary": "",
	"abstract": "Instant messaging with data sharing is described. One or more of the described techniques may be employed to share data in conjunction with an instant messaging session, even if one or more clients which are to share the data are not currently available.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693958",
	"publication_date": "2010-04-06",
	"application_number": "11157187",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": "instant-messaging-with-data-sharing",
	"match_type": "description"
},
{
	"name": "Integrated speech recognition and semantic classification",
	"summary": "",
	"abstract": "A novel system integrates speech recognition and semantic classification, so that acoustic scores in a speech recognizer that accepts spoken utterances may be taken into account when training both language models and semantic classification models. For example, a joint association score may be defined that is indicative of a correspondence of a semantic class and a word sequence for an acoustic signal. The joint association score may incorporate parameters such as weighting parameters for signal-to-class modeling of the acoustic signal, language model parameters and scores, and acoustic model parameters and scores. The parameters may be revised to raise the joint association score of a target word sequence with a target semantic class relative to the joint association score of a competitor word sequence with the target semantic class. The parameters may be designed so that the semantic classification errors in the training data are minimized.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07856351",
	"publication_date": "2010-12-21",
	"application_number": "11655703",
	"application_date": "2007-01-19",
	"tags": null,
	"slug": "integrated-speech-recognition-and-semantic-classification",
	"match_type": "description"
},
{
	"name": "Intelligent caching data structure for immediate mode graphics",
	"summary": "",
	"abstract": "An intelligent caching data structure and mechanisms for storing visual information via objects and data representing graphics information. The data structure is generally associated with mechanisms that intelligently control how the visual information therein is populated and used. The cache data structure can be traversed for direct rendering, or traversed for pre-processing the visual information into an instruction stream for another entity. Much of the data typically has no external reference to it, thereby enabling more of the information stored in the data structure to be processed to conserve resources. A transaction/batching-like model for updating the data structure enables external modifications to the data structure without interrupting reading from the data structure, and such that changes received are atomically implemented. A method and mechanism are provided to call back to an application program in order to create or re-create portions of the data structure as needed, to conserve resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07808506",
	"publication_date": "2010-10-05",
	"application_number": "12549253",
	"application_date": "2009-08-27",
	"tags": null,
	"slug": "intelligent-caching-data-structure-for-immediate-mode-graphics",
	"match_type": "description"
},
{
	"name": "Interactive entertainment and information system using television set-top box",
	"summary": "",
	"abstract": "An interactive entertainment and information system using a television set-top box, wherein pages of information are periodically provided to the set-top box for user interaction therewith. The pages include associated meta-data defining active locations on each page. When a page is displayed, the user interacts with the active locations on the page by entering commands via a remote control device, whereby the system reads the meta-data and takes the action associated with the location. Actions include moving to other active locations, hyperlinking to other pages, entering user form data and submitting the data as a form into memory. The form data may be read from memory, and the pages may be related to a conventional television program, thereby providing significant user interactivity with the television.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770201",
	"publication_date": "2010-08-03",
	"application_number": "11491042",
	"application_date": "2006-07-20",
	"tags": null,
	"slug": "interactive-entertainment-and-information-system-using-television-settop-box",
	"match_type": "description"
},
{
	"name": "Interface and system for manipulating thumbnails of live windows in a window manager",
	"summary": "",
	"abstract": "The present invention provides an interface, system, or method for displaying a window on a display in which a thumbnail corresponding to an application window is capable of being modified based on modifications in the application window. The modifications of the thumbnail may be accomplished in real-time. Also, the present invention provides an interface, system, and method for displaying a window or a thumbnail on a display in which a Desktop Window Manager (DWM) registers a source window and a destination window and/or may update or modify a thumbnail associated with the source window. Special effects may be applied to the thumbnail. The present invention further provides a method for registering and/or modifying a thumbnail and its properties or maintaining a list of thumbnail registrations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07673255",
	"publication_date": "2010-03-02",
	"application_number": "11111983",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "interface-and-system-for-manipulating-thumbnails-of-live-windows-in-a-window-manager",
	"match_type": "description"
},
{
	"name": "Interfaces for creation and access of extensible markup language paper specification documents",
	"summary": "",
	"abstract": "XPS documents are created and accessed via a collection of interfaces of various classes of an application programming interface. The application programming interface includes a document sequence class for reading and writing the document sequence of the XPS document, a fixed document class for reading and writing the fixed documents of the document sequence, a page class for reading and writing the pages of the fixed documents, and a resource class for accessing the resources of each page. Applications seeking to create or read XPS documents may utilize the application programming interface such that the complexities of creating and accessing the XPS document are abstracted away.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716570",
	"publication_date": "2010-05-11",
	"application_number": "11301132",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "interfaces-for-creation-and-access-of-extensible-markup-language-paper-specification-documents",
	"match_type": "abstract"
},
{
	"name": "Intermittent computing",
	"summary": "",
	"abstract": "An intermittent computing system state and intermittent computing module is described for a power-constrained personal computer. In the intermittent computing system state, the power-constrained personal computer may transition between sub-states of the intermittent computing system state according to an intermittent computing schedule. Each intermittent computing sub-state may be associated with hardware power sets and software power sets. Altering power supply to hardware components referenced by hardware power sets may alter power consumed in associated intermittent computing sub-states. A caching mechanism may be configured to make it likely that software components referenced by software power sets are loaded into powered storage types during associated intermittent computing sub-states. In the intermittent computing system state, periods of high functionality may be available over extended periods without the high power consumption associated with a continuous working system state. Average power consumption may be adjusted by varying the intermittent computing schedule.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730333",
	"publication_date": "2010-06-01",
	"application_number": "11519260",
	"application_date": "2006-09-12",
	"tags": null,
	"slug": "intermittent-computing",
	"match_type": "description"
},
{
	"name": "Item management with data sharing and synchronization",
	"summary": "",
	"abstract": "Systems and method for accessing and providing item management functionality with synchronization relationships that share data using a feed that may itself contain synchronization and item information are disclosed. Such systems and methods may enable an endpoint to use item management functionality provided by an item management module to generate or update a feed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725456",
	"publication_date": "2010-05-25",
	"application_number": "11741091",
	"application_date": "2007-04-27",
	"tags": null,
	"slug": "item-management-with-data-sharing-and-synchronization",
	"match_type": "description"
},
{
	"name": "Journal file reader",
	"summary": "",
	"abstract": "A system and process for enabling programmatic access to the contents of documents containing electronic ink are described.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730399",
	"publication_date": "2010-06-01",
	"application_number": "11111739",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "journal-file-reader",
	"match_type": "description"
},
{
	"name": "Language localization and intercepting data using translation tables",
	"summary": "",
	"abstract": "A system for providing translations of applications for operation in a non-native language. The translation makes use of associated tables either existing within the operating system or at locations outside of the operating system. The translation system makes use of application based translations tables that may also interrelate with core translation tables and community translation tables, prior to sending the data to a graphical interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721271",
	"publication_date": "2010-05-18",
	"application_number": "10829370",
	"application_date": "2004-04-22",
	"tags": null,
	"slug": "language-localization-and-intercepting-data-using-translation-tables",
	"match_type": "description"
},
{
	"name": "Learning statistically characterized resonance targets in a hidden trajectory model",
	"summary": "",
	"abstract": "A statistical trajectory speech model is constructed where the targets for vocal tract resonances are represented as random vectors and where the mean vectors of the target distributions are estimated using a likelihood function for joint acoustic observation vectors. The target mean vectors can be estimated without formant data. To form the model, time-dependent filter parameter vectors based on time-dependent coarticulation parameters are constructed that are a function of the ordering and identity of the phones in the phone sequence in each speech utterance. The filter parameter vectors are also a function of the temporal extent of coarticulation and of the speaker's speaking effort.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653535",
	"publication_date": "2010-01-26",
	"application_number": "11303899",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "learning-statistically-characterized-resonance-targets-in-a-hidden-trajectory-model",
	"match_type": "description"
},
{
	"name": "Legacy filter support in a new managed file system filter model",
	"summary": "",
	"abstract": "Systems and methods are described that facilitate management of file system filters, comprising a filter manager that maps altitudes of minifilters to legacy filter order groups. An aspect of the present invention provides for minifilters that can dynamically load and unload, thus facilitating increased flexibility in filter system management.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844606",
	"publication_date": "2010-11-30",
	"application_number": "10700729",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": "legacy-filter-support-in-a-new-managed-file-system-filter-model",
	"match_type": "description"
},
{
	"name": "Linktime recognition of alternative implementations of programmed functionality",
	"summary": "",
	"abstract": "A method and apparatus are disclosed for optimizing the runtime behavior of database or other applications by allowing selection of alternative code segments during linking of pre-compiled object modules. A macro-preprocessor inserts a declaration for a global variable in the source code in response to an occurrence of a command of interest. The linker selects object modules for executing other commands based on the presence or absence of the declaration for the global variable in the preprocessed source code. The method and apparatus are useful in implementing programming language statements including non-procedural programming languages such as the Embedded Structured Query Language (ESQL).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757225",
	"publication_date": "2010-07-13",
	"application_number": "09897540",
	"application_date": "2001-06-29",
	"tags": null,
	"slug": "linktime-recognition-of-alternative-implementations-of-programmed-functionality",
	"match_type": "description"
},
{
	"name": "Locating, viewing and interacting with information sources",
	"summary": "",
	"abstract": "A user interface is provided for allowing a user to quickly and easily connect to data and other informational sources. A user can use a user interface to interact with a collection of connection files to quickly and easily connect to various data sources and other informational sources. The user interface is configured to make data sources available at a glance, providing a user with a convenient and comprehensive display of the data sources. The user interface is designed to be a simplified experience for data import that is helpful to both novice and more experienced users in that the data is presented simply without a lot of extraneous information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788259",
	"publication_date": "2010-08-31",
	"application_number": "11490762",
	"application_date": "2006-07-21",
	"tags": null,
	"slug": "locating-viewing-and-interacting-with-information-sources",
	"match_type": "description"
},
{
	"name": "Log management system and method",
	"summary": "",
	"abstract": "A system and method for managing log entries associated with execution events in an application. The system and method may include a log provider wrapper for receiving log entries associated with the event and log providers for receiving all or part of the information associated with a log entry. The log provider wrapper, through communication with a logging configuration, may filter the log entry, segment information contained in the log entry, format the information, and deliver the information to one or more log providers. The log providers may send the information to a respective destination medium.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707189",
	"publication_date": "2010-04-27",
	"application_number": "10958848",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": "log-management-system-and-method",
	"match_type": "description"
},
{
	"name": "Login screen with identifying data",
	"summary": "",
	"abstract": "Techniques are described which may be employed to provide a login screen with identifying data. In an implementation, a login screen is displayed having an image that identifies a user. Credentials are received via the login screen to log the user onto a service provider over a network.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676833",
	"publication_date": "2010-03-09",
	"application_number": "11279926",
	"application_date": "2006-04-17",
	"tags": null,
	"slug": "login-screen-with-identifying-data",
	"match_type": "description"
},
{
	"name": "Logon and machine unlock integration",
	"summary": "",
	"abstract": "A method of avoiding a second login of user information in an encrypted disk computer system includes a communications path for transferring user login information. The login information is acquired and used by a first software module which authenticates the user to decrypt a disk with an encrypted operating system. The same login information is transferred using the communications channel to a second use which logs the user into the decrypted operating system. The method also supports multiple users through maintenance of multiple users credentials.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818255",
	"publication_date": "2010-10-19",
	"application_number": "11445821",
	"application_date": "2006-06-02",
	"tags": null,
	"slug": "logon-and-machine-unlock-integration",
	"match_type": "description"
},
{
	"name": "Low latency real-time audio streaming",
	"summary": "",
	"abstract": "Systems and methods for audio streaming in a computing device are described. In one aspect an interface to an adapter driver is provided. The adapter driver is associated with an audio device. The adapter driver and a wave real-time (WaveRT) port driver associated with the computing device use the interface to configure direct access by a client of the computing device and by the audio device to a cyclic buffer. The direct access is for rendering and/or capturing an audio stream. The direct access is independent of any copying by a port driver on the computer system of the audio stream to any buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07706901",
	"publication_date": "2010-04-27",
	"application_number": "10956280",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "low-latency-realtime-audio-streaming",
	"match_type": "description"
},
{
	"name": "Management of drawing resources in a native code portion using cached drawing parameters",
	"summary": "",
	"abstract": "Techniques for management of drawing resources are described. In an implementation, a reference count numeral may be associated with a drawing resource stored in cache memory. One may be added to the reference count numeral each time a new drawing resource is added to memory. In addition, one may be removed from the reference count each time an existing drawing resource is removed from the memory. Also, the drawing resource may be maintained in the cache memory when the reference count numeral is greater than zero.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802056",
	"publication_date": "2010-09-21",
	"application_number": "11772649",
	"application_date": "2007-07-02",
	"tags": null,
	"slug": "management-of-drawing-resources-in-a-native-code-portion-using-cached-drawing-parameters",
	"match_type": "description"
},
{
	"name": "Managing access to a network",
	"summary": "",
	"abstract": "One embodiment of the invention is directed to managing access of a host computer to a network. A first communication session with the host computer may be conducted to authenticate the host computer's identity. A second communication session with the host computer may be conducted to determine the health status of the host computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647634",
	"publication_date": "2010-01-12",
	"application_number": "11172172",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "managing-access-to-a-network",
	"match_type": "description"
},
{
	"name": "Managing stored data on a computer network",
	"summary": "",
	"abstract": "A method and system for managing stored data on a computer network organizes data into logical volumes, and each logical volume has a friendly name associated with it. A domain controller keeps track of the friendly names of the logical volumes and associates those friendly names with the actual physical paths of the logical volumes. When a client computer on the network wishes to access a logical volume, it sends a look-up request having the friendly name to the domain controller. The domain controller may fulfill the request by sending the path of the logical volume to the client computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676564",
	"publication_date": "2010-03-09",
	"application_number": "11236256",
	"application_date": "2005-09-27",
	"tags": null,
	"slug": "managing-stored-data-on-a-computer-network",
	"match_type": "description"
},
{
	"name": "Managing working set use of a cache via page coloring",
	"summary": "",
	"abstract": "A processor cache is indexed by a group of distinct page colors. The use of this cache by different working sets is controlled using page coloring. Translations of virtual addresses of the instructions and/or data of a working set are constrained to physical addresses the page colors of which are in a subgroup of the group of distinct page colors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747820",
	"publication_date": "2010-06-29",
	"application_number": "11818727",
	"application_date": "2007-06-15",
	"tags": null,
	"slug": "managing-working-set-use-of-a-cache-via-page-coloring",
	"match_type": "description"
},
{
	"name": "Matching educational game players in a computerized learning environment",
	"summary": "",
	"abstract": "A system for matching users of learning application programs is provided. As one example, a learning service program can assess the performance of a user based on their interaction with at least one learning application program. Where the user requests an interactive session with other users for a particular learning application program, a learning service program can perform matching of the plurality of users according to the users' assessed abilities in the learning activities involved to achieve multi-user interaction that promotes learning by each of the users.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849043",
	"publication_date": "2010-12-07",
	"application_number": "11786701",
	"application_date": "2007-04-12",
	"tags": null,
	"slug": "matching-educational-game-players-in-a-computerized-learning-environment",
	"match_type": "description"
},
{
	"name": "Mechanism for obtaining and applying constraints to constructs within an interactive environment",
	"summary": "",
	"abstract": "The present mechanism obtains constraints within an interactive environment, associates these constraints with constructs, and then applies these constraints to the constructs when encountering the constructs. The constraints may be saved in metadata associated with the respective construct. The constraints may specify a data type for the construct, a predicate directive, a documentation directive, a parsing directive, a data generation directive, a data validation directive, or an object processing and encoding directive. The constraints are extendable to support other directives. The mechanism allows interactive users to easily specify constraints interactively.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676798",
	"publication_date": "2010-03-09",
	"application_number": "10693396",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": "mechanism-for-obtaining-and-applying-constraints-to-constructs-within-an-interactive-environment",
	"match_type": "description"
},
{
	"name": "Media authoring and presentation",
	"summary": "",
	"abstract": "A system and method for facilitating non-linear viewing of media is provided. The system facilitates non-linear viewing of media by providing a scene selector that scans a digitized media and selects a scene in the digitized media and a metadata generator that produces metadata associated with the scenes and relates the metadata to the selected scene. With the scenes annotated with metadata, a playlist generator can generate a playlist of related scenes based on user inputs like queries and a playlist updater can adapt the playlist based on user reaction to the displayed scenes. The scenes can be displayed on a variety of devices exhibiting various levels of intelligence. The displays can be distributed as can the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725829",
	"publication_date": "2010-05-25",
	"application_number": "11009115",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": "media-authoring-and-presentation",
	"match_type": "description"
},
{
	"name": "Media authoring and presentation",
	"summary": "",
	"abstract": "A system and method for facilitating non-linear viewing of media is provided. The system facilitates non-linear viewing of media by providing a scene selector that scans a digitized media and selects a scene in the digitized media and a metadata generator that produces metadata associated with the scenes and relates the metadata to the selected scene. With the scenes annotated with metadata, a playlist generator can generate a playlist of related scenes based on user inputs like queries and a playlist updater can adapt the playlist based on user reaction to the displayed scenes. The scenes can be displayed on a variety of devices exhibiting various levels of intelligence. The displays can be distributed as can the system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757171",
	"publication_date": "2010-07-13",
	"application_number": "11009142",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": "media-authoring-and-presentation",
	"match_type": "description"
},
{
	"name": "Media foundation media sink",
	"summary": "",
	"abstract": "A method and system provides interfaces, data structures and events for representing a u201csinku201d of multimedia data to interact with objects in a multimedia system to control multimedia objects. The interfaces and data structures enable efficient management for media objects that must interface directly with each other. One embodiment is directed to providing a common interface and a single API to a plurality of media objects. In an embodiment, the API is a control layer that isolates the media objects from each other and provides a single point of control, allowing media objects to be added or removed without affecting any other media objects. The control layer allows users to become familiar with only one API instead of many thereby facilitating the tasks of programming and documentation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725920",
	"publication_date": "2010-05-25",
	"application_number": "10608869",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": "media-foundation-media-sink",
	"match_type": "description"
},
{
	"name": "Mesh quilting for geometric texture synthesis",
	"summary": "",
	"abstract": "Mesh quilting for geometric texture synthesis involves synthesizing a geometric texture by quilting a mesh texture swatch. In an example embodiment, geometry is matched between a mesh texture swatch and a portion of a synthesized geometric texture. Correspondences are ascertained between elements of the mesh texture swatch and the portion of the synthesized geometric texture. The ascertained corresponding elements of the mesh texture swatch and the portion of the synthesized geometric texture are aligned via local deformation to create a new patch. The new patch is merged into an output texture space to grow the synthesized geometric texture.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07800627",
	"publication_date": "2010-09-21",
	"application_number": "11760607",
	"application_date": "2007-06-08",
	"tags": null,
	"slug": "mesh-quilting-for-geometric-texture-synthesis",
	"match_type": "description"
},
{
	"name": "Message delivery with configurable assurances and features between two endpoints",
	"summary": "",
	"abstract": "A single programming model is provided for accessing a plurality of distinct message transports while developing one or more applications for message delivery between two endpoints. The programming model allows for independently configurable assurances and features for transporting the messages. The configurable assurances may be selected from at least once delivery, at most once message delivery, in order message delivery, and message time to live. The independently chosen features may include a session state storage, an extension of time to live, and transacted message buffering.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676580",
	"publication_date": "2010-03-09",
	"application_number": "10401649",
	"application_date": "2003-03-27",
	"tags": null,
	"slug": "message-delivery-with-configurable-assurances-and-features-between-two-endpoints",
	"match_type": "description"
},
{
	"name": "Message-based scalable data transport protocol",
	"summary": "",
	"abstract": "The invention deploys a message-based data transport platform, in which a communication engine controls the delivery of server or other backup data or other large quantity data to a remote site based on message objects as fundamental units. Data sessions from one or more servers or other data sources may be buffered over established pipes for delivery to a remote data host which likewise contains messaging control. Relatively large message units may wait for communication over the channel in a queue, and be released when prior messaging is complete. Completion port or other polling or other mechanisms may indicate that connections have become open for use. In embodiments the message objects may be signed, or encrypted to safeguard against alteration or unauthorized viewing. The communication engine may rely upon TCP or other underlying transport mechanisms to effect lower level transmission.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720973",
	"publication_date": "2010-05-18",
	"application_number": "10608191",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": "messagebased-scalable-data-transport-protocol",
	"match_type": "description"
},
{
	"name": "Metadata based hypermedia management system",
	"summary": "",
	"abstract": "A system supplies links between objects. A link service receives a hypermedia link request from a client. The hypermedia request identifies a source object. A link provider analyzes association metadata and creates hypermedia links between the source object and associated objects identified from the metadata.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769750",
	"publication_date": "2010-08-03",
	"application_number": "10201548",
	"application_date": "2002-07-22",
	"tags": null,
	"slug": "metadata-based-hypermedia-management-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for constructing a speech filter using estimates of clean speech and noise",
	"summary": "",
	"abstract": "A method and apparatus identify a clean speech signal from a noisy speech signal. To do this, a clean speech value and a noise value are estimated from the noisy speech signal. The clean speech value and the noise value are then used to define a gain on a filter. The noisy speech signal is applied to the filter to produce the clean speech signal. Under some embodiments, the noise value and the clean speech value are used in both the numerator and the denominator of the filter gain, with the numerator being guaranteed to be positive.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725314",
	"publication_date": "2010-05-25",
	"application_number": "10780177",
	"application_date": "2004-02-16",
	"tags": null,
	"slug": "method-and-apparatus-for-constructing-a-speech-filter-using-estimates-of-clean-speech-and-noise",
	"match_type": "description"
},
{
	"name": "Method and apparatus for constructing and using syllable-like unit language models",
	"summary": "",
	"abstract": "A method and computer-readable medium use syllable-like units (SLUs) to decode a pronunciation into a phonetic description. The syllable-like units are generally larger than a single phoneme but smaller than a word. The present invention provides a means for defining these syllable-like units and for generating a language model based on these syllable-like units that can be used in the decoding process. As SLUs are longer than phonemes, they contain more acoustic contextual clues and better lexical constraints for speech recognition. Thus, the phoneme accuracy produced from SLU recognition is much better than all-phone sequence recognition.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676365",
	"publication_date": "2010-03-09",
	"application_number": "11110602",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": "method-and-apparatus-for-constructing-and-using-syllablelike-unit-language-models",
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating templates",
	"summary": "",
	"abstract": "A template creator creates a template class that stores at least one template parameter. The template creator also specifies at least one additional object to be created when an instance of the template class is created. A template user initiates the creation of a new instance of the template class. If an error occurs during the creation of the new instance of the template class, the template user receives a report identifying the error.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653913",
	"publication_date": "2010-01-26",
	"application_number": "11271936",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": "method-and-apparatus-for-creating-templates",
	"match_type": "description"
},
{
	"name": "Method and apparatus for creating templates",
	"summary": "",
	"abstract": "A template creator creates a template class that stores at least one template parameter. The template creator also specifies at least one additional object to be created when an instance of the template class is created. A template user initiates the creation of a new instance of the template class. If an error occurs during the creation of the new instance of the template class, the template user receives a report identifying the error.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07779419",
	"publication_date": "2010-08-17",
	"application_number": "11272636",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": "method-and-apparatus-for-creating-templates",
	"match_type": "description"
},
{
	"name": "Method and apparatus for fast machine learning using probability maps and fourier transforms",
	"summary": "",
	"abstract": "The present invention provides a method of constructing recognition models. Under the method, a set of probabilities is estimated for values of a hidden variable. A Fourier transform is determined for the set of probabilities and is used to determine a Fourier transform of an estimated prototype pattern. The inverse Fourier transform is then determined for the Fourier transform of the estimated prototype pattern to form an estimated prototype pattern.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07702489",
	"publication_date": "2010-04-20",
	"application_number": "10286142",
	"application_date": "2002-11-01",
	"tags": null,
	"slug": "method-and-apparatus-for-fast-machine-learning-using-probability-maps-and-fourier-transforms",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing and integrating high-performance message queues in a user interface environment",
	"summary": "",
	"abstract": "A method and apparatus is provided for providing and integrating high-performance message queues. u201cContextsu201d are provided that allow independent worlds to be created and execute in parallel. A context is created with one or more threads. Each object is created with context affinity, allowing any thread inside the context to modify the object or process pending messages. Threads in a different context are unable to modify the object or process pending messages for that context. To help achieve scalability and context affinity, both global and thread-local data is often moved into the context. Remaining global data has independent locks, providing synchronized access for multiple contexts. Each context has multiple message queues to create a priority queue. There are default queues for sent messages and posted messages, carry-overs from legacy window managers, with the ability to add new queues on demand. A queue bridge is also provided for actually processing the messages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716680",
	"publication_date": "2010-05-11",
	"application_number": "10930124",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-and-integrating-highperformance-message-queues-in-a-user-interface-environment",
	"match_type": "description"
},
{
	"name": "Method and apparatus for regulating access to a computer via a computer network",
	"summary": "",
	"abstract": "A method and apparatus for regulating access to a computer via a computer network is provided, in which a local computer has an application program, a proxy program, and a firewall program. The proxy program monitors the communication between the application program and the computer network, and is able to detect when the application program requires a remote computer to initiate a new connection to the local computer. Upon detecting such a need, the proxy program changes the settings of the firewall program so that the remote computer is able to establish the new connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07822970",
	"publication_date": "2010-10-26",
	"application_number": "10000606",
	"application_date": "2001-10-24",
	"tags": null,
	"slug": "method-and-apparatus-for-regulating-access-to-a-computer-via-a-computer-network",
	"match_type": "description"
},
{
	"name": "Method and apparatus for utilizing an object model for managing content regions in an electronic document",
	"summary": "",
	"abstract": "A method and apparatus are provided for utilizing a document object model to manage content regions for use in an electronic document. A content region is a predefined area which may be inserted in an electronic document and which serves as a placeholder for receiving and displaying specific types of content such as text, graphics data, calendar data, or tabular data. The document object model enables a user to create, modify, and delete content regions from an electronic document using an application programming interface from within a computer application program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712016",
	"publication_date": "2010-05-04",
	"application_number": "11065754",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "method-and-apparatus-for-utilizing-an-object-model-for-managing-content-regions-in-an-electronic-document",
	"match_type": "abstract"
},
{
	"name": "Method and framework for integrating a plurality of network policies",
	"summary": "",
	"abstract": "A method and system is disclosed for managing and implementing a plurality of network policies in a network device. Each of the plurality of policies are defined by one or more filters. The filters are installed in a policy engine. A layer identifies the network policy to be applied to a packet by sending a request to the policy engine. The policy engine then returns the policy to the requesting layer. The method and system may be used to implement a programmable, host-based, distributed, authenticating firewall that enables security and other policies to be applied at several protocol layers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07761708",
	"publication_date": "2010-07-20",
	"application_number": "11701153",
	"application_date": "2007-02-01",
	"tags": null,
	"slug": "method-and-framework-for-integrating-a-plurality-of-network-policies",
	"match_type": "description"
},
{
	"name": "Method and mechanism for providing computer programs with computer system events",
	"summary": "",
	"abstract": "A method and system for providing system event notifications to clients such as applications. Clients register for notification of one or more types of events with a registration mechanism, and a System Event Notification Service, (SENS), receives system event information and fires event notifications in response thereto. A distribution mechanism selectively communicates the fired event to each client registered for notification thereof based on the type of event. Events include network events, for which the service monitors the connectivity state of the machine, including whether a connection is established or lost, the type of connection (LAN/WAN) and bandwidth information. To monitor a LAN state, the service caches outgoing and incoming network information including errors and packet counts and statistically evaluates this cached information against current information to determine whether the connection is established or lost. The service also determines if a destination (IP address or name) is reachable, by periodically polling destinations. Other system event notifications may be fired, including logon or logoff operations and power management events.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650404",
	"publication_date": "2010-01-19",
	"application_number": "11029982",
	"application_date": "2005-01-04",
	"tags": null,
	"slug": "method-and-mechanism-for-providing-computer-programs-with-computer-system-events",
	"match_type": "description"
},
{
	"name": "Method and system for a batch parser",
	"summary": "",
	"abstract": "A method of generating commands for a database server includes accessing a script having parser-specific commands, a first set of database-specific commands and optional shell commands. A componentized batch parser splits out the different command types and converts the parser-specific commands into a second set of database-specific commands. The first set and second set of database-specific commands may be sent to a target database for execution. The optional shell commands may be executed by a user tool at a local console. The batch parser offers features including separation of parsing functions using batch separators, performing automatic substitution of tokens in the script with defined values or substitution of tokens by requesting token values via a client tool, stripping off comments and blanks spaces from processed commands, referencing and editing files outside the script, and the ability to connect to different servers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712088",
	"publication_date": "2010-05-04",
	"application_number": "10886990",
	"application_date": "2004-07-08",
	"tags": null,
	"slug": "method-and-system-for-a-batch-parser",
	"match_type": "description"
},
{
	"name": "Method and system for a call stack capture",
	"summary": "",
	"abstract": "A method of acquiring software profile information of a target software application includes receiving a programmed interrupt while executing an application in a computer system, servicing the interrupt such that call stack information is acquired and processing the call stack information to produce statistical information concerning function calls. The call stack information includes program counter and other information which is derived from the target application as well as operating system. Some or all of the call stack information may be recorded. The statistical information includes statistics concerning the number of samples wherein a series of functions calls are included in the call stack information and the number of samples wherein a set of function calls are at the top of the call stack information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721268",
	"publication_date": "2010-05-18",
	"application_number": "10957264",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "method-and-system-for-a-call-stack-capture",
	"match_type": "description"
},
{
	"name": "Method and system for a system call profiler",
	"summary": "",
	"abstract": "A method of acquiring software profile information of a target software application includes Monitoring an application program for system calls, detecting a system call of interest to the user, acquiring stack information, and processing the call stack information to produce statistical information concerning function calls. The call stack information includes program counter and other information which is derived from the target application as well as operating system. The call stack information may be recorded. The statistical information includes statistics concerning the number of samples that any one function call is at a top of the call stack information, the number of samples that a series of functions calls are included in the call stack information, and the number of samples that a set of function calls are at the top of the call stack information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716647",
	"publication_date": "2010-05-11",
	"application_number": "10957447",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "method-and-system-for-a-system-call-profiler",
	"match_type": "description"
},
{
	"name": "Method and system for a target device display simulation",
	"summary": "",
	"abstract": "A method of viewing a high resolution display on a low resolution development system display for a digital device includes selecting a target device and identifying an image form for the selected device. An image form displays a realistic form of the selected target device. A form factor is selected which represents the display capabilities of the target device. The image form size is adjusted such that the developer may see text in proper proportion to the image form so as to simulate the look of the high resolution display of the target device. Object code for the target device is generated which contains the proper font size to correspond to the image form and font on the development display.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689908",
	"publication_date": "2010-03-30",
	"application_number": "11047455",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": "method-and-system-for-a-target-device-display-simulation",
	"match_type": "description"
},
{
	"name": "Method and system for applying input mode bias",
	"summary": "",
	"abstract": "A method and system for applying input mode bias is disclosed. A schema is applied to an input field of an electronic document. The schema is associated with a grammar that defines the set of acceptable strings that may be input into the input field. When text is input into the input field, the schema is determined and the associated grammar is determined. The grammar is then sent to the input method. Based on the grammar, the input method may determine what text the user is trying to enter. The grammar may also be used to apply semantic categories to text input into a document. After the text is entered it is compared to a grammar. If the entered text matches the form of the grammar, then the schema is applied to the text as a semantic category.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07778816",
	"publication_date": "2010-08-17",
	"application_number": "09841265",
	"application_date": "2001-04-24",
	"tags": null,
	"slug": "method-and-system-for-applying-input-mode-bias",
	"match_type": "description"
},
{
	"name": "Method and system for building a report for execution against a data store",
	"summary": "",
	"abstract": "A data query and reporting method and system are provided. The method and system allow non-technical computer users to build and execute complex database queries. The method and system accommodate the need for a simple, easy-to-understand interactive and iterative means for generating and validating database queries. The method and system reduce the complexity and costs associated with retrieving useful information for organizations of all sizes, especially smaller businesses. The method and system support a robust security model, enabling organizations to protect sensitive data while providing broad data access.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07814093",
	"publication_date": "2010-10-12",
	"application_number": "10627180",
	"application_date": "2003-07-25",
	"tags": null,
	"slug": "method-and-system-for-building-a-report-for-execution-against-a-data-store",
	"match_type": "description"
},
{
	"name": "Method and system for creating temporary visual indicia",
	"summary": "",
	"abstract": "The present invention relates to new and improved embodiments of systems and methods for using a u201cpenu201d input as a temporary pointer to highlight a portion of a document and having the u201cinku201d disappear. In embodiments, a method and system for temporarily marking a portion of a document comprises sending a marking directive that produces a visual indicia on a document being viewed on two or more display devices connected over a network, waiting a period of time, and automatically erasing the visual indicia on the document being viewed on the two or more display devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752561",
	"publication_date": "2010-07-06",
	"application_number": "11083135",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": "method-and-system-for-creating-temporary-visual-indicia",
	"match_type": "description"
},
{
	"name": "Method and system for creating, storing, managing and consuming culture specific data",
	"summary": "",
	"abstract": "A localization platform is used to localize data to one or more distinct markets. A matching component receives data to be localized and accesses different localization components and returns localized data corresponding to the input data. A data gathering component receives localized content from an input source that is external to the localization platform along with metadata that identifies the particular input source that provided the localized content. The data gathering component then only allows the particular input source that provided the localized content to modify that localized content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774195",
	"publication_date": "2010-08-10",
	"application_number": "11118548",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "method-and-system-for-creating-storing-managing-and-consuming-culture-specific-data",
	"match_type": "description"
},
{
	"name": "Method and system for defining and controlling algorithmic elements in a graphics display system",
	"summary": "",
	"abstract": "An API is provided that enables programmability of a 3D chip, wherein programming or algorithmic elements written by the developer can be downloaded to the chip, thereby programming the chip to perform those algorithms. A developer writes a routine that is downloadable to a 3D graphics chip. There are also a set of algorithmic elements that are provided in connection with the API that have already been programmed for the developer, that are downloadable to the programmable chip for improved performance. Thus, a developer may download preexisting API objects to a 3D graphics chip. A developer adheres to a specific format for packing up an algorithmic element, or set of instructions, for implementation by a 3D graphics chip. The developer packs the instruction set into an array of numbers, by referring to a list of u2018tokensu2019 understood by the 3D graphics chip. This array of numbers in turn is mapped correctly to the 3D graphics chip for implementation of the algorithmic element by the 3D graphics chip.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07800606",
	"publication_date": "2010-09-21",
	"application_number": "10971248",
	"application_date": "2004-10-22",
	"tags": null,
	"slug": "method-and-system-for-defining-and-controlling-algorithmic-elements-in-a-graphics-display-system",
	"match_type": "description"
},
{
	"name": "Method and system for defining and controlling algorithmic elements in a graphics display system",
	"summary": "",
	"abstract": "An API is provided that enables programmability of a 3D chip, wherein programming or algorithmic elements written by the developer can be downloaded to the chip, thereby programming the chip to perform those algorithms. A developer writes a routine that is downloadable to a 3D graphics chip. There are also a set of algorithmic elements that are provided in connection with the API that have already been programmed for the developer, that are downloadable to the programmable chip for improved performance. Thus, a developer may download preexisting API objects to a 3D graphics chip. A developer adheres to a specific format for packing up an algorithmic element, or set of instructions, for implementation by a 3D graphics chip. The developer packs the instruction set into an array of numbers, by referring to a list of u2018tokensu2019 understood by the 3D graphics chip. This array of numbers in turn is mapped correctly to the 3D graphics chip for implementation of the algorithmic element by the 3D graphics chip.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07800607",
	"publication_date": "2010-09-21",
	"application_number": "10971484",
	"application_date": "2004-10-22",
	"tags": null,
	"slug": "method-and-system-for-defining-and-controlling-algorithmic-elements-in-a-graphics-display-system",
	"match_type": "description"
},
{
	"name": "Method and system for filtering communications to prevent exploitation of a software vulnerability",
	"summary": "",
	"abstract": "A method and system for protecting an application that implements a communication protocol against exploitation of a communication-based vulnerability is provided. A protection system provides a protection policy that specifies how to recognize messages that expose a specific vulnerability and specifies actions to take when the vulnerability is exposed. A protection policy specifies the sequence of messages and their payload characteristics that expose a vulnerability. The protection system may specify the sequences of messages using a message protocol state machine. A message protocol state machine of an application represents the states that the application transitions through as it receives various messages. The message protocol state machine of the protection policy may be a portion of the message protocol state machine of the application relating to the vulnerability. The protection system uses the message protocol state machine to track the states that lead up to the exposing of the vulnerability.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694022",
	"publication_date": "2010-04-06",
	"application_number": "10955963",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "method-and-system-for-filtering-communications-to-prevent-exploitation-of-a-software-vulnerability",
	"match_type": "description"
},
{
	"name": "Method and system for integrating security mechanisms into session initiation protocol request messages for client-proxy authentication",
	"summary": "",
	"abstract": "In response, the SIP client sends a second request message with a proxy authorization header containing authentication data, including a Kerberos server ticket for the Proxy, to allow the proxy to authenticate the client's user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770007",
	"publication_date": "2010-08-03",
	"application_number": "11757877",
	"application_date": "2007-06-04",
	"tags": null,
	"slug": "method-and-system-for-integrating-security-mechanisms-into-session-initiation-protocol-request-messages-for-clientproxy-authentication",
	"match_type": "description"
},
{
	"name": "Method and system for maintaining connections between surfaces and objects in a graphics display system",
	"summary": "",
	"abstract": "A method and system are provided for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API and for managing computing resources utilized in connection with the maintenance of connections between surfaces and objects. When multiple applications are running simultaneously, it is possible that the demand for overall computing resources may exceed supply, and it is possible that a connection between a surface and object may be lost for one or more applications. In accordance with the present invention, a check for the persistence of a connection between surface space and object space is made substantially at the time of a present function call, and thus multiple redundant checks are avoided. In one embodiment, checks made incident to function calls other than a present function call are spoofed or bypassed in order to avoid previous inefficient use of computing resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07761884",
	"publication_date": "2010-07-20",
	"application_number": "10961435",
	"application_date": "2004-10-07",
	"tags": null,
	"slug": "method-and-system-for-maintaining-connections-between-surfaces-and-objects-in-a-graphics-display-system",
	"match_type": "description"
},
{
	"name": "Method and system for parallelizing completion event processing",
	"summary": "",
	"abstract": "Disclosed are methods for handling RDMA connections carried over packet stream connections. In one aspect, I/O completion events are distributed among a number of processors in a multi-processor computing device, eliminating processing bottlenecks. For each processor that will accept I/O completion events, at least one completion queue is created. When an I/O completion event is received on one of the completion queues, the processor associated with that queue processes the event. In a second aspect, semantics of the interactions among a packet stream handler, an RDMA layer, and an RNIC are defined to control RDMA closures and thus to avoid implementation errors. In a third aspect, semantics are defined for transferring an existing packet stream connection into RDMA mode while avoiding possible race conditions. The resulting RNIC architecture is simpler than is traditional because the RNIC never needs to process both streaming messages and RDMA-mode traffic at the same time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07761619",
	"publication_date": "2010-07-20",
	"application_number": "11128511",
	"application_date": "2005-05-13",
	"tags": null,
	"slug": "method-and-system-for-parallelizing-completion-event-processing",
	"match_type": "description"
},
{
	"name": "Method and system for providing an interface through which an application can access a media stack",
	"summary": "",
	"abstract": "A communications system provides a media sender object and a media receiver object that provide an interface between a media stack and an application. The application can use the media sender object to send content to a source media stack and the media receiver object to receive content from a sink media stack. The application programming interface of the media sender object and the media receiver object provides functions for registering and un-registering buffers for storing and receiving content. When a source media stack is ready to send content, it invokes each registered source to collect content to be sent. When a sink media stack has received content, it invokes each registered sink to provide the received content. An application interfaces with a media sender object and a media receiver object to add content to a channel or to receive content from a channel.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716359",
	"publication_date": "2010-05-11",
	"application_number": "11124902",
	"application_date": "2005-05-09",
	"tags": null,
	"slug": "method-and-system-for-providing-an-interface-through-which-an-application-can-access-a-media-stack",
	"match_type": "abstract"
},
{
	"name": "Method and system for recording and replaying input-output requests issued by a user-mode program",
	"summary": "",
	"abstract": "I/O request data for user-mode programs is recorded into a log, which later allows the I/O requests to be replayed. By substantially exact replay, tests are performed with different versions/combinations of kernel components using the same I/Os as when recorded. A user-mode record/replay program and kernel-mode filter driver record a program's I/O requests, such as data I/O request packet (IRP) data received by the filter driver. While recording, tests exclude IRPs not directly resulting from program requests. Recorded I/O request data is maintained in log file records. At replay time, the records are read and corresponding I/O requests sent towards the storage volume as if requested by the original program. Tables are maintained for information relevant to the replay context, such as file handles, file IDs, and short names that vary from the record context. Substitution from the tables allows I/O requests to be replayed as originally issued.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676508",
	"publication_date": "2010-03-09",
	"application_number": "10985235",
	"application_date": "2004-11-10",
	"tags": null,
	"slug": "method-and-system-for-recording-and-replaying-inputoutput-requests-issued-by-a-usermode-program",
	"match_type": "description"
},
{
	"name": "Method for building data encapsulation layers for highly variable schema",
	"summary": "",
	"abstract": "The relationships between physical data store schema, object model, and end-user property may be encoded in the source of the object model using attributes. Reflection may be used to build the table of those relationships so that changes to the relationships between those three layers can be easily and quickly made without impacting higher levels in the software stack.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831629",
	"publication_date": "2010-11-09",
	"application_number": "11326886",
	"application_date": "2006-01-06",
	"tags": null,
	"slug": "method-for-building-data-encapsulation-layers-for-highly-variable-schema",
	"match_type": "description"
},
{
	"name": "Method for determining and providing network connectivity information",
	"summary": "",
	"abstract": "A method and system for providing system event notifications to clients such as applications. Clients register for notification of one or more types of events with a registration mechanism, and a System Event Notification Service, (SENS), receives system event information and fires event notifications in response thereto. A distribution mechanism selectively communicates the fired event to each client registered for notification thereof based on the type of event. Events include network events, for which the service monitors the connectivity state of the machine, including whether a connection is established or lost, the type of connection (LAN/WAN) and bandwidth information. To monitor a LAN state, the service caches outgoing and incoming network information including errors and packet counts and statistically evaluates this cached information against current information to determine whether the connection is established or lost. The service also determines if a destination (IP address or name) is reachable, by periodically polling destinations. Other system event notifications may be fired, including logon or logoff operations and power management events.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07702778",
	"publication_date": "2010-04-20",
	"application_number": "11031570",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "method-for-determining-and-providing-network-connectivity-information",
	"match_type": "description"
},
{
	"name": "Method for establishing and maintaining a shared view of time in a peer-to-peer network",
	"summary": "",
	"abstract": "A shared concept of time, called u201cgraph time,u201d is agreed upon by all nodes within a graph. Each node maintains its own local delta representative of a difference in the node's system clock and graph time. Upon connecting to a neighbor node in a graph, a node is sent graph time as perceived by the neighbor node. In accordance with an embodiment, the node assumes that the lag time in receiving the graph time from the neighbor node is one-half of the lag time between the request for the connection and the receipt of the graph time. Graph time as sent by the neighbor node is added to one-half of the total delay and the sum is subtracted from the node's system time to calculate the delta for the node requesting connection.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689720",
	"publication_date": "2010-03-30",
	"application_number": "10702405",
	"application_date": "2003-11-05",
	"tags": null,
	"slug": "method-for-establishing-and-maintaining-a-shared-view-of-time-in-a-peertopeer-network",
	"match_type": "description"
},
{
	"name": "Method of pattern recognition using noise reduction uncertainty",
	"summary": "",
	"abstract": "A method and apparatus are provided for using the uncertainty of a noise-removal process during pattern recognition. In particular, noise is removed from a representation of a portion of a noisy signal to produce a representation of a cleaned signal. In the meantime, an uncertainty associated with the noise removal is computed and is used with the representation of the cleaned signal to modify a probability for a phonetic state in the recognition system. In particular embodiments, the uncertainty is used to modify a probability distribution, by increasing the variance in each Gaussian distribution by the amount equal to the estimated variance of the cleaned signal, which is used in decoding the phonetic state sequence in a pattern recognition task.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769582",
	"publication_date": "2010-08-03",
	"application_number": "12180260",
	"application_date": "2008-07-25",
	"tags": null,
	"slug": "method-of-pattern-recognition-using-noise-reduction-uncertainty",
	"match_type": "description"
},
{
	"name": "Method to reduce or eliminate audio interference from computer components",
	"summary": "",
	"abstract": "The present invention provides a system and method that mitigates audio interference before and/or during an audio session, and in particular, when a high quality audio session is desired. The system includes an audio component that determines whether an audio session is to commence and a control component that interfaces with the audio component and reduces activity associated with a subset of a plurality of computer components that may interfere with the audio session. The system may also include at least one power management system to facilitate reducing power consumption and activity of the computer component(s). The method involves determining that an audio session is desired and switching one or more computer components to a minimal interference mode prior to commencing the audio session. The method may also involve calling at least on API to facilitate the switching of the computer component(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07843893",
	"publication_date": "2010-11-30",
	"application_number": "11551138",
	"application_date": "2006-10-19",
	"tags": null,
	"slug": "method-to-reduce-or-eliminate-audio-interference-from-computer-components",
	"match_type": "description"
},
{
	"name": "Method, system, and apparatus for enabling near real time collaboration on an electronic document through a plurality of computer systems",
	"summary": "",
	"abstract": "A method, system, and apparatus are provided for collaborating on an electronic document. According to the method, a data structure may be maintained at each of the computer systems participating in the collaborative session that represents the contents of a shared document. When user input is received at one of the computer systems modifying the document, the data structure is updated to reflect the modification. In response to the modification, the changes to the data structure are periodically identified and collected as a revision that identifies only the changes made to the data structure as a result of the edits made since the previous revision was taken. The revision is packaged and transmitted to each of the participants in the sharing session. The revisions are merged into the copy of the data structure stored at the participating computer systems.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818679",
	"publication_date": "2010-10-19",
	"application_number": "10920640",
	"application_date": "2004-08-18",
	"tags": null,
	"slug": "method-system-and-apparatus-for-enabling-near-real-time-collaboration-on-an-electronic-document-through-a-plurality-of-computer-systems",
	"match_type": "description"
},
{
	"name": "Methods and apparatuses for handling single-user applications in multi-user computing environments",
	"summary": "",
	"abstract": "Methods and apparatuses are provided for controlling application software while switching between session in a multi-session computing environment. An apparatus includes memory coupled to switching logic and application program managing logic. The switching logic is configured to selectively switch console control of a computing device between at least two user kernel sessions that are maintained in the memory. The application program managing logic is configured to selectively control at least one application program that is operatively configured within at least one of the user kernel sessions. For example, the application program managing logic can be configured to stop the operation, restart certain application programs, notify application programs about switching events, and/or adjust the playback of audio and/or video signals associated certain application programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770134",
	"publication_date": "2010-08-03",
	"application_number": "11739641",
	"application_date": "2007-04-24",
	"tags": null,
	"slug": "methods-and-apparatuses-for-handling-singleuser-applications-in-multiuser-computing-environments",
	"match_type": "description"
},
{
	"name": "Methods and systems for adaptive delivery of multimedia contents",
	"summary": "",
	"abstract": "Methods and systems for generic adaptive multimedia content delivery are described. In one embodiment, a novel framework features an abstract content model and an abstract adaptive delivery decision engine. The abstract content model recognizes important aspects of contents while hiding their physical details from other parts of the framework. The decision engine then makes content adaptation plans based on the abstracted model of the contents and needs little knowledge of any physical details of the actual contents. Thus, under the same framework, adaptive delivery of generic contents is possible.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836152",
	"publication_date": "2010-11-16",
	"application_number": "11275677",
	"application_date": "2006-01-24",
	"tags": null,
	"slug": "methods-and-systems-for-adaptive-delivery-of-multimedia-contents",
	"match_type": "description"
},
{
	"name": "Methods and systems for adaptive delivery of multimedia contents",
	"summary": "",
	"abstract": "Methods and systems for generic adaptive multimedia content delivery are described. In one embodiment, a novel framework features an abstract content model and an abstract adaptive delivery decision engine. The abstract content model recognizes important aspects of contents while hiding their physical details from other parts of the framework. The decision engine then makes content adaptation plans based on the abstracted model of the contents and needs little knowledge of any physical details of the actual contents. Thus, under the same framework, adaptive delivery of generic contents is possible.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747701",
	"publication_date": "2010-06-29",
	"application_number": "11025728",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": "methods-and-systems-for-adaptive-delivery-of-multimedia-contents",
	"match_type": "description"
},
{
	"name": "Methods for describing processor features",
	"summary": "",
	"abstract": "A machine readable description of a new feature of a processor is provided by a processor vendor. Control code executing on a processor, such as a traditional operating system kernel, a partitioning kernel, or the like can be programmed to receive the description of the feature and to use information provided by the description to detect, enable and manage operation of the new feature.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716638",
	"publication_date": "2010-05-11",
	"application_number": "11072913",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": "methods-for-describing-processor-features",
	"match_type": "description"
},
{
	"name": "Methods of factoring operating system functions, methods of converting operating systems, and related apparatus",
	"summary": "",
	"abstract": "Methods of factoring operating system functions into one or more groups of functions are described. Factorization permits operating systems that are not configured to support computing in an object-oriented environment to be used in an object oriented environment. This promotes distributed computing by enabling operating system resources to be instantiated and used across process and machine boundaries. In one embodiment, criteria are defined that govern how functions of an operating system are to be factored into one or more groups. Based on the defined criteria, the functions are factors into groups and groups of functions are then associated with programming objects that have data and methods, wherein the methods correspond to the operating system functions. Applications can call methods on the programming objects either directly or indirectly that, in turn, call operating system functions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07681207",
	"publication_date": "2010-03-16",
	"application_number": "10973035",
	"application_date": "2004-10-25",
	"tags": null,
	"slug": "methods-of-factoring-operating-system-functions-methods-of-converting-operating-systems-and-related-apparatus",
	"match_type": "description"
},
{
	"name": "Methods of factoring operating system functions, methods of converting operating systems, and related apparatus",
	"summary": "",
	"abstract": "Methods of factoring operating system functions into one or more groups of functions are described. Factorization permits operating systems that are not configured to support computing in an object-oriented environment to be used in an object oriented environment. This promotes distributed computing by enabling operating system resources to be instantiated and used across process and machine boundaries. In one embodiment, criteria are defined that govern how functions of an operating system are to be factored into one or more groups. Based on the defined criteria, the functions are factors into groups and groups of functions are then associated with programming objects that have data and methods, wherein the methods correspond to the operating system functions. Applications can call methods on the programming objects either directly or indirectly that, in turn, call operating system functions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774796",
	"publication_date": "2010-08-10",
	"application_number": "10994737",
	"application_date": "2004-11-22",
	"tags": null,
	"slug": "methods-of-factoring-operating-system-functions-methods-of-converting-operating-systems-and-related-apparatus",
	"match_type": "description"
},
{
	"name": "Methods, tools, and interfaces for the dynamic assignment of people to groups to enable enhanced communication and collaboration",
	"summary": "",
	"abstract": "A system for optimizing the value of communications between communicating parties is provided. The system includes a communication group manager that facilitates specifying policies, preferences and/or automated analysis of ideal communication channels, routing and/or scheduling in terms of communicating party groups that can be pre-populated clusters of communicating parties, assembled based on relationships (e.g., organizational), and/or assembled based on satisfying inclusion criteria (e.g., age, location, competence, communication history, meeting history). The communication group manager maps communicating parties into predefined and/or dynamically created groups that facilitate specifying and/or automatically computing ideal communication actions like selecting a channel, displaying lists of potential channels sorted by communicating party preferences, and (re)scheduling communications to different channels and/or times. Ideal communication actions can be identified by maximizing a measure of expected communication utility, where groups provide simplifying abstractions to facilitate assessment of outcome utilities. The method can employ representations of preferences of the contactor and contactee that allow for group-specific preference considerations that weight differentially contactor and/or contactee preference considerations in communication action optimization. The system includes a group wise communication coordinator that identifies optimal group communication sets. The method facilitates a recipient communicating with a group member where the communication utility is optimized based on a preference, and a context associated with the group to which the member belongs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644144",
	"publication_date": "2010-01-05",
	"application_number": "10036566",
	"application_date": "2001-12-21",
	"tags": null,
	"slug": "methods-tools-and-interfaces-for-the-dynamic-assignment-of-people-to-groups-to-enable-enhanced-communication-and-collaboration",
	"match_type": "description"
},
{
	"name": "Methods, tools, and interfaces for the dynamic assignment of people to groups to enable enhanced communication and collaboration",
	"summary": "",
	"abstract": "A system for optimizing the value of communications between communicating parties is provided. The system includes a communication group manager that facilitates specifying policies, preferences and/or automated analysis of ideal communication channels, routing and/or scheduling in terms of communicating party groups that can be pre-populated clusters of communicating parties, assembled based on relationships (e.g., organizational), and/or assembled based on satisfying inclusion criteria (e.g., age, location, competence, communication history, meeting history). The communication group manager maps communicating parties into predefined and/or dynamically created groups that facilitate specifying and/or automatically computing ideal communication actions like selecting a channel, displaying lists of potential channels sorted by communicating party preferences, and (re)scheduling communications to different channels and/or times. Ideal communication actions can be identified by maximizing a measure of expected communication utility, where groups provide simplifying abstractions to facilitate assessment of outcome utilities. The method can employ representations of preferences of the contactor and contactee that allow for group-specific preference considerations that weight differentially contactor and/or contactee preference considerations in communication action optimization. The system includes a group wise communication coordinator that identifies optimal group communication sets. The method facilitates a recipient communicating with a group member where the communication utility is optimized based on a preference, and a context associated with the group to which the member belongs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747719",
	"publication_date": "2010-06-29",
	"application_number": "11047066",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": "methods-tools-and-interfaces-for-the-dynamic-assignment-of-people-to-groups-to-enable-enhanced-communication-and-collaboration",
	"match_type": "description"
},
{
	"name": "Migrating a virtual machine that owns a resource such as a hardware device",
	"summary": "",
	"abstract": "A computing device has first and second virtual machines (VMs) and a resource assigned to the first VM. Each access request for the resource is forwarded thereto until the first VM is to be saved or migrated. Thereafter, each access request is forwarded to a holding queue. When the resource has acted upon all access requests forwarded thereto, the resource is reassigned to the second VM, and each access request at the holding queue is forwarded to the second VM and then the resource. Thus, all access requests for the resource are acted upon by the resource even after the resource is removed from the first VM and assigned to the second VM, and the save or migrate of the first VM can thereafter be completed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788665",
	"publication_date": "2010-08-31",
	"application_number": "11363897",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": "migrating-a-virtual-machine-that-owns-a-resource-such-as-a-hardware-device",
	"match_type": "description"
},
{
	"name": "Mixed types",
	"summary": "",
	"abstract": "The present invention provides a system and/or method that facilitates programming within Common Language Runtime (CLR) for a C++ programmer by employing a mixed type. An inheritance component creates the mixed type from received code such that the mixed class type is allocated into memory into a pure native part and a pure managed part. Furthermore, construction, destruction and function calls for mixed types are provided facilitating programming within Common Language Runtime (CLR).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730465",
	"publication_date": "2010-06-01",
	"application_number": "10972161",
	"application_date": "2004-10-22",
	"tags": null,
	"slug": "mixed-types",
	"match_type": "description"
},
{
	"name": "Mobile communication device dynamic service application and dynamic service application scripting",
	"summary": "",
	"abstract": "A dynamic service application is stored and executed on a mobile or wireless communication device (e.g., a cellular telephone) to enable it to be programmed without specialized hardware, software, and other proprietary information. For example, dynamic service application programs or scripts may be entered directly by a user or may be received as a wireless or radiated digital message transmission. The dynamic service application executes the dynamic service application script, which is of a format to accommodate wireless or radiated transmission and storage on the device. The dynamic service application script may be written directly by a user on a computer or a mobile communication device or may be written with the aid of scripting u201cwizardu201d software that runs on a computer and guides the writing of script without the user having to work directly with the dynamic service application script. In addition to being received as radiated transmissions, dynamic service application scripts may also be sent as radiated transmissions from mobile communication devices to other devices or computers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725103",
	"publication_date": "2010-05-25",
	"application_number": "11013161",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": "mobile-communication-device-dynamic-service-application-and-dynamic-service-application-scripting",
	"match_type": "description"
},
{
	"name": "Model based testing language and framework",
	"summary": "",
	"abstract": "A model based testing framework is provided that can be incorporated into and used to supplement existing testing approaches. Via annotation of custom attributes and requirements, the framework provides the ability to author models in the same language as code (e.g., test code) that interacts with the model. Optionally, the model-based testing techniques are accessible and changeable at run-time so that tests and models that are executing can be dynamically altered. Optionally, weights (and other techniques) may be exerted on one or more portions of the model to influence the execution of the tests. The ability to execute the model-based testing techniques on some portions of test code, while running hand-crafted or custom test code on other portions, is also provided.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07813911",
	"publication_date": "2010-10-12",
	"application_number": "11531070",
	"application_date": "2006-09-12",
	"tags": null,
	"slug": "model-based-testing-language-and-framework",
	"match_type": "description"
},
{
	"name": "Modular server architecture for multi-environment HTTP request processing",
	"summary": "",
	"abstract": "Methods are provided for utilizing a modular server architecture for processing requests for services, such as authorization and authentication, in a web server. The modular server architecture includes self-contained modular components that can be plugged in and out of the web server, as needed, to provide requested web services. The modular server architecture is also extensible in that it provides set of server APIs for processing requests for supporting built-in server functionality as well as functionality provided by third party modular components. The modular server architecture also supports the integration of request processing tasks for both native and managed modular components, such as ASP.NET modules, by virtue of a managed module host component. The modular server architecture also optimizes server performance by only providing modular component functionality when needed. By utilizing the modular server architecture, server functionality is extended, duplication of request processing tasks is eliminated and performance administrative overhead is reduced.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721278",
	"publication_date": "2010-05-18",
	"application_number": "11140192",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "modular-server-architecture-for-multienvironment-http-request-processing",
	"match_type": "description"
},
{
	"name": "Multi-packet transport structure and method for encoding and transmitting network data over satellite network",
	"summary": "",
	"abstract": "A method for encoding network data, such as Internet Protocol (IP) data, into a format for transmission over a satellite system is described. The network data is configured in a packet having a data block and header information. The network data packet is encoded into a variable-length multi-packet transport (MPT) frame. The MPT frame comprises a data frame to hold data and header information. The IP packet in inserted its entirety into the data frame of the MPT frame. The variable-length MTP frame is then encoded into one or more fixed-length MTP packets. Each MPT packet has a data fragment block comprising a portion of the MTP frame and associated header information to designate what portion of the MTP frame is contained in the data fragment block.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07664092",
	"publication_date": "2010-02-16",
	"application_number": "11018999",
	"application_date": "2004-12-21",
	"tags": null,
	"slug": "multipacket-transport-structure-and-method-for-encoding-and-transmitting-network-data-over-satellite-network",
	"match_type": "description"
},
{
	"name": "Multi-protocol access to files and directories",
	"summary": "",
	"abstract": "An operating system is provided. The system includes an agent component to monitor computer activities between one or more single-item access components and one or more set-based access components. A protocol component is employed by the agent component to mitigate data access conflicts between the single-item access components and the set-based access components.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716247",
	"publication_date": "2010-05-11",
	"application_number": "11612105",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": "multiprotocol-access-to-files-and-directories",
	"match_type": "description"
},
{
	"name": "Multi-sensory speech enhancement using a speech-state model",
	"summary": "",
	"abstract": "A method and apparatus determine a likelihood of a speech state based on an alternative sensor signal and an air conduction microphone signal. The likelihood of the speech state is used, together with the alternative sensor signal and the air conduction microphone signal, to estimate a clean speech value for a clean speech signal.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680656",
	"publication_date": "2010-03-16",
	"application_number": "11168770",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "multisensory-speech-enhancement-using-a-speechstate-model",
	"match_type": "description"
},
{
	"name": "Multilevel online tournament",
	"summary": "",
	"abstract": "A multilevel online tournament is provided. The first tournament round has a single bracket and each subsequent tournament round has a winners bracket and a losers bracket corresponding to a bracket in the previous tournament round. The tournament format allows players to match-up against any other player located within the same bracket. The online tournament format also allows participants to start playing match in a round of the tournament prior to the official start of that round. Thus, players are able to more quickly advance through the tournament and spend less time waiting for a suitable opponent. The tournament format also allows for players to request available tournament byes and to automatically progress when they are unable to connect with other players due to quality of service issues.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07682251",
	"publication_date": "2010-03-23",
	"application_number": "12062833",
	"application_date": "2008-04-04",
	"tags": null,
	"slug": "multilevel-online-tournament",
	"match_type": "description"
},
{
	"name": "Multiple-level graphics processing system and method",
	"summary": "",
	"abstract": "A multiple-level graphics processing system and method (e.g., of an operating system) for providing improved graphics output including, for example, smooth animation. One such multiple-level graphics processing system comprises two components, including a tick-on-demand or slow-tick high-level component, and a fast-tick (e.g., at the graphics hardware frame refresh rate) low-level component. In general, the high-level, less frequent component performs computationally intensive aspects of updating animation parameters and traversing scene data structures, in order to pass simplified data structures to the low-level component. The low-level component operates at a higher frequency, such as the frame refresh rate of the graphics subsystem, to process the data structures into constant output data for the graphics subsystem. The low-level processing includes interpolating any parameter intervals as necessary to obtain instantaneous values to render the scene for each frame of animation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07705851",
	"publication_date": "2010-04-27",
	"application_number": "11555040",
	"application_date": "2006-10-31",
	"tags": null,
	"slug": "multiplelevel-graphics-processing-system-and-method",
	"match_type": "description"
},
{
	"name": "Multithreaded kernel for graphics processing unit",
	"summary": "",
	"abstract": "Systems and methods are provided for scheduling the processing of a coprocessor whereby applications can submit tasks to a scheduler, and the scheduler can determine how much processing each application is entitled to as well as an order for processing. In connection with this process, tasks that require processing can be stored in physical memory or in virtual memory that is managed by a memory manager. The invention also provides various techniques of determining whether a particular task is ready for processing. A u201crun listu201d may be employed to ensure that the coprocessor does not waste time between tasks or after an interruption. The invention also provides techniques for ensuring the security of a computer system, by not allowing applications to modify portions of memory that are integral to maintaining the proper functioning of system operations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07673304",
	"publication_date": "2010-03-02",
	"application_number": "10763777",
	"application_date": "2004-01-22",
	"tags": null,
	"slug": "multithreaded-kernel-for-graphics-processing-unit",
	"match_type": "description"
},
{
	"name": "Music replacement in a gaming system",
	"summary": "",
	"abstract": "A user of a game system can replace background music from a game with the user's selected background music, while still hearing any other audio streams (e.g. sound effects related to gameplay). A music engine and system audio mixer allow the playback of the user's requested replacement music. The game tags background music streams with an identifier indicating that they are background music, and such streams are muted at the music engine and system audio mixer (if the game is using the provided music engine in order to play the game's audio streams) or by the game if the game is using a game music engine and has received information indicating that a mute request has been issued.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07663045",
	"publication_date": "2010-02-16",
	"application_number": "11230977",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": "music-replacement-in-a-gaming-system",
	"match_type": "description"
},
{
	"name": "Network access protection",
	"summary": "",
	"abstract": "A method is provided for use in a computer system including a client and a health registration authority. The health registration authority is configured to accept requests for assertions, and the client has a health state described by at least one health claim. The method may include an act of including an indication of the at least one health claim of the client in a request for an assertion. A second method is provided for use in a computer system comprising a client, an assertion authority, and a plurality of health policies. The method can include an act of including an indication of at least one health policy that the health claim of the client satisfies in an assertion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07793096",
	"publication_date": "2010-09-07",
	"application_number": "11395559",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "network-access-protection",
	"match_type": "description"
},
{
	"name": "Network connectivity management",
	"summary": "",
	"abstract": "Network connectivity management can manage (e.g., harmonize) network connectivity services and network connectivity modules. By way of example only, network connectivity management is applicable to connections to a network through a network connectivity service via a network connectivity module. In a described implementation, network connectivity configuration information is scanned to locate data that corresponds to a preferred network connectivity service for a given connection scenario. The network connectivity module used in the given connection scenario is extracted. It is detected if the extracted network connectivity module is a preferred network connectivity module that is associated with the preferred network connectivity service. If not, the connection scenario can be redirected away from the non-preferred network connectivity module and toward the preferred network connectivity module. A user may optionally be given an opportunity to elect to connect via the preferred network connectivity module.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650395",
	"publication_date": "2010-01-19",
	"application_number": "11084052",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": "network-connectivity-management",
	"match_type": "description"
},
{
	"name": "Network device drivers using a communication transport",
	"summary": "",
	"abstract": "Network device drivers that interface with a communication transport are described. In one aspect, a networked computing system includes the network device driver and the communication transport. The network device driver converts abstract network device calls to network hardware device specific calls. The network hardware device specific calls are transported from the network device driver via the communication transport to a network hardware device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07735095",
	"publication_date": "2010-06-08",
	"application_number": "10428611",
	"application_date": "2003-05-02",
	"tags": null,
	"slug": "network-device-drivers-using-a-communication-transport",
	"match_type": "description"
},
{
	"name": "Non-volatile memory cache performance improvement",
	"summary": "",
	"abstract": "In order to provide a more efficient persistent storage device, one or more long-term storage media are included along with a non-volatile memory. In one embodiment, one portion of the non-volatile memory is used as a write buffer and a read cache for writes and reads to the long-term storage media. Interfaces are provided for controlling the use of the non-volatile memory as a write buffer and a read cache. Additionally, a portion of the non-volatile memory is used to provide a direct mapping for specified sectors of the long-term storage media. Descriptive data regarding the persistent storage device is stored in another portion of the non-volatile memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644239",
	"publication_date": "2010-01-05",
	"application_number": "10837986",
	"application_date": "2004-05-03",
	"tags": null,
	"slug": "nonvolatile-memory-cache-performance-improvement",
	"match_type": "description"
},
{
	"name": "Nullable and late binding",
	"summary": "",
	"abstract": "Systems and methods that enhance a programming language by introducing null unification on a type level in addition to a value level, for static types of both reference and value types T. An operator that adds a level of nullability (and removes such nullability) is introduced without a mention of the actual type, to steer overloading in a precise manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716656",
	"publication_date": "2010-05-11",
	"application_number": "11215178",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": "nullable-and-late-binding",
	"match_type": "description"
},
{
	"name": "Object loading and unloading system",
	"summary": "",
	"abstract": "An object loading and unloading system for loading and unloading objects in a graphically simulated virtual environment, or virtual world, is described. A world object manager manages multiple object loaders to load and unload objects as geographic cells move within and out of a loading radius of each loader based on a position of a camera or view within the virtual world. Each object loader has an associated priority level, and the world object manager notifies a loader to load its corresponding objects in a cell only after all loaders having higher priority levels, which also have that cell in their respective loading radii, have already loaded their corresponding objects in that cell. The world object manager may expose various programming interfaces to provide an extensible object loading system whereby third parties can define new loaders to be incorporated into the hierarchical spatial object loading system.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07804501",
	"publication_date": "2010-09-28",
	"application_number": "11275131",
	"application_date": "2005-12-13",
	"tags": null,
	"slug": "object-loading-and-unloading-system",
	"match_type": "description"
},
{
	"name": "Object oriented web application framework",
	"summary": "",
	"abstract": "A framework for implementing web-based applications using standard object-oriented programming techniques. The framework may be implemented by computer-executable components executable by a Web browser is provided. The components include a resource creation method for creating resource objects, a page interpreter creating instances of objects based on bindings defined in a web-page, and a lifecycle management component for managing instances of the objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849437",
	"publication_date": "2010-12-07",
	"application_number": "11218112",
	"application_date": "2005-09-01",
	"tags": null,
	"slug": "object-oriented-web-application-framework",
	"match_type": "description"
},
{
	"name": "Object synchronization between object stores on different computers",
	"summary": "",
	"abstract": "The invention includes a method of synchronizing objects between first and second object stores. A synchronization manager in accordance with the invention maintains a reference store containing identifying data segments corresponding respectively to a plurality of objects that have previously been synchronized between the first and second object stores. An application program that maintains the first object store has associated interfaces that allow the synchronization manager to compare and manipulate objects. One such interface allows the synchronization manager to submit an identifying data segment associated with a particular object. In response, this interface returns a handle that corresponds to the submitted identifying data segment. Another interface accepts a handle that refers to an identifying data segment, and determines if the object corresponding to the identifying data segment has been changed in the first object store since the last synchronization. If it has, the synchronization manager takes steps to update the second object store. If, on the other hand, the object has changed in the second object store, application program interfaces allow the synchronization manager to update the object in the first object store. Objects are transferred through the synchronization manager in an arbitrary, application-specific format that is not determined or understood by the synchronization manager itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669208",
	"publication_date": "2010-02-23",
	"application_number": "10643710",
	"application_date": "2003-08-19",
	"tags": null,
	"slug": "object-synchronization-between-object-stores-on-different-computers",
	"match_type": "description"
},
{
	"name": "On demand data proxy",
	"summary": "",
	"abstract": "A system and process for enabling updates of an ink analysis document model are described.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788283",
	"publication_date": "2010-08-31",
	"application_number": "11083014",
	"application_date": "2005-03-18",
	"tags": null,
	"slug": "on-demand-data-proxy",
	"match_type": "description"
},
{
	"name": "One time password integration with Kerberos",
	"summary": "",
	"abstract": "A domain controller (DC) side plugin supports one time passwords natively in Kerberos, Part of the key material is static and the other part is dynamic, thereby leveraging properties unique to each to securely support one time passwords in an operating system. The user is permitted to type in the one time passcode into a logon user interface. Rather than calling the SAM APIs to get the static passwords, vendors may register callbacks on the DC to plugin their algorithm. These callback functions will return the dynamically calculated passcodes for the user at a specific point in time. This passcode will then be treated as a normal password by the DC.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757275",
	"publication_date": "2010-07-13",
	"application_number": "11153631",
	"application_date": "2005-06-15",
	"tags": null,
	"slug": "one-time-password-integration-with-kerberos",
	"match_type": "description"
},
{
	"name": "Operating system event tracking and logging",
	"summary": "",
	"abstract": "A system and method for logging events processed by an operating system is provided. The events logged can include interrupt and non-interrupt events, and can include user-defined events. Information concerning the interrupt events is initially written, during event handling time, into a first buffer while information concerning non-interrupt events is initially written, during event handling time, into a second buffer. Information from the two buffers is then written to a third buffer not during event handling time. Separating the interrupt event buffer from the non-interrupt event buffer rather than having one buffer, and writing relatively small amounts of data during event handling time to memory, rather than transporting data to slower non-memory mapped devices allows the event logger to be less intrusive and facilitates greater accuracy in event logging. Data stored in the third buffer can be accessed by a viewing component, which facilitates displaying data in a manner useful to diagnose operating systems.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818754",
	"publication_date": "2010-10-19",
	"application_number": "10866861",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "operating-system-event-tracking-and-logging",
	"match_type": "description"
},
{
	"name": "Optimal program execution replay and breakpoints",
	"summary": "",
	"abstract": "A method of replaying a recorded sequence of execution steps of a computer program or system to a selected target step while taking a minimal number of execution breaks includes calculating, for each of the steps, a predecessor step that can be reached in a minimal number of execution breaks. The total calculation time for the entire execution is linear in the number of steps, and allows subsequent calculation of an optimal path to any selected step to be obtained in time linear in the length of the optimal path.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644396",
	"publication_date": "2010-01-05",
	"application_number": "11288520",
	"application_date": "2005-11-29",
	"tags": null,
	"slug": "optimal-program-execution-replay-and-breakpoints",
	"match_type": "description"
},
{
	"name": "Optimized constraint and index maintenance for non updating updates",
	"summary": "",
	"abstract": "Database management systems allow modification of existing table rows through update statements or other data modification commands. For example, a user may specify, via a command statement, the table to update, the columns to modify and their respective new value(s), and qualify the rows to be updated. Optimized constraint and index maintenance for data modification statements and commands is provided where the new value being assigned to the columns is actually the same as the current value, e.g., update commands that actually leave the columns unchanged.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07801882",
	"publication_date": "2010-09-21",
	"application_number": "10957409",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "optimized-constraint-and-index-maintenance-for-non-updating-updates",
	"match_type": "description"
},
{
	"name": "Optimizing automated shader program construction",
	"summary": "",
	"abstract": "Although GPUs have been harnessed to solve non-graphics problems, these solutions are not widespread because GPUs remain difficult to program. Instead, an interpreter simplifies the task of programming a GPU by providing language constructs such as a set of data types and operations that are more familiar to non-graphics programmers. The interpreter maps these familiar language constructs to the more difficult graphics programming resources such as DirectXu00ae, OpenGLu00ae, Cgu00ae, and/or HLSLu00ae.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07800620",
	"publication_date": "2010-09-21",
	"application_number": "11255750",
	"application_date": "2005-10-21",
	"tags": null,
	"slug": "optimizing-automated-shader-program-construction",
	"match_type": "description"
},
{
	"name": "Optimizing encrypted wide area network traffic",
	"summary": "",
	"abstract": "Optimization of encrypted traffic flowing over a WAN is provided by an arrangement in which WAN compression is distributed between endpoints (i.e., client machines or servers) in a subnet of a hub and branch network and a WAN compression server in the subnet. A client portion of the WAN compression running on each of one or more endpoints interfaces with a disposable local cache of data seen by endpoints in the subnet that is used for compressing and decompressing traffic using dictionary-based compression techniques. The local WAN compression server in a subnet stores a shared central database of all the WAN traffic in the subnet which is used to populate local disposable caches in the endpoints.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07809820",
	"publication_date": "2010-10-05",
	"application_number": "11879253",
	"application_date": "2007-07-17",
	"tags": null,
	"slug": "optimizing-encrypted-wide-area-network-traffic",
	"match_type": "description"
},
{
	"name": "Organization-based content rights management and systems, structures, and methods therefor",
	"summary": "",
	"abstract": "A rights-managed email is provided for sending protected content from a sender to a recipient, whereby the recipient can render the protected content with a corresponding license if the recipient satisfies terms set forth in the license. In the email, a main information portion has a message that the email is rights management protected, and an attachment portion has the protected content. The recipient if enabled can render the protected content in the attachment portion. If not enabled, the recipient can only review the main information portion having the message. The enabled recipient recognizes that the email has the protected content in the attachment portion thereof, discounts the main information portion of the email, and examines the attachment portion of the email and proceeds based thereon to render the protected content in the attachment portion.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716288",
	"publication_date": "2010-05-11",
	"application_number": "10607898",
	"application_date": "2003-06-27",
	"tags": null,
	"slug": "organizationbased-content-rights-management-and-systems-structures-and-methods-therefor",
	"match_type": "description"
},
{
	"name": "Partial XML validation",
	"summary": "",
	"abstract": "Modifying a portion of an XML document stored in a relational database includes converting operations on the document into an operator tree. The operator tree includes a first operator corresponding to a first portion of the schema for the modified data and a second operator corresponding to a parent portion of the schema for the modified data. A first and a second portion of the schema are extracted from the overall document schema. A first validation of the modified data using the first operator with the first portion of the schema is performed. This forms a partially validated XML document portion. Next, a second validation of the partially validated XML document portion with the second portion of the schema is performed using the second operator. The XML document constraints are verified and the modified data is merged into the XML document, thus avoiding a full validation of the XML document when certain XML Schema types are absent in the modified data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774321",
	"publication_date": "2010-08-10",
	"application_number": "11268090",
	"application_date": "2005-11-07",
	"tags": null,
	"slug": "partial-xml-validation",
	"match_type": "description"
},
{
	"name": "Participant positioning in multimedia conferencing",
	"summary": "",
	"abstract": "A multimedia conference technique is disclosed that allows physically remote users to participate in an immersive telecollaborative environment by synchronizing multiple data, images and sounds. The multimedia conference implementation provides users with the perception of being in the same room visually as well as acoustically according to an orientation plan which reflects each remote user's position within the multimedia conference environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07840638",
	"publication_date": "2010-11-23",
	"application_number": "12147603",
	"application_date": "2008-06-27",
	"tags": null,
	"slug": "participant-positioning-in-multimedia-conferencing",
	"match_type": "description"
},
{
	"name": "Patch un-installation",
	"summary": "",
	"abstract": "Uninstalling a patch applied to a software product installed on a computer. A current state of a software product is identified. A desired state of the software product is determined. The desired state of the software product represents a state of the software product when a patch applied to the software product is removed from the software product. The patch is removed from the software product to transition the software product from the identified current state to the determined desired state.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07703090",
	"publication_date": "2010-04-20",
	"application_number": "10930461",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": "patch-uninstallation",
	"match_type": "description"
},
{
	"name": "Peer networking host framework and hosting API",
	"summary": "",
	"abstract": "A device hosting framework provides hosting for software-implemented logical devices (including peripheral devices bridges) on a computer to expose their services as controlled devices per a peer networking protocol. The device hosting framework encapsulates discovery, description and control protocol operations of the peer networking protocol, which frees the developers of the hosted devices from having to individually implement the peer networking protocol in the hosted devices' software and need implement only the core functionality of the hosted device. The device hosting framework operates as a host supporting device interoperability via the peer networking protocol for multiple hosted devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774477",
	"publication_date": "2010-08-10",
	"application_number": "11336747",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": "peer-networking-host-framework-and-hosting-api",
	"match_type": "description"
},
{
	"name": "Peer networking host framework and hosting API",
	"summary": "",
	"abstract": "A device hosting framework provides hosting for software-implemented logical devices (including peripheral devices bridges) on a computer to expose their services as controlled devices per a peer networking protocol. The device hosting framework encapsulates discovery, description and control protocol operations of the peer networking protocol, which frees the developers of the hosted devices from having to individually implement the peer networking protocol in the hosted devices' software and need implement only the core functionality of the hosted device. The device hosting framework operates as a host supporting device interoperability via the peer networking protocol for multiple hosted devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07702795",
	"publication_date": "2010-04-20",
	"application_number": "11336756",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": "peer-networking-host-framework-and-hosting-api",
	"match_type": "description"
},
{
	"name": "Peer-to-peer aided live video sharing system",
	"summary": "",
	"abstract": "Video data from an upload client is received at a hosting node. A request from a download client is received at a bootstrapping node to receive the video data. The download client to receive the video data directly from the hosting node when the hosting node is below a threshold, wherein the threshold is based at least in part on the maximum number of download clients the hosting node can stream to simultaneously. The download client to receive the video data from peers in a peer-to-peer overlay when the hosting node above the threshold.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07733808",
	"publication_date": "2010-06-08",
	"application_number": "11558878",
	"application_date": "2006-11-10",
	"tags": null,
	"slug": "peertopeer-aided-live-video-sharing-system",
	"match_type": "description"
},
{
	"name": "Peer-to-peer communication system",
	"summary": "",
	"abstract": "A peer-to-peer communication system that transmits application data from an application component on one network peer to an application component on another network peer. A programming interface is provided to the communication system to facilitate programming of applications that rely on peer-to-peer communications. The communication system uses messaging providers to which each peer may be connected for purposes other than communications between peer-to-peer application components, thereby reducing the resources a peer-to-peer application requires for communication and making the system advantageous for use in portable electronic devices. Additionally, the communication system uses addresses already assigned in each messaging provider, allowing peer-to-peer communication between peers that may otherwise have been non-addressable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680112",
	"publication_date": "2010-03-16",
	"application_number": "11213520",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": "peertopeer-communication-system",
	"match_type": "description"
},
{
	"name": "Performing operations on a set of objects in a database system",
	"summary": "",
	"abstract": "A method and system for updating data for a set of objects in a database is provided. A request identifies a set of objects using a property of the objects and an operation to be performed thereon. The object request is translated to a relational request such that a column in a table corresponding to the property can be operated upon by a relational data store mechanism.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07672960",
	"publication_date": "2010-03-02",
	"application_number": "11453348",
	"application_date": "2006-06-14",
	"tags": null,
	"slug": "performing-operations-on-a-set-of-objects-in-a-database-system",
	"match_type": "description"
},
{
	"name": "Persistent spatial collaboration",
	"summary": "",
	"abstract": "Persistent, spatial collaboration on the web supports a free-form, user-intuitive approach to a variety of projects and activities. Users can place differing object types at any time any where on a web page and/or the system can automatically, and with no user effort, affect object placement based on one or more meta data characteristics. A user can, in real-time, see changes made by another user to a web page, and, if desired, react accordingly, enabling true collaboration even if the various users are at remote locations. The flexibility of the methodology and system provides a platform for users to engage in projects and activities in a manner and environment suited to the users' mind sets, creativity, and natural proclivities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853886",
	"publication_date": "2010-12-14",
	"application_number": "11711314",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "persistent-spatial-collaboration",
	"match_type": "description"
},
{
	"name": "Personalized user specific grammars",
	"summary": "",
	"abstract": "Improved systems and methods are provided for transcribing audio files of voice mails sent over a unified messaging system. Customized grammars specific to a voice mail recipient are created and utilized to transcribe a received voice mail by comparing the audio file to commonly utilized words, names, acronyms, and phrases used by the recipient. Key elements are identified from the resulting text transcription to aid the recipient in processing received voice mails based on the significant content contained in the voice mail.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693267",
	"publication_date": "2010-04-06",
	"application_number": "11324208",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": "personalized-user-specific-grammars",
	"match_type": "description"
},
{
	"name": "Platform for data services across disparate application frameworks",
	"summary": "",
	"abstract": "Data management between a common data store and multiple applications of multiple disparate application frameworks. A data storage component is provided that facilitates the storage of data, which data includes structured, semi-structured, and unstructured data. A common data platform interfaces to the data storage component to provide data services accessible by a plurality of disparate application frameworks, which data services allow a corresponding application of the different frameworks to access the data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853961",
	"publication_date": "2010-12-14",
	"application_number": "11171905",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "platform-for-data-services-across-disparate-application-frameworks",
	"match_type": "description"
},
{
	"name": "Platform management techniques of handling providers",
	"summary": "",
	"abstract": "Techniques described herein are directed toward side-by-side handling of providers on a 64-bit system. The request for loading a particular version of the provider may include a provider architecture flag that specifies a 32-bit or 64-bit version of a provider for managing the requested service. The request may also include a required architecture flag specifying that the given instantiation of the provider is required and to be forced. The platform manager loads a particular provider instantiation as a function of the provider architecture flag and the required architecture flag.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765287",
	"publication_date": "2010-07-27",
	"application_number": "11211839",
	"application_date": "2005-08-25",
	"tags": null,
	"slug": "platform-management-techniques-of-handling-providers",
	"match_type": "description"
},
{
	"name": "Playback control methods and arrangements for a DVD player",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of a generic DVD navigator. The methods and arrangements herein provide a mechanism that allows a player application to precisely u2018bookmarku2019 locations during playback, and later resume playback at the selected bookmarked locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774797",
	"publication_date": "2010-08-10",
	"application_number": "11259796",
	"application_date": "2005-10-27",
	"tags": null,
	"slug": "playback-control-methods-and-arrangements-for-a-dvd-player",
	"match_type": "description"
},
{
	"name": "Playback control methods and arrangements for a DVD player",
	"summary": "",
	"abstract": "In accordance with certain aspects of the present invention, enhancements have been developed to further extend the performance of a generic DVD navigator. The methods and arrangements herein provide a mechanism that allows a player application to precisely u2018bookmarku2019 locations during playback, and later resume playback at the selected bookmarked locations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757241",
	"publication_date": "2010-07-13",
	"application_number": "11255052",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": "playback-control-methods-and-arrangements-for-a-dvd-player",
	"match_type": "description"
},
{
	"name": "Pluggable window manager architecture using a scene graph system",
	"summary": "",
	"abstract": "Described is a pluggable policy component that determines the look and feel, or windows visual experience, of a computer user interface. Window-related instructions are redirected to the policy component, while client area change instructions are provided to a substrate (into which the policy component plugs in) that includes a composition component. The plug-in policy component handles windows-related (e.g., structural or attribute) changes to a scene graph to construct and maintain the scene graph, while the substrate handles program content changes to the client areas within windows. The substrate may include a desktop window manager that has access to the client areas in the scene graph, whereby the desktop window manager can copy a client area for rendering. For example, the desktop window manager can provide a supplemental live thumbnail image of a window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716685",
	"publication_date": "2010-05-11",
	"application_number": "11215355",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": "pluggable-window-manager-architecture-using-a-scene-graph-system",
	"match_type": "description"
},
{
	"name": "Portable applications",
	"summary": "",
	"abstract": "A portable storage device includes an interface and one or more flash memories. The one or more flash memories store one or more executable files that can be executed by a host computer to which the device is coupled without altering any environment settings on the host computer even though the one or more executable files include instructions to access environment settings. Additionally, the application is bound to the portable storage device during an activation process.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712086",
	"publication_date": "2010-05-04",
	"application_number": "11012926",
	"application_date": "2004-12-15",
	"tags": null,
	"slug": "portable-applications",
	"match_type": "description"
},
{
	"name": "Preemptive multi-tasking with cooperative groups of tasks",
	"summary": "",
	"abstract": "An operating system combines preemptive scheduling with cooperative or non-preemptive scheduling. In particular, tasks are divided into groups of interdependent tasks. Interdependent tasks are tasks that utilize the same modules of code or resources Each group includes tasks that should not be run asynchronously relative to each other. The scheduler in the operating system provides each group with a time slot of processor time. The tasks within the group are cooperatively scheduled to exploit the time slot assigned to the group. Dependencies between modules and tasks are maintained to assure that no difficulties arise amongst preemptively scheduled groups.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721286",
	"publication_date": "2010-05-18",
	"application_number": "11213261",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": "preemptive-multitasking-with-cooperative-groups-of-tasks",
	"match_type": "description"
},
{
	"name": "Preserving socket connections over a wireless network",
	"summary": "",
	"abstract": "A system, apparatus, and method for maintaining a socket connection over a wireless network. For example, one embodiment of the invention is a wireless data processing device for emulating a socket connection comprising: a wireless radio for establishing a wireless communication channel with a wireless service provider over a wireless network; a network protocol stack including at least one layer configured to establish a socket connection with a remote server over the wireless network, the network protocol stack further including an application layer for executing applications capable of transmitting and receiving data over the socket connection; and a resumable socket module configured to emulate an open socket connection transparently to applications within the application layer, even when the wireless communication channel is temporarily lost, the resumable socket module counting a number of bytes transmitted or to be transmitted to the remote server and maintaining a buffer containing the bytes transmitted or to be transmitted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07664067",
	"publication_date": "2010-02-16",
	"application_number": "11305789",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "preserving-socket-connections-over-a-wireless-network",
	"match_type": "description"
},
{
	"name": "Privacy friendly malware quarantines",
	"summary": "",
	"abstract": "The present invention provides a system, method, and computer-readable medium for quarantining a file. Embodiments of the present invention are included in antivirus software that maintains a user interface. From the user interface, a user may issue a command to quarantine a file or the quarantine process may be initiated automatically by the antivirus software after malware is identified. When a file is marked for quarantine, aspects of the present invention encode file data with a function that is reversible. Then a set of metadata is identified that describes attributes of the file including any heightened security features that are used to limit access to the file. The metadata is moved to a quarantine folder, while the encoded file remains at the same location in the file system. As a result, the encoded file maintains the same file attributes as the original, non-quarantined file, including any heightened security features.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716743",
	"publication_date": "2010-05-11",
	"application_number": "11035584",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": "privacy-friendly-malware-quarantines",
	"match_type": "description"
},
{
	"name": "Processing data across a distributed network",
	"summary": "",
	"abstract": "A system, method, and related techniques are disclosed for processing data across a distributed network to a plurality of machines. The method may include receiving a first user-supplied transform and generating a first package based on the first user-supplied transform. The method may further include receiving a designated key and generating a second package based on the key. Furthermore, the method may include receiving a second user-supplied transform and generating a third package based on the second user-supplied transform. Moreover, the method may include distributing the first, second, and third packages to a plurality of machines using a cluster API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844976",
	"publication_date": "2010-11-30",
	"application_number": "11530383",
	"application_date": "2006-09-08",
	"tags": null,
	"slug": "processing-data-across-a-distributed-network",
	"match_type": "description"
},
{
	"name": "Profiler stackwalker",
	"summary": "",
	"abstract": "A call stack includes at least one frame of managed code and at least one frame of unmanaged code. In a multithreaded environment, a request from a diagnostic tool to a tracing function for the call stack is made on a thread that is not associated with the call stack. The tracing function preserves a context for a thread associated with the call stack until the call stack tracing function ends. In a particular embodiment, a method grants access to a stackwalking function, such that when a point on the call stack is designated in a request for the stackwalking function, the stackwalking function commences at the point on the call stack. When no point on the call stack is designated in the request for the stackwalking function, a default position on the call stack is determined based on a last managed frame pushed onto the call stack and the stackwalking function commences at the default position on the call stack.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712082",
	"publication_date": "2010-05-04",
	"application_number": "11088508",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": "profiler-stackwalker",
	"match_type": "description"
},
{
	"name": "Programmability for XML data store for documents",
	"summary": "",
	"abstract": "A programmability mode for interacting with data stores within a document allows real time interaction. Data for structuring information associated with a document, such as document metadata, is maintained in the data store where relationships between different pieces of data are maintained in a location distinct from the surface level view of a document. The data store exposes interfaces to the various pieces of data in the data store for allowing different applications to access and operate on one or more of the data pieces. The pieces of data may be structured according to a markup language such as the Extensible Markup Language (XML), and XML schemas may be associated with each piece of data for allowing the data store to validate the structure applied to the data based on an XML schema associated with a given piece of data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752224",
	"publication_date": "2010-07-06",
	"application_number": "11331586",
	"application_date": "2006-01-13",
	"tags": null,
	"slug": "programmability-for-xml-data-store-for-documents",
	"match_type": "description"
},
{
	"name": "Programmable logic and constraints for a dynamically typed storage system",
	"summary": "",
	"abstract": "Embodiments define a set of rules such that a type designer can express as part of a type's definition whether the type has extended the logic and/or constraints of its ancestral types in such a way that applications written against that ancestral type will continue to function correctly. Nonconformity can also be indicated and an embodiment can enforce limitations on a set of operations that can be performed on such instances when treated as their ancestral types. Applications can use standard interfaces to discover from embodiments whether such limitations can be in force for a particular instance and provide a user experience that accounts for those limitations. Embodiments can also provide mechanisms to enable type designers to limit a degree of extensibility for both types and/or Items.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07801926",
	"publication_date": "2010-09-21",
	"application_number": "11562438",
	"application_date": "2006-11-22",
	"tags": null,
	"slug": "programmable-logic-and-constraints-for-a-dynamically-typed-storage-system",
	"match_type": "description"
},
{
	"name": "Promotional games architecture",
	"summary": "",
	"abstract": "The claimed subject matter relates to an architecture that can facilitate promotion of an online service. The architecture can provide for a games platform that can host a variety of games. The hosted games can be designed such that a user's experiences can be enhanced by game cards that can be discovered and retrieved while using the online service being promoted. Accordingly, the user's experiences can be enhanced as a function of the usage of the online service being promoted.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07798908",
	"publication_date": "2010-09-21",
	"application_number": "11677308",
	"application_date": "2007-02-21",
	"tags": null,
	"slug": "promotional-games-architecture",
	"match_type": "description"
},
{
	"name": "Proofing of word collocation errors based on a comparison with collocations in a corpus",
	"summary": "",
	"abstract": "Collocation errors can be automatically proofed using local and network-based corpora, including the Web. For example, according to one illustrative method, one or more collocations from a text sample are compared with a corpus such as the content of the Web. The collocations are identified for whether they are disfavored in the corpus. Indications are provided via an output device of whether the collocations are disfavored in the corpus. Additional steps may then be taken such as searching for and providing potentially proper word collocations via a user output.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774193",
	"publication_date": "2010-08-10",
	"application_number": "11633788",
	"application_date": "2006-12-05",
	"tags": null,
	"slug": "proofing-of-word-collocation-errors-based-on-a-comparison-with-collocations-in-a-corpus",
	"match_type": "description"
},
{
	"name": "Protecting operating-system resources",
	"summary": "",
	"abstract": "This document describes tools capable of enabling a protection agent to determine, from memory inaccessible from an operating-system privilege mode, whether one or more resources of an operating system have been modified. In some instances, these tools may enable the protection agent to reside within a virtual machine monitor. In other instances, the tools may enable the protection agent to reside within a distinct virtual partition provided by the virtual machine monitor. By operating outside of the operating-system privilege mode, the protection agent may be less vulnerable to attacks by entities operating within the operating-system privilege mode.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765374",
	"publication_date": "2010-07-27",
	"application_number": "11627314",
	"application_date": "2007-01-25",
	"tags": null,
	"slug": "protecting-operatingsystem-resources",
	"match_type": "description"
},
{
	"name": "Protection against runtime function attacks",
	"summary": "",
	"abstract": "Security mechanisms detect and intervene in a malicious attack against a runtime function, even in the presence of a coding flaw such as a buffer overrun or overflow. One such exemplary mechanism uses a predetermined security list of the valid targets for a first runtime function (such as longjmp). For every call to a second runtime function (e.g., setjmp) that prepares for a later invocation of the first runtime function, the dispatcher finds and stores a reference to this list. When a subsequent attack targets the runtime functions by creating an attacker-provided setjmp target address (e.g., the attack overwrites the longjmp target address so that the pointer points somewhere else, such as code provided by the attacker or code that already exists that will eventually pass control to code provided by the attacker), the new (attacker provided) target address is compared to a reference list of the real (valid) target addresses. The list of real target addresses is stored in memory. If the target address that has been provided is found on the reference list, then the runtime function (e.g., longjmp) is allowed to continue to execute by the dispatcher (which may be the actual runtime function). Otherwise, the dispatcher assumes the application is under attack and terminates the process' execution.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716495",
	"publication_date": "2010-05-11",
	"application_number": "10750297",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": "protection-against-runtime-function-attacks",
	"match_type": "description"
},
{
	"name": "Protocol agnostic request response pattern",
	"summary": "",
	"abstract": "A system and method for facilitating communications over a protocol is provided. The system includes a class factory that holds identifiers associated with determining which, if any, registered protocol object creator should be employed to create a protocol object. The protocol object implements an abstract network protocol base class. The protocol object is employed to abstract details of communicating over a protocol and to provide a byte stream interface to communications occurring over the protocol, while removing protocol specific code from an application program. The method includes creating an instance of a protocol object from a source of registered protocol handlers based on a request to communicate over a protocol and using a base class API to communicate over the protocol through the protocol object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730499",
	"publication_date": "2010-06-01",
	"application_number": "10970513",
	"application_date": "2004-10-21",
	"tags": null,
	"slug": "protocol-agnostic-request-response-pattern",
	"match_type": "description"
},
{
	"name": "Protocol for remote visual composition",
	"summary": "",
	"abstract": "A method and protocol to create and control compositions on a remote device is disclosed. The protocol allows servers and other devices to take advantage of processing capabilities of remote devices to render compositions on the remote devices, thereby increasing server scalability and leveraging the remote device processing capabilities. The protocol provides high-level command packets to communicate resource command packets and control packets to the remote device with the payload having the information needed to process the commands.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07711840",
	"publication_date": "2010-05-04",
	"application_number": "10692371",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": "protocol-for-remote-visual-composition",
	"match_type": "description"
},
{
	"name": "Providing a publishing mechanism for managed objects",
	"summary": "",
	"abstract": "Publishing an object. Memory for an object may be reserved so as to lock the memory from being access by garbage collection threads or other user threads. While the lock is in place, type and size information can be installed for the object. If the reservation is being made to allow garbage collection threads to operate on the object, then the type may be a specialized type that indicates that the object has no references. Reservations can also be made to allow the intended type information to be installed for the object. An indication can be made that the object is well formed, thus unlocking the object and allowing garbage collection threads, other user threads, or both to access the object. The locking and unlocking may be performed by accessing an API provided by a system garbage collector.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07801872",
	"publication_date": "2010-09-21",
	"application_number": "12099481",
	"application_date": "2008-04-08",
	"tags": null,
	"slug": "providing-a-publishing-mechanism-for-managed-objects",
	"match_type": "description"
},
{
	"name": "Providing contextual information automatically",
	"summary": "",
	"abstract": "A facility is described for providing contextual information automatically. In various embodiments, the facility receives an indication to start a conversation, automatically determines an identification for an item indicated by the indication, encodes the identification in a message, and sends the message so that a recipient of the message can locate the item. The facility can include a responder component and an initiator component. The initiator component can receive an identification for contextual information and an identification of the responder, initiate a conversation with the responder's computing device, and automatically encode the received indication of the contextual information in a message that it sends to the responder component so that the responder component can cause a link to the contextual information to be provided that, when selected, causes an application executing on the responder's computing device to load the contextual information. In various embodiments, the facility receives a message containing an indication of contextual information, decodes the indication to determine an identifier for the contextual information, and provides a command for loading the contextual information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07702798",
	"publication_date": "2010-04-20",
	"application_number": "11470827",
	"application_date": "2006-09-07",
	"tags": null,
	"slug": "providing-contextual-information-automatically",
	"match_type": "description"
},
{
	"name": "Providing new functionality while maintaining backward compatibility",
	"summary": "",
	"abstract": "The invention discloses a system method for providing new functionality to an operating system while maintaining backward compatibility with existing applications. The invention can provide new functionality while maintaining backward compatibility without a requirement to change any syntax of an API and without having to create new APIs for all functions. The invention can be configured to pass monolithic data as well as modular data through either legacy APIs or newly created APIs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07793306",
	"publication_date": "2010-09-07",
	"application_number": "11244185",
	"application_date": "2005-10-06",
	"tags": null,
	"slug": "providing-new-functionality-while-maintaining-backward-compatibility",
	"match_type": "description"
},
{
	"name": "Push-to-talk event notification",
	"summary": "",
	"abstract": "A method and system for notifying a push-to-talk enabled user of an event. The method includes the steps of: receiving event data to be provided to a user; determining a push-to-talk configuration including carrier information for the user; and based on the push-to-talk configuration, providing the event data and user identification information to a carrier identified in the carrier information. The system may include an aggregation service controller; a text to speech converter; a user PTT connection mapping database; an online service interface; and a PTT service provider interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756539",
	"publication_date": "2010-07-13",
	"application_number": "11140461",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "pushtotalk-event-notification",
	"match_type": "description"
},
{
	"name": "Query comprehensions",
	"summary": "",
	"abstract": "The subject disclosure pertains to interaction with one or more collections of data. Queries and domains are presented as separate entities. A number of compositional operators are provided to manipulate a generic collection of data at a low level. Query comprehensions can specify interactions with one or more collections at a higher or more intuitive level. The query comprehensions can be translated or mapped to operators that can be employed to interact with one or more data collections and return results where applicable.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730079",
	"publication_date": "2010-06-01",
	"application_number": "11215089",
	"application_date": "2005-08-30",
	"tags": null,
	"slug": "query-comprehensions",
	"match_type": "description"
},
{
	"name": "Querying nested documents embedded in compound XML documents",
	"summary": "",
	"abstract": "Querying a compound XML document having a primary XML document and multiple nested documents may be performed in a single query. The single query comprises an expression of at least one attribute and the encoding type of the nested documents. Execution of the query involves decoding each nested document according to its encoding type and searching for the attribute specified in the query. The results returned from each of the nested documents may be combined with the results returned from the primary document before returning the results to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805424",
	"publication_date": "2010-09-28",
	"application_number": "11403336",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": "querying-nested-documents-embedded-in-compound-xml-documents",
	"match_type": "description"
},
{
	"name": "Radical set determination for HMM based east asian character recognition",
	"summary": "",
	"abstract": "Exemplary techniques are described for selecting radical sets for use in probabilistic East Asian character recognition algorithms. An exemplary technique includes applying a decomposition rule to each East Asian character of the set to generate a progressive splitting graph where the progressive splitting graph comprises radicals as nodes, formulating an optimization problem to find an optimal set of radicals to represent the set of East Asian characters using maximum likelihood and minimum description length and solving the optimization problem for the optimal set of radicals. Another exemplary technique includes selecting an optimal set of radicals by using a general function that characterizes a radical with respect to other East Asian characters and a complex function that characterizes complexity of a radical.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805004",
	"publication_date": "2010-09-28",
	"application_number": "11680566",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "radical-set-determination-for-hmm-based-east-asian-character-recognition",
	"match_type": "description"
},
{
	"name": "Ranker selection for statistical natural language processing",
	"summary": "",
	"abstract": "Systems and methods for selecting a ranker for statistical natural language processing are provided. One disclosed system includes a computer program configured to be executed on a computing device, the computer program comprising a data store including reference performance data for a plurality of candidate rankers, the reference performance data being calculated based on a processing of test data by each of the plurality of candidate rankers. The system may further include a ranker selector configured to receive a statistical natural language processing task and a performance target, and determine a selected ranker from the plurality of candidate rankers based on the statistical natural language processing task, the performance target, and the reference performance data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07844555",
	"publication_date": "2010-11-30",
	"application_number": "11938811",
	"application_date": "2007-11-13",
	"tags": null,
	"slug": "ranker-selection-for-statistical-natural-language-processing",
	"match_type": "description"
},
{
	"name": "Re-categorization of aggregate data as detail data and automated re-categorization based on data usage context",
	"summary": "",
	"abstract": "A data access system which includes the capability to categorize subsets of the data in the data store, query result or other source of data as aggregate data or as detail data and also the ability to explicitly re-categorize the aggregate data as detail data, e.g., as part of execution of one or more processes on the data, so that operations that apply to detail data also apply to the re-categorized aggregate data. Additionally, automatic processes are provided for re-categorizing aggregate data as detail data based on data usage context, i.e., based upon how data in the data store is to be manipulated, processed and/or presented according to queries, commands, etc. received by the data store. Calculation of aggregations on top of already pre-aggregated data is enabled, and merging of designated aggregate data with detail data provides increased flexibility in a final dataset.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831617",
	"publication_date": "2010-11-09",
	"application_number": "11459859",
	"application_date": "2006-07-25",
	"tags": null,
	"slug": "recategorization-of-aggregate-data-as-detail-data-and-automated-recategorization-based-on-data-usage-context",
	"match_type": "description"
},
{
	"name": "Reconstructed frame caching",
	"summary": "",
	"abstract": "Systems and methods for processing input media in a computing device are described. In one aspect, a reconstructed frame is cached according to a set of criteria. A request to scrub to a predictive frame of input media is received. Responsive to receiving the request, the predictive frame is decoded starting with the reconstructed frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07733962",
	"publication_date": "2010-06-08",
	"application_number": "10730534",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": "reconstructed-frame-caching",
	"match_type": "description"
},
{
	"name": "Registry protection",
	"summary": "",
	"abstract": "Tampering with pieces of software is inhibited. Registry protection prevents changes made to keys and values in a central hierarchical database. Hardware protection prevents hackers from forcing various pieces of software from running on unauthorized pieces of hardware. The obfuscation of a software image so as to becloud the comprehension of hackers in reverse engineering pieces of software comprising the software image is provided. Image verification ensures the originality of the pieces of software to be installed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721340",
	"publication_date": "2010-05-18",
	"application_number": "11061399",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": "registry-protection",
	"match_type": "description"
},
{
	"name": "Reliable and scalable multi-tenant asynchronous processing",
	"summary": "",
	"abstract": "In a multi-tenant environment, synchronous processing requests from clients associated with tenants are handled by middle tier servers, which forward requests for asynchronous processing to queues associated with organizational databases for each tenant directed by a locator service. A group of independent asynchronous processing servers are used to perform the asynchronous processing interacting with the databases in a distributed manner. The allocation of the requests among the asynchronous servers is managed by an exponential back off for organizations with no waiting requests algorithm combined with a quota system based on historic load for organizations that have requests. The independence of the synchronous and asynchronous processing servers, as well as the distributed interaction between the asynchronous processing servers and the databases enables scalability of the system based on request types and implementation of reliable recovery mechanisms.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680848",
	"publication_date": "2010-03-16",
	"application_number": "11729582",
	"application_date": "2007-03-29",
	"tags": null,
	"slug": "reliable-and-scalable-multitenant-asynchronous-processing",
	"match_type": "description"
},
{
	"name": "Remote access and social networking using presence-based applications",
	"summary": "",
	"abstract": "Various embodiments utilize a real-time instant messaging or presence based communications system as a mechanism to remotely control the operation, programming, and/or review of media content on a device or system such as a television, media center, gaming device, digital video recorder and the like. In addition, the use of the instant messaging or presence based communication system opens up various social networking options for users. For example, users can, if allowed, gain access to the viewing habits of individuals in their contact list and exchange information with one another to provide a rich, robust sharing environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853661",
	"publication_date": "2010-12-14",
	"application_number": "11275442",
	"application_date": "2006-01-03",
	"tags": null,
	"slug": "remote-access-and-social-networking-using-presencebased-applications",
	"match_type": "description"
},
{
	"name": "Remote protocol support for communication of large objects in arbitrary format",
	"summary": "",
	"abstract": "A server computer provides objects such as bitmaps representing graphics image for processing by a client computer or device. The object may be of any arbitrary size or format, and is converted to a data structure that can be received by the client computer. Synchronized metadata may be included in the data structure, where such metadata data is used by an application in the client computer or device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653749",
	"publication_date": "2010-01-26",
	"application_number": "11419594",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": "remote-protocol-support-for-communication-of-large-objects-in-arbitrary-format",
	"match_type": "description"
},
{
	"name": "Remotely accessing protected files via streaming",
	"summary": "",
	"abstract": "A source device permits a user of a remote device to access a protected file on the source device when the user of the remote device has a right to access the protected file. The user locates the protected file on the source device using the remote device and accesses the protected file using a media player on the remote device. The media player constructs a path by which the source device streams the protected file. The remote device responds to an authentication request from the source device that the user of the remote device has a right to access the protected file. The user is authenticated to confirm that the user of the remote device has a right to access the protected file. The protected file is streamed to the remote device via a path constructed by the remote device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07681238",
	"publication_date": "2010-03-16",
	"application_number": "11201531",
	"application_date": "2005-08-11",
	"tags": null,
	"slug": "remotely-accessing-protected-files-via-streaming",
	"match_type": "description"
},
{
	"name": "Rendering graphics/image data using dynamically generated video streams",
	"summary": "",
	"abstract": "The present invention provides for rendering graphics/image data at an electronic device that typically has limited resources. A video data steam is received at an electronic device, the video data stream including either user interface information or slideshow presentation data coded in a video codec format. A video processor of the electronic device is used to decode at least a portion of the video data stream into video frame data. A portion of the user interface or slideshow presentation is then displayed as video from data on a display of the electronic device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694324",
	"publication_date": "2010-04-06",
	"application_number": "10955358",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "rendering-graphicsimage-data-using-dynamically-generated-video-streams",
	"match_type": "description"
},
{
	"name": "Reporting diagnostic information for code of an application program interface",
	"summary": "",
	"abstract": "A technology for reporting diagnostic information for code of an application program interface is disclosed. In one method approach, diagnostic information for a line of code in a file associated with an application program interface is received. The diagnostic information includes a designation of the line of code. The diagnostic information is stored in a fixed sized buffer. Efficient use of memory is provided without requiring elimination of other diagnostic information previously stored in the fixed sized buffer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765432",
	"publication_date": "2010-07-27",
	"application_number": "11714972",
	"application_date": "2007-03-07",
	"tags": null,
	"slug": "reporting-diagnostic-information-for-code-of-an-application-program-interface",
	"match_type": "description"
},
{
	"name": "Reprocessing of messages in an extensible message transfer system",
	"summary": "",
	"abstract": "Within a mail transfer agent of a message transfer system, a message is received and if the recipient entity resolves to a number of recipients exceeding a specified quantity, the original message is not processed. Instead, at least two messages are created, with each of the created messages addressed to a subset of the original set of recipients. The created messages are returned to the calling module for processing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831669",
	"publication_date": "2010-11-09",
	"application_number": "11068549",
	"application_date": "2005-02-28",
	"tags": null,
	"slug": "reprocessing-of-messages-in-an-extensible-message-transfer-system",
	"match_type": "description"
},
{
	"name": "Requesting computer user's context data",
	"summary": "",
	"abstract": "Techniques are described for providing information about a current state that is modeled with multiple state attributes. In some situations, the providing includes receiving from first and second sources indications of an ability to supply values for, respectively, an indicated one of the state attributes and another of the state attributes. In such situations, the providing also includes, in response to receiving a request from a first client for a value of the indicated one attribute, determining that the first source is available to supply the value, obtaining the value from the first source, and supplying a value obtained from the first source to the first client.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689919",
	"publication_date": "2010-03-30",
	"application_number": "10981941",
	"application_date": "2004-11-05",
	"tags": null,
	"slug": "requesting-computer-users-context-data",
	"match_type": "description"
},
{
	"name": "Resolving names to network endpoints",
	"summary": "",
	"abstract": "A system, apparatus, method, and computer-readable medium are provided for resolving a name to a network endpoint. According to one method, naming providers are registered with a computer system that are operative to resolve names to network endpoints for one or more domains. A provider can claim to be a primary provider or a secondary provider for a domain. A provider can also register as a wildcard provider. Once the providers have been registered, requests may be received to resolve an e-mail address into a network address of the corresponding computer system. In response to such a request, one or more of the registered providers are identified as being able to resolve names in the domain to network addresses. Requests are transmitted to the identified providers requesting that they resolve the e-mail address to a corresponding network address. The manner in which the requests are made depends upon whether authoritative results are required. Once the results of the name resolution have been returned, the results are utilized to establish a network connection to and communicate with the computer system identified by the returned network address.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07711853",
	"publication_date": "2010-05-04",
	"application_number": "11486782",
	"application_date": "2006-07-14",
	"tags": null,
	"slug": "resolving-names-to-network-endpoints",
	"match_type": "description"
},
{
	"name": "Resolving virtual network names",
	"summary": "",
	"abstract": "An apparatus and method is provided for resolving virtual network names using one or more name routers. A conventional Uniform Resource Locator (URL) naming scheme is extended by allowing any component to be mapped to an address. The resolution process occurs recursively through a plurality of name routers. Resolution can be contextual, such that the same virtual network name may be resolved differently depending on the identity of the client or other parameters.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653747",
	"publication_date": "2010-01-26",
	"application_number": "11422106",
	"application_date": "2006-06-05",
	"tags": null,
	"slug": "resolving-virtual-network-names",
	"match_type": "description"
},
{
	"name": "Resource authoring incorporating ontology",
	"summary": "",
	"abstract": "The present specification provides a system and method for localizing data. In one embodiment, a localization platform is provided and is operably coupled to an operating system. The localization platform includes a plurality of localization components providing localized data that is localized to one or more distinct markets. The localization platform also includes an ontology store storing ontology information and a translation matching component configured to receive a localization request corresponding to input data to be localized. The translation matching component is configured to access the plurality of localization components and the ontology store based on the localization request. The translation matching component selects and outputs localized data from one or more of the plurality of localization components based on predetermined criteria.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653528",
	"publication_date": "2010-01-26",
	"application_number": "11118544",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "resource-authoring-incorporating-ontology",
	"match_type": "description"
},
{
	"name": "Resource usage conflict identifier",
	"summary": "",
	"abstract": "The exposure and usage of one or more particular physical and logical resources by methods within an isolation boundary may be annotated so as to preempt resource usage conflicts. Further described are tools, contracts, and collaborative processes for at least identifying potential resource usage conflicts. More particularly, the example tools, contracts, and collaborative processes may be used to annotate at least one of exposure and consumption of one or more particular physical and logical resources by methods within an isolation boundary.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07673051",
	"publication_date": "2010-03-02",
	"application_number": "11189284",
	"application_date": "2005-07-26",
	"tags": null,
	"slug": "resource-usage-conflict-identifier",
	"match_type": "description"
},
{
	"name": "Reverse name mappings in restricted namespace environments",
	"summary": "",
	"abstract": "A silo-specific view of the file system is provided to processes running in the silo. Processes can access a file only by uttering the silo-relative name. To determine if access to a file identified by a file ID should be permitted, a list of physical names of the file identified by the file ID is constructed. If a silo-relative name that translates to a name in the list can be uttered, the file is opened and the file ID for the opened file is retrieved. If the file IDs match, the silo-relative name is used to open the file. If a process running within a silo requests a list of names for a file that has been opened using a file ID, results returned are filtered so that only names visible in the silo are returned, thus restricting the process' access to files to those files within its hierarchical namespace.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769779",
	"publication_date": "2010-08-03",
	"application_number": "11555727",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "reverse-name-mappings-in-restricted-namespace-environments",
	"match_type": "description"
},
{
	"name": "Rich object model for diverse auto-ID tags",
	"summary": "",
	"abstract": "A system and method allowing one application to implement diverse AutoID tags interchangeably, by unifying all AutoID technologies into a single object model. The single object model interacts with all AutoID technologies, with only a lowest level device tailored to the specific AutoID technology, the single object model thereby persisting through the middleware, up to an application, carrying all necessary information from any AutoID technology. The single object model can interact with a tag many times, as necessary to complete an operation. A reader interface allows an application to communicate with multiple readers of diverse AutoID tags, and to communicate with individual servers communicating with individual readers of diverse AutoID tags. The reader interface also provides a single interface for hardware communication with a radio, for an application interacting with an entire network of readers, sensors, interpretation steps, product lookup, and information storage providing a single virtual reader.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07815101",
	"publication_date": "2010-10-19",
	"application_number": "11158698",
	"application_date": "2005-06-22",
	"tags": null,
	"slug": "rich-object-model-for-diverse-autoid-tags",
	"match_type": "description"
},
{
	"name": "Rights management system for streamed multimedia content",
	"summary": "",
	"abstract": "A sequence of content keys are shared between a receiver of pieces of digital content and a computing device upon which the content is to be rendered. The receiver encrypts each piece of content according to a corresponding content key in the sequence and forwards the encrypted content to the computing device and the computing device decrypts the encrypted content according to the corresponding content key. The receiver initially transmits to the computing device an initialization digital license with an initial content key (CK) therein. Each of the receiver and the computing device derive a new content key (CKx) in the sequence from the initial content key (CK()) in the sequence on an as-needed basis and in a coordinated fashion. The initialization license is required only once for the sequence of content keys, and the receiver need not explicitly communicate (CKx) to the computing device for each piece of content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693280",
	"publication_date": "2010-04-06",
	"application_number": "11112325",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "rights-management-system-for-streamed-multimedia-content",
	"match_type": "description"
},
{
	"name": "Robust end-of-log processing",
	"summary": "",
	"abstract": "A method of invalidating an unused log file in a database includes examining a discard log information storage area and determining if a discard log exists. If the discard log exists, the log is invalidated. The headers of each of the log files that have been fully invalidated are then invalidated. The discard log is then fully invalidated and a new log file may be generated on top of the discarded log. The method may be interrupted by a failure, a changeover, or crash and will be repeated until it completes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756838",
	"publication_date": "2010-07-13",
	"application_number": "11301168",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "robust-endoflog-processing",
	"match_type": "description"
},
{
	"name": "Routing of resource information in a network",
	"summary": "",
	"abstract": "A media server in a Universal Plug and Play (UPnP) network includes a resource sharing service to govern the distribution of resource information regarding resources to rendering devices. In one case, the resource sharing service consults a criterion to determine whether an identified network device is authorized to receive resource information. In another case, the resource sharing service consults another criterion to determine whether a specified individual associated with the media server must consent to the transfer of the resource information in order for the transfer to occur. The resource information may include resource metadata that describes high level information regarding resources, as well as resource content. The media server includes various user interface presentations that allow the media server user to specify shared resources and distribution criteria.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07668939",
	"publication_date": "2010-02-23",
	"application_number": "10742588",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": "routing-of-resource-information-in-a-network",
	"match_type": "description"
},
{
	"name": "Runtime detection for invalid use of zero-length memory allocations",
	"summary": "",
	"abstract": "Methods for handling zero-length allocations are disclosed. An example of such a method may include returning a self-describing/diagnosing dynamic address that has all the properties required for a secure implementation. Another example may include returning a series of different addresses (instead of a single address per process) to improve supportability. Yet another example may include maintaining diagnostic information about the original allocation for ease of problem resolution.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730453",
	"publication_date": "2010-06-01",
	"application_number": "11300227",
	"application_date": "2005-12-13",
	"tags": null,
	"slug": "runtime-detection-for-invalid-use-of-zerolength-memory-allocations",
	"match_type": "description"
},
{
	"name": "Scalable programmable video recorder",
	"summary": "",
	"abstract": "A programmable video recorder (PVR) includes a writer application programming interface (API) and a reader API that operate essentially independently to enable the PVR to be networked to multiple reader applications. The writer API creates a backing store and a shared memory mapped file. The backing store stores streamed data in temporary files. The shared memory mapped file stores state information of the backing store files. The reader API receives requests from reader applications to access the stored streamed data. In response to the requests, the reader API permits the reader applications to access the shared memory mapped file to determine where the stored streamed data is located. Upon locating the stored data, the reader API permits the requesting reader applications to access the stored streamed data.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07743032",
	"publication_date": "2010-06-22",
	"application_number": "11868160",
	"application_date": "2007-10-05",
	"tags": null,
	"slug": "scalable-programmable-video-recorder",
	"match_type": "abstract"
},
{
	"name": "Scalable transformation and configuration of EDI interchanges",
	"summary": "",
	"abstract": "Transforming one or more of a collection of electronic data interchange (EDI) transactions. A type of EDI transactions is identified to be transformed from a source format to a destination format. The collection of the EDI transactions is received according to the source format. A particular one or more of the collection of the EDI transactions is identified corresponding to the identified type of EDI transactions. A transformation map is defined to transform the identified particular one or more of the transactions from the source format to the destination format. The identified particular one or more transactions is transformed according to the defined transformation map.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07703099",
	"publication_date": "2010-04-20",
	"application_number": "11361206",
	"application_date": "2006-02-24",
	"tags": null,
	"slug": "scalable-transformation-and-configuration-of-edi-interchanges",
	"match_type": "description"
},
{
	"name": "Scaling UPnP v1.0 device eventing using peer groups",
	"summary": "",
	"abstract": "Disclosed is a method for scaling and extending the reach of UPnP device discovery and eventing by leveraging the use of a peer-to-peer network infrastructure. Peer-to-peer networking allows for the organization of a set of nodes into a group for efficient exchange of information and the group has an efficient and scalable mechanism for flooding data to all members in it. In one embodiment one PC in a peer group can receive device discovery announcements and subscribe for device event notifications. A discovery proxy and an eventing proxy running on the PC package the announcement and/or notification in a record and proceed to flood it to the group. The group flooding semantics route the notification to the subscribed controllers, which can subsequently take suitable action. Ultimately, this method produces a result whereby device discovery and eventing tasks can be fulfilled by locating the closest peer and obtaining the device announcements and notifications from that peer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647394",
	"publication_date": "2010-01-12",
	"application_number": "11059473",
	"application_date": "2005-02-15",
	"tags": null,
	"slug": "scaling-upnp-v10-device-eventing-using-peer-groups",
	"match_type": "description"
},
{
	"name": "Schema-based machine generated programming models",
	"summary": "",
	"abstract": "A programming model that takes general purpose APIs and machine-generates new programming models based on user defined schemas that provide the developer with data and view separation, and a way to communicate to the host application using the domain of the problem being solved. The system comprises a schema component that the developer uses to define a schema that includes one or more domain terms related to the problem to be solved, and a mapping component that uses the schema to search and map selected constructs from one or more generic host application APIs to the corresponding problem domain terms. Once the mapping is completed, a generating component generates a new API that is used by a host application to facilitate developing an application document using terms related to the domain of the problem to be solved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694315",
	"publication_date": "2010-04-06",
	"application_number": "10779510",
	"application_date": "2004-02-13",
	"tags": null,
	"slug": "schemabased-machine-generated-programming-models",
	"match_type": "description"
},
{
	"name": "Schematization of establishing relationships between applications",
	"summary": "",
	"abstract": "Establishing relationships between one or more entities of a first application and one or more entities of a second application using metadata. At least one entity of the second application is identified for establishing a relationship with at least one entity of the first application. Metadata from the second application is received at the first application. The metadata includes information associated with the identified entity of the second application. An expression is generated, based on the metadata, specifying a relationship between the entity of the first application with the identified entity of the second application.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693861",
	"publication_date": "2010-04-06",
	"application_number": "11167969",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "schematization-of-establishing-relationships-between-applications",
	"match_type": "description"
},
{
	"name": "Script application framework",
	"summary": "",
	"abstract": "A script application framework is provided to abstract common scripting patterns and to provide a structure for scripting. The script application framework encapsulates scripting logic into script components, manages lifetime of script objects, and builds relationships among different script objects. The script application framework can be applied to any scripting environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07861219",
	"publication_date": "2010-12-28",
	"application_number": "11317580",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": "script-application-framework",
	"match_type": "description"
},
{
	"name": "Searching and browsing URLs and URL history",
	"summary": "",
	"abstract": "System(s) and/or method(s) (u201ctoolsu201d) are described that present indicia for implicitly and explicitly user-associated web pages of a network browser application. The tools can present these indicia in a single graphic user interface, in response to a user's selection of a single unified access point, or in response to a search of the browser's user-associated web pages.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831547",
	"publication_date": "2010-11-09",
	"application_number": "11179155",
	"application_date": "2005-07-12",
	"tags": null,
	"slug": "searching-and-browsing-urls-and-url-history",
	"match_type": "description"
},
{
	"name": "Secondary index and indexed view maintenance for updates to complex types",
	"summary": "",
	"abstract": "Pursuant to receipt of a data modification command or statement, such as an Update command, it is determined which fields in a data structure, such as a UDT, computed column, indexed view, or index, for example, will be changed as a result of the command. Only those fields that are affected by the command will be changed. Thus, changes are propagated to only to those dependent data structures whose content is being modified. Tree representations are used to facilitate the determination as to whether a subfield in a hierarchy is changed.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769770",
	"publication_date": "2010-08-03",
	"application_number": "10891220",
	"application_date": "2004-07-14",
	"tags": null,
	"slug": "secondary-index-and-indexed-view-maintenance-for-updates-to-complex-types",
	"match_type": "description"
},
{
	"name": "Securing sensitive data in memory",
	"summary": "",
	"abstract": "Sensitive data is stored in a secure buffer, and never in an unencrypted, accessible location at any time. The data is accessed only by low-level processor instructions that load only a portion of the data into processor registers. The portion of data can then be used before the next portion of data is transferred from the secure buffer into the processor registers. In some embodiments, only one portion is available at any time. In other embodiments, a number of portions may be available at one time. However, the entirety of the sensitive data is never present in the clear. Thus, the entirety of the sensitive data will never be available if an adversary gains access to the contents of memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725739",
	"publication_date": "2010-05-25",
	"application_number": "11283593",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": "securing-sensitive-data-in-memory",
	"match_type": "description"
},
{
	"name": "Security tokens including displayable claims",
	"summary": "",
	"abstract": "A system for providing a digital identity includes a claims transformer programmed to generate a security token including a computational token and a display token, the computational token including one or more claims associated with an identity of a principal, and the display token including display information about the claims in the computational token. The display information is configured to allow the principal to view the display token.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788499",
	"publication_date": "2010-08-31",
	"application_number": "11312920",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": "security-tokens-including-displayable-claims",
	"match_type": "description"
},
{
	"name": "Selection of items based on relative importance",
	"summary": "",
	"abstract": "Methods and systems for prioritizing items and displaying those items in a single view of a personal information management (PIM) application are disclosed. PIM software can prioritize items for display in the single view based on a comparison of the date of creation of the item versus the amount of time remaining to complete the item. PIM software may also take into account a priority level of the item. As an item has less time remaining as compared to the date of creation, the likelihood the item will be included in the single display increases. Any item whose due date is u2018todayu2019 may be included in the single view. Items without due dates might not ever appear in the single view. Users can thus get a quick overview of items that need to be taken care of that day, without being inundated with items that can wait until another day.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07809599",
	"publication_date": "2010-10-05",
	"application_number": "11276190",
	"application_date": "2006-02-17",
	"tags": null,
	"slug": "selection-of-items-based-on-relative-importance",
	"match_type": "description"
},
{
	"name": "Selective window exclusion for captured content",
	"summary": "",
	"abstract": "Described is the selective exclusion of content returned in a requested screen capture operation, wherein exclusion may be determined by a window category and the requesting application program. For example, a magnification program will not received content captured from its own layered window or from any other layered magnification windows. A registration mechanism obtains and maintains a window handle for any window registered for exclusion. A screen capture mechanism uses the information to determine whether to exclude the content of windows when returning the captured screen content. Exclusion may be accomplished by enumerating areas that are not covered by any layered window and copying those areas to a screen representation buffer or the like, and separately enumerating areas that are covered by at least one layered window. A covered area is only copied to the screen representation when it does not correspond to an excluded window.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689926",
	"publication_date": "2010-03-30",
	"application_number": "11395077",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "selective-window-exclusion-for-captured-content",
	"match_type": "description"
},
{
	"name": "Selectively authorizing software functionality after installation of the software",
	"summary": "",
	"abstract": "Controlling access to functionality within an installed software product. The invention includes an authorization module that dynamically references authorization information when specific functionality is requested by a requesting entity such as a user or an application program to determine if the requested functionality is authorized to be executed. Further, the invention dynamically provides an opportunity to the requesting entity to purchase unauthorized functionality. In this manner, functionality within the software product may be enabled or disabled at any time (e.g., during installation, post-installation, and re-installation).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716476",
	"publication_date": "2010-05-11",
	"application_number": "12338583",
	"application_date": "2008-12-18",
	"tags": null,
	"slug": "selectively-authorizing-software-functionality-after-installation-of-the-software",
	"match_type": "description"
},
{
	"name": "Self-registering objects for an IPC mechanism",
	"summary": "",
	"abstract": "In response to receiving a communication from a first process directed to a second process, a trusted entity determines if an object reference in the communication refers to an object owned by a first process which is being exported to a second process or if the communication refers to an object not owned by the first process which is being passed to the second process. The trusted entity generates a second object reference for use by the second process. Use of a naming convention identifies the reference as a reference to an object which is foreign to or owned by the processes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730522",
	"publication_date": "2010-06-01",
	"application_number": "11130301",
	"application_date": "2005-05-16",
	"tags": null,
	"slug": "selfregistering-objects-for-an-ipc-mechanism",
	"match_type": "description"
},
{
	"name": "Semantic annotations for virtual objects",
	"summary": "",
	"abstract": "Methods are disclosed for providing virtual objects and associating semantic annotations with the virtual objects. A user may be enabled to take virtual photographs of the virtual objects, wherein the semantic annotations associated with the virtual objects visible in the virtual photograph are stored with the virtual photograph. The virtual objects may be included in a virtual world. The user may be enabled to query a computer-controlled character about a virtual object in the virtual photograph, or in a virtual world in realtime, wherein the computer-controlled character is enabled to respond to the query by combining the semantic annotation associated with the virtual object in the virtual photograph with additional semantic annotations tagged to the computer-controlled character or a context of the virtual world to dynamically provide a semantic output, in various embodiments.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836437",
	"publication_date": "2010-11-16",
	"application_number": "11352000",
	"application_date": "2006-02-10",
	"tags": null,
	"slug": "semantic-annotations-for-virtual-objects",
	"match_type": "description"
},
{
	"name": "Service discovery and publication",
	"summary": "",
	"abstract": "A system and methods for service discovery and publication are disclosed. Application programs write requests for service discovery, publication, and subscription to a service discovery application programming interface. The service discovery application programming interface invokes one or more lower-level protocols to satisfy the discovery, publication and/or subscription request. Service information retrieved from lower-layer protocols is formatted into a consistent data model and returned to the client application. In addition, service information may be stored in a persistent data store managed by a discovery persistence service communicatively connected to the service discovery API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716357",
	"publication_date": "2010-05-11",
	"application_number": "10693653",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": "service-discovery-and-publication",
	"match_type": "abstract"
},
{
	"name": "Service for policy rule specification evaluation and enforcement on multiple communication modes",
	"summary": "",
	"abstract": "Policy rules for a particular communication mode are adapted and implemented for other communication modes in a dynamic and/or automated manner. Organization level and/or personal policies for one communication mode are evaluated and modified as necessary for other communication modes, which may be integrated with each other or distinctly managed. Rules may be adapted based on user, groups, or policy types.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849206",
	"publication_date": "2010-12-07",
	"application_number": "12353121",
	"application_date": "2009-01-13",
	"tags": null,
	"slug": "service-for-policy-rule-specification-evaluation-and-enforcement-on-multiple-communication-modes",
	"match_type": "description"
},
{
	"name": "Service routing and web integration in a distributed, multi-site user authentication system",
	"summary": "",
	"abstract": "A computerized method and system for routing between network servers. A central database coupled to a central server on a data communication network stores information for identifying locations of a plurality of network servers on the network. Each network server provides at least one service via the network. The central server receives a request from the user for a selected service including a carry through keyword for controlling routing of the user to the selected service. The central server retrieves location information from the central database to identify the location of the network server providing the selected service and attaches the carry through keyword to the retrieved location information. The central server then routes the user with the carry through keyword to the network server, which directs the user to the selected service based on the carry through keyword.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07810136",
	"publication_date": "2010-10-05",
	"application_number": "11032409",
	"application_date": "2005-01-10",
	"tags": null,
	"slug": "service-routing-and-web-integration-in-a-distributed-multisite-user-authentication-system",
	"match_type": "description"
},
{
	"name": "Silent sign-in for offline games",
	"summary": "",
	"abstract": "Techniques are disclosed to silently sign-in a user of an offline game title onto an online service. The user is afforded access to select online services to facilitate future online gaming. In a described implementation, a method is disclosed. The method silently signs in a user of an offline game title onto an online gaming service. As a result, the signed-in user may receive one or more online services such as an in-game notification, a friend request (e.g., inviting a user to become a friend), a cross-title game invitation, and/or data corresponding to a friends list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07857701",
	"publication_date": "2010-12-28",
	"application_number": "10800331",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": "silent-signin-for-offline-games",
	"match_type": "description"
},
{
	"name": "Simplified device drivers for hardware devices of a computer system",
	"summary": "",
	"abstract": "A computer system uses simplified device drivers for operating hardware devices. A simplified device driver for a hardware device of a given device type, such as a flatbed scanner, works with a system-supplied common driver for that given device type. The common driver and the simplified driver together function like a regular device driver. The simplified device driver implements a small number of entry point functions corresponding to a pre-selected set of operation commands u201cgenericu201d to hardware devices of that given device type. When an application makes a request for an operation by the device, the request is passed through a device driver interface (DDI) to the common driver. The common driver then calls the entry point functions in the simplified device driver to carry out the requested operation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07673303",
	"publication_date": "2010-03-02",
	"application_number": "11276482",
	"application_date": "2006-03-01",
	"tags": null,
	"slug": "simplified-device-drivers-for-hardware-devices-of-a-computer-system",
	"match_type": "description"
},
{
	"name": "SKU determination mechanism and API",
	"summary": "",
	"abstract": "Applications or operating system components requiring a SKU, or other indicator of an operating system, make a call to an API. The calling application passes an indicator of the most current version of an operating system known at the time of the application creation as an argument. This argument may be an indictor of the operating system version, build number, and service pack version, for example. The called API may reference a table of operating system SKUs with the indicator of the most current operating system known to the calling application. If found, the API returns the corresponding SKU to the calling application. If not found, the API returns the SKU corresponding to the closest sequential match to the passed in indicator. The calling application may then execute believing it is using the operating system corresponding to the returned SKU.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818756",
	"publication_date": "2010-10-19",
	"application_number": "11249118",
	"application_date": "2005-10-12",
	"tags": null,
	"slug": "sku-determination-mechanism-and-api",
	"match_type": "description"
},
{
	"name": "Smart secure storage",
	"summary": "",
	"abstract": "A healthcare smart card management system stores a large amount of healthcare information to overcome shortcomings of separate and largely paper medical and insurance files. Embedded security technology supports partial or separated identity proofing as well as hardware time limited storage. Dynamic contextual privacy consent enhances user, healthcare provider, and insurer privacy and proprietary information to encourage and enable universal adoption. Data is structured in self-executing (u201cprint to deviceu201d) for legacy systems as well as in rolled-access format and archival format to balance usage and data integrity purposes. A plurality of network interfaces are incorporated as well as financial transaction codes. Card integrity is enhanced by remote usage oversight, self-destruct monitoring (e.g., time, location, hacking, malfunction, etc.), and integral write-only audit logs. Levering excess storage capacity, a user can store related healthcare information such as exercise regimen, diet journal, emergency contact information, urgent medical conditions for first providers, etc.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860793",
	"publication_date": "2010-12-28",
	"application_number": "12061000",
	"application_date": "2008-04-02",
	"tags": null,
	"slug": "smart-secure-storage",
	"match_type": "description"
},
{
	"name": "Smart UI recording and playback framework",
	"summary": "",
	"abstract": "Techniques and tools are described for recording and reliably replicating graphical user interface (u201cGUIu201d) activity for various applications, including applications that have dynamic user interfaces. The techniques and tools may be used in combination or separately. For example, a recording tool receives internal macro data from a GUI-based application as opaque tokens, which are embedded into playback code. A playback tool executes the playback code by passing the embedded tokens back to their original application for playback by the application's internal recorder.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653896",
	"publication_date": "2010-01-26",
	"application_number": "10882861",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": "smart-ui-recording-and-playback-framework",
	"match_type": "description"
},
{
	"name": "Software business process model",
	"summary": "",
	"abstract": "A business software framework includes an application framework that has a process model. The process model provides desired services to the business components. The process model arranges operations into activities. The process model can also use an agent/service arrangement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730446",
	"publication_date": "2010-06-01",
	"application_number": "10389670",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": "software-business-process-model",
	"match_type": "description"
},
{
	"name": "Software support for dynamically extensible processors",
	"summary": "",
	"abstract": "A post-compilation tool can rewrite executable images produced by a compiler. The tool can add extension definitions, insert extension-trigger instructions, and add a security signature. Operating system software may be notified of extension capabilities when loading the executable image, and may proceed to load an appropriate processor extension. The operating system software can manage availability of processor extensions on behalf of the applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757224",
	"publication_date": "2010-07-13",
	"application_number": "11347723",
	"application_date": "2006-02-02",
	"tags": null,
	"slug": "software-support-for-dynamically-extensible-processors",
	"match_type": "description"
},
{
	"name": "Special group logon tracking",
	"summary": "",
	"abstract": "A method of generating a computer user activity log for a user belonging to a specially monitored group includes allowing a user to logon to a local computer. The local computer verifying the user account credentials and creating a user logon session. A token is created by the local computer for identification of any group membership with which the user associated and also having the user access privileges. The group information in the token is compared with a specially monitored group list. The specially monitored group list may be obtained from a domain server or may be configured locally. If the user has membership in the specially monitored group, then a special logon session is created and activities of the user are recorded.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07690036",
	"publication_date": "2010-03-30",
	"application_number": "11301304",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "special-group-logon-tracking",
	"match_type": "description"
},
{
	"name": "Spectrum and medium access allocation for fairness",
	"summary": "",
	"abstract": "Each node or link of an ad hoc network assists in the distributed allocation of a data channel to increase fairness, even in a multi-hop network, by tracking a measure of link weight for itself and sharing this information over a control channel with neighboring nodes. The metric can be provided over a dedicated control channel, added as a header to data communication on a data channel, or inferred by monitoring data traffic from the neighboring node. The link weight can be adjusted by a link quality factor based on provided or inferred metrics such as transmission rates, ratio of transmission errors, idle time, etc. For multiple flow queues at a subject node, one with a higher transmission rate can be selected for increased fairness. When a packet is received, medium access includes allocating bandwidth, including bonding multiple frequencies that are determined to be available to both nodes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07778170",
	"publication_date": "2010-08-17",
	"application_number": "11939625",
	"application_date": "2007-11-14",
	"tags": null,
	"slug": "spectrum-and-medium-access-allocation-for-fairness",
	"match_type": "description"
},
{
	"name": "Speech controls for use with a speech system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that includes one or more speech controls incorporated into one or more speech-enabled applications that run on the speech system. The controls allow applications to be developed with minimal programming effort to incorporate common speech-enabled application functions. A question control provides a customizable template for requesting information from a user. An announcer control allows a speech-enabled application to provide a user with information without having to re-create an entire announcer process each time it is used. A command control provides a simple way to attach command and control functions to speech-enabled applications. A word trainer control provides a way to associate user-selected voice tags with certain information. Providing the controls for use with speech-enabled applications ensures standardized user interfaces across multiple speech-enabled applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07742925",
	"publication_date": "2010-06-22",
	"application_number": "11275212",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": "speech-controls-for-use-with-a-speech-system",
	"match_type": "description"
},
{
	"name": "Speech index pruning",
	"summary": "",
	"abstract": "A speech segment is indexed by identifying at least two alternative word sequences for the speech segment. For each word in the alternative sequences, information is placed in an entry for the word in the index. Speech units are eliminated from entries in the index based on a comparison of a probability that the word appears in the speech segment and a threshold value.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831428",
	"publication_date": "2010-11-09",
	"application_number": "11270673",
	"application_date": "2005-11-09",
	"tags": null,
	"slug": "speech-index-pruning",
	"match_type": "description"
},
{
	"name": "Spell checking system including a phonetic speller",
	"summary": "",
	"abstract": "A spell checking system includes a letter spelling engine. The letter spelling engine is configured to select a plurality of candidate letter target strings that closely match a misspelled source string. The spell checking system includes a phoneme spelling engine. The phoneme spelling engine is configured to select a plurality of candidate phoneme target strings that closely match the misspelled source string. A ranker module is configured to combine the candidate letter target strings and the candidate phoneme target strings into a combined list of candidate target strings. The ranker module is also configured to rank the list of candidate target strings to provide a list of best candidate target strings for the misspelled source string.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831911",
	"publication_date": "2010-11-09",
	"application_number": "11370816",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "spell-checking-system-including-a-phonetic-speller",
	"match_type": "description"
},
{
	"name": "Standalone execution of incomplete data flows",
	"summary": "",
	"abstract": "Systems, devices, and methods for modularizing data flows and for providing stand-alone execution of incomplete data flows are provided based on an improved data warehousing framework. Data flow modularization and code reuse is improved through the use of the disclosed flowlets and allows for consistent and efficient standalone testing of incomplete data flows. The disclosed details enable various refinements and modifications according to system design considerations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860904",
	"publication_date": "2010-12-28",
	"application_number": "11848039",
	"application_date": "2007-08-30",
	"tags": null,
	"slug": "standalone-execution-of-incomplete-data-flows",
	"match_type": "description"
},
{
	"name": "Standardized natural language chunking utility",
	"summary": "",
	"abstract": "A method is disclosed for providing a chunking utility that supports robust natural language processing. A corpus is chunked in accordance with a draft chunking specification. Chunk inconsistencies in the corpus are automatically flagged for resolution, and a chunking utility is provided in which at least some of the flagged inconsistencies are resolved. The chunking utility provides a single, consistent global chunking standard, ensuring compatibility among various applications. The chunking utility is particularly advantageous for non-alphabetic languages, such as Chinese.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07672832",
	"publication_date": "2010-03-02",
	"application_number": "11345615",
	"application_date": "2006-02-01",
	"tags": null,
	"slug": "standardized-natural-language-chunking-utility",
	"match_type": "description"
},
{
	"name": "Strategies for processing image information using a color information data structure",
	"summary": "",
	"abstract": "Strategies are described for processing image information using a data structure which conveys color information. The color information describes color-related formatting applied to the image information. The data structure can be passed down a video processing pipeline, where each functional component in the pipeline can draw color information from the data structure to improve the accuracy of its processing. Further, each component can supply previously unknown color information to the data structure for use by other (downstream) components in the pipeline. Exemplary fields of the data structure can include one or more of: a video transfer function field; a color primaries field; an image light field; a transfer matrix field; a nominal range field; and a video chroma sampling field. The transfer matrix field can be used to convert image information from one color space to another, such as a luma-related color space to an RGB-related color space. Processing operations can be performed on progressive and linear RGB image information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07643675",
	"publication_date": "2010-01-05",
	"application_number": "10902325",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": "strategies-for-processing-image-information-using-a-color-information-data-structure",
	"match_type": "description"
},
{
	"name": "Synchronicity in software development",
	"summary": "",
	"abstract": "Systems and methods that facilitate software development projects via employing a synchronization component, which enables synchronization among a state for a specification, a product and an associated documentation. A project manager responsible for preparing the specification can enter and/or store the definition of the specification in a specification database, in form of a Structured Query Language (SQL), for example. A differentiator component compares state of the specification with the product (e.g., build of SQL server) at desired intervals, and further identifies any discrepancies therebetween. As such, a centralized location is provided for comparison of the specification and the product, and for enabling synchronization among the specification, the product and the associated documentation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707549",
	"publication_date": "2010-04-27",
	"application_number": "11375781",
	"application_date": "2006-03-15",
	"tags": null,
	"slug": "synchronicity-in-software-development",
	"match_type": "description"
},
{
	"name": "Synonymous collocation extraction using translation information",
	"summary": "",
	"abstract": "A method of automatically extracting synonymous collocations from monolingual corpora and a small bilingual corpus is proposed. The methodology includes generating candidate synonymous collocations and selecting synonymous collocations as a function of translation information, including collocation translations and probabilities. Candidate synonymous collocations with similarity scores that exceed a threshold are extracted as synonymous collocations. The extracted collocations can be used later in language generation by substituting synonymous collocations for applications such as writing assistance programs.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689412",
	"publication_date": "2010-03-30",
	"application_number": "10729126",
	"application_date": "2003-12-05",
	"tags": null,
	"slug": "synonymous-collocation-extraction-using-translation-information",
	"match_type": "description"
},
{
	"name": "System and a method for presenting related items to a user",
	"summary": "",
	"abstract": "A system and method for presenting related items to a user. A universal data store is provided which contains a plurality of items. A portion of the items contain relational information that allows relationships between two or more of the plurality of items to be determined. A shell presents a selected item to a user and is configured to utilize the relational information to present one or more items in the data store which are related to the selected item.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730073",
	"publication_date": "2010-06-01",
	"application_number": "10691888",
	"application_date": "2003-10-23",
	"tags": null,
	"slug": "system-and-a-method-for-presenting-related-items-to-a-user",
	"match_type": "description"
},
{
	"name": "System and apparatus for sending complete responses to truncated electronic mail messages on a mobile device",
	"summary": "",
	"abstract": "The present invention allows mobile users to send replies to, or to forward, truncated electronic mail messages, and yet still send the entire body of the original electronic mail message, without having to download the entire body of the mail message locally to the mobile device and then re-transmit the entire message from the mobile device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07773106",
	"publication_date": "2010-08-10",
	"application_number": "10452275",
	"application_date": "2003-06-02",
	"tags": null,
	"slug": "system-and-apparatus-for-sending-complete-responses-to-truncated-electronic-mail-messages-on-a-mobile-device",
	"match_type": "description"
},
{
	"name": "System and method adapted to facilitate dimensional transform",
	"summary": "",
	"abstract": "Systems and methods that facilitate dimensional transformations of data points are disclosed. In particular, the subject invention provides for a system and methodology that simplifies dimensional transformations while mitigating variations of a distance property between pairs of points. A set of n data points in d dimensional space is represented as an nu00d7d input matrix, where d also corresponds to the number of attributes per data point. A transformed matrix represents the n data points in a lower dimensionality k after being mapped. The transformed matrix is an nu00d7k matrix, where k is the number of attributes per data point and is less than d. The transformed matrix is obtained by multiplying the input matrix by a suitable projection matrix. The projection matrix is generated by randomly populating the entries of the matrix with binary or ternary values according to a probability distribution. Unlike previous methods, the projection matrix is formed without obtaining an independent sample from a Gaussian distribution for each entry in the projection matrix, without applying a linear algebraic technique to generate the projection matrix and without employing arbitrary floating point numbers. Processes and/or algorithms can utilize the reduced transformed matrix instead of the larger input matrix to facilitate computational efficiency and data compression.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836115",
	"publication_date": "2010-11-16",
	"application_number": "11257434",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": "system-and-method-adapted-to-facilitate-dimensional-transform",
	"match_type": "description"
},
{
	"name": "System and method for a context-awareness platform",
	"summary": "",
	"abstract": "An improved system and method for a context-awareness platform that may be used to adapt an execution environment is provided. A framework with interfaces for setting, tracking, and getting context information about the execution environment of a computer system includes a context engine and a unified data store for aggregating context information at a platform level for access by executables running on the platform. The context engine may receive requests to perform context information operations from executables such as setting, tracking and getting context information in the data store. Upon receiving a notification of a change in context information, one or more executables may change the execution environment such as reconfiguring system settings. In this way, an executable may adapt its execution environment using context information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716651",
	"publication_date": "2010-05-11",
	"application_number": "11044354",
	"application_date": "2005-01-26",
	"tags": null,
	"slug": "system-and-method-for-a-contextawareness-platform",
	"match_type": "description"
},
{
	"name": "System and method for batched indexing of network documents",
	"summary": "",
	"abstract": "A process takes advantage of a structure of a server hosting a network site that includes a change log stored in a database to batch index documents for search queries. The content of the site is batched and shipped in bulk from the server to an indexer. The change log keeps track of the changes to the content of the site. The indexer incrementally requests updates to the index using the change log and batches the changes so that the bandwidth usage and processor overhead costs are reduced.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644107",
	"publication_date": "2010-01-05",
	"application_number": "10956891",
	"application_date": "2004-09-30",
	"tags": null,
	"slug": "system-and-method-for-batched-indexing-of-network-documents",
	"match_type": "description"
},
{
	"name": "System and method for context sensitive searching",
	"summary": "",
	"abstract": "A method and system which allow the addition of context into a search involves the use of state monitors in the computing environment. The state monitors record information such as the installed hardware, software, user preferences, and operating modes. The state information is used to modify information gathered via a user search to make the search results more relevant to the user in the context of his computing environment. The monitors, along with logical operators and variables, assess the current state of the machine and modify the displayed search results by excluding irrelevant information, biasing up information relevant to the computing environment and biasing down other information less relevant to the computing environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716158",
	"publication_date": "2010-05-11",
	"application_number": "10754984",
	"application_date": "2004-01-09",
	"tags": null,
	"slug": "system-and-method-for-context-sensitive-searching",
	"match_type": "description"
},
{
	"name": "System and method for controlling the opacity of multiple windows while browsing",
	"summary": "",
	"abstract": "A method referred to as x-ray browsing for allowing a user to browse through windows on their desktop is provided. Aspects of the invention include responsive to a command, making a first window the window in focus on the display screen and changing the relative opacities between a content portion of the first window and a content portion of the second window. By controlling the opacities a single window can be made opaque while the remaining windows can be made transparent to allow a user to successively navigate among open windows.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07747965",
	"publication_date": "2010-06-29",
	"application_number": "11036612",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": "system-and-method-for-controlling-the-opacity-of-multiple-windows-while-browsing",
	"match_type": "description"
},
{
	"name": "System and method for customization of search results",
	"summary": "",
	"abstract": "A system and method are provided for customizing search result descriptions for results returned by a search engine. The search result descriptions may be obtained through a search over a computer network. The system includes a search result description request component for enabling selection of particular data for retrieval by the search engine. The system additionally includes a search result description generator for retrieving and returning the requested data. The system also includes a search result description renderer for displaying search result descriptions in a selected manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725449",
	"publication_date": "2010-05-25",
	"application_number": "11001134",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": "system-and-method-for-customization-of-search-results",
	"match_type": "description"
},
{
	"name": "System and method for customizing note flags",
	"summary": "",
	"abstract": "A method and system for customizing note flags allows a user to change the look or u201cfeelu201d of a note flag. A user can be provided with several options in order to create note flags that are visually distinguishable from one another. In this way, the note flags can be used to visually distinguish a first note or first set of notes from a second note or second set of notes. The method and system can also link note flags with a particular action or operation within a document editing module or with action or an operation in another application program relative to a document editing module. In other words, a note flag can initiate an operation in another application program or within the document editing module (or both) when a particular note flag is selected by a user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07793233",
	"publication_date": "2010-09-07",
	"application_number": "10387287",
	"application_date": "2003-03-12",
	"tags": null,
	"slug": "system-and-method-for-customizing-note-flags",
	"match_type": "description"
},
{
	"name": "System and method for determining whether a network destination is reachable",
	"summary": "",
	"abstract": "A method and system for providing system event notifications to clients such as applications. Clients register for notification of one or more types of events with a registration mechanism, and a System Event Notification Service, (SENS), receives system event information and fires event notifications in response thereto. A distribution mechanism selectively communicates the fired event to each client registered for notification thereof based on the type of event. Events include network events, for which the service monitors the connectivity state of the machine, including whether a connection is established or lost, the type of connection (LAN/WAN) and bandwidth information. To monitor a LAN state, the service caches outgoing and incoming network information including errors and packet counts and statistically evaluates this cached information against current information to determine whether the connection is established or lost. The service also determines if a destination (IP address or name) is reachable, by periodically polling destinations. Other system event notifications may be fired, including logon or logoff operations and power management events.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680924",
	"publication_date": "2010-03-16",
	"application_number": "11031580",
	"application_date": "2005-01-06",
	"tags": null,
	"slug": "system-and-method-for-determining-whether-a-network-destination-is-reachable",
	"match_type": "description"
},
{
	"name": "System and method for distinguishing safe and potentially unsafe data during runtime processing",
	"summary": "",
	"abstract": "The techniques and mechanisms described herein are directed to a taint mechanism. An object-based command declares a taint directive for a parameter within a command declaration. The taint directive is then associated with that parameter in a manner such that when an engine processes the command, the engine determines whether to process the command based on the taint directive and input for the parameter. The taint directive may specify that the input may be tainted or untainted. The command declaration may also include a taint parameter that specifies a taint characteristic for output from the command. The taint characteristic may be tainted, untainted, or propagated. Any type of object may become tainted. An untaint process may be applied to tainted data to obtain untainted data if an authorization check performed by the engine is successful.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07757282",
	"publication_date": "2010-07-13",
	"application_number": "11133676",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "system-and-method-for-distinguishing-safe-and-potentially-unsafe-data-during-runtime-processing",
	"match_type": "description"
},
{
	"name": "System and method for generating resolution-independent output via visual tree object",
	"summary": "",
	"abstract": "A system and related techniques generate printing and other output operations via a resolution-independent visual tree object. According to embodiments the operating system or other resource may receive the visual tree object and related data from applications or other sources, and perform logic to scale or process the visual output for resolution, effects or other purposes directly from that object. The operating system or other resource itself may be configured to receive the componentized visual tree object and condition or render that object for output to a printer, facsimile machine, copy machine or other output device. The operating system may serialize or spool that object from the source object in native form, relieving applications of the need to prepare documents or other output objects to generate specified resolutions, effects or to adapt the output to specific output drivers.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07777902",
	"publication_date": "2010-08-17",
	"application_number": "10848002",
	"application_date": "2004-05-19",
	"tags": null,
	"slug": "system-and-method-for-generating-resolutionindependent-output-via-visual-tree-object",
	"match_type": "description"
},
{
	"name": "System and method for managing resource loading in a multilingual user interface operating system",
	"summary": "",
	"abstract": "A system and method is provided to manage different UI language settings in a central place by merging different UI language settings and related dependency data to an integrated UI language preference list. A set of API functions is provided that enables each resource loader to gain consistent UI language support by interacting with the integrated UI language preference list.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669124",
	"publication_date": "2010-02-23",
	"application_number": "11112991",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "system-and-method-for-managing-resource-loading-in-a-multilingual-user-interface-operating-system",
	"match_type": "description"
},
{
	"name": "System and method for message-based scalable data transport",
	"summary": "",
	"abstract": "The invention deploys a message-based data transport platform, in which a communication engine controls the delivery of server or other backup data or other large quantity data to a remote site based on message objects as fundamental units. Data sessions from one or more servers or other data sources may be buffered over established pipes for delivery to a remote data host which likewise contains messaging control. Relatively large message units may wait for communication over the channel in a queue, and be released when prior messaging is complete. Completion port or other polling or other mechanisms may indicate that connections have become open for use. In embodiments the message objects may be signed, or encrypted to safeguard against alteration or unauthorized viewing. The communication engine may rely upon TCP or other underlying transport mechanisms to effect lower level transmission.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693998",
	"publication_date": "2010-04-06",
	"application_number": "10608192",
	"application_date": "2003-06-30",
	"tags": null,
	"slug": "system-and-method-for-messagebased-scalable-data-transport",
	"match_type": "description"
},
{
	"name": "System and method for multi-layered network communications",
	"summary": "",
	"abstract": "A multi-layered network for transporting data comprises a first network layer that provides a first session topology, and a second network layer that provides a second session topology. The second network layer uses the first network layer to transport data. In one embodiment of the invention, the data sent by the second layer is real-time audio data, such as voice. Each session topology may be either peer-to-peer or client/server. The first and second layers may have different topologies and/or different session hosts. A deterministic algorithm is provided whereby a new session host is selected when the current host leaves the session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730206",
	"publication_date": "2010-06-01",
	"application_number": "11614597",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "system-and-method-for-multilayered-network-communications",
	"match_type": "description"
},
{
	"name": "System and method for multi-layered network communications",
	"summary": "",
	"abstract": "A multi-layered network for transporting data comprises a first network layer that provides a first session topology, and a second network layer that provides a second session topology. The second network layer uses the first network layer to transport data. In one embodiment of the invention, the data sent by the second layer is real-time audio data, such as voice. Each session topology may be either peer-to-peer or client/server. The first and second layers may have different topologies and/or different session hosts. A deterministic algorithm is provided whereby a new session host is selected when the current host leaves the session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07668972",
	"publication_date": "2010-02-23",
	"application_number": "11299114",
	"application_date": "2005-12-09",
	"tags": null,
	"slug": "system-and-method-for-multilayered-network-communications",
	"match_type": "description"
},
{
	"name": "System and method for multi-layered network communications",
	"summary": "",
	"abstract": "A multi-layered network for transporting data comprises a first network layer that provides a first session topology, and a second network layer that provides a second session topology. The second network layer uses the first network layer to transport data. In one embodiment of the invention, the data sent by the second layer is real-time audio data, such as voice. Each session topology may be either peer-to-peer or client/server. The first and second layers may have different topologies and/or different session hosts. A deterministic algorithm is provided whereby a new session host is selected when the current host leaves the session.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720908",
	"publication_date": "2010-05-18",
	"application_number": "09800394",
	"application_date": "2001-03-06",
	"tags": null,
	"slug": "system-and-method-for-multilayered-network-communications",
	"match_type": "description"
},
{
	"name": "System and method for performing garbage collection based on unmanaged memory allocations",
	"summary": "",
	"abstract": "The techniques and mechanisms described herein are directed to a method for performing garbage collection based on the total memory consumed by managed objects on a heap. The total memory includes heap memory and unmanaged memory. The garbage collector accepts input that indicates the amount of unmanaged memory and associates this amount with the managed object. The garbage collector then adjusts a collection strategy for the managed object based on the input. The input is sent to the garbage collector if the allocated amount meets a certain criteria in comparison with the size of the managed object on the heap. The amount may be automatically disassociated with the managed object when the managed is destroyed or the garbage collector may receive another input that removes the amount from being associated with the managed object.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07822938",
	"publication_date": "2010-10-26",
	"application_number": "10969301",
	"application_date": "2004-10-20",
	"tags": null,
	"slug": "system-and-method-for-performing-garbage-collection-based-on-unmanaged-memory-allocations",
	"match_type": "description"
},
{
	"name": "System and method for preference application installation and execution",
	"summary": "",
	"abstract": "The present systems and methods disclose a system for personalizing computer functionality. End-users are provided with tools to easily write rich and complex preferences, for example, by using a plurality simple IF-THEN propositional logic. The preferences are then transformed into queries and executed efficiently on structured data. Preferences that are satisfied then execute actions such as providing notification or storing data in a particular folder. Furthermore, according to an aspect of the invention, data, logic, events, inter alia, are all schematized, thereby enabling sharing of data between application components and across applications.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669177",
	"publication_date": "2010-02-23",
	"application_number": "10693735",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": "system-and-method-for-preference-application-installation-and-execution",
	"match_type": "description"
},
{
	"name": "System and method for providing a window management mode",
	"summary": "",
	"abstract": "A mode of managing windows in a graphical user interface in which the application windows may be presented in a tiled manner is provided. Upon invocation of the mode inactive application windows may be scaled down and organized in a manner so as to set them aside from the currently active application window while the active application window may remain at or near full size and be positioned in a centralized location in the desktop space.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07681143",
	"publication_date": "2010-03-16",
	"application_number": "11279425",
	"application_date": "2006-04-12",
	"tags": null,
	"slug": "system-and-method-for-providing-a-window-management-mode",
	"match_type": "description"
},
{
	"name": "System and method for reliably replicating data",
	"summary": "",
	"abstract": "Described is a system and method for replicating each of a set of resources to a subject computer in a replica set prior to making use of a resource in the set of resources. The set of resources includes resources that are dependent upon each other for a proper functioning of the group. A manifest file that identifies each resource in a group of interrelated resources is used. The manifest file is generated at one computer in the replica set (typically the computer at which a modification to one of the interrelated resources occurred). When the modification occurs to one of the set of resources, the manifest file is transmitted (e.g., itself replicated) to each computer in the replica set. The manifest file includes an indicator that identifies the manifest file as a special file. When received at another computer in the replica set, a service evaluates the manifest file to identify whether the appropriate versions of the identified resources exist at the receiving computer. If not, the service at that computer awaits the receipt of each resource. The wait period may include delaying the execution of an application associated with (or even included within) the manifest file from launching. Alternatively, the FRS could simply disallow access to one or more resources identified in the manifest file until all have arrived. When all have arrived, the FRS releases control of the identified resources, which may then operate or be accessed in the ordinary manner.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707180",
	"publication_date": "2010-04-27",
	"application_number": "10808987",
	"application_date": "2004-03-24",
	"tags": null,
	"slug": "system-and-method-for-reliably-replicating-data",
	"match_type": "description"
},
{
	"name": "System and method for routing messages within a messaging system",
	"summary": "",
	"abstract": "Systems and methods are described which provide enhanced stability, increased predictability, reduced transmission costs, and which conserve bandwidth in routing messages over computer networks. The systems and methods further include providing improved transmission of messages wherein the messages are transmitted to nodes closest to a target delivery node. If delivery is possible to a target node, the message transmission stops at the point of failure in the network, wherein delivery to the target node is accomplished at a later time or the message is returned to the sender.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693071",
	"publication_date": "2010-04-06",
	"application_number": "11139704",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "system-and-method-for-routing-messages-within-a-messaging-system",
	"match_type": "description"
},
{
	"name": "System and method for secure execution of program code",
	"summary": "",
	"abstract": "A system comprises a memory and a processor that supports different privilege levels. Only program code executing at a certain privilege level is permitted to map memory and to assign access permission to the mapped memory, such as read-only, writable, and executable. Control code executing on the processor at that privilege level, in response to a request from other code executing at a different privilege level, maps a portion of memory for loading an executable file. After the executable file has been loaded into the mapped memory, the control code then verifies a signature associated with the executable file. If the signature is verified, the control code permits the executable file to be executed by the processor at a privilege level other than the one at which the control code executes. Otherwise, the control code prevents the executable file from being executed on the processor.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802110",
	"publication_date": "2010-09-21",
	"application_number": "10925657",
	"application_date": "2004-08-25",
	"tags": null,
	"slug": "system-and-method-for-secure-execution-of-program-code",
	"match_type": "description"
},
{
	"name": "System and method for storing and presenting images and related items to a user",
	"summary": "",
	"abstract": "A system and method for presenting images and related items to a user. A digital image from a data store is assessed, and a portion of the image is defined as a region of interest. Properties are associated with this defined region, and these properties are utilized to infer relationships between the region of interest and related items in the data store. Optionally, a user input indicating a desire to view related content may be received and such content may be presented to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788144",
	"publication_date": "2010-08-31",
	"application_number": "10931889",
	"application_date": "2004-09-01",
	"tags": null,
	"slug": "system-and-method-for-storing-and-presenting-images-and-related-items-to-a-user",
	"match_type": "description"
},
{
	"name": "System and method for storing and retrieving a field of a user defined type outside of a database store in which the type is defined",
	"summary": "",
	"abstract": "In a database system that supports user-defined types, one or more fields of a user-defined type may be designated as containing data that is to be stored as a file outside of a database store, separate from the other fields of the type which are stored within the database. Instead of being stored within the database, the data in such a designated field of an instance of the user-defined type is stored as a file within the file system of a computer. Applications are provided u201cout of bandu201d access, via the file system of the computer, to the file in which the data of such a field is stored outside the database store. A component of the system intercepts file system open requests and checks security against the database store before allowing the open request to proceed. The component also notifies the database when file system close requests are received.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765239",
	"publication_date": "2010-07-27",
	"application_number": "11861391",
	"application_date": "2007-09-26",
	"tags": null,
	"slug": "system-and-method-for-storing-and-retrieving-a-field-of-a-user-defined-type-outside-of-a-database-store-in-which-the-type-is-defined",
	"match_type": "description"
},
{
	"name": "System and method for transferring computer-readable objects across a remote boundary",
	"summary": "",
	"abstract": "A system and method for securely transferring computer-readable objects across a remote boundary is provided. The method decomposes any type of object into a hierarchy of sub-components based on a list of known object types. Each sub-component either corresponds to a known object type or an unknown object type. The unknown object types may be decomposed further into known object types at another level in the hierarchy. The known objects in the hierarchy are serialized into a package that is transmitted to a remote entity. The remote entity reconstructs the hierarchy. For any of the known object types, the remote entity instantiates an object of the known object type and populates the object with information transmitted in the package. The decomposition may be limited by specifying a level for the hierarchy, specifying a number that limits the known objects that are serialized, or specifying the properties within the object to serialize.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770181",
	"publication_date": "2010-08-03",
	"application_number": "10759737",
	"application_date": "2004-01-16",
	"tags": null,
	"slug": "system-and-method-for-transferring-computerreadable-objects-across-a-remote-boundary",
	"match_type": "description"
},
{
	"name": "System and method for validating communication specification conformance between a device driver and a hardware device",
	"summary": "",
	"abstract": "A system and method for validating whether communications between a device driver and a hardware device conform to a communication specification is presented. A validation module obtains a communication specification identifying rules for validating whether communications between a device driver and a hardware device conform to the specification. A redirection module redirects communications between the device driver and the hardware device to the validation module. Based on an individual communication, as well as the context in which an individual communication is made, the validation module validates whether the communication conforms to the communication specification.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07810103",
	"publication_date": "2010-10-05",
	"application_number": "10836735",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": "system-and-method-for-validating-communication-specification-conformance-between-a-device-driver-and-a-hardware-device",
	"match_type": "description"
},
{
	"name": "System and method of aggregating the knowledge base of antivirus software applications",
	"summary": "",
	"abstract": "In accordance with this invention, a system, method, and computer-readable medium that aggregates the knowledge base of a plurality of antivirus software applications are provided. User mode applications, such as antivirus software applications, gain access to file system operations through a common information model, which obviates the need for antivirus software vendors to create kernel mode filters. When file system operations are available to antivirus software applications, the present invention may cause each antivirus software application installed on a computing device to perform a scan to determine if the data is malware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07765410",
	"publication_date": "2010-07-27",
	"application_number": "10984611",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "system-and-method-of-aggregating-the-knowledge-base-of-antivirus-software-applications",
	"match_type": "description"
},
{
	"name": "System and method of distributing replication commands",
	"summary": "",
	"abstract": "A transactional replication system wherein each replicated command applies to a single row as identified by the primary key, replicated commands are dispatched among multiple connections by hashing of primary key from a single command queue to ensure that changes to the same data row are always dispatched to the same connection to maintain the order of commands as originally occurred on publisher. All connections commit their transactions at the same time in a coordinated fashion without a two phase commit. Retry logic based on a logical sequence number is used to reapply commands from any connection that fails to commit.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707181",
	"publication_date": "2010-04-27",
	"application_number": "10370389",
	"application_date": "2003-02-19",
	"tags": null,
	"slug": "system-and-method-of-distributing-replication-commands",
	"match_type": "description"
},
{
	"name": "System and method of selectively scanning a file on a computing device for malware",
	"summary": "",
	"abstract": "In accordance with this invention, a system, method, and computer-readable medium that selectively scans files stored on a computing device for malware is provided. One or more files may be sent from a trusted source to a computing device that implements the present invention. The integrity of the files that originate from a trusted source is validated using a signature-based hashing function. Any modifications made to files stored on the computing device are tracked by a component of the operating system. In instances when the file is not modified after being validated, an aspect of the present invention prevents the file from being scanned for malware when a scanning event is directed to the file. As a result, the performance of the computing device is improved as static files from trusted sources are not repeatedly scanned for malware.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676845",
	"publication_date": "2010-03-09",
	"application_number": "11090086",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": "system-and-method-of-selectively-scanning-a-file-on-a-computing-device-for-malware",
	"match_type": "description"
},
{
	"name": "System and related methods for accessing management functionality through a command line utility",
	"summary": "",
	"abstract": "A command line utility is described that overlays the management infrastructure of an enterprise to provide easier command options for administrators to effectively manage the enterprise. The primary intent of the command line utility is to facilitate management of the environment without requiring administrators to write scripts or navigate a vast schematized enterprise exposed through the management infrastructure. The command line utility provides command options through class aliases that enable the mapping of management queries and operations to a common term or friendly name that can be extended both in an alias file or at run time in the command line.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676815",
	"publication_date": "2010-03-09",
	"application_number": "11777011",
	"application_date": "2007-07-12",
	"tags": null,
	"slug": "system-and-related-methods-for-accessing-management-functionality-through-a-command-line-utility",
	"match_type": "description"
},
{
	"name": "System and theme file format for creating visual styles",
	"summary": "",
	"abstract": "A method of specifying a visual style for a set of graphical components is provided for use on a computer system having a graphical operating environment. The method includes providing a schema file of available graphical components for which a visual style can be created. In the schema file, each component is defined by a unique class name. The method further includes selecting graphical components from the schema file that are desired to have a defined visual style. Properties are then assigned to these selected components according to the desired visual style, and pairs of selected graphical components and corresponding assigned properties for the defined visual style together are grouped together in a class data file that defines the overall appearance for the defined visual style.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694229",
	"publication_date": "2010-04-06",
	"application_number": "10839908",
	"application_date": "2004-05-06",
	"tags": null,
	"slug": "system-and-theme-file-format-for-creating-visual-styles",
	"match_type": "description"
},
{
	"name": "System for customer and automatic color management using policy controls",
	"summary": "",
	"abstract": "Methods and apparatuses for supporting a color management system that processes an image in accordance to a hierarchically-structured policy are provided. The policy may be modeled with a schema in which the policy is organized with a plurality of policy levels. Policy settings at a lower policy level may override policy settings at a higher policy level, which may be inhibited with a lockout mechanism. A user interface supports the capability of a user configuring policy settings through a series of dialog boxes. The dialog boxes are hierarchically organized in accordance with configuration levels, where the configuration levels are associated with the policy levels. The dialog boxes provide a consolidated approach for configuring a color management system by a user. An interface is supported, enabling a component to send inputs to a color management system in order to configure the policy.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07711185",
	"publication_date": "2010-05-04",
	"application_number": "12467156",
	"application_date": "2009-05-15",
	"tags": null,
	"slug": "system-for-customer-and-automatic-color-management-using-policy-controls",
	"match_type": "description"
},
{
	"name": "System for defining and activating pluggable user interface components for a deployed application",
	"summary": "",
	"abstract": "Maintaining a plurality of application component catalogs describing user experiences associated with particular application programs. The invention includes an extensible schema for the application component catalogs and a method for matching user experiences within the application component catalogs to particular user requests. The invention provides an extensible and scalable infrastructure for customizing a user interface experience.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07793260",
	"publication_date": "2010-09-07",
	"application_number": "11113653",
	"application_date": "2005-04-25",
	"tags": null,
	"slug": "system-for-defining-and-activating-pluggable-user-interface-components-for-a-deployed-application",
	"match_type": "description"
},
{
	"name": "System for determining candidate applications for termination based on comparing priority values calculated from the application parameter values",
	"summary": "",
	"abstract": "A computer application program executing on a computer, such as a portable computer, is selected for termination by first identifying computer application programs executing on the computer. A priority value is assigned to each of the identified computer applications. The priority value is based on multiple characteristics of the identified computer application programs. The computer application program with the smallest priority value is automatically terminated. If the computer application program with the smallest priority value is in a modal state in which it waits for a response from a user, then a default response is provided to the application prior to terminating the computer application program. The characteristics associated with the computer application programs may include average launch times, average memory usages, a class or type of application, frequencies of usage, and an amount of data stored on the computer by the computer application program.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07725898",
	"publication_date": "2010-05-25",
	"application_number": "11038443",
	"application_date": "2005-01-19",
	"tags": null,
	"slug": "system-for-determining-candidate-applications-for-termination-based-on-comparing-priority-values-calculated-from-the-application-parameter-values",
	"match_type": "description"
},
{
	"name": "System for performing context-sensitive decisions about ideal communication modalities considering information about channel reliability",
	"summary": "",
	"abstract": "A system and method for identifying ideal channels for communications based on an analysis of communication channel reliability, communicating party preferences, and communicating party contexts is provided. The system attempts to optimize the utility of a communication based on inferred or directly accessed channel reliability data, communicating party preferences and communicating party contexts. Such optimization can be achieved using reliabilities, preferences and policies concerning handling the attempted contact based on a deterministic specification or through inferring reliability, context, content and task under uncertainty by employing decision-theoretic inferences. The methods may consider channels currently available as well as channels available at later times. Thus, the service can include automated rescheduling of communications based on a consideration of forecasts of reliability and availability. The approach may include the use of forecasts about the time required for a communication and the likelihood that a connection will be dropped or will lose fidelity over this period of time. The methods may also include a consideration of metadata within a standard schema that is transmitted along with a communication attempt, the metadata representing information about attributes like the potential communication channels, the identity of the contactor, the task at hand, and the context of the communicating parties. The invocation of the communication service may be performed in a variety of ways, including single button invocations, and via a communication service that is more deeply integrated with other applications and functionalities.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716532",
	"publication_date": "2010-05-11",
	"application_number": "11469100",
	"application_date": "2006-08-31",
	"tags": null,
	"slug": "system-for-performing-contextsensitive-decisions-about-ideal-communication-modalities-considering-information-about-channel-reliability",
	"match_type": "description"
},
{
	"name": "Systems and methods for extensions and inheritance for units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "By modeling real-world application objects with complex structures, behaviors, and operations described by a schema which is enforced by the hardware/software interface system, various embodiments of the present invention provide rich sub-typing functionality by extending Items (and Item types) using u201cExtensionsu201d which provide additional data structures (Properties, Relationships, etc.) to already existing Items type structures. Extensions are strongly typed instances that cannot exist independently and must be attached to an Item or a Nested Element. Extensions are also intended to address u201cmulti-typingu201d issues by enabling the overlap of type instances (e.g., a Document may be a u201clegal documentu201d as well a u201csecure documentu201d).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07693858",
	"publication_date": "2010-04-06",
	"application_number": "11636871",
	"application_date": "2006-12-11",
	"tags": null,
	"slug": "systems-and-methods-for-extensions-and-inheritance-for-units-of-information-manageable-by-a-hardwaresoftware-interface-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for inferring uniform resource locator (URL) normalization rules",
	"summary": "",
	"abstract": "Different URLs that actually reference the same web page or other web resource are detected and that information is used to only download one instance of a web page or web resource from a web site. All web pages or web resources downloaded from a web server are compared to identify which are substantially identical. Once identical web pages or web resources with different URLs are found, the different URLs are then analyzed to identify what portions of the URL are essential for identifying a particular web page or web resource, and what portions are irrelevant. Once this has been done for each set of substantially identical web pages or web resources (also referred to as an u201cequivalence classu201d herein), these per-equivalence-class rules are generalized to trans-equivalence-class rules. There are two rule-learning steps: step (1), where it is learned for each equivalence class what portions of the URLs in that class are relevant for selecting the page and what portions are not; and step (2), where the per-equivalence-class rules constructed during step (1) are generalized to rules that cover many equivalence classes. Once a rule is determined, it is applied to the class of web pages or web resources to identify errors. If there are no errors, the rule is activated and is then used by the web crawler for future crawling to avoid the download of duplicative web pages or web resources.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07680785",
	"publication_date": "2010-03-16",
	"application_number": "11089988",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": "systems-and-methods-for-inferring-uniform-resource-locator-url-normalization-rules",
	"match_type": "description"
},
{
	"name": "Systems and methods for managing multiple grammars in a speech recognition system",
	"summary": "",
	"abstract": "Systems and methods are described for a speech system that manages multiple grammars from one or more speech-enabled applications. The speech system includes a speech server that supports different grammars and different types of grammars by exposing several methods to the speech-enabled applications. The speech server supports static grammars that do not change and dynamic grammars that may change after a commit. The speech server provides persistence by supporting persistent grammars that enable a user to issue a command to an application even when the application is not loaded. In such a circumstance, the application is automatically launched and the command is processed. The speech server may enable or disable a grammar in order to limit confusion between grammars. Global and yielding grammars are also supported by the speech server. Global grammars are always active (e.g., u201ccall 9-1-1u201d) while yielding grammars may be deactivated when an interaction whose grammar requires priority is active.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720678",
	"publication_date": "2010-05-18",
	"application_number": "11275193",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "systems-and-methods-for-managing-multiple-grammars-in-a-speech-recognition-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for modularizing data flows",
	"summary": "",
	"abstract": "Systems, devices, and methods for modularizing data flows and for providing stand-alone execution of incomplete data flows are provided based on an improved data warehousing framework. Data flow modularization and code reuse is improved through the use of the disclosed flowlets and allows for consistent and efficient standalone testing of incomplete data flows. The disclosed details enable various refinements and modifications according to system design considerations.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860905",
	"publication_date": "2010-12-28",
	"application_number": "11848054",
	"application_date": "2007-08-30",
	"tags": null,
	"slug": "systems-and-methods-for-modularizing-data-flows",
	"match_type": "description"
},
{
	"name": "Systems and methods for parsing flexible audio codec topologies",
	"summary": "",
	"abstract": "Systems and methods for parsing flexible audio codec topologies are described. In one aspect, codec topology information is obtained from an audio codec. The codec topology information includes a list of processing node connections and configuration default data for respective processing nodes associated with the audio codec. The codec topology information is evaluated to identify valid audio codec topologies based on set of valid connection path criteria.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756594",
	"publication_date": "2010-07-13",
	"application_number": "10867494",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "systems-and-methods-for-parsing-flexible-audio-codec-topologies",
	"match_type": "description"
},
{
	"name": "Systems and methods for projecting content from computing devices",
	"summary": "",
	"abstract": "Systems and methods are provided that enable an alternate display device to wirelessly receive content from a computing device, freeing users from the burden of physically connecting the computing device via a cable. The content sent to the display device can also be simultaneously or separately viewed on the computing devices of other nearby computing devices. Generic mechanism(s) and corresponding user interfaces are provided for computing devices to engage in discovery of devices to which content may be delivered, for accepting delivery and for initiating transmission of content.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07716273",
	"publication_date": "2010-05-11",
	"application_number": "10786313",
	"application_date": "2004-02-25",
	"tags": null,
	"slug": "systems-and-methods-for-projecting-content-from-computing-devices",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing an enhanced graphics pipeline",
	"summary": "",
	"abstract": "An enhanced graphics pipeline is provided that enables common core hardware to perform as different components of the graphics pipeline, programmability of primitives including lines and triangles by a component in the pipeline, and a stream output before or simultaneously with the rendering a graphical display with the data in the pipeline. The programmer does not have to optimize the code, as the common core will balance the load of functions necessary and dynamically allocate those instructions on the common core hardware. The programmer may program primitives using algorithms to simplify all vertex calculations by substituting with topology made with lines and triangles. The programmer takes the calculated output data and can read it before or while it is being rendered. Thus, a programmer has greater flexibility in programming. By using the enhanced graphics pipeline, the programmer can optimize the usage of the hardware in the pipeline, program vertex, line or triangle topologies altogether rather than each vertex alone, and read any calculated data from memory where the pipeline can output the calculated information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07671862",
	"publication_date": "2010-03-02",
	"application_number": "10934241",
	"application_date": "2004-09-03",
	"tags": null,
	"slug": "systems-and-methods-for-providing-an-enhanced-graphics-pipeline",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing controllable texture sampling",
	"summary": "",
	"abstract": "Systems and methods are provided for controlling texture sampling in connection with computer graphics in a computer system. In various embodiments, improved mechanisms for controlling texture sampling are provided that enable 3-D accelerator hardware to greatly increase the level of realism in rendering, including improved mechanisms for (1) motion blur; (2) generating anisotropic surface reflections (3) generating surface self-shadowing (4) ray-cast volumetric sampling (4) self-shadowed volumetric rendering and (5) self-shadowed volumetric ray-casting. In supplementing existing texture sampling techniques, parameters for texture sampling may be replaced and/or modified.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07719544",
	"publication_date": "2010-05-18",
	"application_number": "11938113",
	"application_date": "2007-11-09",
	"tags": null,
	"slug": "systems-and-methods-for-providing-controllable-texture-sampling",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing image rendering using variable rate source sampling",
	"summary": "",
	"abstract": "A variety of image processing applications are contemplated wherein variable rate source sampling, and accumulation and resolution of forward mapped point samples can be applied, ranging from 3-D graphics applications to applications wherein images recorded in a recording/storage environment are mapped to the arbitrary requirements of a display environment.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07768524",
	"publication_date": "2010-08-03",
	"application_number": "10945827",
	"application_date": "2004-09-21",
	"tags": null,
	"slug": "systems-and-methods-for-providing-image-rendering-using-variable-rate-source-sampling",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing runtime universal resource locator (URL) analysis and correction",
	"summary": "",
	"abstract": "Systems and methods are provided that perform automatic URL analysis and correction in a computing system. The systems and methods automatically detect misentered or incorrect URLs, analyzing the invalid URLs with respect intelligent rules and valid URLs, and where a high likelihood exists for alternative URLs being intended, the alternative URLs are presented to the user as suggestions. The URLs used for comparison to the URL input may be collected through multiple channels or from multiple sources, which may be dynamically updated sources, including URLs commonly or newly found on the Web, users' favorite URLs and the like, as well as URLs from a standard URL list or database, all of which may be from one or more multi-lingual domain. In various embodiments, the alternative URL(s) are automatically presented when there is a very high confidence that the alternatives are desirable. Optionally, a mini search or a full blown search on the URL input may be performed and presented to the user to supplement the alternative URL suggestions. The systems allow a user to seek help or technical information about the URL navigation or search attempt and also allow a user to easily retry the query, ignoring the suggestions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853719",
	"publication_date": "2010-12-14",
	"application_number": "10073618",
	"application_date": "2002-02-11",
	"tags": null,
	"slug": "systems-and-methods-for-providing-runtime-universal-resource-locator-url-analysis-and-correction",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing synchronization services for units of information manageable by a hardware/software interface system",
	"summary": "",
	"abstract": "Several embodiments of the present invention employ synchronization adapters for synchronizing information between u201cWinFSu201d and non-u201cWinFSu201d data sources. Examples of adapters include an adapter that synchronizes address book information between a u201cWinFSu201d contacts folder and a non-WinFS mailbox. In these instances, adapter developers might use the u201cWinFSu201d synchronization core services API described herein for accessing services provided by the u201cWinFSu201d synchronization platform in order to develop schema transformation code between the u201cWinFSu201d schema and the non-u201cWinFSu201d data source schema. Additionally, the adapter developer provides protocol support for communicating changes with the non-u201cWinFSu201d data source. A synchronization adapter is invoked and controlled by using the synchronization controller API and reports progress and errors using this API.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07743019",
	"publication_date": "2010-06-22",
	"application_number": "10692515",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": "systems-and-methods-for-providing-synchronization-services-for-units-of-information-manageable-by-a-hardwaresoftware-interface-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing time-and weight-based flexibility tolerant hardware ID",
	"summary": "",
	"abstract": "Systems and methods for implementing a hardware ID with time- and weight-based flexibility use a hardware ID (HWID) including identifying information about hardware components. When software is run, a current HWID is generated. When the current HWID is compared to a stored HWID to determine if the two HWIDs match, a time vector and a weight vector are used in the comparison. A running matching score is kept of matches. For each hardware component, the weight vector indicates the weight given to a correct match of the hashed value for the hardware component. For example, if the weight value for the hardware component is three and there is a match, then the running total is increased by three. For each hardware component, the time vector may indicate an expiration period after which a change in the component may be allowed. For example, if the expiration period for the component is one year, and one year has passed since activation, the running total may be increased even though the component's information in the verification HWID does not match the current component information.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07779274",
	"publication_date": "2010-08-17",
	"application_number": "11874075",
	"application_date": "2007-10-17",
	"tags": null,
	"slug": "systems-and-methods-for-providing-timeand-weightbased-flexibility-tolerant-hardware-id",
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing redundant checks on graphics memory",
	"summary": "",
	"abstract": "A method and system for controlling the algorithmic elements in 3D graphics systems via an improved 3D graphics API is provided. In one aspect, in a 3D graphics system having privatized formats with privatized drivers used to increase the efficiency of display, existing problems are eliminated that are associated with multiple redundant copies of the publicly formatted graphics data made in host system memory pursuant to various graphics operations e.g., lock and unlock operations. The ability to make a system copy of publicly formatted data is exposed to the developer, eliminating the creation of unnecessary, and redundant copies. Efficient switching between the privatized and public format remains hidden from the developers so that applications execute efficiently while removing consideration thereof from the developers. Thus, developers are free to consider other tasks. In the event that a developer wishes to make a copy of the data, the data is copied pursuant to an operation that the developer calls and over which the developer has control, ensuring that multiple redundant copies of the graphics data are not made in host system memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07646388",
	"publication_date": "2010-01-12",
	"application_number": "10973363",
	"application_date": "2004-10-25",
	"tags": null,
	"slug": "systems-and-methods-for-reducing-redundant-checks-on-graphics-memory",
	"match_type": "description"
},
{
	"name": "Systems and methods for stack-jumping between a virtual machine and a host environment",
	"summary": "",
	"abstract": "Several embodiments of the present invention provide a means for reducing overhead and, thus, improving operating efficiency in virtualized computing systems. Certain of these embodiments are specifically directed to providing a bypass mechanism for jumping directly from a first stack in the guest operating system to a second stack in the host operating system for a virtual machine environment. More specifically, certain embodiments of the present invention are directed to a system for and method of eliminating redundancy in execution of certain virtual machine commands and executing host environment equivalents by using bypass mechanisms, thereby bypassing redundant software layers within the guest and host stacks. For some of these embodiments, the bypass mechanism operates at a high-level component of the stack or, alternatively, the bypass mechanism operates at a low-level component of the stack.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689987",
	"publication_date": "2010-03-30",
	"application_number": "10882504",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": "systems-and-methods-for-stackjumping-between-a-virtual-machine-and-a-host-environment",
	"match_type": "description"
},
{
	"name": "Systems and methods for support of various processing capabilities",
	"summary": "",
	"abstract": "Systems and methods are described for support of various computing device and target entity capabilities. In an implementation, a method includes determining one or more processing capabilities of a computing device to process data for rendering by a rendering device. A selection is made, based on the determining, of one or more filters to provide data configured for rendering by the rendering device and that provides at least one processing capability that is not included in the one or more processing capabilities of the computing device.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07755786",
	"publication_date": "2010-07-13",
	"application_number": "10935249",
	"application_date": "2004-09-07",
	"tags": null,
	"slug": "systems-and-methods-for-support-of-various-processing-capabilities",
	"match_type": "description"
},
{
	"name": "Systems and methods for supporting flexible information appearance and behavior with extensible multi-phase transform engine",
	"summary": "",
	"abstract": "Flexible information appearance and behavior can be achieved with an extensible multi-phase transform engine. The transform engine can apply a series of transforms to markup language content. In a help service embodiment, application creators can specify a Uniform Resource Indicator (URI) for help content, and a collection of transforms and/or executable code for formatting and presenting the help content. The transforms may be custom transforms registered with the help service, or may be selected from a set of stock pre-registered transforms. The transforms can be applied by the engine to the help content. Custom transforms and transform selection may be used to control content appearance and engine output format. Transform operation may also trigger custom executable code to accomplish desired help behaviors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07644354",
	"publication_date": "2010-01-05",
	"application_number": "11118025",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "systems-and-methods-for-supporting-flexible-information-appearance-and-behavior-with-extensible-multiphase-transform-engine",
	"match_type": "description"
},
{
	"name": "Systems and methods for transforming data in buffer memory without unnecessarily copying data to additional memory locations",
	"summary": "",
	"abstract": "Various embodiments of the present invention are directed to a unique memory management scheme utilized by the DTP whereby data extracted from an external source is placed in a memory buffer and is then manipulated by the components without the need for copying the data to any other location in memory. While logically the data moves from component to component in the DFE for the various embodiments described herein, the data does not in fact change locations but, instead, the data resides in the buffer and is operated upon by a series of components that, in turn, access the data in the buffer via pointers and manipulate same.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07860916",
	"publication_date": "2010-12-28",
	"application_number": "10681610",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": "systems-and-methods-for-transforming-data-in-buffer-memory-without-unnecessarily-copying-data-to-additional-memory-locations",
	"match_type": "description"
},
{
	"name": "Systems and methods for transforming query results into hierarchical information",
	"summary": "",
	"abstract": "A computerized system and method for transforming (formatting or aggregating) the results of a query into a hierarchical information stream, such as an eXtensible Markup Language (XML) data stream is disclosed. A database server receives a query and generates a rowset. A rowset processor, using the mode specified in the query, processes the rowset and query to generate the XML data stream. For the u201cauto1u201d mode, the rowset processor transforms a rowset into an XML data stream using primary-foreign key information specified in the query to determine nesting. For the u201cauto2u201d mode, the rowset processor transforms a rowset into an XML data stream using table ordering information included in the query to determine nesting. For the u201cexplicitu201d mode, the rowset processor transforms a rowset into an XML data stream using the explicit organizational information specified in the query. In one embodiment, it is easier for a developer to compose expressions to generate nested hierarchical structures than previous formulations and simpler semantics are provided without implicit hierarchy inference. The syntax of an embodiment of the hierarchical formatting function includes optional arguments including a name option, a root option, map option, namespace options and a null option.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730048",
	"publication_date": "2010-06-01",
	"application_number": "11536003",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "systems-and-methods-for-transforming-query-results-into-hierarchical-information",
	"match_type": "description"
},
{
	"name": "Systems and methods that facilitate software installation customization",
	"summary": "",
	"abstract": "The present invention facilitates customizing software installation such as software updates for a user interface (UI) of a mobile communication device. The systems and methods of the present invention utilize a component that receives software updates (e.g., releases, releases, patches, upgrades, etc.) and presents various installation options to an installer through an interface. The installer can interact with the interface to select one or more components (e.g., controls, menus, menu items, etc) to install and define how such components are installed. For example, the installer can determine a control's location with respect to other controls within a user interface. This can be achieved by moving graphical components within the user interface and/or by providing parameters, setting flags, and/or including suitable arguments. In addition, the installer can add components to an installation. For example, the installer can add proprietary and/or third party applications, features, brands, logos and aesthetics to the installation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802246",
	"publication_date": "2010-09-21",
	"application_number": "10872894",
	"application_date": "2004-06-21",
	"tags": null,
	"slug": "systems-and-methods-that-facilitate-software-installation-customization",
	"match_type": "description"
},
{
	"name": "Systems and methods that manage processing resources",
	"summary": "",
	"abstract": "The present invention provides a port-based technique to manage processing resources that can be utilized by an Operating System. The systems and methods consider time parallelism and pre-emption through sends, receives, and execution context, wherein scheduling of execution units occurs via (aperiodic and/or periodic) communication rather than time slicing. The systems and methods employ a resource manager that listens behind a port associated with a processor, which enables the processor to transition to a reduced power consumption state. When a request for processing resources arrives at the port, the resource manager can allocate the processing resources, wake the processor, and/or return a communication, which can include a location of allocated memory and an execution context of the processor, to a reply channel. Alternatively, the resource manager can preempt the request to mitigate processing resources consumption.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689998",
	"publication_date": "2010-03-30",
	"application_number": "10889947",
	"application_date": "2004-07-13",
	"tags": null,
	"slug": "systems-and-methods-that-manage-processing-resources",
	"match_type": "description"
},
{
	"name": "Targeted merchandising on a user console",
	"summary": "",
	"abstract": "Advertising is targeted to a specific user of a user console. A product data request is received from a user console and includes a user identifier, user data, and at least a first product identifier. A user account record associated with the user identifier is identified. The user account record includes a subscription service level identifier and a user account history. The user data are then associated with the user account record. A product catalog is searched for any product related entries associated with the request, and when any product related entries associated with the product data request are found, each such product related entry is provided to the user console.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07775886",
	"publication_date": "2010-08-17",
	"application_number": "11172192",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "targeted-merchandising-on-a-user-console",
	"match_type": "description"
},
{
	"name": "Techniques for limiting network access",
	"summary": "",
	"abstract": "A network architecture in a Universal Plug and Play (UPnP) network includes a resource sharing service to govern the distribution of resource information from a server to a recipient entity (such as rendering device or a control point). The network architecture includes one or more of the following provisions: (a) setting the server to operate in a predetermined private address range or an Auto IP range; (b) operating one or more parts of the network architecture on the same subnet; (c) setting a time to live (TTL) parameter associated with messages transmitted by the server to a predetermined number; (d) setting a number of permitted recipient entities to a predetermined number; (e) setting a number of permitted concurrent content distribution sessions to a predetermined session number; (f) granting access to a recipient entity on condition that the recipient entity has generated a message that conforms to the UPnP protocol; and (g) retiring a URL used to identify a location of a resource provided by the server after a predetermined amount of time.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647385",
	"publication_date": "2010-01-12",
	"application_number": "10741706",
	"application_date": "2003-12-19",
	"tags": null,
	"slug": "techniques-for-limiting-network-access",
	"match_type": "description"
},
{
	"name": "Techniques for performing memory diagnostics",
	"summary": "",
	"abstract": "Techniques are provided for performing memory diagnostics. A portion of physical memory is locked using functionality included in an operating system. At least one memory diagnostic test is executed on the portion producing a result. It is determined, in accordance with the result, whether a memory problem exists for the portion of physical memory.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07818625",
	"publication_date": "2010-10-19",
	"application_number": "11206386",
	"application_date": "2005-08-17",
	"tags": null,
	"slug": "techniques-for-performing-memory-diagnostics",
	"match_type": "description"
},
{
	"name": "Testing network applications without communicating over a network layer communication link",
	"summary": "",
	"abstract": "Techniques and technologies are provided for testing network applications without communicating over a network layer communication link. For example, in one implementation, a system for testing network applications within a process is provided which includes at least one client user instance (CUI) module configured to execute in the process, a performance testing engine module (PTEM) configured to execute in the process, and a network application module configured to execute in the process. The CUI module has state information associated therewith. The PTEM includes a Request Driver Module (RDM) which generates information requests based on the state information received from the CUI. The network application module generates responses to the information requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07730352",
	"publication_date": "2010-06-01",
	"application_number": "11478178",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": "testing-network-applications-without-communicating-over-a-network-layer-communication-link",
	"match_type": "description"
},
{
	"name": "Throwing one selected representative exception among aggregated multiple exceptions of same root cause received from concurrent tasks and discarding the rest",
	"summary": "",
	"abstract": "Various technologies and techniques are disclosed for providing concurrent exception handling. When one or more exceptions are received from concurrent workers, one or more exception handler functions are supplied. For each respective exception in the exception results, determine if the respective exception is one of a kind of exceptions handled by the one or more exception handler functions. If the respective exception is one of a kind handled by the exception handler functions, then run a particular handler of the exception handler functions and mark the respective exception as handled. Any unhandled exceptions are then processed appropriately. In one implementation, a collection of input data is processed to produce a collection of output results, with the exceptions being interleaved with other output results. In another implementation, a particular exception is selected that represents the multiple exceptions. The selected one particular exception is then thrown.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07861072",
	"publication_date": "2010-12-28",
	"application_number": "11821649",
	"application_date": "2007-06-25",
	"tags": null,
	"slug": "throwing-one-selected-representative-exception-among-aggregated-multiple-exceptions-of-same-root-cause-received-from-concurrent-tasks-and-discarding-the-rest",
	"match_type": "description"
},
{
	"name": "Time-anchored posterior indexing of speech",
	"summary": "",
	"abstract": "A computer-implemented method of indexing a speech lattice for search of audio corresponding to the speech lattice is provided. The method includes identifying at least two speech recognition hypotheses for a word which have time ranges satisfying a criteria. The method further includes merging the at least two speech recognition hypotheses to generate a merged speech recognition hypothesis for the word.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07831425",
	"publication_date": "2010-11-09",
	"application_number": "11300735",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "timeanchored-posterior-indexing-of-speech",
	"match_type": "description"
},
{
	"name": "Timing aspects of media content rendering",
	"summary": "",
	"abstract": "Timing for execution of certain user inputs and application instructions occurring during play of an interactive multimedia presentation is discussed. A current state is defined by a state of the presentation system at the time a current media sample is being played to a user. A predicted state is defined by a state of the presentation system one or more future play times. Examples of current and predicted states include media retrieval states and media presentation states. An instruction or user input that is based on the current state is identified, and the predicted state is used to determine an effect of the instruction or input. The effect may then be executed at a predetermined time, such as after the next playable media sample is played to the user.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07861150",
	"publication_date": "2010-12-28",
	"application_number": "11594352",
	"application_date": "2006-11-07",
	"tags": null,
	"slug": "timing-aspects-of-media-content-rendering",
	"match_type": "description"
},
{
	"name": "Tools for health and wellness",
	"summary": "",
	"abstract": "A tool for providing health and/or wellness services is described herein. Not necessarily clean or unclean data about a plurality of self-selected or non-selected or unselected subjects is received. The data can be aggregated and mined at least in part by employing a statistical algorithm, a data-mining algorithm and/or a machine-learning algorithm. The data can be further employed to provide health and/or wellness services to participants.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07647285",
	"publication_date": "2010-01-12",
	"application_number": "11556085",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "tools-for-health-and-wellness",
	"match_type": "description"
},
{
	"name": "Tracing errors in software",
	"summary": "",
	"abstract": "An error tracing analysis tool applies static code analysis to software source code to identify error paths in the code and determine how many of these error paths have trace statements.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774760",
	"publication_date": "2010-08-10",
	"application_number": "11318215",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": "tracing-errors-in-software",
	"match_type": "description"
},
{
	"name": "Tracking file access patterns during a software build",
	"summary": "",
	"abstract": "Those files accessed by tools during a build process are invisibly tracked in such a way that the information can then be used to drive an incremental build of just enough files to bring the build fully up to date. The tracking information includes the association between distinct tool processes. Each build tool has its own file activity tracked, each thread of operation within tools are tracked separately and a tracking log is associated with a chain of tool processes so that when the tracking logs are interpreted the context in which they were created is preserved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07721272",
	"publication_date": "2010-05-18",
	"application_number": "11299408",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "tracking-file-access-patterns-during-a-software-build",
	"match_type": "description"
},
{
	"name": "Tracking of electronic mail messages",
	"summary": "",
	"abstract": "Electronic mail messages are tracked for the sender by allowing the sender to flag the electronic mail messages. Flagging the electronic mail messages allows for various notifications to be provided to the sender. For example, notification may be provided to the sender by placing an item in a to-do bar for the sender that corresponds to the electronic mail message. As another example, notification may be provided to the sender by firing a reminder at some future time that corresponds to the electronic mail message. As another example, notification may be provided to the sender by including an indication in a related incoming electronic mail message that the incoming electronic mail message is related to the electronic message sent by the sender.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07660859",
	"publication_date": "2010-02-09",
	"application_number": "11204865",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": "tracking-of-electronic-mail-messages",
	"match_type": "description"
},
{
	"name": "Traffic information adaptive to a user's travel",
	"summary": "",
	"abstract": "A system, method, and computer-readable medium for providing a traffic information service user with traffic information adaptive to the user's travel are described. The user's origin information, such as departure location and departure time, are identified. Upon identifying the user's origin information, the user's expected arrival times at a plurality of distance segment ends are determined. Traffic information adaptive to the user's travel are output. The traffic information may pertain to travel time, traffic flow, traffic events. The user may receive traffic information via a plurality of communication devices, such as a personal computer, a portable navigation system, a phone, or the like.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07848880",
	"publication_date": "2010-12-07",
	"application_number": "11680368",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "traffic-information-adaptive-to-a-users-travel",
	"match_type": "description"
},
{
	"name": "Training wideband acoustic models in the cepstral domain using mixed-bandwidth training data for speech recognition",
	"summary": "",
	"abstract": "A method and apparatus are provided that use narrowband data and wideband data to train a wideband acoustic model.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07707029",
	"publication_date": "2010-04-27",
	"application_number": "11287584",
	"application_date": "2005-11-23",
	"tags": null,
	"slug": "training-wideband-acoustic-models-in-the-cepstral-domain-using-mixedbandwidth-training-data-for-speech-recognition",
	"match_type": "description"
},
{
	"name": "Translation of object queries involving inheritence",
	"summary": "",
	"abstract": "Join expressions, expressed in terms of objects, are translated into a relational database join statement by generating a parse tree based on the join expression. The parse tree is traversed to build the relational database join statement.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07650357",
	"publication_date": "2010-01-19",
	"application_number": "11035547",
	"application_date": "2005-01-13",
	"tags": null,
	"slug": "translation-of-object-queries-involving-inheritence",
	"match_type": "description"
},
{
	"name": "Transport high availability",
	"summary": "",
	"abstract": "Failover systems and methods for providing redundant backup of data transmitted over a network to provide transport high availability of electronic data. The present invention relates to creating redundant backup copies of electronic data as well as transmission of the backup copies over a network in the event of a failure of a network component.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07681074",
	"publication_date": "2010-03-16",
	"application_number": "11118870",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "transport-high-availability",
	"match_type": "description"
},
{
	"name": "Trusted network transfer of content using off network input code",
	"summary": "",
	"abstract": "Systems and methods for use in connection with the trusted transmission and reception of content, such as encryption key information, from one computing device in a network to a second computing device are provided. In one embodiment, the invention provides a way to trust or validate the transfer of a public key using a very short code entered out of band of the network that is easy for end-users to remember, or write down.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07673046",
	"publication_date": "2010-03-02",
	"application_number": "10888132",
	"application_date": "2004-07-09",
	"tags": null,
	"slug": "trusted-network-transfer-of-content-using-off-network-input-code",
	"match_type": "description"
},
{
	"name": "Type-system extensions for object-oriented language based on coercive subtyping with restrictions",
	"summary": "",
	"abstract": "A type system that facilitates seamless integration of data access to relational and semi-structured data in an object oriented host language. A data access component includes the type system and corresponding set of syntax constructions that facilitates coercive subtyping and restricts covariance to identity conversions.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07774376",
	"publication_date": "2010-08-10",
	"application_number": "10909060",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": "typesystem-extensions-for-objectoriented-language-based-on-coercive-subtyping-with-restrictions",
	"match_type": "description"
},
{
	"name": "UMTS RIL extension",
	"summary": "",
	"abstract": "A UMTS extension to the GSM/GPRS RIL is disclosed. The UTMS RIL provides an API set interface for the support of UMTS features such as 3G QoS, secondary PDP contexts call, priority service, voice group call and voice broadcast services, etc. The API set is based on the UMTS AT command interface as defined in 3GPP specification TS 27.007. The architecture of the UMTS RIL is designed as a standard interface with APIs and callback mechanisms that can be used across different platforms and multi-radio hardware such as GSM, GPRS, WCDMA, and HSDPA. The UTMS RIL may enable various applications running on mobile platforms in 2G, 2.5G, and 3G cellular radio stacks to issue commands without knowledge of underlying radio hardware structure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07821974",
	"publication_date": "2010-10-26",
	"application_number": "11092062",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": "umts-ril-extension",
	"match_type": "description"
},
{
	"name": "Uncovering the differences in backbone networks",
	"summary": "",
	"abstract": "The claimed subject matter provides systems and/or methods that uncovers detailed differences in the performance of different Internet Service Provider ISP) networks. The system can include components, devices, and/or processes that utilize a list of target Internet Service Provider (ISP) networks to create a list of Internet Protocol (IP) addresses to interrogate, distribute the list of addresses to measurement nodes and obtains in return probing results from the measurement nodes, the probing results employed thereafter to provide comparative performance metrics associated with the target Internet Service Provider (ISP) networks.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07817547",
	"publication_date": "2010-10-19",
	"application_number": "11865988",
	"application_date": "2007-10-02",
	"tags": null,
	"slug": "uncovering-the-differences-in-backbone-networks",
	"match_type": "description"
},
{
	"name": "Undo/redo architecture across multiple files",
	"summary": "",
	"abstract": "Editing operations are monitored for operations for which information must be stored in order to properly apply an undo or undo/redo sequence to plurality of files. A snapshot is taken and persisted before such an operation is performed. Upon the execution of an undo or redo command, the persisted snapshot is retrieved and applied to the newly generated editing element.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07823060",
	"publication_date": "2010-10-26",
	"application_number": "10165749",
	"application_date": "2002-06-07",
	"tags": null,
	"slug": "undoredo-architecture-across-multiple-files",
	"match_type": "description"
},
{
	"name": "Unified mechanism for presenting and resolving grouped synchronization conflicts",
	"summary": "",
	"abstract": "Conflicts detected during synchronization of replicas are enumerated and resolved according to a specified policy, comprising conditions and actions or simply a specified action. Specified actions may be drawn from a set of standard actions and custom actions may also be composed. The conflicts are enumerated and resolved in logical groups. A logical group is a collection of one or more item envelopes, each comprising entities, such as items, links, and/or extensions. In an example configuration, both constraint-based conflicts, such as a name collision, and non-constraint-based conflicts are handled via the same application programming interface.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805408",
	"publication_date": "2010-09-28",
	"application_number": "11450664",
	"application_date": "2006-06-09",
	"tags": null,
	"slug": "unified-mechanism-for-presenting-and-resolving-grouped-synchronization-conflicts",
	"match_type": "abstract"
},
{
	"name": "Unified model for authoring and executing flow-based and constraint-based workflows",
	"summary": "",
	"abstract": "Designing and executing a workflow having flow-based and constraint-based regions. A user selects one or more activities to be part of a constraint-based region. Each constraint-based region has a constraint associated therewith. The workflow is executed by executing the flow-based region and the constraint-based region. The flow-based region executes sequentially. The constraint is evaluated, and the constraint-based region executes responsive to the evaluated constraint.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07805324",
	"publication_date": "2010-09-28",
	"application_number": "11046988",
	"application_date": "2005-01-31",
	"tags": null,
	"slug": "unified-model-for-authoring-and-executing-flowbased-and-constraintbased-workflows",
	"match_type": "description"
},
{
	"name": "Uniform access to entities in registered data store services",
	"summary": "",
	"abstract": "A data store catalogue service model is disclosed for exposing disparate data store services to clients without requiring explicit knowledge on how to interact with each disparate service. The data store catalogue service model may maintain interaction details for each data store service that clients may access for interacting with those services. The model may also maintain metadata that may describe the different types of services available for access by clients, the data types used by those services, how to access the data provided by the services, and how to communicate semantically with the services for accessing the service's data. Additionally, the data store may include metadata that enables clients to interact with one or more registered data stores in a number of ways, such as for discovering registered data store services, entities, classes, and/or any associations between related entities within the same or among disparate services.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07810106",
	"publication_date": "2010-10-05",
	"application_number": "11191771",
	"application_date": "2005-07-28",
	"tags": null,
	"slug": "uniform-access-to-entities-in-registered-data-store-services",
	"match_type": "description"
},
{
	"name": "Uniform resource discovery",
	"summary": "",
	"abstract": "An input including information specifying criteria for selecting computer resources is processed to produce an output comprising one or more function instances associated with computer resources satisfying the criteria. Included in each of the one or more function instances are metadata and information that specifies a mechanism for accessing a computer resource associated with the function instance.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07653916",
	"publication_date": "2010-01-26",
	"application_number": "11060912",
	"application_date": "2005-02-18",
	"tags": null,
	"slug": "uniform-resource-discovery",
	"match_type": "description"
},
{
	"name": "Universal naming scheme for peer-to-peer resources",
	"summary": "",
	"abstract": "Peer devices register with a resource locator service so that the peer devices can be uniquely identified in a networking environment. An addressing scheme addresses a peer resource in the networking environment based on the unique identifier of a peer device that is a master publisher of the resource. Based on the addressing scheme, the resource locator service can track the location of the master publisher of the resource as well as additional locations of peer devices that have cached the resource and made it available. In various embodiments, the resource locator service can service requests for peer resources by providing a list of locations where the resource is expected to be available or, in the case of non-compatible requester, provide access to the resource itself.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07734817",
	"publication_date": "2010-06-08",
	"application_number": "11067569",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "universal-naming-scheme-for-peertopeer-resources",
	"match_type": "description"
},
{
	"name": "Update distribution system architecture and method for distributing software",
	"summary": "",
	"abstract": "A hierarchical software update distribution system and method for distributing software updates is presented. The update distribution system includes a root update service node and at least one update service node. In an update distribution system, each update service node, except the root update service node, has one parent update service node. Each update service node may function as a parent update service node to child update service nodes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07853609",
	"publication_date": "2010-12-14",
	"application_number": "10799351",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": "update-distribution-system-architecture-and-method-for-distributing-software",
	"match_type": "description"
},
{
	"name": "Use of attribution to describe management information",
	"summary": "",
	"abstract": "Architecture that facilitates management of an application or service of a system. A catalog is provided that stores management information which is accessible to determine the status of the application of service. Code of the application or service to be installed on the system is attributed with management information. When installed, the application or service is processed to copy the management information into a manifest, which manifest is further stored in the catalog along with other manifests associated with different applications or services. The management information in a manifest is uniquely identified by a URI, which access to the management information is via the URI, and which leads to the associated application or service.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712085",
	"publication_date": "2010-05-04",
	"application_number": "10943452",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": "use-of-attribution-to-describe-management-information",
	"match_type": "description"
},
{
	"name": "Use of server processing of temporary results for stateless paging over arbitrary user queries",
	"summary": "",
	"abstract": "A query processor's capabilities may be employed to identify a range rows resulting from a user query to be returned. A server cursor may be declared, opened, fetched from and closed in a single batched request in order to avoid keeping state on a database server between requests. A single block fetch may be used within the batch to retrieve a requisite number of rows from a specified ordinal position. Where server cursors are not available, an intermediate table may be used to hold a subset of the rows resulting from the user query, and row numbers may be added to facilitate selecting the range of rows from that intermediate table. Intelligence within a query processor may be leveraged to support identifying the range of rows to be returned without maintaining state between client requests.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07849109",
	"publication_date": "2010-12-07",
	"application_number": "10909093",
	"application_date": "2004-07-30",
	"tags": null,
	"slug": "use-of-server-processing-of-temporary-results-for-stateless-paging-over-arbitrary-user-queries",
	"match_type": "description"
},
{
	"name": "User interface for a file system shell",
	"summary": "",
	"abstract": "A file system shell is provided. One aspect of the shell provides virtual folders which expose regular files and folders to users in different views based on their metadata instead of the actual physical underlying file system structure on the disk. Users are able to work with the virtual folders through direct manipulation (e.g., clicking and dragging, copying, pasting, etc.). Filters are provided for narrowing down sets of items. Quick links are provided which can be clicked on to generate useful views of the sets of items. Libraries are provided which consist of large groups of usable types of items that can be associated together, along with functions and tools related to the items. A virtual address bar is provided which comprises a plurality of segments, each segment corresponding to a filter for selecting content. A shell browser is provided with which users can readily identify an item based on the metadata associated with that item. An object previewer in a shell browser is provided which is configured to display a plurality of items representing multiple item types.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769794",
	"publication_date": "2010-08-03",
	"application_number": "11111978",
	"application_date": "2005-04-22",
	"tags": null,
	"slug": "user-interface-for-a-file-system-shell",
	"match_type": "description"
},
{
	"name": "User-input scheduling of synchronization operation on a mobile device based on user activity",
	"summary": "",
	"abstract": "Data is synchronized between a mobile device and a computing device over a wireless link. Synchronization operations are scheduled according to a synchronization schedule that is based on a current time of day.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07809384",
	"publication_date": "2010-10-05",
	"application_number": "10641380",
	"application_date": "2003-08-14",
	"tags": null,
	"slug": "userinput-scheduling-of-synchronization-operation-on-a-mobile-device-based-on-user-activity",
	"match_type": "description"
},
{
	"name": "Using a mobile phone to remotely control a computer via an overlay network",
	"summary": "",
	"abstract": "Systems and methods are described for using a mobile phone to remotely control a computing device. In one implementation, a communication channel between the mobile phone and the computing device uses an overlay network, such as an instant messaging (IM) service, to exchange communication data packets. An exemplary system includes a flexible layered architectureu2014which allows tailoring the system for remote control of various applications using various network configurations. Based on the overlay protocol used, a transport protocol layer can provide helpful application programming interfaces (APIs). On top of the transport protocol layer, a remote control protocol defines a framework for packet exchange of extensible commands, customizable for remote control of diverse applications. Use of paired-key encryption, IM accounts, and buddy lists ensure that communications between mobile phone and remote computer are secure.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07792924",
	"publication_date": "2010-09-07",
	"application_number": "11290797",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": "using-a-mobile-phone-to-remotely-control-a-computer-via-an-overlay-network",
	"match_type": "abstract"
},
{
	"name": "Using a USB host controller security extension for controlling changes in and auditing USB topology",
	"summary": "",
	"abstract": "Protecting computer systems from attacks that attempt to change USB topology and for ensuring that the system's information regarding USB topology is accurate is disclosed. A software model is defined that, together with secure USB hardware, provides an ability to define policies using which USB traffic can be properly monitored and controlled. The implemented policy provides control over USB commands through a combination of software evaluation and hardware programming. Legitimate commands are evaluated and u201callowedu201d to be sent to a USB device by a host controller. Illegitimate commands are evaluated and blocked. Additionally, the USB topology is audited to verify that the system's topology map matches the actual USB topology.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07761618",
	"publication_date": "2010-07-20",
	"application_number": "11090582",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": "using-a-usb-host-controller-security-extension-for-controlling-changes-in-and-auditing-usb-topology",
	"match_type": "description"
},
{
	"name": "Using code analysis to generate documentation",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that generate documentation discovered by programmatic and/or automatic code analysis. The generated documentation can be related to, for example, security, error conditions, permissions, exceptions, etc. Static code analysis and/or runtime analysis can be utilized to provide more complete, updated and/or accurate documentation as compared to conventional techniques by obtaining information, which can be utilized to automatically generate the documentation. According to an aspect of the subject invention, documentation can be generated that can supplement existing documentation.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07788640",
	"publication_date": "2010-08-31",
	"application_number": "11023720",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": "using-code-analysis-to-generate-documentation",
	"match_type": "description"
},
{
	"name": "Using file access patterns in providing an incremental software build",
	"summary": "",
	"abstract": "Those files accessed by tools during a build process are invisibly tracked in such a way that the information can then be used to drive an incremental build of just enough files to bring the build fully up to date. The tracking information includes the association between distinct tool processes. Each build tool has its own file activity tracked, each thread of operation within tools are tracked separately and a tracking log is associated with a chain of tool processes so that when the tracking logs are interpreted the context in which they were created is preserved.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07797689",
	"publication_date": "2010-09-14",
	"application_number": "11299414",
	"application_date": "2005-12-12",
	"tags": null,
	"slug": "using-file-access-patterns-in-providing-an-incremental-software-build",
	"match_type": "description"
},
{
	"name": "Using messages to extend CRM functionality",
	"summary": "",
	"abstract": "A method of extending the functionality of an API in a CRM program and system to implement the method is disclosed. The method may allow a user to use request and response messages to be communicated with a single interface that may be exposed as a CRM web service module to create new business logic and operations by extending previously defined classes.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669205",
	"publication_date": "2010-02-23",
	"application_number": "11290078",
	"application_date": "2005-11-30",
	"tags": null,
	"slug": "using-messages-to-extend-crm-functionality",
	"match_type": "description"
},
{
	"name": "Using state machines in navigation",
	"summary": "",
	"abstract": "Navigating through pages of content. In aspects, a state machine is provided that simplifies navigating. The state machine allows multiple navigation services to work together in a hierarchical manner to obtain content. The state machine also provides a mechanism for stopping navigation and responding to errors.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07802176",
	"publication_date": "2010-09-21",
	"application_number": "11174264",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": "using-state-machines-in-navigation",
	"match_type": "description"
},
{
	"name": "Versioning support for drivers frameworks",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that facilitate automatic version level updates of driver components in the context of an operating system framework. In one aspect, an automated computer versioning system is provided. The system includes a version library supplying various components of an operating system framework, wherein the version library defines revision levels and interfaces for the components of the operating system framework. A loader automatically distributes the interfaces in order to facilitate functional interactions with the operating system framework, whereby such distribution of the interfaces is based in part on a change in the revision levels.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689985",
	"publication_date": "2010-03-30",
	"application_number": "11072585",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": "versioning-support-for-drivers-frameworks",
	"match_type": "description"
},
{
	"name": "Versions and workspaces in an object repository",
	"summary": "",
	"abstract": "Maintaining versions and workspaces in an object repository is disclosed. The system provides an efficient way to manage versions of objects by only copying objects when absolutely necessary, i.e. when a property value in a particular object has changed. In addition, the system provides a mechanism to control whether or not relationships are propagated to successor versions of an object. A further aspect of the system is that resolution of objects during a relationship traversal can be customized depending on whether or not an application accessing the objects is version-aware. If the application is not version aware, a means for resolving the relationship to a particular object is provided. A still further aspect of the system is that merge behavior is parameterized. When two versions of an object are merged, flags control how conflicts in property values and relationship contents are managed. Finally, the system provides a workspace that acts as a virtual repository session and provides workspace context and scope to repository objects.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07711708",
	"publication_date": "2010-05-04",
	"application_number": "10639976",
	"application_date": "2003-08-13",
	"tags": null,
	"slug": "versions-and-workspaces-in-an-object-repository",
	"match_type": "description"
},
{
	"name": "Viewable and actionable search results",
	"summary": "",
	"abstract": "Search results can be viewed and acted upon. Searches may be conducted using a search input in conjunction with a selected category. The search results may be produced from such a search. One or more of the produced search results may be highlighted for previewing. Along with the preview, available actions are presented that are based on the selected category. A user can initiate an action of the available actions. The initiated action is then performed with respect to the highlighted search result(s).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07669142",
	"publication_date": "2010-02-23",
	"application_number": "11276452",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": "viewable-and-actionable-search-results",
	"match_type": "description"
},
{
	"name": "Virtual connectivity with subscribe-notify service",
	"summary": "",
	"abstract": "A middle layer network protocol enhancement, virtual connectivity (VC) makes the network attachment point changes of local and remote peers transparent to applications that use network services. A virtual connectivity module local to each peer translates communication connection parameters from apparent to real and vice versa, as well as sending and receiving secure connection updates directly to and from peers. Unlike Mobile IP, no routing infrastructure modifications are required. A subscribe-notify service provides connection update notifications when direct peer-to-peer connection updates are not possible, for example, when two communicating peers move simultaneously or when the moving peer is communicating with a peer behind network address translation (NAT). Methods for detecting these conditions are disclosed, as is a virtual connectivity protocol and virtual connectivity module architecture.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07769866",
	"publication_date": "2010-08-03",
	"application_number": "10619332",
	"application_date": "2003-07-14",
	"tags": null,
	"slug": "virtual-connectivity-with-subscribenotify-service",
	"match_type": "description"
},
{
	"name": "Virtual deletion in merged file system directories",
	"summary": "",
	"abstract": "An element of a file system is virtually deleted by creating a deletion marker for the element. Two or more separate physical file system directories are presented as one merged (virtual) file system directory to a process running in a silo. The operating system provides the merged view of the file system directories by monitoring file system requests made by processes in silos on a computer or computer system and filtering out those elements associated with deletion markers. Special processing is invoked in response to detecting certain types of file system access requests, including: enumeration, open, create, rename or delete.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07756821",
	"publication_date": "2010-07-13",
	"application_number": "11555745",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "virtual-deletion-in-merged-file-system-directories",
	"match_type": "description"
},
{
	"name": "Virtual distributed security system",
	"summary": "",
	"abstract": "A distributed security system is provided. The distributed security system uses a security policy that is written in a policy language that is transport and security protocol independent as well as independent of cryptographic technologies. This security policy can be expressed using the language to create different security components allowing for greater scalability and flexibility. By abstracting underlying protocols and technologies, multiple environments and platforms can be supported.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752431",
	"publication_date": "2010-07-06",
	"application_number": "11254264",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": "virtual-distributed-security-system",
	"match_type": "description"
},
{
	"name": "Virtual distributed security system",
	"summary": "",
	"abstract": "A distributed security system is provided. The distributed security system uses a security policy that is written in a policy language that is transport and security protocol independent as well as independent of cryptographic technologies. This security policy can be expressed using the language to create different security components allowing for greater scalability and flexibility. By abstracting underlying protocols and technologies, multiple environments and platforms can be supported.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07752442",
	"publication_date": "2010-07-06",
	"application_number": "11254539",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": "virtual-distributed-security-system",
	"match_type": "description"
},
{
	"name": "Virtual distributed security system",
	"summary": "",
	"abstract": "A distributed security system is provided. The distributed security system uses a security policy that is written in a policy language that is transport and security protocol independent as well as independent of cryptographic technologies. This security policy can be expressed using the language to create different security components allowing for greater scalability and flexibility. By abstracting underlying protocols and technologies, multiple environments and platforms can be supported.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07809938",
	"publication_date": "2010-10-05",
	"application_number": "11254545",
	"application_date": "2005-10-20",
	"tags": null,
	"slug": "virtual-distributed-security-system",
	"match_type": "description"
},
{
	"name": "Virtual magnifying glass with intuitive use enhancements",
	"summary": "",
	"abstract": "A display screen magnifier is controllable by a user to magnify selected portions of a desktop including windows open on the screen. A moveable magnifier frame is provided, within which a magnified image is presented. The magnified image corresponds to screen content located within a magnification region underlying the magnifier frame, magnified to a set level of magnification. In one embodiment, the magnification region is moveable relative to the magnifier frame, in relation to movement of the magnifier frame on the display screen. Such relative movement can be used to avoid a potentially disorienting edge condition that arises when a magnifier frame reaches an edge of the display screen and stops, while its associated magnification region continues to pan. In another embodiment, the cursor of a user input device is moveable across the screen display into and out of the magnification region. When the position of the cursor falls within the magnification region, the cursor appears within the magnified image presented within the magnifier frame. A related feature avoids the potentially disconcerting effect of cursor disappearance as a pointing device cursor passes into a u201clens shadowu201d defined between the magnification region and the magnifier frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07712046",
	"publication_date": "2010-05-04",
	"application_number": "11356142",
	"application_date": "2006-02-17",
	"tags": null,
	"slug": "virtual-magnifying-glass-with-intuitive-use-enhancements",
	"match_type": "description"
},
{
	"name": "Virtual magnifying glass with on-the fly control functionalities",
	"summary": "",
	"abstract": "A display screen magnifier is controllable by a user to magnify selected portions of a desktop including windows open on the screen. A moveable magnifier frame is provided, within which a magnified image is presented. The magnified image corresponds to screen content located within a magnification region underlying the magnifier frame, magnified to a set level of magnification. The magnifier is controllable through use of a user input device. At least one operational parameter of the magnifier can be adjusted, without interaction with on-screen objects and without taking focus away from the desktop or any windows open on the screen. In a particular embodiment of the invention, on-the-fly controllability of the magnifier includes its activation and deactivation, adjustment of the magnification level, and adjustment of the size of the magnifier frame.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07694234",
	"publication_date": "2010-04-06",
	"application_number": "11196511",
	"application_date": "2005-08-04",
	"tags": null,
	"slug": "virtual-magnifying-glass-with-onthe-fly-control-functionalities",
	"match_type": "description"
},
{
	"name": "Watchdog timer using a high precision event timer",
	"summary": "",
	"abstract": "A system and method for detecting and handling errors in a computer system are disclosed. The invention is configurable to permit selecting of timelength or time out values, assigned interrupts to be generated and error recover procedures so that failures of system events can be promptly detected and recovered from. The watchdog timer is started with a timelength or time out value and generates an interrupt (i.e., is triggered) if the period of time set as the timelength passes without receiving a reset. The watchdog timer interface interacts and controls the hardware based timer to obtain this watchdog timer functionality. The hardware based timer is generally a high precision timer that exists in hardware architecture for a computer system and is usable by system software. The watchdog timer interface controls and sets various parameters and/or registers of the hardware based timer in order to provide the desired functionality of a watchdog timer. Thus, another software component can call and interact with the watchdog timer interface for a system event and view the watchdog timer interface as a watchdog timer (i.e., the operation of the hardware based timer is transparent).",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07689875",
	"publication_date": "2010-03-30",
	"application_number": "10133555",
	"application_date": "2002-04-25",
	"tags": null,
	"slug": "watchdog-timer-using-a-high-precision-event-timer",
	"match_type": "description"
},
{
	"name": "Web searching",
	"summary": "",
	"abstract": "Mislabeled URLs are identified and corrected based upon a click relevance ranking computed from user data comprising user click information. The click relevance ranking is formed by applying a set of relevance ordering rules to user log data aggregated by query and URL and by mapping the results of the relevance ordering rules into a linear ordering. For a given query, the aggregated user log data comprises a relative total number of impression, a relative total number of clicks received and a rank associated with the query/URL pair at the time of the total number of impressions and total number of clicks received. The click relevance ranking is used to identify and correct mislabeled query/URL pairs of other rankings according to a number of disclosed methods.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836058",
	"publication_date": "2010-11-16",
	"application_number": "12056302",
	"application_date": "2008-03-27",
	"tags": null,
	"slug": "web-searching",
	"match_type": "description"
},
{
	"name": "Web service for remote application discovery",
	"summary": "",
	"abstract": "Systems and methods of a Web service for remote terminal service application discovery are described. In one aspect, a Web service in an Intranet is provided. The Web service is coupled to a public network. The Web service facilitates remote client computer discovery over the public network of information corresponding to application(s) deployed on the Intranet. The remote client computer is external to the Intranet. The application(s) are configured for terminal server based access for a user of the remote client computer.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07720906",
	"publication_date": "2010-05-18",
	"application_number": "10721514",
	"application_date": "2003-11-24",
	"tags": null,
	"slug": "web-service-for-remote-application-discovery",
	"match_type": "description"
},
{
	"name": "Web site cobrowsing",
	"summary": "",
	"abstract": "Cobrowsing web sites by two or more users is disclosed. For a cobrowsing session between a first client of a first user and a second client of a second user, the cobrowsing session is first initiated. The first user browses a web site on the first client. The first client sends to the second client a synchronization message. The synchronization message indicates one or more commands reflecting the browsing performed by the first user. The second client receives the synchronization message, and cobrowses the web site in accordance with the message and its included commands. Cobrowsing continues until the cobrowsing session is terminated. The commands of the synchronization message allow for fine granularity of cobrowsing.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07660899",
	"publication_date": "2010-02-09",
	"application_number": "10975612",
	"application_date": "2004-10-28",
	"tags": null,
	"slug": "web-site-cobrowsing",
	"match_type": "description"
},
{
	"name": "Winsock APIs",
	"summary": "",
	"abstract": "To improve upon existing Winsock implementations, the claimed system and method adapts an existing Winsock system to use out-of-process NSP services. The claimed method and system provides asynchronous Winsock Next calls to provide client application processing flexibility. Further, the claimed method and system provides additional structures for passing additional NSP specific information for a result set to enable further client functionality. One embodiment of the claimed system provides additional client Winsock API functions to aggregate and manage asynchronous calls to multiple NSPs and/or multiple namespaces.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07770188",
	"publication_date": "2010-08-03",
	"application_number": "11407499",
	"application_date": "2006-04-20",
	"tags": null,
	"slug": "winsock-apis",
	"match_type": "description"
},
{
	"name": "Wireless network interference mitigation",
	"summary": "",
	"abstract": "Wireless network interference is mitigated with client devices having wireless network interference mitigation logic and/or utilizing a usable bandwidth channel quality metric. In a described example implementation, a client device includes wireless network interference mitigation logic that monitors at least one channel condition of a wireless network and participates in a wireless network interference mitigation procedure based on the at least one channel condition. In another described example implementation, a usable bandwidth of a wireless channel is ascertained with respect to a native network, the usable bandwidth reflecting a difference between (i) a total channel capacity of the wireless channel and (ii) a portion of the total channel capacity that is consumed by wireless communications of one or more foreign networks. By way of example only, the at least one channel condition may be usable bandwidth. The wireless network interference mitigation logic may also be employed in non-client devices.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07751377",
	"publication_date": "2010-07-06",
	"application_number": "11168849",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "wireless-network-interference-mitigation",
	"match_type": "description"
},
{
	"name": "XML serialization and deserialization",
	"summary": "",
	"abstract": "An object instance is serialized to a serial format, such as an eXtensible Markup Language (XML) document, based on a mapping between an arbitrary annotated source code file and a schema. The arbitrary annotated source code contains at least one programming type that describes a shape of an object instance and the schema describes a format of a document having a serial format. The mapping defines a correspondence between the shape of the object instance and the format of the document having the serial format. Subsequently, an object instance is converted to the serial format by converting public properties, public fields and method parameters of the object instance to a document having the serial format based on the mapping. Once the mapping is defined, an XML document can also be converted to an object instance based on the mapping.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07676740",
	"publication_date": "2010-03-09",
	"application_number": "11009160",
	"application_date": "2004-12-10",
	"tags": null,
	"slug": "xml-serialization-and-deserialization",
	"match_type": "description"
},
{
	"name": "XNA relationship management",
	"summary": "",
	"abstract": "A data provider application programming interface (API) is configured for use with a game content editing application. An asset relationship management file, which is generated with the data provider API, includes information such as relationship references and annotations and is updated by the data provider API when a digital asset is edited. The asset relationship management file is then stored in a data store. An asset relationship graph is generated, based on the asset relationship management file in the data store. The asset relationship graph includes asset graph nodes that map dependency relationships between asset files. A graph API is also described. The graph API is configured for accessing the relationship graph through a server process to expose dependency relationships and annotations to a client process, such as an application. Thus, the effect of changes to one asset on other assets can readily be evaluated.",
	"url": null,
	"owner": "Microsoft Corporation",
	"publication_number": "07836055",
	"publication_date": "2010-11-16",
	"application_number": "11343455",
	"application_date": "2006-01-31",
	"tags": null,
	"slug": "xna-relationship-management",
	"match_type": "abstract"
},
{
	"name": "Automatic layout of items along an embedded one-manifold path",
	"summary": "",
	"abstract": "The coordinates for laying out visual items in two-, three-, or n-dimensional space along an embedded one-manifold or path are calculated and coordinates are generated for placement of the items in a container. A one-manifold may be continuous, discontinuous, be contained entirely within a container or extent beyond a container. The one-manifold may be defined by a set of parameters defining a function, formula or set of points. The container may be a two-dimensional, three-dimensional, or n-dimensional container. Such a mechanism may be employed by a graphics application and may determine the location or positioning of an object or item. The object or item may be one of a set of objects or items. In response to receiving a set of parameters defining a one-manifold, the one-manifold may be embedded within a container. In response to receiving a set of parameters describing aspects of the object or item to be placed within the container, a set of x and y or x, y and z co-ordinates may be generated, which may be sent to a standard graphics interface for display.",
	"url": null,
	"owner": "Microsoft Corproation",
	"publication_number": "07710423",
	"publication_date": "2010-05-04",
	"application_number": "11085500",
	"application_date": "2005-03-21",
	"tags": null,
	"slug": "automatic-layout-of-items-along-an-embedded-onemanifold-path",
	"match_type": "description"
},
{
	"name": "Synchronization aspects of interactive multimedia presentation management",
	"summary": "",
	"abstract": "Playing an interactive multimedia presentation involves pre-rendering a media object at certain times based on a frame rate of the interactive content, a frame rate of the video content (which may include video, audio, data, or any combination thereof), and a play speed of the presentation. Certain actions taken include calculating a current elapsed play time representing an amount of the presentation's play duration that has passed. Based on the calculated time, a current interactive content presentation time is ascertained from an interactive content timeline. The interactive content timeline represents times at which the media object is presentable. A subsequent interactive content presentation time is selected from the interactive content timeline. The presentation state of the media object is predicted for the subsequent interactive content presentation time. The media object is pre-rendered within a time offset period before the subsequent interactive content presentation time occurs.",
	"url": null,
	"owner": "Microsoft Corproation",
	"publication_number": "07721308",
	"publication_date": "2010-05-18",
	"application_number": "11355609",
	"application_date": "2006-02-16",
	"tags": null,
	"slug": "synchronization-aspects-of-interactive-multimedia-presentation-management",
	"match_type": "description"
},
{
	"name": "Short-term option trading system",
	"summary": "",
	"abstract": "Option contracts are traded by valuing an option that has at least one of a) strike price or b) expiration time unknown at the time the option is valued. The previously unknown values of the option are assigned at the time or after the time the trade is completed. An implied underlying price stream is generated from the option prices through the use of feedback between market participants and the marketplace. The resulting system is useful in trading option contracts of short time duration.",
	"url": null,
	"owner": "MicroTick, LLC",
	"publication_number": "07856395",
	"publication_date": "2010-12-21",
	"application_number": "10999806",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": "shortterm-option-trading-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing improved group floating-point operations",
	"summary": "",
	"abstract": "Systems and apparatuses are presented relating a programmable processor comprising an execution unit that is operable to decode and execute instructions received from an instruction path and partition data stored in registers in the register file into multiple data elements, the execution unit capable of executing a plurality of different group floating-point and group integer arithmetic operations that each arithmetically operates on multiple data elements stored registers in a register file to produce a catenated result that is returned to a register in the register file, wherein the catenated result comprises a plurality of individual results, wherein the execution unit is capable of executing group data handling operations that re-arrange data elements in different ways in response to data handling instructions.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07653806",
	"publication_date": "2010-01-26",
	"application_number": "11842077",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "method-and-apparatus-for-performing-improved-group-floatingpoint-operations",
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing improved group instructions",
	"summary": "",
	"abstract": "Systems and apparatuses are presented relating a programmable processor comprising an execution unit that is operable to decode and execute instructions received from an instruction path and partition data stored in registers in the register file into multiple data elements, the execution unit capable of executing a plurality of different group floating-point and group integer arithmetic operations that each arithmetically operates on multiple data elements stored registers in a register file to produce a catenated result that is returned to a register in the register file, wherein the catenated result comprises a plurality of individual results, wherein the execution unit is capable of executing group data handling operations that re-arrange data elements in different ways in response to data handling instructions.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07849291",
	"publication_date": "2010-12-07",
	"application_number": "11842038",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "method-and-apparatus-for-performing-improved-group-instructions",
	"match_type": "description"
},
{
	"name": "Method and software for group data operations",
	"summary": "",
	"abstract": "Methods and software are presented for processing data in a programmable processor, involving (a) decoding instructions for execution using an execution unit operable to execute instructions by partitioning data stored in registers in a register file into multiple data elements, the instructions selected from an instruction set that includes group arithmetic instructions and group data handling instructions, (b) in response to decoding different group arithmetic instructions, executing a plurality of different group floating-point and group integer arithmetic operations that each arithmetically operates on multiple data elements stored in registers in the register file to produce a catenated result that is returned to a register in the register file, wherein the catenated result comprises a plurality of individual results, and (c) in response to decoding different group data handling instructions, executing group data handling operations that re-arrange data elements in different ways.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07818548",
	"publication_date": "2010-10-19",
	"application_number": "11878804",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": "method-and-software-for-group-data-operations",
	"match_type": "description"
},
{
	"name": "Method and software for group floating-point arithmetic operations",
	"summary": "",
	"abstract": "Methods and software are presented for processing data in a programmable processor, involving (a) decoding instructions for execution using an execution unit operable to execute instructions by partitioning data stored in registers in a register file into multiple data elements, the instructions selected from an instruction set that includes group arithmetic instructions and group data handling instructions, (b) in response to decoding different group data handling instructions, executing group data handling operations that re-arrange data elements in different ways, and (c) in response to decoding different group arithmetic instructions, executing a plurality of different group floating-point and group integer arithmetic operations that each arithmetically operates on the multiple data elements stored in registers in the register file to produce a catenated result that is returned to a register in the register file, wherein the catenated result comprises a plurality of individual results.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07730287",
	"publication_date": "2010-06-01",
	"application_number": "11878814",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": "method-and-software-for-group-floatingpoint-arithmetic-operations",
	"match_type": "description"
},
{
	"name": "Processor for executing multiply matrix instructions requiring wide operands",
	"summary": "",
	"abstract": "A programmable processor and method for improving the performance of processors by expanding at least two source operands, or a source and a result operand, to a width greater than the width of either the general purpose register or the data path width. The present invention provides operands which are substantially larger than the data path width of the processor by using the contents of a general purpose register to specify a memory address at which a plurality of data path widths of data can be read or written, as well as the size and shape of the operand. In addition, several instructions and apparatus for implementing these instructions are described which obtain performance advantages if the operands are not limited to the width and accessible number of general purpose registers.",
	"url": null,
	"owner": "MicroUnity Systems Engineering, Inc.",
	"publication_number": "07843459",
	"publication_date": "2010-11-30",
	"application_number": "11982142",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "processor-for-executing-multiply-matrix-instructions-requiring-wide-operands",
	"match_type": "description"
},
{
	"name": "System and apparatus for group data operations",
	"summary": "",
	"abstract": "Systems and apparatuses are presented relating a programmable processor comprising an execution unit that is operable to decode and execute instructions received from an instruction path and partition data stored in registers in the register file into multiple data elements, the execution unit capable of executing a plurality of different group floating-point and group integer arithmetic operations that each arithmetically operates on multiple data elements stored registers in a register file to produce a catenated result that is returned to a register in the register file, wherein the catenated result comprises a plurality of individual results, wherein the execution unit is capable of executing group data handling operations that re-arrange data elements in different ways in response to data handling instructions.",
	"url": null,
	"owner": "Microunity Systems Engineering, Inc.",
	"publication_number": "07660973",
	"publication_date": "2010-02-09",
	"application_number": "11878805",
	"application_date": "2007-07-27",
	"tags": null,
	"slug": "system-and-apparatus-for-group-data-operations",
	"match_type": "description"
},
{
	"name": "Interfacing with ink",
	"summary": "",
	"abstract": "The present invention relates to interfacing with electronic ink. Ink is stored in a data structure that permits later retrieval by applications. The ink includes stroke information and may include property information. Through various programming interfaces, one may interact with the ink through methods and setting or retrieving properties. Other objects and collections may be used as well in conjunction with the ink objects.",
	"url": null,
	"owner": "Mircosoft Corporation",
	"publication_number": "07715630",
	"publication_date": "2010-05-11",
	"application_number": "11304546",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "interfacing-with-ink",
	"match_type": "description"
},
{
	"name": "Arc tool user interface",
	"summary": "",
	"abstract": "A combination of arc tool user interface features and operations are provided for efficiently defining an arc tool region of interest in a machine vision inspection system. Multiple distinct types of parameter control features are provide in an arc tool GUI. The distinct types of parameter control features may be distinguished by their relative locations, or by distinct symbols, or the like. One or more of the types of control features may include at least two modes of operation. In one such mode of operation restricted to one type of control feature, a user may change the nominal radius of curvature of the arc tool using a single cursor motion. In another such mode of operation shared by multiple types of control features, a user may rotate the region of interest of the arc tool using a single cursor motion.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07769222",
	"publication_date": "2010-08-03",
	"application_number": "11589125",
	"application_date": "2006-10-27",
	"tags": null,
	"slug": "arc-tool-user-interface",
	"match_type": "description"
},
{
	"name": "Optical aberration correction for machine vision inspection systems",
	"summary": "",
	"abstract": "A high-accuracy optical aberration correction system and method. Z-heights determined by an auto-focus tool, which would otherwise vary depending on the orientation angle of surface features or edges in the focus region of interest, and on the location of the focus region of interest in the field of view, are corrected based on a novel error calibration method. Error calibration data includes a set of Z-corrections for a range of different feature orientation angles (e.g., 180 degrees), for multiple locations in the field of view. Error calibration data may be interpolated to correspond to the location of the current focus region of interest. During auto-focus measurements, a Z-correction may be adapted for a current measurement by weighting orientation-dependent error calibration data based on a histogram of the gradient (edge) directions present in the current focus region of interest.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07724942",
	"publication_date": "2010-05-25",
	"application_number": "11263002",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": "optical-aberration-correction-for-machine-vision-inspection-systems",
	"match_type": "description"
},
{
	"name": "System and method for single image focus assessment",
	"summary": "",
	"abstract": "An image focus assessment method is provided that works reliably for images of a variety of relatively dissimilar workpieces or workpiece features. The focus assessment method is based on analysis of a single image (without the benefit of comparison to other images). The robustness of the focus assessment method is enhanced by the use of at least one classifier based on a plurality of focus classification features. In one application, a primary advantage of assessing focus from a single image is that an overall workpiece inspection time may be reduced by avoiding running an autofocus routine if an image is already in focus. In various embodiments, the focus assessment method may include an ensemble of classifiers. The ensemble of classifiers can be trained on different training data (sub)sets or different parameter (sub)sets, and their classification outcomes combined by a voting operation or the like, in order to enhance the overall accuracy and robustness of the focus assessment method.",
	"url": null,
	"owner": "Mitutoyo Corporation",
	"publication_number": "07668388",
	"publication_date": "2010-02-23",
	"application_number": "11072360",
	"application_date": "2005-03-03",
	"tags": null,
	"slug": "system-and-method-for-single-image-focus-assessment",
	"match_type": "description"
},
{
	"name": "Method and apparatus for two phase structured message to tagged message translation",
	"summary": "",
	"abstract": "An aspect of the present invention includes a method and device for translating a structured message into a context tagged, XML message. A two step translation is described, first including translation from structured message to structure tagged message, and then from structure tagged message to context tagged message. Standard tools may be used in the second step to apply validations or business logic. Particular aspects of the present invention are described in the claims, specification and drawings.",
	"url": null,
	"owner": "MKS Instruments, Inc.",
	"publication_number": "07725606",
	"publication_date": "2010-05-25",
	"application_number": "11479151",
	"application_date": "2006-06-30",
	"tags": null,
	"slug": "method-and-apparatus-for-two-phase-structured-message-to-tagged-message-translation",
	"match_type": "description"
},
{
	"name": "Firewall propagation",
	"summary": "",
	"abstract": "Methods and systems for propagating data security policies and rules up a chain of network components, for example, from an end-user device having a firewall, to a network component at the u201cedgeu201d of the network, from where a policy statement can be transmitted to a service provider are described. A device, such as a computer or mobile phone, has, as part of its firewall software, a policy propagation file, that communicates with pre-existing firewall software. The firewall software creates a policy statement upon detecting a triggering event, which is transmitted from the device to the next data security component up the chain, u201cupstream,u201d in the network. The firewall server may combine policy statements from numerous end-user type devices and transmit the policy statement to an external network component. The ISP or other service provider may then use the policy statement to implement data security rules for the devices in the network.",
	"url": null,
	"owner": "Mocana Corporation",
	"publication_number": "07853998",
	"publication_date": "2010-12-14",
	"application_number": "11726559",
	"application_date": "2007-03-22",
	"tags": null,
	"slug": "firewall-propagation",
	"match_type": "description"
},
{
	"name": "System and method for designing and implementing packet processing products",
	"summary": "",
	"abstract": "A system and method for allowing a user to create instructions for building a packet processing integrated circuit. The system includes a user interface for allowing a user to define a desired packet processing algorithm () using a plurality of discrete packet processing blocks (), each of the blocks corresponding to a portion of the desired packet processing algorithm (). The system allows the user to define connections () between the plurality of packet processing blocks (). The system processes a plurality of packet processing blocks () and the connections to provide a list of instructions in a hardware description language for producing an integrated circuit capable of executing the desired packet processing algorithm (). The list of instructions can be delivered to a customer (), or the customer can receive an integrated circuit constructed using the list of instructions (), or the customer can receive a NETLIST generated using said list of instructions (). The plurality of packet processing blocks () can include a Packet Processing Unit (PPU, PPUX) , a Packet Modification Unit (PMU) , and a Decision and Forwarding Unit (DFU) ",
	"url": null,
	"owner": "Modelware, Inc.",
	"publication_number": "07724684",
	"publication_date": "2010-05-25",
	"application_number": "11805702",
	"application_date": "2007-05-24",
	"tags": null,
	"slug": "system-and-method-for-designing-and-implementing-packet-processing-products",
	"match_type": "description"
},
{
	"name": "Dynamic accessible reporting tool (DART)",
	"summary": "",
	"abstract": "A flexible metadata driven and workflow based report generation system is disclosed. The system comprises a Flexible Reporting GUI with four components that allow the user direct control in the creation of a report within a single application: a Data Generator for retrieving data, a Report Designer with a built-in report designer application, a Report Deployment element for deploying the report and an Report Run element for interactively running the report. The Flexible Reporting GUI allows a user to run a report with updated data stores, and to define the various parameters that affect the content of the generated report with great flexibility. Through the system of the invention, the user can be directly involved in all the report generation steps, through a user friendly interface, and a simplified environment. Moreover, the system in the invention provides improved solutions for updated data retrieval from protected data sources.",
	"url": null,
	"owner": "Morgan Stanley",
	"publication_number": "07644100",
	"publication_date": "2010-01-05",
	"application_number": "11900841",
	"application_date": "2007-09-12",
	"tags": null,
	"slug": "dynamic-accessible-reporting-tool-dart",
	"match_type": "description"
},
{
	"name": "Mortgage-backed security hedging systems and methods",
	"summary": "",
	"abstract": "A computer assisted method of developing a hedge position for a mortgage-backed security. The method includes calculating a duration of the security based on price histories of the security and changes in yield of a benchmark security and expressing periodic changes in price of the security. The method also includes calculating a relative coupon of the security and calculating a current coupon yield of the mortgage sector. The method further includes calculating an empirical duration of the security, calculating a hedge ratio for the security, and outputting a hedge position for the security based on the hedge ratio.",
	"url": null,
	"owner": "Morgan Stanley",
	"publication_number": "07747501",
	"publication_date": "2010-06-29",
	"application_number": "11140819",
	"application_date": "2005-05-31",
	"tags": null,
	"slug": "mortgagebacked-security-hedging-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Large-scale targeted data distribution system",
	"summary": "",
	"abstract": "A method, system, computer system and computer program product to distribute data to arbitrarily large subsets of a very large client base, with each client computer system running client software referred to as an agent. The data distribution system uses minimal server resources and a large-scale network such as the Internet. The data to be distributed may include, for example, agent software configuration data; agent software programs, plug-ins, and associated data; announcements; and other data that is centrally managed by an administrator. Using this invention, millions of client computer systems, such as computer systems for subscribers to a broadband service, can be configured and managed centrally, while allowing data to be distributed to all or a subset of subscribers efficiently and using minimal bandwidth. Agents assist in determining whether particular data are to be distributed to them, enabling much larger-scale applications to be supported with limited server-side resources.",
	"url": null,
	"owner": "Motive, Inc.",
	"publication_number": "07765281",
	"publication_date": "2010-07-27",
	"application_number": "10715928",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": "largescale-targeted-data-distribution-system",
	"match_type": "description"
},
{
	"name": "Interactive tool for semi-automatic generation of a natural language grammar from a device descriptor",
	"summary": "",
	"abstract": "A method, system, and tool product for creating a grammar for a natural language dialog system from a device description is provided. The system can include a device descriptor for identifying configuration, interface, object, and attribute information of the device, a speech grammar for identifying one or more rules generated from the device descriptor that are supported by the device, a speech recognition system for invoking rules of the speech grammar, and a processor for facilitating interoperability and development of distributed applications and providing delineated coverage of the one or more rules in view of the device descriptor.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07725308",
	"publication_date": "2010-05-25",
	"application_number": "11422793",
	"application_date": "2006-06-07",
	"tags": null,
	"slug": "interactive-tool-for-semiautomatic-generation-of-a-natural-language-grammar-from-a-device-descriptor",
	"match_type": "description"
},
{
	"name": "Method and apparatus for running different types of applications on a wireless mobile device",
	"summary": "",
	"abstract": "A method and wireless mobile device runs different types of applications and groups a set of common application interfaces (APIs) that are associated with an application type to produce an application container (). The wireless mobile device and method translates calls between at least one of the linked or grouped common APIs of the application container and a shared API that is shared for example among applications of different types (). If desired the method and device also groups a set of common application interfaces associated with another application type to produce another application container. The applications of different types use APIs from the multiple application containers. In one embodiment, the translating of calls is accomplished by employing a class loading structure using, for example, a class loader that looks at certain path locations to obtain resources.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07810105",
	"publication_date": "2010-10-05",
	"application_number": "11025518",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": "method-and-apparatus-for-running-different-types-of-applications-on-a-wireless-mobile-device",
	"match_type": "description"
},
{
	"name": "Multiple configuration communication apparatus",
	"summary": "",
	"abstract": "Multiple-configuration communication apparatus includes: a communication device () simultaneously maintaining at least a first and a second channel; a storage device () storing a plurality of communication configurations; and a configuration controller () determining a first time frame and during the first time frame, selecting a first communication configuration of the plurality of communication configurations and controlling the communication device to configure itself to the first communication configuration to at least one of transmit and receive information over the first channel, and determining a second time frame that is different from the first time frame and during the second time frame, selecting a second communication configuration of the plurality of communication configurations, and controlling the communication device to configure itself to the second communication configuration to at least one of transmit and receive information over the second channel.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07724702",
	"publication_date": "2010-05-25",
	"application_number": "11303492",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "multiple-configuration-communication-apparatus",
	"match_type": "description"
},
{
	"name": "System and method to improve WLAN handover behavior at entry/exit points",
	"summary": "",
	"abstract": "A system, wireless device () and method determine that a wireless device () is detecting a triggering event. The triggering event includes detecting a WLAN border cell (), detecting a first signal from an egress portal (), or detecting a degradation in signal quality. The wireless device () then detects at least one signal from an egress portal (), determines that the wireless device () is moving from the coverage area of a first communications system to the coverage area of a second communications system according to the order of signals received from the egress portal (), initiates a registration sequence with the second wireless communication system in response to determining that the wireless device () is moving from the coverage area of the first communications system to the coverage area of the second communications system, and conducts present and subsequent calls via the second wireless communication system.",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07769378",
	"publication_date": "2010-08-03",
	"application_number": "10649756",
	"application_date": "2003-08-26",
	"tags": null,
	"slug": "system-and-method-to-improve-wlan-handover-behavior-at-entryexit-points",
	"match_type": "description"
},
{
	"name": "Universal Plug-and-Play latency and delay compensation",
	"summary": "",
	"abstract": "A Universal Plug-and-Play (UPnP) device () determines a latency and propagation delay period (LPDP) that is added to a UPnP network () response time, based on UPnP network () conditions. The UPnP device () transmits a search command when connecting to the UPnP network (), and waits a period of time based on the LPDP for a response to the search command from other UPnP devices () in the UPnP network () before the UPnP device () stops listening for other UPnP devices ().",
	"url": null,
	"owner": "Motorola, Inc.",
	"publication_number": "07821955",
	"publication_date": "2010-10-26",
	"application_number": "11647503",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "universal-plugandplay-latency-and-delay-compensation",
	"match_type": "description"
},
{
	"name": "Method and system for preventing unauthorized recording of media content on a Macintosh operating system",
	"summary": "",
	"abstract": "A method for preventing unauthorized recording of media content on a Macintosh operating system. The present method registers a compliance mechanism on a client system having the Macintosh operating system operating thereon. The compliance mechanism comprises a framework for validating the compliance mechanism on the client system, and a multimedia component opened by the framework. The present method uses the multimedia component for decrypting the media content on the client system. The present method also prevents decryption of the media content on the client system having the Macintosh operating system operating thereon if a portion of the compliance mechanism is invalidated.",
	"url": null,
	"owner": "Music Public Broadcasting, Inc.",
	"publication_number": "07802095",
	"publication_date": "2010-09-21",
	"application_number": "10772031",
	"application_date": "2004-02-03",
	"tags": null,
	"slug": "method-and-system-for-preventing-unauthorized-recording-of-media-content-on-a-macintosh-operating-system",
	"match_type": "description"
},
{
	"name": "Application development environment with features for aiding a user in writing function calls",
	"summary": "",
	"abstract": "Another embodiment of the invention comprises a system and method for automatically declaring variables passed as parameters in function calls.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07761859",
	"publication_date": "2010-07-20",
	"application_number": "11003260",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": "application-development-environment-with-features-for-aiding-a-user-in-writing-function-calls",
	"match_type": "description"
},
{
	"name": "Automatic generation of application domain specific graphical programs",
	"summary": "",
	"abstract": "System and method for generating an application domain specific graphical program. A graphical user interface (GUI) for specifying functionality of a graphical program in an application domain is displayed, where the GUI corresponds specifically to the application domain. User input to the GUI specifying the functionality of the graphical program is received, and the graphical program generated in response, where the graphical program is executable to perform the specified functionality, and comprises multiple interconnected graphical program nodes that visually represent the graphical program functionality. The GUI includes graphical interface elements operable to indicate and/or specify, e.g., via user input, respective attributes of the graphical program such as timing, triggering, analog and/or digital input/output (I/O), resource allocation, processing option, inclusion of one or more external files, and one or more target devices, among others, and may determine the graphical interface elements based on the specified one or more target devices.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07836426",
	"publication_date": "2010-11-16",
	"application_number": "11349465",
	"application_date": "2006-02-07",
	"tags": null,
	"slug": "automatic-generation-of-application-domain-specific-graphical-programs",
	"match_type": "description"
},
{
	"name": "Automatic generation of application domain specific graphical programs",
	"summary": "",
	"abstract": "System and method for generating an application domain specific graphical program. A graphical user interface (GUI) for specifying functionality of a graphical program in an application domain is displayed, where the GUI corresponds specifically to the application domain. User input to the GUI specifying the functionality of the graphical program is received, and the graphical program generated in response, where the graphical program is executable to perform the specified functionality, and comprises multiple interconnected graphical program nodes that visually represent the graphical program functionality. The GUI includes graphical interface elements operable to indicate and/or specify, e.g., via user input, respective attributes of the graphical program such as timing, triggering, analog and/or digital input/output (I/O), resource allocation, processing option, inclusion of one or more external files, and one or more target devices, among others, and may determine the graphical interface elements based on the specified one or more target devices.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07743362",
	"publication_date": "2010-06-22",
	"application_number": "10839862",
	"application_date": "2004-05-06",
	"tags": null,
	"slug": "automatic-generation-of-application-domain-specific-graphical-programs",
	"match_type": "description"
},
{
	"name": "Automatic modification of a graphical program based on corresponding changes to a diagram with states and state transitions",
	"summary": "",
	"abstract": "A system and method for automatically generating a data flow diagram in response to a first diagram. The first diagram may specify one or more states and one or more state transitions, wherein each state transition specifies a transition from a first state to a second state. A data flow diagram may be automatically generated from the first diagram. A hardware description may be generated from the data flow diagram. The hardware description may be usable to configure a programmable hardware element such as, for example, a field-programmable gate array (FPGA). The configured programmable hardware element may implement a hardware implementation of the data flow diagram.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07694273",
	"publication_date": "2010-04-06",
	"application_number": "11740542",
	"application_date": "2007-04-26",
	"tags": null,
	"slug": "automatic-modification-of-a-graphical-program-based-on-corresponding-changes-to-a-diagram-with-states-and-state-transitions",
	"match_type": "description"
},
{
	"name": "Automatically generating a sub-graphical program in response to user input configuring a graphical program node",
	"summary": "",
	"abstract": "A system and method for configuring a node in a graphical program by programmatically generating graphical source code associated with the node. The node may initially have no functionality or may have default functionality and may be able to take on different functionality in the graphical program, depending on configuration user input received. User input specifying desired functionality for the node may be received via a GUI. Graphical source code may then be programmatically generated for the node, such that the node is operable to implement the specified desired functionality when the graphical program is executed. Since the graphical source code associated with the node is generated programmatically, a u201cminimalu201d amount of graphical source code may be generated.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07689917",
	"publication_date": "2010-03-30",
	"application_number": "11347173",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": "automatically-generating-a-subgraphical-program-in-response-to-user-input-configuring-a-graphical-program-node",
	"match_type": "description"
},
{
	"name": "Configuring a GUI element to publish and/or subscribe to data",
	"summary": "",
	"abstract": "A system and method for configuring a graphical user interface (GUI) element to publish data to a data target and/or subscribe to data from a data source. The developer specifies a data source or target The program is executed. If the GUI element is configured to subscribe to data from a data source, then the program receives data from the data source. This data is then be provided to the GUI element, which displays the data to the user. If the GUI element is configured to publish data to a data target, then the program sends or writes data associated with the GUI element to the data target.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07844911",
	"publication_date": "2010-11-30",
	"application_number": "10979003",
	"application_date": "2004-11-01",
	"tags": null,
	"slug": "configuring-a-gui-element-to-publish-andor-subscribe-to-data",
	"match_type": "description"
},
{
	"name": "Generating a data flow diagram",
	"summary": "",
	"abstract": "System and method for generating a data flow diagram. A data flow diagram is provided that includes one or more non-input bound data flow (NIBDF) nodes, each with a respective functionality, and at least one of which is a subsystem node representing a non-input bound data flow sub-diagram comprising a plurality of interconnected nodes. All non-input bound data flow nodes in the data flow diagram are converted into input bound data flow (IBDF) nodes to produce an IBDF diagram, including: for each NIBDF subsystem node in the data flow diagram: partitioning the NIBDF sub-diagram into a plurality of IBDF sub-diagrams that operate according to input bound data flow semantics without changing data dependencies of the NIBDF sub-diagram, and including a plurality of IBDF nodes respectively representing the plurality of IBDF sub-diagrams in the IBDF diagram in lieu of the NIBDF subsystem node. The IBDF diagram is then stored.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07701869",
	"publication_date": "2010-04-20",
	"application_number": "11780533",
	"application_date": "2007-07-20",
	"tags": null,
	"slug": "generating-a-data-flow-diagram",
	"match_type": "description"
},
{
	"name": "Generating a hardware description from a graphical program in response to receiving a diagram with states and state transitions",
	"summary": "",
	"abstract": "A system and method for automatically generating a data flow diagram in response to a first diagram. The first diagram may specify one or more states and one or more state transitions, wherein each state transition specifies a transition from a first state to a second state. A data flow diagram may be automatically generated from the first diagram. A hardware description may be generated from the data flow diagram. The hardware description may be usable to configure a programmable hardware element such as, for example, a field-programmable gate array (FPGA). The configured programmable hardware element may implement a hardware implementation of the data flow diagram.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07818715",
	"publication_date": "2010-10-19",
	"application_number": "11683568",
	"application_date": "2007-03-08",
	"tags": null,
	"slug": "generating-a-hardware-description-from-a-graphical-program-in-response-to-receiving-a-diagram-with-states-and-state-transitions",
	"match_type": "description"
},
{
	"name": "Graphical program analyzer with framework for adding user-defined tests",
	"summary": "",
	"abstract": "A system and method for enabling programmatic analysis of a graphical program, where the programmatic analysis includes user-defined tests. A software program referred to herein as a graphical program analyzer may be operable to programmatically analyze a graphical program by programmatically performing various tests on the graphical program. Some of the tests may be built in to the graphical program analyzer. The graphical program analyzer may also allow a user to add various user-defined tests. Adding user-defined tests to the graphical program analyzer may allow the functionality of the graphical program analyzer to be extended. When programmatically analyzing a graphical program, the graphical program analyzer may be operable to perform the user-defined tests in addition to the built-in tests.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07650594",
	"publication_date": "2010-01-19",
	"application_number": "10854910",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "graphical-program-analyzer-with-framework-for-adding-userdefined-tests",
	"match_type": "description"
},
{
	"name": "Graphical program having a hierarchy of timed loops",
	"summary": "",
	"abstract": "A system and method for executing a graphical program which has a plurality of timed loops, wherein the timed loops utilize timing sources that are related to or derived from each other. According to one embodiment of the method, a graphical program having a plurality of timed loops may be created. In one embodiment the timing sources may be related to each other according to tree hierarchy. Each of the loops in the graphical program may be associated with one of the timing sources. Thus the plurality of loops may be viewed as a group of loops that are grouped together due to the relationships among their respective timing sources. Execution of the graphical program may then begin. Execution of the loops may be delayed until every loop in the group is ready to execute. After every loop in the group is ready to execute, the timing sources for the various loops may be started. To satisfy the defined relationships among the timing sources, the timing sources may be started in an order based on their hierarchical relationship. Once the timing sources have been started, execution of the loops may be begun such that each loop executes based on its respective timing source, i.e., iterations of each loop are timed by its respective timing source.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07669185",
	"publication_date": "2010-02-23",
	"application_number": "10893747",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": "graphical-program-having-a-hierarchy-of-timed-loops",
	"match_type": "description"
},
{
	"name": "Priorities of transitions of a diagram with states",
	"summary": "",
	"abstract": "A system and method for automatically generating a data flow diagram in response to a first diagram. The first diagram may specify one or more states and one or more state transitions, wherein each state transition specifies a transition from a first state to a second state. A data flow diagram may be automatically generated from the first diagram. A hardware description may be generated from the data flow diagram. The hardware description may be usable to configure a programmable hardware element such as, for example, a field-programmable gate array (FPGA). The configured programmable hardware element may implement a hardware implementation of the data flow diagram.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07818716",
	"publication_date": "2010-10-19",
	"application_number": "11744551",
	"application_date": "2007-05-04",
	"tags": null,
	"slug": "priorities-of-transitions-of-a-diagram-with-states",
	"match_type": "description"
},
{
	"name": "System and method for accessing registers of a hardware device in a graphical program",
	"summary": "",
	"abstract": "A system and method for creating a graphical program which accesses registers of a hardware device. In one embodiment, a register access node or primitive may be included in a graphical program, such that when the graphical program is executed on the computer system, the register access node is operable to access (i.e., either read or write) registers of a hardware device in the computer system. The method may comprise first displaying a register access node in the graphical program in response to user input. For example, the user may select the register access node from a palette and drag and drop the register access node onto a window of the graphical program being created. The user may then configure the register access node to access one or more registers of a selected hardware device, e.g., by using a user interface for performing this configuration. In one embodiment, the computer may store a description of the hardware device, wherein the register access node uses the description of the hardware device to access registers of the hardware device during execution of the graphical program. In one embodiment, configuring the register access node may include displaying a list of registers or a list of fields of registers described in the description of the hardware device and receiving user input to select one or more of the registers from the list of registers. The list may also or instead comprise a list of mnemonic names of registers and/or a list of mnemonic names of fields in the registers. The user may thus configure the register access node to access selected registers described in the description of the hardware device.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07743335",
	"publication_date": "2010-06-22",
	"application_number": "11463372",
	"application_date": "2006-08-09",
	"tags": null,
	"slug": "system-and-method-for-accessing-registers-of-a-hardware-device-in-a-graphical-program",
	"match_type": "description"
},
{
	"name": "System and method for graphically creating a sequence of motion control, machine vision, and data acquisition (DAQ) operations",
	"summary": "",
	"abstract": "A system and method for developing a prototype that comprises a sequence of motion control, machine vision, and/or data acquisition (DAQ) u201cMC/MV/DAQu201d operations. A MC/MV/DAQ prototyping environment may be designed to enable a user to easily and efficiently develop/prototype a MC/MV/DAQ sequence (i.e., a sequence of operations which includes one or more motion control, machine vision, and/or DAQ operations) without requiring the user to perform programming, e.g., without needing to write or construct code in any programming language. For example, the environment may provide a graphical user interface (GUI) enabling the user to develop/prototype the MC/MV/DAQ sequence at a high level, by selecting from and configuring a sequence of MC/MV/DAQ operations using the GUI.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07849416",
	"publication_date": "2010-12-07",
	"application_number": "10051442",
	"application_date": "2002-01-18",
	"tags": null,
	"slug": "system-and-method-for-graphically-creating-a-sequence-of-motion-control-machine-vision-and-data-acquisition-daq-operations",
	"match_type": "description"
},
{
	"name": "Test executive with buffer overwrite detection for parameters of user-supplied code modules",
	"summary": "",
	"abstract": "A test executive sequence may be created by including a plurality of test executive steps in the test executive sequence and configuring at least a subset of the steps to call user-supplied code modules. One or more of the user-supplied code modules may take buffer parameters. The test executive sequence may be executed on a host computer under control of a test executive engine. When executing each step in the test executive sequence that calls a user-supplied code module that takes a buffer parameter, the test executive engine may be operable to perform several operations related to detecting a situation where the user-supplied code module writes outside the bounds of the buffer parameter and/or preventing the user-supplied code module from corrupting heap data if the user-supplied code module writes outside the bounds of the buffer parameter.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07849444",
	"publication_date": "2010-12-07",
	"application_number": "11081235",
	"application_date": "2005-03-16",
	"tags": null,
	"slug": "test-executive-with-buffer-overwrite-detection-for-parameters-of-usersupplied-code-modules",
	"match_type": "description"
},
{
	"name": "Timed loop with sequence frames structure for a graphical program",
	"summary": "",
	"abstract": "A u201ctimed loop with framesu201d node may be included in a graphical program. The u201ctimed loop with framesu201d node may combine a timed loop with a timed sequence such that the timed sequence is executed at each iteration of the timed loop. The u201ctimed loop with framesu201d node may be configured with first execution timing information that controls execution timing for the iterations of the loop. A plurality of graphical code portions may be included in the u201ctimed loop with framesu201d such that a sequential order of execution for the graphical code portions is specified. The u201ctimed loop with framesu201d node may be configured with second execution timing information that controls execution timing for the graphical code portions executed at each iteration.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07802229",
	"publication_date": "2010-09-21",
	"application_number": "11204369",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": "timed-loop-with-sequence-frames-structure-for-a-graphical-program",
	"match_type": "description"
},
{
	"name": "Timed sequence for a graphical program",
	"summary": "",
	"abstract": "A system and method for executing a plurality of graphical code portions as a timed sequence is described. The graphical code portions may be included in a graphical program and configured with information specifying a sequential order of execution and execution timing information. During execution of the graphical program, the graphical code portions are executed sequentially in the sequential order and in accordance with the execution timing information. In one embodiment a timed sequence structure node may be utilized to specify the timed sequence. For example, the user may include the timed sequence structure node in the graphical program and associate the plurality of graphical code portions with the timed sequence structure node such that the timed sequence structure node species a sequential order of execution for the graphical code portions. The user may also configure the timed sequence structure node with execution timing information for one or more of the graphical code portions.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07761847",
	"publication_date": "2010-07-20",
	"application_number": "11204286",
	"application_date": "2005-08-15",
	"tags": null,
	"slug": "timed-sequence-for-a-graphical-program",
	"match_type": "description"
},
{
	"name": "Visualization tool for viewing timing information for a graphical program",
	"summary": "",
	"abstract": "A system and method for viewing timing of one or more loops in a graphical program. A graphical program having one or more loops may be created. In one embodiment the one or more loops may include one or more timed loops, i.e., the loops may be configured to execute according to particular execution periods. The graphical program may be executed, and timing analysis data regarding timing of the one or more loops during execution of the graphical program may be stored. A graphical user interface (GUI) for viewing timing of the one or more loops during execution of the graphical program may be displayed. In various embodiments the GUI may display any of various kinds of information regarding timing of the one or more loops, and any kind of visual presentation may be used in displaying the information.",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07703034",
	"publication_date": "2010-04-20",
	"application_number": "10892767",
	"application_date": "2004-07-16",
	"tags": null,
	"slug": "visualization-tool-for-viewing-timing-information-for-a-graphical-program",
	"match_type": "description"
},
{
	"name": "Visually indicating problems found during programmatic analysis of a graphical program",
	"summary": "",
	"abstract": "A system and method for visually indicating one or more problems in a graphical program. The graphical program may be programmatically analyzed to discover a problem (or potential problem) in the graphical program. The problem found during the programmatic analysis of the graphical program may then be visually indicated on a display device. Visually indicating the problem may comprise visually indicating one or more objects in the graphical program to which the problem corresponds. Visually indicating the graphical program object(s) may comprise displaying information or altering the appearance of the object(s) in order to call the user's attention to the object(s).",
	"url": null,
	"owner": "National Instruments Corporation",
	"publication_number": "07650574",
	"publication_date": "2010-01-19",
	"application_number": "10843073",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": "visually-indicating-problems-found-during-programmatic-analysis-of-a-graphical-program",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for title protocol, authentication, and sharing",
	"summary": "",
	"abstract": "A title management apparatus resident on a first computer including a memory for storing a control program and data, and a processor for executing the control program and for managing the data. The apparatus includes a title object resident in the memory including a title structure, the title structure further comprising a content element, a set of attributes, and a set of title object security indicia. The apparatus further includes an authorization structure configured to selectively redeem the content element based at least in part on the user security indicia, and further configured to use a set of protocols. The apparatus also includes a title management structure configured to associate a user with the title object based at least in part on the user data and the title attributes.",
	"url": null,
	"owner": "Navio Systems, Inc.",
	"publication_number": "07814025",
	"publication_date": "2010-10-12",
	"application_number": "10439629",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": "methods-and-apparatus-for-title-protocol-authentication-and-sharing",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for title structure and management",
	"summary": "",
	"abstract": "A title management apparatus resident on a first computer including a memory for storing a control program and data, and a processor for executing the control program and for managing the data. The apparatus includes user data resident in the memory including a set of user security indicia. The apparatus also includes a first title object resident in the memory including a title structure, the title structure further comprising a content element, a set of attributes, and a set of title object security indicia. The apparatus further includes a set of stub objects coupled to the title object, wherein the set of stub objects can further optimize the title structure; an authorization structure configured to selectively redeem the content element based at least in part of the user security indicia; and, a title management structure configured to associate a user with the first title object based at least in part of the user data and the title attributes.",
	"url": null,
	"owner": "Navio Systems, Inc.",
	"publication_number": "07707121",
	"publication_date": "2010-04-27",
	"application_number": "10440286",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": "methods-and-apparatus-for-title-structure-and-management",
	"match_type": "description"
},
{
	"name": "Methods of facilitating merchant transactions using a computerized system including a set of titles",
	"summary": "",
	"abstract": "A method of facilitating a transaction between a merchant and a buyer using a computerized system including a set of titles. The method includes storing the set of titles in a merchant site corresponding to a set of products for sale; browsing the merchant site using a client device and selecting a product for purchase; and generating a payment slip title for the product including information relating to a payment amount and a buyer identifier. The method further includes selecting a payment structure from a set of available payment structures; modifying the payment slip title to include information corresponding to the selected payment structure; releasing the product title to the buyer; and transmitting the payment amount to the merchant.",
	"url": null,
	"owner": "Navio Systems, Inc.",
	"publication_number": "07707066",
	"publication_date": "2010-04-27",
	"application_number": "10414817",
	"application_date": "2003-04-15",
	"tags": null,
	"slug": "methods-of-facilitating-merchant-transactions-using-a-computerized-system-including-a-set-of-titles",
	"match_type": "description"
},
{
	"name": "Application programming interface for geographic data in computer games",
	"summary": "",
	"abstract": "A computer game depicts or represents actual or imaginary geographic locales as part of the play scenarios of the games. The computer game uses a map database that contains data that represent geographic features, such as roads, in a locale. A game engine program presents a game play scenario to a user via a user interface of the game. An application programming interface program accepts requests for data from the game engine program, accesses data from the map database, and provides the data in a suitable format to the game engine program for use in presenting the game scenario to the user.",
	"url": null,
	"owner": "Navteq North America, LLC",
	"publication_number": "07828655",
	"publication_date": "2010-11-09",
	"application_number": "10798531",
	"application_date": "2004-03-11",
	"tags": null,
	"slug": "application-programming-interface-for-geographic-data-in-computer-games",
	"match_type": "name"
},
{
	"name": "System and method of processing payment of bills from multiple bill providers",
	"summary": "",
	"abstract": "A system for processing payment of bills from multiple bill providers which establishes connections to bill provider computers through APIs unique to each bill provider. The system includes a display for displaying a list of bill providers, an input device for recording customer selections of a number of the bill providers from the list, a payment accepting device, such as a check reader, card reader, or cash acceptor, and a processor for establishing connections to computers of the bill providers through the APIs which are resident on the kiosk in response to the customer selections, for sending customer identification information to the computers, for receiving and displaying customer account information from the computers, for recording the payments from the payment accepting device, and for sending payment information to the computers.",
	"url": null,
	"owner": "NCR Corporation",
	"publication_number": "07668766",
	"publication_date": "2010-02-23",
	"application_number": "09950118",
	"application_date": "2001-09-10",
	"tags": null,
	"slug": "system-and-method-of-processing-payment-of-bills-from-multiple-bill-providers",
	"match_type": "description"
},
{
	"name": "Data processing device and data processing method",
	"summary": "",
	"abstract": "A data processing device includes a memory, a processing unit, a logic element, a first database and a management unit. The memory stores a plurality of software modules which processes input data. The processing unit enables to execute the plurality of software module. The logic element enables to configure a plurality of hardware modules, which can perform processings equivalent to those performed by the plurality of software module, using a dynamic reconfiguration. The first database stores configuration information indicating a configuration of the plurality of hardware modules when the plurality of hardware modules is set to the logic element. The management unit determines a first software module to be set to the logic element as a hardware module in the plurality of software modules on the basis of a predetermined condition with respect to a processing of the input data, and sets a first hardware module corresponding to the first software module to the logic element with reference to the first database.",
	"url": null,
	"owner": "Nec Corporation",
	"publication_number": "07774591",
	"publication_date": "2010-08-10",
	"application_number": "11620419",
	"application_date": "2007-01-05",
	"tags": null,
	"slug": "data-processing-device-and-data-processing-method",
	"match_type": "description"
},
{
	"name": "Client failure fencing mechanism for fencing network file system data in a host-cluster environment",
	"summary": "",
	"abstract": "A method and system performs a fencing technique in a host cluster storage environment. The fence program executes on each cluster member in the cluster, and the cluster is coupled to a storage system by a network. When a cluster member fails or cluster membership changes, the fence program is invoked and a host fencing API message is sent via the network to the storage system. The storage system in turn modifies export lists to restrict further access by the failed cluster node to otherwise fence the failed cluster node off from that storage system or from certain directories within that storage system.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07653682",
	"publication_date": "2010-01-26",
	"application_number": "11187781",
	"application_date": "2005-07-22",
	"tags": null,
	"slug": "client-failure-fencing-mechanism-for-fencing-network-file-system-data-in-a-hostcluster-environment",
	"match_type": "description"
},
{
	"name": "Data placement technique for striping data containers across volumes of a storage system cluster",
	"summary": "",
	"abstract": "A technique places content, such as data, of one or more data containers on volumes of a striped volume set (SVS). The placement of data across the volumes of the SVS allows specification of a deterministic pattern of fixed length. That is, the pattern determines a placement of data of a data container that is striped among the volumes of the SVS. The placement pattern is such that the stripes are distributed exactly or nearly equally among the volumes and that, within any local span of a small multiple of the number of volumes, the stripes are distributed nearly equally among the volumes. The placement pattern is also substantially similar for a plurality of SVSs having different numbers of volumes.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07647451",
	"publication_date": "2010-01-12",
	"application_number": "12109272",
	"application_date": "2008-04-24",
	"tags": null,
	"slug": "data-placement-technique-for-striping-data-containers-across-volumes-of-a-storage-system-cluster",
	"match_type": "description"
},
{
	"name": "Dedicated software thread for communicating backup history during backup operations",
	"summary": "",
	"abstract": "A technique provides a dedicated software thread for communicating backup history to clients of a storage system during backup operations. Illustratively, an operating system of the storage system may execute one or more u201csessionu201d (e.g., backup) threads and a u201cworkeru201d (e.g., backup history) thread. In particular, the one or more session threads are each configured to backup stored data for a corresponding client to a backup storage device and to generate backup history of data backed up to the backup storage device. Also, the worker thread is configured to obtain the backup history from the one or more session threads, and transmit the backup history to the corresponding client of each of the one or more session threads. In this manner, the worker thread may wait for a response from the corresponding clients, while the one or more corresponding session threads continue to backup the stored data and generate backup history.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07797284",
	"publication_date": "2010-09-14",
	"application_number": "11844442",
	"application_date": "2007-08-24",
	"tags": null,
	"slug": "dedicated-software-thread-for-communicating-backup-history-during-backup-operations",
	"match_type": "description"
},
{
	"name": "Interfaces for flexible storage management",
	"summary": "",
	"abstract": "Interfaces for flexible storage management. An embodiment of a system includes a data storage, the data storage including one or more of a first storage system, the first storage system including a file structure that is coextensive with a set of memory devices, or a second storage system, the second storage system including a storage structure that is coextensive with a set of memory devices, the storage structure including zero or more file structures. The system further includes an interface system for the data storage, the interface system being used for both the first storage system and the second storage system.",
	"url": null,
	"owner": "Netapp, Inc.",
	"publication_number": "07734869",
	"publication_date": "2010-06-08",
	"application_number": "11118224",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": "interfaces-for-flexible-storage-management",
	"match_type": "description"
},
{
	"name": "Location-independent RAID group virtual block management",
	"summary": "",
	"abstract": "A storage operating system is configured to assign volume block numbers (VBNs) to a volume. The system has a plurality of disks, and each disk of the plurality of disks is assigned disk block numbers (DBNs). A raidmap is configured to map the VBNs to the DBNs of the plurality of physical disks, the mapping for a particular disk stored in a disk label for the particular disk. The disk label for the particular disk is then written to the particular disk.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07660966",
	"publication_date": "2010-02-09",
	"application_number": "11497590",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": "locationindependent-raid-group-virtual-block-management",
	"match_type": "description"
},
{
	"name": "Managing snapshots using messages",
	"summary": "",
	"abstract": "A method and apparatus for managing snapshots of a file system using messages. A snapshot is a restorable version of a file system created at a predetermined point in time. A message is a persistent data structure supported by a file server. A message may include one or more snapshots, attributes for the message, and/or access control information for the message. The attributes and access control information are applied to all snapshots in the message. The attributes in the message enable users to perform automatic event-based management of the snapshots in the message. The access control information in the message provides granular access control to the snapshots in the message.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07694095",
	"publication_date": "2010-04-06",
	"application_number": "11900271",
	"application_date": "2007-09-10",
	"tags": null,
	"slug": "managing-snapshots-using-messages",
	"match_type": "description"
},
{
	"name": "Method and apparatus for deploying updates to a storage server management application",
	"summary": "",
	"abstract": "According to an embodiment of the invention, a storage server management application (SSMA) includes scripting ability. The scripting ability allows functionality to be added to the SSMA by deploying scripting packages onto the SSMA. The packages may be written by a user having access to the SSMA, and deployed onto the SSMA without affecting the core functionality of the SSMA, and may be easily removed. One package allows a system administrator to monitor the configuration of storage servers monitored by the SSMA by comparing the current configuration of the filers to a standard configuration. Another package monitors best practices for redundant array of inexpensive disks (RAID) systems. Other packages may be added to the SSMA.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07752615",
	"publication_date": "2010-07-06",
	"application_number": "11118695",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "method-and-apparatus-for-deploying-updates-to-a-storage-server-management-application",
	"match_type": "description"
},
{
	"name": "Method and system for dynamic expansion and contraction of nodes in a storage area network",
	"summary": "",
	"abstract": "A method and system to add a storage controller in a SAN includes receiving a storage controller node to add to a logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, adopting the logical nodename from the logical storage controller in place of the predetermined nodename associated with the storage controller and renumbering a set of ports associated with the storage controller to extend the sequence of logical ports associated with the logical storage controller. Removing the storage controller includes removing a storage controller node from the logical storage controller in the storage area network having a logical nodename and a sequence of logical ports, deleting the set of ports associated with the removed storage controller from the sequence of logical ports associated with the logical storage controller and renumbering the sequence of logical ports to accommodate the deleted ports.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07752294",
	"publication_date": "2010-07-06",
	"application_number": "10695887",
	"application_date": "2003-10-28",
	"tags": null,
	"slug": "method-and-system-for-dynamic-expansion-and-contraction-of-nodes-in-a-storage-area-network",
	"match_type": "description"
},
{
	"name": "Method and system for maintaining disk location via homeness",
	"summary": "",
	"abstract": "A method and system manages ownership information about disks in a storage network without the need for an emulated, partner mode system. The method and system provides for ownership information, including a current owner and a home owner for resources, such as disks, to be stored on each disk in a storage system, as well as to be stored in memory on each storage system node in the network. A further aspect of the invention is a disk homeness application program interface (API), which provides commands that can be utilized by an administrator at a host computer to set, modify and display ownership information about each disk in the cluster. Upon a takeover, any node in the network can takeover one or more disks by reading the ownership information stored on the disks or in the tables.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07711683",
	"publication_date": "2010-05-04",
	"application_number": "11606538",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "method-and-system-for-maintaining-disk-location-via-homeness",
	"match_type": "description"
},
{
	"name": "Non-disruptive generation of core files without reboot",
	"summary": "",
	"abstract": "The present invention is directed to non-disruptive generation of core files for a computer appliance without rebooting the computer appliance. In an embodiment of the invention, the computer appliance is analyzed. A determination is made as to what core file generation options will be non-disruptive to the computer appliance. The tradeoff is evaluated between options that will generate core files which are more useful in diagnosing potential problems with the computer appliance and options which will generate core files which are less disruptive. A procedure is determined which will generate the core file without disrupting the computer appliance. Resources are allocated to utilize in generation of the core file. The procedure is then executed and a core file is generated without disrupting the computer appliance.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07707462",
	"publication_date": "2010-04-27",
	"application_number": "11789185",
	"application_date": "2007-04-24",
	"tags": null,
	"slug": "nondisruptive-generation-of-core-files-without-reboot",
	"match_type": "description"
},
{
	"name": "Policy engine to control the servicing of requests received by a storage server",
	"summary": "",
	"abstract": "Certain tasks are outsourced from a filer to a remote policy engine. The policy engine implements various defined policies to control the filer's servicing of client requests. For example, the policy engine can be used to implement policies to control various storage-related operations relating to data managed by a filer, such as creation, deletion, modification, opening, closing, renaming and/or changing attributes of files or directories managed by the filer.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07778981",
	"publication_date": "2010-08-17",
	"application_number": "10777418",
	"application_date": "2004-02-11",
	"tags": null,
	"slug": "policy-engine-to-control-the-servicing-of-requests-received-by-a-storage-server",
	"match_type": "description"
},
{
	"name": "Server monitoring framework",
	"summary": "",
	"abstract": "A novel software framework monitors server statistics for a plurality of software modules and makes its collected statistics available to those modules. Unlike prior implementations, the framework provides shared server-monitoring code through which the plurality of software modules can monitor various types of servers, such as authentication servers, ICAP servers, origin servers, hierarchical proxy servers and so forth. Because the same server-monitoring code is accessed by each of the software modules, the overall amount of code that is written, compiled and executed may be reduced. Moreover, the shared server-monitoring code is not protocol-dependant and therefore may be coded outside of the kernel-level protocol engines. Preferably, the shared server-monitoring code is implemented as a user-level thread or process.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07653722",
	"publication_date": "2010-01-26",
	"application_number": "11294664",
	"application_date": "2005-12-05",
	"tags": null,
	"slug": "server-monitoring-framework",
	"match_type": "description"
},
{
	"name": "Shared implementation for multiple system interfaces",
	"summary": "",
	"abstract": "A shared implementation for multiple system interfaces. An embodiment of a method includes receiving a command for a system, the command being a command for one of a plurality of interfaces for the system; generating a data structure for the command, the data structure including an opcode from a common library; and parsing the command using one of a plurality of parsing functions, parsing of the command including inserting an argument from the command into the data structure for the command.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07756154",
	"publication_date": "2010-07-13",
	"application_number": "11088631",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": "shared-implementation-for-multiple-system-interfaces",
	"match_type": "description"
},
{
	"name": "System and method for data protection management in a logical namespace of a storage system environment",
	"summary": "",
	"abstract": "A system and method for data protection in a logical namespace of a storage system environment is provided. An integrated management framework implements a data protection technique that monitors failures in the logical namespace at a managed data object granularity, e.g., a share. In the event of a failure to the data object, e.g., a primary share, the data protection technique enables automatic failover for a link point to the object (primary share) that is protected by a backup copy of the data object, e.g., a secondary share. That is, the data protection technique enables failover from the primary share to a secondary share and corresponding linking of the secondary share to the link point in the logical namespace.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07734951",
	"publication_date": "2010-06-08",
	"application_number": "11384710",
	"application_date": "2006-03-20",
	"tags": null,
	"slug": "system-and-method-for-data-protection-management-in-a-logical-namespace-of-a-storage-system-environment",
	"match_type": "description"
},
{
	"name": "System and method for efficiently guaranteeing data consistency to clients of a storage system cluster",
	"summary": "",
	"abstract": "A method for operating a computer storage system is disclosed. One or more data storage devices are configured to store a data content of a data container. A data structure having a plurality of permitted modification times (mtimes) is generated, the mtimes to control modifying a data stored in the data container. An I/O operation is performed by the storage system in response to a selected mtime. A request for the I/O operation is received from a client, and the data structure having a plurality of permitted modification times (mtimes) is generated in response to the request. The selected mtime is transmitted to the client, and an I/O operation is requested by the client in response to the selected mtime. The I/O operation is performed as an atomic I/O operation.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07721045",
	"publication_date": "2010-05-18",
	"application_number": "12048659",
	"application_date": "2008-03-14",
	"tags": null,
	"slug": "system-and-method-for-efficiently-guaranteeing-data-consistency-to-clients-of-a-storage-system-cluster",
	"match_type": "description"
},
{
	"name": "System and method for emulating SCSI reservations using network file access protocols",
	"summary": "",
	"abstract": "A system and method for emulating SCSI reservations using network file access protocols is provided. The system and method enable applications or operating systems on a networked computer designed to utilize SCSI reservations on only locally attached storage to also access networked data storage. The emulation occurs transparently to higher levels of operating systems or applications so that the applications or operating systems which are designed to only access locally attached storage may be enabled to access networked storage.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07711539",
	"publication_date": "2010-05-04",
	"application_number": "10217038",
	"application_date": "2002-08-12",
	"tags": null,
	"slug": "system-and-method-for-emulating-scsi-reservations-using-network-file-access-protocols",
	"match_type": "description"
},
{
	"name": "System and method for enabling de-duplication in a storage system architecture",
	"summary": "",
	"abstract": "A system and method enables de-duplication in a storage system architecture comprising one or more volumes distributed across a plurality of nodes interconnected as a cluster. De-duplication is enabled through the use of file offset indexing in combination with data content redirection. File offset indexing is illustratively embodied as a Locate by offset function, while data content redirection is embodied as a novel Locate by content function. In response to input of, inter alia, a data container (file) offset, the Locate by offset function returns a data container (file) index that is used to determine a storage server that is responsible for a particular region of the file. The Locate by content function is then invoked to determine the storage server that actually stores the requested data on disk. Notably, the content function ensures that data is stored on a volume of a storage server based on the content of that data rather than based on its offset within a file. This aspect of the invention ensures that all blocks having identical data content are served by the same storage server so that it may implement de-duplication to conserve storage space on disk and increase cache efficiency of memory.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07747584",
	"publication_date": "2010-06-29",
	"application_number": "11507770",
	"application_date": "2006-08-22",
	"tags": null,
	"slug": "system-and-method-for-enabling-deduplication-in-a-storage-system-architecture",
	"match_type": "description"
},
{
	"name": "System and method for failover of guest operating systems in a virtual machine environment",
	"summary": "",
	"abstract": "A system and method provides for failover of guest operating systems in a virtual machine environment. During initialization of a computer executing a virtual machine operating system, a first guest operating system allocates a first memory region within a first domain and notifies a second guest operating system operating in a second domain of the allocated first memory region. Similarly, the second guest operating system allocates a second region of memory within the second domain and notifies the first operating system of the allocated second memory region. In the event of a software failure affecting one of the guest operating systems, the surviving guest operating system assumes the identity of the failed operating system and utilizes data stored within the shared memory region to replay to storage devices to render them consistent.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07809976",
	"publication_date": "2010-10-05",
	"application_number": "11742209",
	"application_date": "2007-04-30",
	"tags": null,
	"slug": "system-and-method-for-failover-of-guest-operating-systems-in-a-virtual-machine-environment",
	"match_type": "description"
},
{
	"name": "System and method for failover of iSCSI target portal groups in a cluster environment",
	"summary": "",
	"abstract": "A system and method for the failover of iSCSI target portal groups (TPGs) is provided. Each network portal within a storage system is associated with a network portal data structure identifying a destination storage system in the event of failover/takeover operation. A management module ensures that all network portals associated with a target portal group have the same destination as a failover storage system. During a failover operation, all network portals within a TPG failover to the same destination storage system.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07797570",
	"publication_date": "2010-09-14",
	"application_number": "11290198",
	"application_date": "2005-11-29",
	"tags": null,
	"slug": "system-and-method-for-failover-of-iscsi-target-portal-groups-in-a-cluster-environment",
	"match_type": "description"
},
{
	"name": "System and method for implementing atomic cross-stripe write operations in a striped volume set",
	"summary": "",
	"abstract": "A system and method performs cross stripe write operations to a striped volume set (SVS) comprising of a plurality of volumes. A cross stripe write operation is directed to a first volume striping module (VSM) serving a first data volume where the entire write data of the operation is written to the volume. The first VSM then forwards excess data that extends beyond the boundary of a stripe to a second VSM for storage on a second data volume.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07743210",
	"publication_date": "2010-06-22",
	"application_number": "11119279",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "system-and-method-for-implementing-atomic-crossstripe-write-operations-in-a-striped-volume-set",
	"match_type": "description"
},
{
	"name": "System and method for management of jobs in a cluster environment",
	"summary": "",
	"abstract": "A system and method for management of jobs in the cluster environment is provided. Each node a cluster executes a job manager that interfaces with a replicated database to enable cluster wide management of jobs within the cluster. Jobs are queued in the replicated database and retrieved by a job manager for execution. Each job manager ensures that jobs are processed through completion or, failing that, are re-queued on another storage system for execution.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07840969",
	"publication_date": "2010-11-23",
	"application_number": "11414696",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": "system-and-method-for-management-of-jobs-in-a-cluster-environment",
	"match_type": "description"
},
{
	"name": "System and method for managing hard and soft lock state information in a distributed storage system environment",
	"summary": "",
	"abstract": "A system and method manages lock state information in a storage system. A meta-data volume node includes a lock state database which is a comprehensive source for lock state information about data containers in the system. A plurality of data volume nodes include local lock caches, which contain information about locks. Lock state messaging between the meta-data volume node and the data volume nodes is used to assign locks and to update local lock caches. The meta-data volume node is configured to determine whether input/output requests should be allowed or denied and to instruct the data volume nodes of this input/output operation result. Lock information is also sent to the data volume nodes for storage in local lock state caches to the extent the data volume nodes have the network capacity locally.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07730258",
	"publication_date": "2010-06-01",
	"application_number": "11591738",
	"application_date": "2006-11-02",
	"tags": null,
	"slug": "system-and-method-for-managing-hard-and-soft-lock-state-information-in-a-distributed-storage-system-environment",
	"match_type": "description"
},
{
	"name": "System and method for persistently storing lock state information",
	"summary": "",
	"abstract": "A system and method persistently stores lock state information associated with a file system within a storage system. Received operations that modify lock state information are stored in a non-volatile log (NVLog) within a non-volatile random access memory (NVRAM) of the storage system. During a consistency point (CP), entries from the NVLog are committed to a lock file. In the event of an error condition, lock state information may be recovered from the lock file, thereby enabling rapid reconstruction of the lock state prior to the error condition.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07844584",
	"publication_date": "2010-11-30",
	"application_number": "11473888",
	"application_date": "2006-06-23",
	"tags": null,
	"slug": "system-and-method-for-persistently-storing-lock-state-information",
	"match_type": "description"
},
{
	"name": "System and method for providing space availability notification in a distributed striped volume set",
	"summary": "",
	"abstract": "A system and method for managing space availability in a distributed striped file system is provided. A master data server is configured to send space availability detection messages to a plurality of data volumes servers hosting constituent volumes of a striped volume set. If one of the constituent volumes in the striped volume set has a low-in-space flag set, then the master data volume instructs all of the constituent volumes to set a low-in-space required flag, and no further writes are accepted for the striped volume set. The low-in-space and low-in-space required flags represent two states, and these states are returned in response to subsequent space availability detection messages from the master data server. A procedure for utilizing reserved space to complete an accepted cross stripe write operation is also provided.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07797489",
	"publication_date": "2010-09-14",
	"application_number": "11756932",
	"application_date": "2007-06-01",
	"tags": null,
	"slug": "system-and-method-for-providing-space-availability-notification-in-a-distributed-striped-volume-set",
	"match_type": "description"
},
{
	"name": "System and method for supporting change notify watches for virtualized storage systems",
	"summary": "",
	"abstract": "A technique supports Change Notify watches in virtualized storage systems. In particular, techniques of the present invention advantageously emulate Change Notify features (e.g., as documented by the CIFS protocol) on virtualized storage systems by leveraging virtualization mapping information (e.g., an inode-to-path or u201cIPu201d mapping) to walk a file system tree backwards from the data blocks to their ancestors to determine whether there are applicable watches on ancestor directories, and to obtain a pathname (e.g., relative) of the watched (changed) data. In particular, changes to data received from different protocols (e.g., CIFS, NFS, HTTP, etc.) can trigger watches to clients on the virtualized storage system. Also, performance may be enhanced using various caching techniques, and watch state may be retained while moving watched data across volumes of the virtualized storage system.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07809776",
	"publication_date": "2010-10-05",
	"application_number": "11948608",
	"application_date": "2007-11-30",
	"tags": null,
	"slug": "system-and-method-for-supporting-change-notify-watches-for-virtualized-storage-systems",
	"match_type": "description"
},
{
	"name": "System and method for virtual interface failover within a cluster",
	"summary": "",
	"abstract": "A cluster-wide published configuration system and method is provided for assigning host nodes to virtual interfaces (VIFs) in a cluster of data storage systems. A coordinating VIF manager publishes a set of failover rules using a replication database. The coordinating VIF manager monitors VIF hosting status within a cluster. In the event of a VIF failure, the coordinating VIF manager publishes a reassignment of host nodes using a single read-write transaction of a replication database service. Secondary VIF managers in the cluster must perform VIF hosting in accordance to the reassignment. If a secondary VIF manager can not activate an assigned VIF it must publishing new reassignment of VIF hosts via the replication database service.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07734947",
	"publication_date": "2010-06-08",
	"application_number": "11736197",
	"application_date": "2007-04-17",
	"tags": null,
	"slug": "system-and-method-for-virtual-interface-failover-within-a-cluster",
	"match_type": "description"
},
{
	"name": "Technique for managing addition of disks to a volume of a storage system",
	"summary": "",
	"abstract": "A technique manages the addition of disks to a volume of a storage system. A disk addition procedure is encapsulated into a DISKADD object conforming to a configuration management framework used to implement a RAID subsystem of the storage system. The DISKADD object is responsible for determining a set of available disks required to satisfy a disk addition request issued by an operator through a user interface of a storage operating system executing on the storage system. Furthermore, the DISKADD object is responsible for monitoring the state of the disks, including preparation/initialization of the disks (e.g., disk zeroing) and possible disk failures, as well as placing those disks into RAID groups of the volume once preparation completes. Persistent storage of the state of a pending disk addition is then accomplished using an implementation of the configuration management framework.",
	"url": null,
	"owner": "NetApp, Inc.",
	"publication_number": "07694173",
	"publication_date": "2010-04-06",
	"application_number": "12196847",
	"application_date": "2008-08-22",
	"tags": null,
	"slug": "technique-for-managing-addition-of-disks-to-a-volume-of-a-storage-system",
	"match_type": "description"
},
{
	"name": "Mobile networking system and method using IPv4 and IPv6",
	"summary": "",
	"abstract": "A method for communicating Internet Protocol data over a network, comprises providing an IPv4 data stream and providing an IPv6 data stream. An encrypted Internet Protocol communications tunnel is established through the network between a roaming mobile device and a further computing device. The IPv4 and IPv6 data streams are combined for encapsulation within and transmission through said encrypted tunnel. Continual secure communications of the encapsulated IPv4 and IPv6 data streams is maintained between said roaming mobile device and the further computing device while the roaming mobile device roams between network access points. The encapsulated, transmitted IPv4 and IPv6 data streams are received from said tunnel, and the received IPv4 and IPv6 data streams are demultiplexed.",
	"url": null,
	"owner": "Netmotion Wireless, Inc.",
	"publication_number": "07644171",
	"publication_date": "2010-01-05",
	"application_number": "11252995",
	"application_date": "2005-10-19",
	"tags": null,
	"slug": "mobile-networking-system-and-method-using-ipv4-and-ipv6",
	"match_type": "description"
},
{
	"name": "Method for providing topology awareness information within an IP network",
	"summary": "",
	"abstract": "A method, a unit and a computer program product for providing topology awareness information within an IP network includes a central node and a plurality of routers, wherein the probe is implemented in a router within the IP network and the probe belongs to a topology awareness system, that includes: elements for obtaining and maintaining relationship with other probes within the IP network, elements for collecting information about other network elements e.g. routers and switches, elements for communicating topology information with the central node of the topology awareness system, and elements for obtaining information concerning local resources on the router where the probe is implemented.",
	"url": null,
	"owner": "Netsocket, Inc.",
	"publication_number": "07706300",
	"publication_date": "2010-04-27",
	"application_number": "10506164",
	"application_date": "2002-04-29",
	"tags": null,
	"slug": "method-for-providing-topology-awareness-information-within-an-ip-network",
	"match_type": "description"
},
{
	"name": "Apparatus and method for providing virtualized hardware resources within a virtual execution environment",
	"summary": "",
	"abstract": "Embodiments described are generally directed to a system and method for providing virtualized hardware resources within a virtual execution environment. In one embodiment, it is determined whether an operating system (OS) is a guest OS running within a virtual execution environment of a host platform. If an OS is determined to be a guest OS within a virtual execution environment, a virtual driver is provided for the virtual execution to fetch host hardware initiator information from a host server via a virtualization layer. In one embodiment, no corresponding guest driver is available to the virtual execution environment. In one embodiment, the virtualization layer provides virtualized hardware resources, including the virtual driver, for a virtual execution environment. Using the host hardware initiator information, in one embodiment, one or more virtual storage devices may be created within the host attached storage of the host platform. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07793307",
	"publication_date": "2010-09-07",
	"application_number": "11784430",
	"application_date": "2007-04-06",
	"tags": null,
	"slug": "apparatus-and-method-for-providing-virtualized-hardware-resources-within-a-virtual-execution-environment",
	"match_type": "description"
},
{
	"name": "Load balancing a data storage system",
	"summary": "",
	"abstract": "An apparatus and method for automatically load balancing one or more workload groups to a set of available physical resources of a data storage system, and generating a layout planning recommendation of the set of available physical resources that supports the one or more workload groups based on the load balancing.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07669029",
	"publication_date": "2010-02-23",
	"application_number": "11600526",
	"application_date": "2006-11-15",
	"tags": null,
	"slug": "load-balancing-a-data-storage-system",
	"match_type": "description"
},
{
	"name": "Method and system of access control based on a constraint controlling role assumption",
	"summary": "",
	"abstract": "In an RBAC system, a capability is defined as including an operation and an object on which the operation is to be performed. The capability is assigned to a role, which is in turn assigned to a user. Whether a user's request to perform an operation on an object should be authorized is determined based on whether a capability to perform the operation on the object is assigned to a role which is in turn assigned to the user. Further, the authorization is determined based on the evaluation of the constraint(s) attached to the role. If the evaluation result of the constraint(s) disallows the user to assume the role, the user is prohibited from performing the operation on the object even the user has such capability.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07712127",
	"publication_date": "2010-05-04",
	"application_number": "11601098",
	"application_date": "2006-11-17",
	"tags": null,
	"slug": "method-and-system-of-access-control-based-on-a-constraint-controlling-role-assumption",
	"match_type": "description"
},
{
	"name": "Rule-based performance analysis of storage appliances",
	"summary": "",
	"abstract": "A rule-based performance analysis tool and a method analyze metrics from a network storage system and generate recommendations for resolving actual or anticipated performance problems. The tool and method collect system metrics from one or more sources, including a storage appliance and optional user-reported comments and/or information about proposed changes to the network storage system. A rule base is applied against the collected metrics and user inputs. Each rule is associated with one or more metrics and has one or more threshold values. A rule can analyze a rate of change of a metric. For each triggered rule, the tool provides an output that includes an explanation of the rule, a suggested action to alleviate or avoid the problem that triggered the rule and, optionally, a priority level. The outputs are presented in a hierarchical display.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07844701",
	"publication_date": "2010-11-30",
	"application_number": "11194253",
	"application_date": "2005-08-01",
	"tags": null,
	"slug": "rulebased-performance-analysis-of-storage-appliances",
	"match_type": "description"
},
{
	"name": "System and method for filtering information in a data storage system",
	"summary": "",
	"abstract": "A storage system filter provides protocol aware filter operations that avoid I/O blocking or calling thread holding. A filter framework includes a filter controller that handles request and response calls to filters that are registered with the filter framework. Filters may be loaded and unloaded in a consistent state, and the filter framework provides services for the filters for common functions. Filters may operate in a user mode or a kernel mode and may be invoked in a synchronous, an asynchronous, or an asynchronous release mode. Filter registration may include registration for I/O resources, and may include tagging of I/O requests and responses to contribute to preventing conflicts.",
	"url": null,
	"owner": "Network Appliance, Inc.",
	"publication_number": "07809868",
	"publication_date": "2010-10-05",
	"application_number": "11789073",
	"application_date": "2007-04-23",
	"tags": null,
	"slug": "system-and-method-for-filtering-information-in-a-data-storage-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for website monitoring and load testing via simulation",
	"summary": "",
	"abstract": "Described herein are systems and methods for website or web based application monitoring and load testing. A server is configured to execute monitoring or load testing agents on various agent devices that are placed in various locations across a network. The agents receive a playback script from the server and execute the script to simulate a user session that is part of a website monitoring or load testing project. Execution of the playback script may cause the agent to send commands to a generic browser application that in turn carries out those commands. Alternatively, or in combination, execution of the script may cause the agent to simulate operating system commands such as mouse, keyboard, and voice commands. The results of the script execution by the agent are stored and sent back to the server for potential real time alerting notification and compilation into a related report. Methods for recording the playback scripts are also provided.",
	"url": null,
	"owner": "Neustar, Inc.",
	"publication_number": "07770068",
	"publication_date": "2010-08-03",
	"application_number": "11142889",
	"application_date": "2005-06-01",
	"tags": null,
	"slug": "systems-and-methods-for-website-monitoring-and-load-testing-via-simulation",
	"match_type": "description"
},
{
	"name": "Data archiving system",
	"summary": "",
	"abstract": "An encrypted file storage solution consists of a cluster of processing nodes, external data storage, and a software agent (the u201cFile System Watcheru201d), which is installed on the application servers. Cluster sizes of one node up to many hundreds of nodes are possible. There are also remote u201cKey Serversu201d which provide various services to one or more clusters. The preceding describes a preferred embodiment, though in some cases it may be desirable to u201ccollapseu201d some of the functionality into a smaller number of hardware devices, typically trading off cost versus security and fault-tolerance.",
	"url": null,
	"owner": "Nexsan Technologies Canada Inc.",
	"publication_number": "07801871",
	"publication_date": "2010-09-21",
	"application_number": "11463461",
	"application_date": "2006-08-09",
	"tags": null,
	"slug": "data-archiving-system",
	"match_type": "description"
},
{
	"name": "System and method for automating document search and report generation",
	"summary": "",
	"abstract": "A method for processing a customer request comprises receiving a request, sending the requests to a data provider; receiving a document image from the data provider, performing pattern data extraction on the document image, and preparing a customized report. Additionally, a system for processing customer requests comprises a receiving module for receiving customer requests, a data acquisition module for receiving data from plural sources, an image distribution module for distributing data to appropriate entities, a pattern data extraction module for performing pattern detection and extraction, and a data output module for formatting data.",
	"url": null,
	"owner": "Nextace Corporation",
	"publication_number": "07751624",
	"publication_date": "2010-07-06",
	"application_number": "11208050",
	"application_date": "2005-08-19",
	"tags": null,
	"slug": "system-and-method-for-automating-document-search-and-report-generation",
	"match_type": "description"
},
{
	"name": "System and method for joining communication groups",
	"summary": "",
	"abstract": "Systems and methods for supporting group communications are provided. A group list management server (GLMS) stores communications group definitions in documents, such as extensible mark-up language (XML) documents. The communications group can include communication addresses for different types of communication applications, including electronic mail, voice telephone, data, instant messaging, voice dispatch, short messaging service (SMS), and multimedia service (MMS). Various methods for joining communications groups are provided.",
	"url": null,
	"owner": "Nextel Communications Company L.P.",
	"publication_number": "07818020",
	"publication_date": "2010-10-19",
	"application_number": "11693234",
	"application_date": "2007-03-29",
	"tags": null,
	"slug": "system-and-method-for-joining-communication-groups",
	"match_type": "description"
},
{
	"name": "Systems and methods for opt-in and opt-out talk group management",
	"summary": "",
	"abstract": "Systems and methods for supporting group communications are provided. A group list management server (GLMS) stores communications group definitions in documents, such as extensible mark-up language (XML) documents. The communications group can include communication addresses for different types of communication applications, including electronic mail, voice telephone, data, instant messaging, voice dispatch, short messaging service (SMS), and multimedia service (MMS). Various methods for managing communications groups and features provided for communications groups are provided.",
	"url": null,
	"owner": "Nextel Communications Inc.",
	"publication_number": "07844294",
	"publication_date": "2010-11-30",
	"application_number": "11706219",
	"application_date": "2007-02-15",
	"tags": null,
	"slug": "systems-and-methods-for-optin-and-optout-talk-group-management",
	"match_type": "description"
},
{
	"name": "Systems and methods for talk group distribution",
	"summary": "",
	"abstract": "Systems and methods for supporting group communications are provided. A group list management server (GLMS) stores communications group definitions in documents, such as extensible mark-up language (XML) documents. The communications group can include communication addresses for different types of communication applications, including electronic mail, voice telephone, data, instant messaging, voice dispatch, short messaging service (SMS), and multimedia service (MMS). Various methods for managing communications groups and features provided for communications groups are provided.",
	"url": null,
	"owner": "Nextel Communications Inc.",
	"publication_number": "07797010",
	"publication_date": "2010-09-14",
	"application_number": "11706217",
	"application_date": "2007-02-15",
	"tags": null,
	"slug": "systems-and-methods-for-talk-group-distribution",
	"match_type": "description"
},
{
	"name": "Advanced quality management and recording solutions for walk-in environments",
	"summary": "",
	"abstract": "A system and method for capturing, logging and retrieval of face-to-face interactions characterizing walk-in environments. The system comprising a device for capturing and storing one or more face to face interactions captured in the presence of the parties to the interaction, and a database for storing data and metadata information associated with the face-to-face interactions captured.",
	"url": null,
	"owner": "Nice Systems Ltd",
	"publication_number": "07728870",
	"publication_date": "2010-06-01",
	"application_number": "10831136",
	"application_date": "2004-04-26",
	"tags": null,
	"slug": "advanced-quality-management-and-recording-solutions-for-walkin-environments",
	"match_type": "description"
},
{
	"name": "Evaluation system and method of a search operation that detects a detection subject on an object",
	"summary": "",
	"abstract": "First, an operator inputs various parameters required for a mark recognition operation including a designated position coordinate designated via a mouse and a keyboard (step ). Then, an edge potential position closest to the designated position is selected (step ), or an edge potential position within a predetermined range having the designated position as a datum is selected (step ), and a mark recognition operation is performed at the selected edge potential position (step ). The recognition results are shown on a display (step ).",
	"url": null,
	"owner": "Nikon Corporation",
	"publication_number": "07838858",
	"publication_date": "2010-11-23",
	"application_number": "11442270",
	"application_date": "2006-05-30",
	"tags": null,
	"slug": "evaluation-system-and-method-of-a-search-operation-that-detects-a-detection-subject-on-an-object",
	"match_type": "description"
},
{
	"name": "Controlling access to services in a communications system",
	"summary": "",
	"abstract": "A proxy network element for controlling access to services in a communications system is disclosed. The proxy network element is configured to communicate with at least one further network element using a protocol belonging to a plurality of protocols, the at least one further network element controlling service usage based on service subscriptions. The proxy network element is also configured to provide access for the at least one further network element to at least one information store storing information relating to service subscriptions. The proxy network element provides support for communicating using the plurality of protocols and support for accessing a plurality of different information stores.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07644267",
	"publication_date": "2010-01-05",
	"application_number": "10879585",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": "controlling-access-to-services-in-a-communications-system",
	"match_type": "description"
},
{
	"name": "Enhancing streaming media reception for a mobile device during cell reselection",
	"summary": "",
	"abstract": "The invention relates to a method for streaming of media from a streaming server () to a mobile client device () over an air-interface, wherein, after a cell reselection, the method comprises requesting the streaming server () to resend streaming media which the mobile client device () was not able to receive due to the cell reselection.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07733830",
	"publication_date": "2010-06-08",
	"application_number": "10674902",
	"application_date": "2003-09-29",
	"tags": null,
	"slug": "enhancing-streaming-media-reception-for-a-mobile-device-during-cell-reselection",
	"match_type": "description"
},
{
	"name": "Handling incoming data",
	"summary": "",
	"abstract": "So-called push technology enables reception of new contents automatically, i.e. without user initiation. In order to enable a connecting party to send data when a receiving application is not even running, and thus cannot receive the data, middleware simulating the application to a connecting party, and an active connection to the application by utilizing buffers is provided. More precisely, the middleware is arranged to buffer incoming data on behalf of the application, if the application is not receiving the data, and to allow the application to receive the buffered data when the application is again willing to receive the data.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07707291",
	"publication_date": "2010-04-27",
	"application_number": "11048081",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": "handling-incoming-data",
	"match_type": "description"
},
{
	"name": "Method for transmitting data in a communication network",
	"summary": "",
	"abstract": "The present invention proposes a method for transmitting data in a communication network, said communication network comprising at least one call control entity (CSCF) for controlling calls to be established from a subscriber (A, B) to a communication destination (B, A), a service control entity (SCP) for controlling services provisioned in said network for a respective subscriber, and a detection entity (DP) adapted to detect at least one of a plurality of predetermined conditions occurring in said network; said method comprising the steps of: forwarding a signaling message from said subscriber (A) to said at least one call control entity (CSCF) for being further forwarded to said destination (B), said signaling message comprising a message header and a message body, said message header including information descriptive for a content carried in the message body, detecting the occurrence of said at least one predetermined condition, and in case the occurrence of said predetermined condition has been detected, sending information concerning the content carried in the message body of said signaling message to said service control entity (SCP). Also, the present invention proposes a communication system comprising a call control entity (CSCF) controlling calls to be established from a subscriber (A, B) to a communication destination (B, A), a service control entity (SCP) controlling services provisioned in a network for a respective subscriber, wherein said system is adapted to operate according to the above method, and also a call control entity and a service control entity as such.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07684553",
	"publication_date": "2010-03-23",
	"application_number": "10471975",
	"application_date": "2001-03-23",
	"tags": null,
	"slug": "method-for-transmitting-data-in-a-communication-network",
	"match_type": "description"
},
{
	"name": "Method, apparatus and computer program for registering a respective target network system state from each one of a plurality of programs",
	"summary": "",
	"abstract": "It is disclosed a method comprising registering a respective target network system state from each one of a plurality of programs, each of the plurality of programs comprising a first program state, detecting a current network system state, selecting one or more of the plurality of programs based on a result matching the detected current network system state against the registered target network system states, and commanding transition of the selected one or more programs from the first program state to a second program state different from the first program state.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07792777",
	"publication_date": "2010-09-07",
	"application_number": "11783049",
	"application_date": "2007-04-05",
	"tags": null,
	"slug": "method-apparatus-and-computer-program-for-registering-a-respective-target-network-system-state-from-each-one-of-a-plurality-of-programs",
	"match_type": "description"
},
{
	"name": "Peer-to-peer group management framework and methodology",
	"summary": "",
	"abstract": "A group management framework and methodology for managing symmetric groups using peer-to-peer network communications. Group management is distributed throughout the group members of the peer-to-peer network, and group information is mirrored in each of the members of the group. The framework facilitates management of group member lists, provides group communication capabilities for external applications, and security for the group communication without the need for intermediary servers to provide services.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07774010",
	"publication_date": "2010-08-10",
	"application_number": "11476920",
	"application_date": "2006-06-28",
	"tags": null,
	"slug": "peertopeer-group-management-framework-and-methodology",
	"match_type": "description"
},
{
	"name": "Removable housing cover for a portable radio communication device",
	"summary": "",
	"abstract": "The invention provides an electronic mobile communications/entertainment device capable of a plurality of modes of operation, comprising a basic module having circuitry common to the operation of the device in said plurality of modes of operation, and a plurality of supplementary modules, each supplementary module being provided in the form of a housing cover for the device and including controlling means configured to provide for a corresponding mode of operation when coupled to the basic module, the supplementary modules being interchangeably attachable/detachable to the basic module so as to provide respective modes of operation, and the device only being operational when one of said plurality of supplementary modules is attached to the device.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07755905",
	"publication_date": "2010-07-13",
	"application_number": "12220116",
	"application_date": "2008-07-22",
	"tags": null,
	"slug": "removable-housing-cover-for-a-portable-radio-communication-device",
	"match_type": "description"
},
{
	"name": "Shared landmark user interfaces",
	"summary": "",
	"abstract": "A method, system, and computer program product provide access to user information, such as landmarks, without applications having to implement the needed user interface functionality on their own. In one embodiment, common landmark user interface components are offered with application programming interfaces (APIs) for controlling the user interfaces. By utilizing this kind of common user interface, all applications can utilize landmarks.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07814502",
	"publication_date": "2010-10-12",
	"application_number": "10866943",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "shared-landmark-user-interfaces",
	"match_type": "abstract"
},
{
	"name": "System and method for safe booting electronic devices",
	"summary": "",
	"abstract": "An improved system and method for safe booting an electronic device. In situations such as where a virus is infecting various devices within a network, the present invention provides an authentication centre with the ability to instruct a device on the network to safe boot. During the safe boot, it can be arranged such that no third party applications are run, only backup, restoration, or uninstallation of programs are possible, and/or only programs in the device's read-only memory are loaded. The present invention also provides a user with the ability to go through the boot process in a step-by-step manner.",
	"url": null,
	"owner": "Nokia Corporation",
	"publication_number": "07702907",
	"publication_date": "2010-04-20",
	"application_number": "10956421",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "system-and-method-for-safe-booting-electronic-devices",
	"match_type": "description"
},
{
	"name": "Communication system and method providing a mode selection procedure",
	"summary": "",
	"abstract": "The invention relates to a method and a communication system comprising at least one first network element connectable to a second network element. At least one of the first and second network elements use one of two or more selectable modes for communicating with another network element. One or both of the network elements, or a third network element, which is connectable with the first and second network elements, performs a mode selection procedure for selecting the same mode for bidirectional communication between the network elements. The modes preferably are different codec types, channel-coding schemes, or radio interface protocol types. The first and/or second network elements may be portable terminal equipments and the third network element preferably is a support node or a means providing a support function such as a CSCF. The mode selection ensures use of one and the same mode, such as a codec, in uplink and downlink directions enabling IP telephony in UMTS using SIP protocol.",
	"url": null,
	"owner": "Nokia Siemens Networks Oy",
	"publication_number": "07688745",
	"publication_date": "2010-03-30",
	"application_number": "10343706",
	"application_date": "2000-08-14",
	"tags": null,
	"slug": "communication-system-and-method-providing-a-mode-selection-procedure",
	"match_type": "description"
},
{
	"name": "Extensible domain name service",
	"summary": "",
	"abstract": "In various embodiments the extensible attribute within the extended DNS is accessed through an application programming interface (API). This API is configured to facilitate input and output of the extended DNS data and to allow an external application to identify and interchange those attribute data that the external application is configured to process.",
	"url": null,
	"owner": "Nominum, Inc.",
	"publication_number": "07761570",
	"publication_date": "2010-07-20",
	"application_number": "10870282",
	"application_date": "2004-06-16",
	"tags": null,
	"slug": "extensible-domain-name-service",
	"match_type": "abstract"
},
{
	"name": "Application specified steering policy implementation",
	"summary": "",
	"abstract": "A data plane architecture enables IP applications, hosted on any processor within a network element, to define steering policies that may be implemented in the data plane. The steering policies enable the applications to define steering policies containing both attributes and actions. The attributes are used to identify the packets and the actions are used to define how the data plane of the network element should handle the packets. The steering policies are implemented in the data plane of the network element by a data path policy steering process. The data path policy steering process operates to implement steering policies defined by applications to cause IP termination to occur at any processor on the network element or optionally at a processor off the network element.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07643496",
	"publication_date": "2010-01-05",
	"application_number": "11646693",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "application-specified-steering-policy-implementation",
	"match_type": "description"
},
{
	"name": "Dynamic assignment of traffic classes to a priority queue in a packet forwarding device",
	"summary": "",
	"abstract": "An apparatus and method for dynamic assignment of classes of traffic to a priority queue. Bandwidth consumption by one or more types of packet traffic received in the packet forwarding device is monitored to determine whether the bandwidth consumption exceeds a threshold. If the bandwidth consumption exceeds the threshold, assignment of at least one type of packet traffic of the one or more types of packet traffic is changed from a queue having a first priority to a queue having a second priority.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07710871",
	"publication_date": "2010-05-04",
	"application_number": "10685947",
	"application_date": "2003-10-15",
	"tags": null,
	"slug": "dynamic-assignment-of-traffic-classes-to-a-priority-queue-in-a-packet-forwarding-device",
	"match_type": "description"
},
{
	"name": "Self-healing containers",
	"summary": "",
	"abstract": "Performance of applications such as service capabilities in a container for providing a multimedia service is monitored. Performance monitoring indicates how well the applications are functioning in terms of predefined metrics and also whether the applications are functioning at all. Responses are prompted if performance monitoring indicates that an application is performing below a predefined level or failing to perform entirely. For example, a hung application may be restarted and other applications may alter their manner of function. This allows complex recovery logic through combinations of simple rules.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07646725",
	"publication_date": "2010-01-12",
	"application_number": "11010741",
	"application_date": "2004-12-13",
	"tags": null,
	"slug": "selfhealing-containers",
	"match_type": "description"
},
{
	"name": "Service enabling technology",
	"summary": "",
	"abstract": "A network intelligence provides stateless elemental device control to a plurality of network connected components. Selected ones of the network connected components may be associated with one another as an aggregate device and the state of each associated component may be maintained at the network intelligence in a logical model of the aggregate device. Service adapters in the network intelligence may represent this association of components to data network services as a single, multi-function device.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07761541",
	"publication_date": "2010-07-20",
	"application_number": "09695108",
	"application_date": "2000-10-25",
	"tags": null,
	"slug": "service-enabling-technology",
	"match_type": "description"
},
{
	"name": "SIP messages carrying executable computer software code",
	"summary": "",
	"abstract": "Modifications to SIP (Session Initiation Protocol) are made which significantly extend the functionality of SIP. SIP messages are associated with computer software code such as Java byte code, Java applets or mobile autonomous software agents. SIP clients are arranged such that on receipt of a SIP message that has been associated with computer software code, that code is executed by a processor associated with the SIP client. In the case that Java applets are contained in a SIP message these are executed by a Java Virtual Machine associated with the SIP client. If a Java mobile agent is contained in the SIP message this executes on a Java Mobile Agent Virtual Machine associated with the SIP client. Preferably an indicator is put into the header of a SIP message to indicate that it has been associated with computer software code, and SIP clients are arranged to detect the presence of such indicators.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07743149",
	"publication_date": "2010-06-22",
	"application_number": "09520853",
	"application_date": "2000-03-07",
	"tags": null,
	"slug": "sip-messages-carrying-executable-computer-software-code",
	"match_type": "description"
},
{
	"name": "Telephony and data network services at a telephone",
	"summary": "",
	"abstract": "A packetised data network includes IP telephones (ITs) and a network intelligence (NI). All of the keys of each IT are u201csoftu201d keys (i.e., they have no fixed function). The NI associates a configuration data structure with the IT which correlates the keys with functions, and, based on this, may control the display of the IT to indicate the current function of certain of the soft keys. Some of the functions are requests for data services at the telephone (e.g., video or programmed audio over the internet). When a user requests such a service with a key press, the NI sets up the service between the data source and the telephone. This may require associating a new configuration data structure with the keys of the IT. The IT user may activate multiple data services through the NI.",
	"url": null,
	"owner": "Nortel Networks Limited",
	"publication_number": "07660295",
	"publication_date": "2010-02-09",
	"application_number": "11300997",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "telephony-and-data-network-services-at-a-telephone",
	"match_type": "description"
},
{
	"name": "Dismount tablet computer assembly for wireless communication applications",
	"summary": "",
	"abstract": "Systems and methods are disclosed for utilizing one or more tablet computer assemblies in a portable communications system. A tablet computer assembly includes a global positioning system module, an L-band transceiver, and a processing system. The global positioning system module that produces location information associated with the position of the tablet computer assembly. The L-band transceiver broadcasts the location information to at least one portable communication device through a relay network and receives location information from the at least one portable communications device via the relay network. The processing unit provides messages to the L-band transceiver and updates a display associated with the tablet computer assembly according the received location information and the location information produced at the global positioning system module.",
	"url": null,
	"owner": "Northrop Grumman Corporation",
	"publication_number": "07813876",
	"publication_date": "2010-10-12",
	"application_number": "10634295",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": "dismount-tablet-computer-assembly-for-wireless-communication-applications",
	"match_type": "description"
},
{
	"name": "Generating a ranked list of search results via result modeling",
	"summary": "",
	"abstract": "Methods and apparatus assessing, ranking, organizing, and presenting search results associated with a user's current work context are disclosed. The system disclosed assesses, ranks, organizes and presents search results against a user's current work context by comparing statistical and heuristic models of the search results to a statistical and heuristic model of the user's current work context. In this manner, search results are assessed, ranked, organized, and/or presented with the benefit of attributes of the user's current work context that are predictive of relevance, such as words in a user's document (e.g., web page or word processing document) that may not have been included in the search query. In addition, search results from multiple search engines are combined into an organization scheme that best reflects the user's current task. As a result, lists of search results from different search engines can be more usefully presented to the user.",
	"url": null,
	"owner": "Northwestern University",
	"publication_number": "07644072",
	"publication_date": "2010-01-05",
	"application_number": "11669841",
	"application_date": "2007-01-31",
	"tags": null,
	"slug": "generating-a-ranked-list-of-search-results-via-result-modeling",
	"match_type": "description"
},
{
	"name": "Method and system for assessing relevant properties of work contexts for use by information services",
	"summary": "",
	"abstract": "An information retrieval system for automatically retrieving information related to the context of an active task being manipulated by a user. The system observes the operation of the active task and user interactions, and utilizes predetermined criteria to generate context representation of the active task that are relevant to the context of the active task. The information retrieval system then processes the context representation to generate queries or search terms for conducting an information search. The information retrieval system determines the relevance of a word to the context by utilizing an adaptive weighting system. The information retrieval system assigns varying weights to different attributes of a word and calculates an accumulated weight of the word by accumulating all weights assigned to the word. The attributes may include word size, style, location of the word, etc. The system then ranks the importance of words based on their respective accumulated weight, and chooses words that rank within a predetermined number from the top to form search terms to conduct an information search using various data sources.",
	"url": null,
	"owner": "Northwestern University",
	"publication_number": "07836010",
	"publication_date": "2010-11-16",
	"application_number": "10629680",
	"application_date": "2003-07-30",
	"tags": null,
	"slug": "method-and-system-for-assessing-relevant-properties-of-work-contexts-for-use-by-information-services",
	"match_type": "description"
},
{
	"name": "Systems and methods for data interchange among autonomous processing entities",
	"summary": "",
	"abstract": "Data element values are shared between a first software component and a second software component of a document processing framework. The components can capture, process, or route a digital image of a document and access a configuration file that is generated for the image. A data element attribute and value pair is placed in the configuration file. The value of the data element is a tag that includes an identifier identifying the first software component and a tag name. The first software component is executed on the image, produces a tag value corresponding to the tag name, searches the configuration file for the tag by the identifier, replaces the tag with the tag value in the configuration file, and terminates. The second software component is executed on the image after the first software component has terminated and reads the data element attribute and value pair.",
	"url": null,
	"owner": "Notable Solutions, Inc.",
	"publication_number": "07752603",
	"publication_date": "2010-07-06",
	"application_number": "11006574",
	"application_date": "2004-12-08",
	"tags": null,
	"slug": "systems-and-methods-for-data-interchange-among-autonomous-processing-entities",
	"match_type": "description"
},
{
	"name": "Credential mapping",
	"summary": "",
	"abstract": "Methods, systems, and data structures map credentials. A master credential is established for a user or an application. The master credential is mapped to one or more service credentials associated with one or more services. When a request for a service is received from a requestor, the request is authenticated using the master credential. If the master credential is authenticated, then an appropriate service credential associated with the appropriate requested service is acquired and sent directly (via proxy) to the service on behalf of the requestor.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07735122",
	"publication_date": "2010-06-08",
	"application_number": "10652710",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": "credential-mapping",
	"match_type": "description"
},
{
	"name": "Secure problem resolution techniques for complex data response networks",
	"summary": "",
	"abstract": "In various embodiments, techniques for secure problem resolution associated with complex data response networks are provided. Error messages associated with an executing problem service are trapped and hidden from a principal. The error messages are associated with a randomly generated incident identifier. The incident identifier is supplied to the principal. The principal gains access to the error messages when the principal successfully authenticates for access and supplies the incident identifier.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07734962",
	"publication_date": "2010-06-08",
	"application_number": "11743368",
	"application_date": "2007-05-02",
	"tags": null,
	"slug": "secure-problem-resolution-techniques-for-complex-data-response-networks",
	"match_type": "description"
},
{
	"name": "Techniques for establishing and managing a distributed credential store",
	"summary": "",
	"abstract": "Techniques are provided for establishing and managing a distributed credential store. An identity service aggregates identity information from one or more identity stores and maintains the information as a remote credential store. Initially, the remote credential store, or portions thereof, is transmitted to a principal service as an initial configuration of a local credential store. A principal interacts with the principal service for defining or modifying a policy that identifies portions of the remote credential store which are to be synchronized with the local credential store. In some embodiments, the principal interacts with the principal service for defining a local policy that identifies portions of the local credential store which are not synchronized with the remote credential store. The interactions between the credential stores are trusted and secured.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07647256",
	"publication_date": "2010-01-12",
	"application_number": "10767884",
	"application_date": "2004-01-29",
	"tags": null,
	"slug": "techniques-for-establishing-and-managing-a-distributed-credential-store",
	"match_type": "description"
},
{
	"name": "Techniques for providing role-based security with instance-level granularity",
	"summary": "",
	"abstract": "Techniques for providing role-based security with instance-level granularity are provided. A security service detects a request made by a principal for access to a resource. Access to the resource is conditioned on a status of a role. The role is associated with the request, the principal, and the resource. The security service evaluates a constraint associated with the role to determine the status. The status is subsequently consumed to determine whether access to the resource for the purposes of satisfying the request is permissible.",
	"url": null,
	"owner": "Novell, Inc.",
	"publication_number": "07774827",
	"publication_date": "2010-08-10",
	"application_number": "11145704",
	"application_date": "2005-06-06",
	"tags": null,
	"slug": "techniques-for-providing-rolebased-security-with-instancelevel-granularity",
	"match_type": "description"
},
{
	"name": "Client apparatus, device verification apparatus, and verification method",
	"summary": "",
	"abstract": "A client apparatus for utilizing services by executing service programs includes a policy holding unit, a verification unit, a verification result holding unit, and a verification result notification unit. The policy holding unit holds a service-specific verification policy pre-checked by a device verification apparatus. The verification unit verifies an operation and configuration of the client apparatus itself by using the verification policy when the service program is executed. The verification result notification unit notifies the verification result to the device verification apparatus, which requests the verification result.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07693835",
	"publication_date": "2010-04-06",
	"application_number": "11346290",
	"application_date": "2006-02-03",
	"tags": null,
	"slug": "client-apparatus-device-verification-apparatus-and-verification-method",
	"match_type": "description"
},
{
	"name": "Method and apparatus for enforcing safety properties of computer programs by generating and solving constraints",
	"summary": "",
	"abstract": "A method and apparatus is disclosed herein for generating and solving constraints. In one embodiment, the method comprises modifying program code by inserting one or more dynamic annotations having unsolved variables, generating one or more constraints based on the one or more dynamic annotations using a verifier, solving the one or more generated constraints; and modifying the program code by inserting a dynamic annotation in place of an annotation containing an unsolved variable.",
	"url": null,
	"owner": "NTT Docomo, Inc.",
	"publication_number": "07730455",
	"publication_date": "2010-06-01",
	"application_number": "11268802",
	"application_date": "2005-11-07",
	"tags": null,
	"slug": "method-and-apparatus-for-enforcing-safety-properties-of-computer-programs-by-generating-and-solving-constraints",
	"match_type": "description"
},
{
	"name": "Wireless communication apparatus and wireless communication method",
	"summary": "",
	"abstract": "When a native application and a downloaded application installed on a mobile equipment are simultaneously executed by multitask and when these applications try to use short-range wireless communication simultaneously, the short-range wireless communication may be unavailable because of restrictions on communication resources. An object of the invention is to provide a wireless communication apparatus and wireless communication method capable of performing communication management to permit the applications to use the short-range wireless communication, without a need for a complicated operation of especially terminating an application to release a communication resource in the foregoing case. A communication profile storage  stores combinations of communication profiles which can be simultaneously executed. A short-range wireless communication management unit  determines whether a communication process according to an instruction from an external application  can be executed, based on the communication profiles. When the short-range wireless communication process is determined not to be executed, a disconnection unit  notifies the external application  of unavailability of the communication.",
	"url": null,
	"owner": "NTT DoCoMo, Inc.",
	"publication_number": "07773989",
	"publication_date": "2010-08-10",
	"application_number": "11875132",
	"application_date": "2007-10-19",
	"tags": null,
	"slug": "wireless-communication-apparatus-and-wireless-communication-method",
	"match_type": "description"
},
{
	"name": "Disambiguating a speech recognition grammar in a multimodal application",
	"summary": "",
	"abstract": "Disambiguating a speech recognition grammar in a multimodal application, the multimodal application including voice activated hyperlinks, the voice activated hyperlinks voice enabled by a speech recognition grammar characterized by ambiguous terminal grammar elements, including maintaining by the multimodal browser a record of visibility of each voice activated hyperlink, the record of visibility including current visibility and past visibility on a display of the multimodal device of each voice activated hyperlink, the record of visibility further including an ordinal indication, for each voice activated hyperlink scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser speech from a user matching an ambiguous terminal element of the speech recognition grammar; selecting by the multimodal browser a voice activated hyperlink for activation, the selecting carried out in dependence upon the recognized speech and the record of visibility.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07822608",
	"publication_date": "2010-10-26",
	"application_number": "11679274",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "disambiguating-a-speech-recognition-grammar-in-a-multimodal-application",
	"match_type": "description"
},
{
	"name": "Document session replay for multimodal applications",
	"summary": "",
	"abstract": "Methods, apparatus, and computer program products are described for document session replay for multimodal applications. including identifying, by a multimodal browser in dependence upon a log produced by a Form Interpretation Algorithm (u2018FIAu2019) during a previous document session with a user, a speech prompt provided by a multimodal application in the previous document session; identifying, by a multimodal browser in replay mode in dependence upon the log, a response to the prompt provided by a user of the multimodal application in the previous document session; retrieving, by the multimodal browser in dependence upon the log, an X+V page of the multimodal application associated with the speech prompt and the response; rendering, by the multimodal browser, the visual elements of the retrieved X+V page; replaying, by the multimodal browser, the speech prompt; and replaying, by a multimodal browser, the response.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07801728",
	"publication_date": "2010-09-21",
	"application_number": "11678830",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "document-session-replay-for-multimodal-applications",
	"match_type": "description"
},
{
	"name": "Enabling global grammars for a particular multimodal application",
	"summary": "",
	"abstract": "Methods, apparatus, and computer program products are described for enabling global grammars for a particular multimodal application according to the present invention by loading a multimodal web page; determining whether the loaded multimodal web page is one of a plurality of multimodal web pages of the particular multimodal application. If the loaded multimodal web page is one of the plurality of multimodal web pages of the particular multimodal application, enabling global grammars typically includes loading any currently unloaded global grammars of the particular multimodal application identified in the multimodal web page and maintaining any previously loaded global grammars. If the loaded multimodal web page is not one of the plurality of multimodal web pages of the particular multimodal application, enabling global grammars typically includes unloading any currently loaded global grammars.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07809575",
	"publication_date": "2010-10-05",
	"application_number": "11679279",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "enabling-global-grammars-for-a-particular-multimodal-application",
	"match_type": "description"
},
{
	"name": "Ordering recognition results produced by an automatic speech recognition engine for a multimodal application",
	"summary": "",
	"abstract": "Ordering recognition results produced by an automatic speech recognition (u2018ASRu2019) engine for a multimodal application implemented with a grammar of the multimodal application in the ASR engine, with the multimodal application operating in a multimodal browser on a multimodal device supporting multiple modes of interaction including a voice mode and one or more non-voice modes, the multimodal application operatively coupled to the ASR engine through a VoiceXML interpreter, includes: receiving, in the VoiceXML interpreter from the multimodal application, a voice utterance; determining, by the VoiceXML interpreter using the ASR engine, a plurality of recognition results in dependence upon the voice utterance and the grammar; determining, by the VoiceXML interpreter according to semantic interpretation scripts of the grammar, a weight for each recognition result; and sorting, by the VoiceXML interpreter, the plurality of recognition results in dependence upon the weight for each recognition result.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07840409",
	"publication_date": "2010-11-23",
	"application_number": "11679284",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "ordering-recognition-results-produced-by-an-automatic-speech-recognition-engine-for-a-multimodal-application",
	"match_type": "description"
},
{
	"name": "VOIP barge-in support for half-duplex DSR client on a full-duplex network",
	"summary": "",
	"abstract": "Providing VOIP barge-in support for a half-duplex DSR client on a full-duplex network by buffering, in a half-duplex DSR client, input audio from the full-duplex network; playing, through the half-duplex DSR client, the buffered input audio; pausing, during voice activity on the half-duplex DSR client, the playing of the buffered input audio; sending, during voice activity on the half-duplex DSR client, speech for recognition through the full-duplex network to a voice server; receiving in the half-duplex DSR client through the full-duplex network from the voice server notification of speech recognition, the notification bearing a time stamp; and, responsive to receiving the notification, resuming the playing of the buffered input audio, including playing only buffered VOIP audio data bearing time stamps later than the time stamp of the recognition notification.",
	"url": null,
	"owner": "Nuance Communications, Inc.",
	"publication_number": "07848314",
	"publication_date": "2010-12-07",
	"application_number": "11382575",
	"application_date": "2006-05-10",
	"tags": null,
	"slug": "voip-bargein-support-for-halfduplex-dsr-client-on-a-fullduplex-network",
	"match_type": "description"
},
{
	"name": "3:2 Pulldown detection",
	"summary": "",
	"abstract": "Field-based detection of 3:2 pulldown in a sequence of digital video fields using a programmable graphics processor is described. The detection is performed using a threshold value to determine equivalence between a pair of fields of digital video data. Furthermore, additional threshold values may be used to control switching into a mode where duplicated fields of digital video data are identified and not displayed and out of the mode where duplicated fields of digital video data are identified and not displayed. Look ahead can be used to detect when to switch into or out of the mode where duplicated fields of digital video data are identified and not displayed, reducing the occurrence of visual artifacts.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07800699",
	"publication_date": "2010-09-21",
	"application_number": "10417018",
	"application_date": "2003-04-16",
	"tags": null,
	"slug": "32-pulldown-detection",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for offloading pattern matching scanning",
	"summary": "",
	"abstract": "Diagnostic software often requires pattern matching scanning to be performed to detect problems such as computer viruses or unwanted intruders. A computing system offloads pattern matching scanning from a central processing unit to a graphics processing unit.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07818806",
	"publication_date": "2010-10-19",
	"application_number": "11270146",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": "apparatus-system-and-method-for-offloading-pattern-matching-scanning",
	"match_type": "description"
},
{
	"name": "Communications processor",
	"summary": "",
	"abstract": "A communication processor of a class, such as an Internet tuner, provides such desirable features (FIG. ) as LAN support, an SPI interface (), a dedicated port (), and ADPCM () for audio applications. The invention provides a low-cost, low-power, easily manufactured, small form-actor network access module which has a low memory demand and provides a highly efficient protocol decode. The invention comprises a hardware-integrated system that both decodes multiple network protocols in a streaming manner concurrently and processes packet data in one pass, thereby reducing system memory and form factor requirements, while also eliminating software CPU overhead.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07646790",
	"publication_date": "2010-01-12",
	"application_number": "11932428",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "communications-processor",
	"match_type": "description"
},
{
	"name": "ISO-surface tesselation of a volumetric description",
	"summary": "",
	"abstract": "A multi-threaded graphics processor is configured to generate a tessellated iso-surface from a volumetric description using slices of values that are stored in render targets. The volumetric description can be a complex mathematic equation, a sum of metaballs, a pre-computed scalar field represented as a 3D volume texture, or a rendered volume. Slices are aligned along an axis and spaced before being intersected with the volume to determine iso-surface intersections for the x, y, and z axes. The intersections are stored in render targets and are processed by a shader program to produce a tessellated iso-surface.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07724254",
	"publication_date": "2010-05-25",
	"application_number": "11684761",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "isosurface-tesselation-of-a-volumetric-description",
	"match_type": "description"
},
{
	"name": "Media protection notification for serial interface mass storage devices",
	"summary": "",
	"abstract": "One embodiment of the present invention sets forth a technique for reducing the latency associated with media protection notification for serial interface mass storage devices, such as serial AT attachment (SATA) hard disk drives. A new link layer primitive, referred to as hold-emergency (HOLDE), incorporates the flow-control behavior of the existing HOLD command, with the additional new action of notifying the hard disk drive to take emergency steps to prepare for impact. The HOLDE link layer primitive operates in conjunction with the existing hold-acknowledge (HOLDA) primitive and is semantically similar to the existing HOLD primitive. The HOLDE mechanism is preferably implemented directly in hardware in the SATA link layer state machines within the host and the hard disk drive.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07752351",
	"publication_date": "2010-07-06",
	"application_number": "11611772",
	"application_date": "2006-12-15",
	"tags": null,
	"slug": "media-protection-notification-for-serial-interface-mass-storage-devices",
	"match_type": "description"
},
{
	"name": "Media protection notification for serial interface mass storage devices",
	"summary": "",
	"abstract": "One embodiment of the present invention sets forth a technique for reducing the latency associated with media protection notification for serial interface mass storage devices, such as serial AT attachment (SATA) hard disk drives. A new link layer primitive, referred to as hold-emergency (HOLDE), incorporates the flow-control behavior of the existing HOLD command, with the additional new action of notifying the hard disk drive to take emergency steps to prepare for impact. The HOLDE link layer primitive operates in conjunction with the existing hold-acknowledge (HOLDA) primitive and is semantically similar to the existing HOLD primitive. The HOLDE mechanism is preferably implemented directly in hardware in the SATA link layer state machines within the host and the hard disk drive.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07747818",
	"publication_date": "2010-06-29",
	"application_number": "11611781",
	"application_date": "2006-12-15",
	"tags": null,
	"slug": "media-protection-notification-for-serial-interface-mass-storage-devices",
	"match_type": "description"
},
{
	"name": "Method and apparatus for filtering video data using a programmable graphics processor",
	"summary": "",
	"abstract": "Video filtering using a programmable graphics processor is described. The programmable graphics processor may be programmed to complete a plurality of video filtering operations in a single pass through a fragment-processing pipeline within the programmable graphics processor. Video filtering functions such as deinterlacing, chroma up-sampling, scaling, and deblocking may be performed by the fragment-processing pipeline. The fragment-processing pipeline may be programmed to perform motion adaptive deinterlacing, wherein a spatially variant filter determines, on a pixel basis, whether a u201cbobu201d, a u201cblendu201d, or a u201cweaveu201d operation should be used to process an interlaced image.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07733419",
	"publication_date": "2010-06-08",
	"application_number": "11957363",
	"application_date": "2007-12-14",
	"tags": null,
	"slug": "method-and-apparatus-for-filtering-video-data-using-a-programmable-graphics-processor",
	"match_type": "description"
},
{
	"name": "Method and apparatus for filtering video data using a programmable graphics processor",
	"summary": "",
	"abstract": "Video filtering using a programmable graphics processor is described. The programmable graphics processor may be programmed to complete a plurality of video filtering operations in a single pass through a fragment-processing pipeline within the programmable graphics processor. Video filtering functions such as deinterlacing, chroma up-sampling, scaling, and deblocking may be performed by the fragment-processing pipeline. The fragment-processing pipeline may be programmed to perform motion adaptive deinterlacing, wherein a spatially variant filter determines, on a pixel basis, whether a u201cbobu201d, a u201cblendu201d, or a u201cweaveu201d operation should be used to process an interlaced image.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07705915",
	"publication_date": "2010-04-27",
	"application_number": "11957360",
	"application_date": "2007-12-14",
	"tags": null,
	"slug": "method-and-apparatus-for-filtering-video-data-using-a-programmable-graphics-processor",
	"match_type": "description"
},
{
	"name": "Method and apparatus to ensure consistency of depth values computed in different sections of a graphics processor",
	"summary": "",
	"abstract": "At least two different processing sections in a graphics processors compute Z coordinates for a sample location from a compressed Z representation. The processors are designed to ensure that Z coordinates computed in any unit in the processor are identical. In one embodiment, the respective arithmetic circuits included in each processing section that computes Z coordinates are u201cbit-identical,u201d meaning that, for any input planar Z representation and coordinates, the output Z coordinates produced by the circuits are identical to each other.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07659893",
	"publication_date": "2010-02-09",
	"application_number": "11538002",
	"application_date": "2006-10-02",
	"tags": null,
	"slug": "method-and-apparatus-to-ensure-consistency-of-depth-values-computed-in-different-sections-of-a-graphics-processor",
	"match_type": "description"
},
{
	"name": "Method and system for patching instructions in a shader for a 3-D graphics pipeline",
	"summary": "",
	"abstract": "A method and system for patching instructions in a 3-D graphics pipeline. Specifically, in one embodiment, instructions to be executed within a scheduling process for a shader pipeline of the 3-D graphics pipeline are patchable. A scheduler includes a decode table, an expansion table, and a resource table that are each patchable. The decode table translates high level instructions to an appropriate microcode sequence. The patchable expansion table expands a high level instruction to a program of microcode if the high level instruction is complex. The resource table assigns the units for executing the microcode. Addresses within each of the tables can be patched to modify existing instructions and create new instructions. That is, contents in each address in the tables that are tagged can be replaced with a patch value of a corresponding register.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07852341",
	"publication_date": "2010-12-14",
	"application_number": "10959568",
	"application_date": "2004-10-05",
	"tags": null,
	"slug": "method-and-system-for-patching-instructions-in-a-shader-for-a-3d-graphics-pipeline",
	"match_type": "description"
},
{
	"name": "Methods and systems for processing a geometry shader program developed in a high-level shading language",
	"summary": "",
	"abstract": "Methods and systems for processing a geometry shader program developed in a high-level shading language are disclosed. Specifically, in one embodiment, after having received the geometry shader program configured to be executed by a first processing unit in a programmable execution environment, the high-level shading language instructions of the geometry shader program is converted into low-level programming language instructions. The low-level programming language instructions are then linked with the low-level programming language instructions of a domain-specific shader program, which is configured to be executed by a second processing unit also residing in the programmable execution environment. The linked instructions of the geometry shader program are directed to the first processing unit, and the linked instructions of the domain-specific shader program are directed to the second processing unit.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07746347",
	"publication_date": "2010-06-29",
	"application_number": "11565566",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "methods-and-systems-for-processing-a-geometry-shader-program-developed-in-a-highlevel-shading-language",
	"match_type": "description"
},
{
	"name": "Methods of processing graphics data including reading and writing buffers",
	"summary": "",
	"abstract": "Apparatuses and methods for detecting position conflicts during fragment processing are described. Prior to executing a program on a fragment, a conflict detection unit, within a fragment processor checks if there is a position conflict indicating a RAW (read after write) hazard may exist. A RAW hazard exists when there is a pending write to a destination location that source data will be read from during execution of the program. When the fragment enters a processing pipeline, each destination location that may be written during the processing of the fragment is entered in conflict detection unit. During processing, the conflict detection unit is updated when a pending write to a destination location is completed.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07683905",
	"publication_date": "2010-03-23",
	"application_number": "11493484",
	"application_date": "2006-07-26",
	"tags": null,
	"slug": "methods-of-processing-graphics-data-including-reading-and-writing-buffers",
	"match_type": "description"
},
{
	"name": "Multi-threaded stack cache",
	"summary": "",
	"abstract": "Systems and methods for storing stack data for multi-threaded processing in a specialized cache reduce on-chip memory requirements while maintaining low access latency. An on-chip stack cache is used store a predetermined number of stack entries for a thread. When additional entries are needed for the thread, entries stored in the stack cache are spilled, i.e., moved, to remote memory. As entries are popped off the on-chip stack cache, spilled entries are restored from the remote memory. The spilling and restoring processes may be performed while the on-chip stack cache is accessed. Therefore, a large stack size is supported using a smaller amount of die area than that needed to store the entire large stack on-chip. The large stack may be accessed without incurring the latency of reading and writing to remote memory since the stack cache is preemptively spilled and restored.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07805573",
	"publication_date": "2010-09-28",
	"application_number": "11313448",
	"application_date": "2005-12-20",
	"tags": null,
	"slug": "multithreaded-stack-cache",
	"match_type": "description"
},
{
	"name": "Parameter buffer objects for shader parameters in a graphics library",
	"summary": "",
	"abstract": "One embodiment of the invention is a method for accessing and updating data in a buffer object during the execution of a shader program. The method includes loading a plurality of data portions in the buffer object, initiating a first execution of a shader program that accesses a first portion of data in the buffer object, receiving a request to update the first portion of data in the buffer object; updating a version of the first portion of data in the buffer object to reflect the update, initiating a second execution of a shader program that accesses the updated version of the first portion of data in the buffer object, wherein the second execution of the shader program occurs without waiting for the execution of the first shader program to complete.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07839410",
	"publication_date": "2010-11-23",
	"application_number": "11609831",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": "parameter-buffer-objects-for-shader-parameters-in-a-graphics-library",
	"match_type": "description"
},
{
	"name": "Selecting real sample locations for ownership of virtual sample locations in a computer graphics system",
	"summary": "",
	"abstract": "A computer-implemented graphics system has a mode of operation in which primitive coverage information is generated for real sample locations and virtual sample locations for use in anti-aliasing. An individual pixel includes a single real sample location and at least one virtual sample location. A block of real sample locations can be selected to delineate and encompass a region containing a number of virtual sample locations. Pixel attribute values (e.g., z-depth or stencil values) associated with the block of selected real sample locations can be used to associate each virtual sample location within the region with one of the selected real sample locations. The virtual sample location assumes the pixel attribute value of the real sample location with which it is associated.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07817165",
	"publication_date": "2010-10-19",
	"application_number": "11643185",
	"application_date": "2006-12-20",
	"tags": null,
	"slug": "selecting-real-sample-locations-for-ownership-of-virtual-sample-locations-in-a-computer-graphics-system",
	"match_type": "description"
},
{
	"name": "Single logical network interface for advanced load balancing and fail-over functionality",
	"summary": "",
	"abstract": "The invention sets forth an approach for aggregating a plurality of NICs in a computing device into a single logical NIC as seen by that computing device's operating system. The combination of the single logical NIC and a network resource manager provides a reliable and persistent interface to the operating system and to the network hardware, thereby improving the reliability and ease-of-configuration of the computing device. The invention also may improve communications security by supporting the 802.1X and the 802.1Q networking standards.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07693044",
	"publication_date": "2010-04-06",
	"application_number": "11303281",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "single-logical-network-interface-for-advanced-load-balancing-and-failover-functionality",
	"match_type": "description"
},
{
	"name": "Storage and support for large amounts of constant data in a graphics library",
	"summary": "",
	"abstract": "One embodiment of the invention is a method of accessing a bindable uniform variable bound to a buffer object that includes the steps of creating a linked program object comprising one or more shader programs, where each shader program includes instructions written in a high-level shader language, and where the linked program object includes a reference to a bindable uniform variable and indicates which shader programs use the bindable uniform variable. The method also includes determining a memory size to support the bindable uniform variable, allocating a buffer object having the memory size, binding the buffer object to the bindable uniform variable, populating the buffer object with values for the bindable uniform variable, and accessing the values of the bindable uniform with one or more of the shader programs in the linked program object.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07852345",
	"publication_date": "2010-12-14",
	"application_number": "11609845",
	"application_date": "2006-12-12",
	"tags": null,
	"slug": "storage-and-support-for-large-amounts-of-constant-data-in-a-graphics-library",
	"match_type": "description"
},
{
	"name": "System and method for a universal data write unit in a 3-D graphics pipeline including generic cache memories",
	"summary": "",
	"abstract": "A system and method for a data write unit in a 3-D graphics pipeline including generic cache memories. Specifically, in one embodiment a data write unit includes a first memory, a plurality of cache memories and a data write circuit. The first memory receives a pixel packet associated with a pixel. The pixel packet includes data related to surface characteristics of the pixel. The plurality of cache memories is coupled to the first memory for storing pixel information associated with a plurality of surface characteristics of a plurality of pixels. Each of the plurality of cache memories is programmably associated with a designated surface characteristic. The data write circuit is coupled to the first a memory and the plurality of cache memories. The data write circuit is operable under program control to obtain designated portions of the pixel packet for storage into the plurality of cache memories.",
	"url": null,
	"owner": "Nvidia Corporation",
	"publication_number": "07724263",
	"publication_date": "2010-05-25",
	"application_number": "10846774",
	"application_date": "2004-05-14",
	"tags": null,
	"slug": "system-and-method-for-a-universal-data-write-unit-in-a-3d-graphics-pipeline-including-generic-cache-memories",
	"match_type": "description"
},
{
	"name": "System and method for bump mapping setup",
	"summary": "",
	"abstract": "One embodiment of the present invention sets forth a technique to setup efficient bump mapping using a geometry shader. This approach uses a vertex shader, a primitive assembly unit, and a geometry shader. The vertex shader performs vertex operations, such as calculating a per-vertex normal vector, and emits vertex data. The primitive assembly unit processes the vertex data and constructs primitives. Each primitive includes a series of one or more vertices, each of which may be shared amongst multiple primitives, and state information defining the primitive. The geometry shader processes each primitive, calculating an object-space to texture-space mapping for each vertex of the primitive and, subsequently, using this mapping to transform the object-space view vector and the object-space light vectors associated with each vertex of the primitive to texture-space equivalents. Advantageously, this approach to setting up bump mapping fully utilizes the GPU, thereby optimizing both hardware resources and performance.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07843463",
	"publication_date": "2010-11-30",
	"application_number": "11860478",
	"application_date": "2007-09-24",
	"tags": null,
	"slug": "system-and-method-for-bump-mapping-setup",
	"match_type": "description"
},
{
	"name": "System and method for transparent disk encryption",
	"summary": "",
	"abstract": "A data storage system providing transparent encryption. The data storage system has a hardware encryption/decryption engine and a register coupled to the hardware encryption/decryption engine. The register is for securely storing a key for encrypting and decrypting data. The key may not be read from outside the data storage system. More specifically, the key may not be read by the operating system. The user does not have access to the encryption key, but may have a password that is passed to a controller coupled to the encryption/decryption engine. The controller verifies the password and causes data received from main memory to be encrypted by the hardware encryption/decryption engine using the key. The controller also transfers the encrypted data to the data storage device.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07849510",
	"publication_date": "2010-12-07",
	"application_number": "11358330",
	"application_date": "2006-02-21",
	"tags": null,
	"slug": "system-and-method-for-transparent-disk-encryption",
	"match_type": "description"
},
{
	"name": "System and method providing variable complexity in a physics simulation",
	"summary": "",
	"abstract": "A system and method of providing physics data generated by a physics simulation and consumed by main application are provided. The main application may incorporate different scene versions or varying physics-based complexity while running on systems having different hardware and software resources.",
	"url": null,
	"owner": "NVIDIA Corporation",
	"publication_number": "07774181",
	"publication_date": "2010-08-10",
	"application_number": "11925108",
	"application_date": "2007-10-26",
	"tags": null,
	"slug": "system-and-method-providing-variable-complexity-in-a-physics-simulation",
	"match_type": "description"
},
{
	"name": "System, method and computer program product for application development using a visual paradigm to combine existing data and applications",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for generating an application. An interaction with a first application is recorded for capturing a functionality of the first application. An interaction with a second application is also recorded for capturing a functionality of the second application. A pattern is generated based on the recorded interactions. An application is generated based on the pattern. The interactions recorded in the pattern are repeated upon replay of the pattern for providing the functionalities of the first and second applications. A method for executing the pattern-based application is provided. Upon receiving a request for data, a pattern for retrieving the requested data is selected. The pattern is replayed. The recorded interaction is conducted as specified in the pattern for obtaining the requested data. The requested data is received.",
	"url": null,
	"owner": "NVIDIA International, Inc.",
	"publication_number": "07647561",
	"publication_date": "2010-01-12",
	"application_number": "10318504",
	"application_date": "2002-12-13",
	"tags": null,
	"slug": "system-method-and-computer-program-product-for-application-development-using-a-visual-paradigm-to-combine-existing-data-and-applications",
	"match_type": "description"
},
{
	"name": "System, method and computer program product for the recording and playback of transaction macros",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for carrying out a transaction. Initially, a transaction pattern reflecting a transaction is stored in memory. Thereafter, the transaction pattern is executed to carry out the transaction in an automated manner.",
	"url": null,
	"owner": "NVIDIA International, Inc.",
	"publication_number": "07814020",
	"publication_date": "2010-10-12",
	"application_number": "09942047",
	"application_date": "2001-08-28",
	"tags": null,
	"slug": "system-method-and-computer-program-product-for-the-recording-and-playback-of-transaction-macros",
	"match_type": "description"
},
{
	"name": "System, method, and article of manufacture for generating a customizable network user interface",
	"summary": "",
	"abstract": "A method for generating a user-sharable network user interface is provided. A management interface is displayed. The management interface allows a user to select and manage information displayed on an information screen. The user is allowed to select information available in content sources. The selected information of the content source is marked and stored. The marked information is retrieved and displayed on the information screen. A second user is allowed to see the window of the information screen of the first user if the second user is authorized. The user is allowed to interact with customization tools via a wireless device for customizing the management interface. A pattern can be replayed for retrieving data for display. An application can be invoked for providing data for display. The information can also be translated.",
	"url": null,
	"owner": "NVIDIA International, Inc.",
	"publication_number": "07802207",
	"publication_date": "2010-09-21",
	"application_number": "10165454",
	"application_date": "2002-06-06",
	"tags": null,
	"slug": "system-method-and-article-of-manufacture-for-generating-a-customizable-network-user-interface",
	"match_type": "description"
},
{
	"name": "Customer information system",
	"summary": "",
	"abstract": "A system is provided for managing incoming communications placed in response to advertising, online content, and/or special service numbers. Information extracted from incoming communications can be received by a system server and cross-referenced with a database to obtain cross-referenced customer information pertaining to previous customer communications in the form of online communications, telephone calls, and/or in person customer meetings. The cross-referenced customer information can be passed to a client workstation and displayed to the user in the form of an industry-specific template formatted in accordance with the business needs of the user. The template can be automatically populated with the cross-referenced customer information. The user can view and update the customer information, thereby maintaining a retrievable record of the communication. With regard to the multi-housing industry in particular, customer information can be displayed in the form of a guest card template and/or a service card template.",
	"url": null,
	"owner": "OC Concepts, Inc.",
	"publication_number": "07684550",
	"publication_date": "2010-03-23",
	"application_number": "11117124",
	"application_date": "2005-04-28",
	"tags": null,
	"slug": "customer-information-system",
	"match_type": "description"
},
{
	"name": "Multi-node computer system component proactive monitoring and proactive repair",
	"summary": "",
	"abstract": "A highly available multi-node computer system is operated by monitoring the aging and usage of a plurality of hardware components that are part of the system's networked nodes. While monitoring the components, a determination is made that one of the components has aged, worn, or both, to a level that is selected as being close enough to the component's predicted end of life in the system so as to prevent failure of the component in the system. A notification is sent to replace the component, in response to the determination. Other embodiments are also described and claimed.",
	"url": null,
	"owner": "Omneon Video Networks",
	"publication_number": "07721157",
	"publication_date": "2010-05-18",
	"application_number": "11371507",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "multinode-computer-system-component-proactive-monitoring-and-proactive-repair",
	"match_type": "description"
},
{
	"name": "Webcast metadata extraction system and method",
	"summary": "",
	"abstract": "A metadata extraction and display system and method are provided in which the system extracts metadata from a presentation and then, based on a configuration, displays the extracted metadata synchronized with the display elements of the presentation.",
	"url": null,
	"owner": "ON24, Inc.",
	"publication_number": "07711722",
	"publication_date": "2010-05-04",
	"application_number": "11245914",
	"application_date": "2005-10-07",
	"tags": null,
	"slug": "webcast-metadata-extraction-system-and-method",
	"match_type": "description"
},
{
	"name": "Extended environment data structure for distributed digital assets over a multi-tier computer network",
	"summary": "",
	"abstract": "An extended environment data structure that is part of a digital asset that is transmittable over one or more multi-tiered networks. The data structure has one or more common descriptors to provide a unique identification of the digital asset on the networks; one or more asset dependency descriptors to identify one or more associated digital assets, associated digital assets are associated with the digital asset by a joint membership as parts of a whole; and has one or more target server dependencies descriptors to identify a base execution environment on one or more target computers. In an alternative exemplary embodiment and/or exemplary method, one or more EIS server dependencies descriptors are included to identify an EIS execution environment on the respective EIS from which the asset resides. In still other exemplary embodiments and/or exemplary methods, other descriptors are included in the extended environment data structure.",
	"url": null,
	"owner": "OP40, Inc.",
	"publication_number": "07752214",
	"publication_date": "2010-07-06",
	"application_number": "09947140",
	"application_date": "2001-09-04",
	"tags": null,
	"slug": "extended-environment-data-structure-for-distributed-digital-assets-over-a-multitier-computer-network",
	"match_type": "description"
},
{
	"name": "Code generator tool for building software applications with reusable components",
	"summary": "",
	"abstract": "A method and computer program product for building a multiple layer object-oriented software application with reusable components. The method includes the steps of creating business classes containing business logic for the software application; reading templates utilizing reusable components from a template solution file; and generating programming code for the software application based on the created business classes and selected template. The multiple layers include a data layer, a data access layer, a business logic layer and a user interface layer with executable logic for each layer placed into a corresponding assembly data structure. Security tokens are required to access the classes and methods in either the business logic assembly or data access assembly. A serializable data assembly includes container classes that are used to pass data between the business logic layer and data access layer when a dataset or data table is not appropriate. A code generator user interface enables an application developer to define a namespace, a deploy directory name, a database type, an application type, a target source code directory, and a plurality of class specifications and search criteria.",
	"url": null,
	"owner": "Open Invention Network, LLC",
	"publication_number": "07761848",
	"publication_date": "2010-07-20",
	"application_number": "11080735",
	"application_date": "2005-03-15",
	"tags": null,
	"slug": "code-generator-tool-for-building-software-applications-with-reusable-components",
	"match_type": "description"
},
{
	"name": "Registry for trading partners using documents for commerce in trading partner networks",
	"summary": "",
	"abstract": "A market making node in a network routes machine readable documents to connect businesses with customers, suppliers and trading partners. The self defining electronic documents, such as XML based documents, can be easily understood amongst the partners. Definitions of these electronic business documents, called business interface definitions, are posted on the Internet, or otherwise communicated to members of the network. The business interface definitions tell potential trading partners the services the company offers and the documents to use when communicating with such services. Thus, a typical business interface definition allows a customer to place an order by submitting a purchase order or a supplier checks availability by downloading an inventory status report. Also, the registration at a market maker node of a specification of the input and output documents, coupled with interpretation information in a common business library, enables participants in a trading partner network to execute the transaction in a way which closely parallels the way in which paper based businesses operate.",
	"url": null,
	"owner": "Open Invention Network, LLC",
	"publication_number": "07660874",
	"publication_date": "2010-02-09",
	"application_number": "09633365",
	"application_date": "2000-08-07",
	"tags": null,
	"slug": "registry-for-trading-partners-using-documents-for-commerce-in-trading-partner-networks",
	"match_type": "description"
},
{
	"name": "Unified and best messaging systems for communication devices",
	"summary": "",
	"abstract": "A unified messaging system which can provide messaging services for a plurality of different u201cmessage typesu201d is disclosed. The unified messaging system can serve as a single interface to a number of messaging services provided by various messaging components which use different message types (e.g., mail server). A unified message type is implemented and presented to a user as an abstract message. In addition, the unified messaging system can automatically determine, based on a first selected feature, if one or more message types should be used. A particular message type can also be automatically selected as a u201cbest message typeu201d based on one or more selected options.",
	"url": null,
	"owner": "Openwave Systems Inc.",
	"publication_number": "07756256",
	"publication_date": "2010-07-13",
	"application_number": "10981970",
	"application_date": "2004-11-04",
	"tags": null,
	"slug": "unified-and-best-messaging-systems-for-communication-devices",
	"match_type": "description"
},
{
	"name": "Infrastructure for accessing a peer-to-peer network environment",
	"summary": "",
	"abstract": "Embodiments of a system and method for providing peer-to-peer (p2p) capabilities to devices with limited resources (e.g. wireless devices). A mechanism is described that allows the devices to participate as peer nodes in p2p network environments through wired or wireless connections. In one embodiment, the p2p network environment may be implemented according to a p2p platform, and the mechanism may be interoperable with p2p platform devices in the p2p network environment. A relay/proxy node on the network may serve as an interface to the p2p environment for devices using the mechanism to participate as peers in the p2p network. The relay/proxy node may be accessed using the mechanism to perform one or more p2p network environment functions on behalf of the devices.",
	"url": null,
	"owner": "Oracle America, Inc,",
	"publication_number": "07774495",
	"publication_date": "2010-08-10",
	"application_number": "10366187",
	"application_date": "2003-02-13",
	"tags": null,
	"slug": "infrastructure-for-accessing-a-peertopeer-network-environment",
	"match_type": "description"
},
{
	"name": "Approach for allocating resources to an apparatus based on preemptable resource requirements",
	"summary": "",
	"abstract": "An approach for allocating resources to an apparatus based on preemptable resource requirements generally involves a resource allocator determining that a resource that satisfies a resource requirement for one apparatus is not available but that another resource that currently satisfies another resource requirement for another apparatus does satisfy the resource requirement. The resource allocator determines that the other resource requirement for the other apparatus is characterized in that resources that currently satisfy the other resource requirement may be de-allocated from the other apparatus, such as a preemptable resource requirement. The resource allocator de-allocates the resource from the other apparatus and allocates the resource to the one apparatus. A preemptable resource requirement can be based on a suspendable resource requirement or a set of alternative resource requirements.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07703102",
	"publication_date": "2010-04-20",
	"application_number": "11042812",
	"application_date": "2005-01-24",
	"tags": null,
	"slug": "approach-for-allocating-resources-to-an-apparatus-based-on-preemptable-resource-requirements",
	"match_type": "description"
},
{
	"name": "Asynchronous events in meta-data driven instrumentation",
	"summary": "",
	"abstract": "A method for providing management information about an asset includes obtaining a job from a job queue, determining the asset type of the asset from the job, triggering a protocol handler based on a data acquisition (DAQ) definition associated with the asset type and the job, receiving management information about the asset from the protocol handler, identifying at least one registered listener of the management information from the DAQ definition, where at least one registered listener includes an information model class instance, and notifying the at least one registered listener of the management information.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07711625",
	"publication_date": "2010-05-04",
	"application_number": "11473100",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "asynchronous-events-in-metadata-driven-instrumentation",
	"match_type": "description"
},
{
	"name": "Automatic connection and query management",
	"summary": "",
	"abstract": "A method for accessing data from a network storage medium is disclosed. An application supplies a query interface to a software object. The software object then establishes a connection between the application and the network storage medium using database information supplied by the query interface. Next, an annotated method supplied by the query interface is executed using logic provided by the software object. After the transactions have ended, the annotated method closes the connection between the application and the network storage medium.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07797709",
	"publication_date": "2010-09-14",
	"application_number": "11375895",
	"application_date": "2006-03-14",
	"tags": null,
	"slug": "automatic-connection-and-query-management",
	"match_type": "description"
},
{
	"name": "Autonomous cluster organization, collision detection, and resolutions",
	"summary": "",
	"abstract": "A method, apparatus, and system are directed toward managing cluster membership through a discovery process that enables selection of a master for the cluster. If a node on a network is the first to initiate the discovery process, it assumes the master role. Where two or more nodes enter the discovery process at the same time, or where a cluster is disjointed, views of the potential members to the cluster are shared among the nodes. Each node coalesces and sorts the views. The master may then be determined from the sorted views. In one embodiment, the master is that node in the results having a highest unique identifier. The identified master sends an assertion of its role to the other nodes. If no assertion is received, or multiple assertions are received, updated views are again shared and sorted. In one embodiment, the nodes may be within a peer-to-peer network.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07788522",
	"publication_date": "2010-08-31",
	"application_number": "11756480",
	"application_date": "2007-05-31",
	"tags": null,
	"slug": "autonomous-cluster-organization-collision-detection-and-resolutions",
	"match_type": "description"
},
{
	"name": "Click and run software purchasing",
	"summary": "",
	"abstract": "A method for selling and executing an application using a remote file system for a plurality of clients that includes receiving a purchase request for the application from a client of the plurality of clients, adding an application icon to the remote file system for the client, wherein the application icon allows access to the application and wherein the application icon is added after receiving the purchasing request, receiving an execution request for the application, wherein the execution request is received when the client accesses the application icon, and initiating execution of the application from the remote file system for the client, wherein the application is executed by the client from the remote file system.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07813964",
	"publication_date": "2010-10-12",
	"application_number": "11326864",
	"application_date": "2006-01-06",
	"tags": null,
	"slug": "click-and-run-software-purchasing",
	"match_type": "description"
},
{
	"name": "Common transaction manager interface for local and global transactions",
	"summary": "",
	"abstract": "A system and method for implementing a common transaction manager interface. A system may implement an application server with a transaction manager module configured to provide a common application interface to a local transaction manager and a global transaction manager. The transaction manager module may be configured to determine if a transaction initiated by an application component should be managed by the local transaction manager or the global transaction manager. The local transaction manger may be configured to create a local transaction object for each transaction managed by the local transaction manager, and the global transaction manger may be configured to create a global transaction object for each transaction managed by the global transaction manager. The local transaction objects and the global transaction objects may provide a common application interface for implementing their respective transactions.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07743083",
	"publication_date": "2010-06-22",
	"application_number": "10422453",
	"application_date": "2003-04-24",
	"tags": null,
	"slug": "common-transaction-manager-interface-for-local-and-global-transactions",
	"match_type": "description"
},
{
	"name": "Configuration tool with multi-level priority semantic",
	"summary": "",
	"abstract": "A method for configuration of a program with a plurality of configuration variables to operate on a computer system that includes obtaining a plurality of priority semantics for the plurality of configuration variables, wherein the plurality of priority semantics are heterogeneous, assigning a value for each of the plurality of configuration variables based on the plurality of priority semantics, and configuring the program using the value to operate on the computer system.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07831960",
	"publication_date": "2010-11-09",
	"application_number": "11449355",
	"application_date": "2006-06-08",
	"tags": null,
	"slug": "configuration-tool-with-multilevel-priority-semantic",
	"match_type": "description"
},
{
	"name": "Dependency-based grouping to establish class identity",
	"summary": "",
	"abstract": "A method for using dependency-based grouping to establish class identity comprises categorizing a plurality of classes into a set of class groups based at least in part on one or more dependencies between the classes, and generating metadata to be use for loading the classes, where the metadata includes a mapping between the set of class groups and the plurality of classes. The metadata may also include respective signatures for class groups and/or the individual classes. The method may also include validating, using at least a portion of the metadata, the identity of a particular version of a class of the plurality of classes, prior to loading the version for execution.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07836440",
	"publication_date": "2010-11-16",
	"application_number": "11412648",
	"application_date": "2006-04-27",
	"tags": null,
	"slug": "dependencybased-grouping-to-establish-class-identity",
	"match_type": "description"
},
{
	"name": "Displaying results of server-side form validations without page refresh",
	"summary": "",
	"abstract": "According to one embodiment of the invention, a technique is provided for validating user-entered data at a server without requiring a page refresh at a client. A server sends, toward a client, a page that comprises a form through which the client's user can input data. The page comprises instructions that cause the client to send, toward the server, data that the user inputted into the form. If the server determines that the data do not satisfy the specified criteria, the server sends an invalidity signal toward the client. The page also comprises instructions that cause the client to display a message in response to receiving the signal. In response to the signal, the client modifies the display of the page to include the message. All of the above is accomplished without the client requesting additional pages from the server, and without the server sending additional pages toward the client.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07788341",
	"publication_date": "2010-08-31",
	"application_number": "11293338",
	"application_date": "2005-12-01",
	"tags": null,
	"slug": "displaying-results-of-serverside-form-validations-without-page-refresh",
	"match_type": "description"
},
{
	"name": "Dynamic composition of an execution environment from multiple immutable file system images",
	"summary": "",
	"abstract": "A virtual file system is formed configured to enable the dynamic composition of immutable file system images. A file system containing a software distribution is divided into a plurality of mutually exclusive sub-trees. Each sub-tree includes a portion of the software distribution. An immutable file system image is formed for each sub-tree. During the booting of an operating system, a virtualization engine intercedes in the boot process to mount the immutable file system images to independent directories of the root file system. Upon request the virtualization engine, during run-time, combines virtual entries corresponding to immutable file system images so as to resemble the original software distribution.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07805409",
	"publication_date": "2010-09-28",
	"application_number": "12035132",
	"application_date": "2008-02-21",
	"tags": null,
	"slug": "dynamic-composition-of-an-execution-environment-from-multiple-immutable-file-system-images",
	"match_type": "description"
},
{
	"name": "Dynamic lookup service in a distributed system",
	"summary": "",
	"abstract": "An improved lookup service is provided that allows for the dynamic addition and deletion of services. This lookup service allows for the addition and deletion of services automatically, without user intervention. As a result, clients of the lookup service may continue using the lookup service and its associated services while the updates occur. Additionally, the lookup service provides a notification mechanism that can be used by clients to receive a notification when the lookup service is updated. By receiving such a notification, clients can avoid attempting to access a service that is no longer available and can make use of new services as soon as they are added to the lookup service.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07734747",
	"publication_date": "2010-06-08",
	"application_number": "10669692",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": "dynamic-lookup-service-in-a-distributed-system",
	"match_type": "description"
},
{
	"name": "Dynamic verification of application portability",
	"summary": "",
	"abstract": "A system and for dynamic verification of application portability may include an application server configured to support a debugging interface, an application deployed on the application server, and a portability verification tool. The portability verification tool may be configured to invoke the debugging interface during an execution of the application to determine whether the application violates one or more specified portability criteria during the execution.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07774757",
	"publication_date": "2010-08-10",
	"application_number": "11180411",
	"application_date": "2005-07-13",
	"tags": null,
	"slug": "dynamic-verification-of-application-portability",
	"match_type": "description"
},
{
	"name": "Emulator and real device proxy",
	"summary": "",
	"abstract": "A system and method are disclosed for emulating electronic device functionality. An emulator is defined to operate on a computing platform to simulate functionality of an electronic device. The electronic device and computing platform are separate from each other. A proxy client module is defined to operate in conjunction with the emulator. The proxy client module is defined to transmit an application request from the emulator to the electronic device to be processed by the electronic device. A proxy server module is defined to operate on the electronic device. The proxy server module is defined to receive the application request transmitted from the proxy client module, submit the application request to the electronic device for processing, and transmit results of the application request processing to the proxy client module.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07761882",
	"publication_date": "2010-07-20",
	"application_number": "11186205",
	"application_date": "2005-07-20",
	"tags": null,
	"slug": "emulator-and-real-device-proxy",
	"match_type": "description"
},
{
	"name": "Generic event notification service for resource-constrained devices",
	"summary": "",
	"abstract": "A generic event notification service for a resource-constrained device is provided. One method includes receiving an event having a unique event identifier, and determining whether an event-producing application is authorized to fire the event. Upon a determination of authorization to fire the event, a determination is made whether any event-consuming applications are authorized by the event-producing application to receive the event. Upon a determination of authorization to receive the event, the event is forwarded to each authorized event-consuming application. In this manner, secure, flexible, generic, and uniform application interaction is facilitated.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07711783",
	"publication_date": "2010-05-04",
	"application_number": "11454318",
	"application_date": "2006-06-16",
	"tags": null,
	"slug": "generic-event-notification-service-for-resourceconstrained-devices",
	"match_type": "description"
},
{
	"name": "Inducing concurrency in software code",
	"summary": "",
	"abstract": "An Induced Multi-threading (IMT) framework may be configured to induce multi-threaded execution in software code. In one embodiment, the IMT framework may include a concurrent code generator configured to receive marked code having one or more blocks of code marked for concurrent execution. Software code initially intended for sequential execution may have been automatically marked by an automated code marker and/or marked manually to generate the marked code. The concurrent code generator may be configured to generate concurrent code from the marked code. The concurrent code may include one or more tasks configured for concurrent execution in place of the one or more marked blocks of code. In one embodiment, the IMT framework may also include a scheduler configured to schedule one or more of the tasks for multi-threaded execution.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07765532",
	"publication_date": "2010-07-27",
	"application_number": "10277503",
	"application_date": "2002-10-22",
	"tags": null,
	"slug": "inducing-concurrency-in-software-code",
	"match_type": "description"
},
{
	"name": "Load-balancing framework for a cluster",
	"summary": "",
	"abstract": "Various embodiments of a system and method for balancing nodal loading in a cluster are disclosed. In a cluster, each node may execute an instance of a distributed application component. A pluggable load balancer may receive requests targeted at the application component. For each request, the load balancer may invoke a pluggable load-balancing function to determine a next node to which the request should be forwarded to balance the workload of the cluster nodes. Each node of the cluster may include a load-balancing framework that provides a standard load-balancing API. In order to determine the next node to which a request should be milted, the load balancer may send requests for node information conforming to the API, to the cluster members. This information may include nodal CPU speed, memory capacity, number of queued requests, and number of requests serviced during a specified time period.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07757236",
	"publication_date": "2010-07-13",
	"application_number": "10878894",
	"application_date": "2004-06-28",
	"tags": null,
	"slug": "loadbalancing-framework-for-a-cluster",
	"match_type": "description"
},
{
	"name": "Low overhead access to shared on-chip hardware accelerator with memory-based interfaces",
	"summary": "",
	"abstract": "In one embodiment, a method is contemplated. Access to a hardware accelerator is requested by a user-privileged thread. Access to the hardware accelerator is granted to the user-privileged thread by a higher-privileged thread responsive to the requesting. One or more commands are communicated to the hardware accelerator by the user-privileged thread without intervention by higher-privileged threads and responsive to the grant of access. The one or more commands cause the hardware accelerator to perform one or more tasks. Computer readable media comprises instructions which, when executed, implement portions of the method are also contemplated in various embodiments, as is a hardware accelerator and a processor coupled to the hardware accelerator.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07809895",
	"publication_date": "2010-10-05",
	"application_number": "11684348",
	"application_date": "2007-03-09",
	"tags": null,
	"slug": "low-overhead-access-to-shared-onchip-hardware-accelerator-with-memorybased-interfaces",
	"match_type": "description"
},
{
	"name": "Mechanism for bridging a thread-oriented computing paradigm and a job-oriented computing paradigm",
	"summary": "",
	"abstract": "A mechanism is provided for fostering the adoption of grid computing by bridging the thread-oriented paradigm (used in single and multi-processor computers) and the job-oriented paradigm (used in grid computing). This mechanism allows an application developer to write an application in the same manner as if he were writing a thread-oriented program (in terms of creating and joining threads). However, when the application is executed on a client computer and the mechanism is invoked, the mechanism interacts with a resource management interface to cause a distributed resource manager to create, distribute, and manage the execution of jobs on the resource computers of a grid. Thus, rather than actually spawning threads on the client computer, the mechanism causes jobs to be spawned and executed on the grid. By doing this, the mechanism allows the application to take advantage of grid computing without requiring the application to be grid-aware.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07802257",
	"publication_date": "2010-09-21",
	"application_number": "11157665",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": "mechanism-for-bridging-a-threadoriented-computing-paradigm-and-a-joboriented-computing-paradigm",
	"match_type": "description"
},
{
	"name": "Method and apparatus for application verification",
	"summary": "",
	"abstract": "A method for verification of an application for zones that includes determining an execution environment of the application, obtaining a list of permissions from the execution environment, analyzing the application to identify a restricted instruction within the application, wherein the restricted instruction is zone specific, and generating a report when a required permission of the restricted instruction is not in the list of permissions.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07814465",
	"publication_date": "2010-10-12",
	"application_number": "11433661",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "method-and-apparatus-for-application-verification",
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting device support in a graphical user interface",
	"summary": "",
	"abstract": "Embodiments of the invention comprise techniques to detect support for a given input device by a screen element of a graphical user interface (GUI). In one embodiment of the invention, a runtime version of a screen element's program code is examined to detect an ability to process a device's events. In another embodiment of the invention, a determination is made at runtime whether a screen element delegated processing of a given input device's events to other program code. In yet another embodiment of the invention, the runtime version of a screen element's program code is examined to detect a declaration of program code that is indicative of a screen element's support or non-support of a given input device. In yet another embodiment of the invention, one or more of the previously-identified embodiments can be combined.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07774717",
	"publication_date": "2010-08-10",
	"application_number": "11093915",
	"application_date": "2005-03-29",
	"tags": null,
	"slug": "method-and-apparatus-for-detecting-device-support-in-a-graphical-user-interface",
	"match_type": "description"
},
{
	"name": "Method and apparatus for identifying problem causes in a multi-node system",
	"summary": "",
	"abstract": "An SLO (service level objective) is represented by a model that includes nodes that represent elements in a system that are used to fulfill the SLO and information that represents dependencies between the elements. Telemetry information is received describing a condition of an element in the system. The telemetry information can be applied to a particular procedure associated with a particular node in the model to determine if there is a problem associated with the element represented by the particular node. At least a portion of the telemetry information is applied to procedures to determine problem cause information describing which elements have problems relating to the SLO. A relative contribution of elements to a problem associated with the SLO is determined by analyzing the problem cause information and the dependencies between the elements.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07701859",
	"publication_date": "2010-04-20",
	"application_number": "11354703",
	"application_date": "2006-02-14",
	"tags": null,
	"slug": "method-and-apparatus-for-identifying-problem-causes-in-a-multinode-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for managing system resources using a container model",
	"summary": "",
	"abstract": "A method for managing system resources including creating a container, wherein creating the container comprises allocating a first portion of a first resource to the container, associating the container with a resource pool, wherein the resource pool is associated with the first resource, determining whether the first portion of the first resource is valid, and activating the container if the first portion of the first resource is valid.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07814491",
	"publication_date": "2010-10-12",
	"application_number": "10824074",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": "method-and-apparatus-for-managing-system-resources-using-a-container-model",
	"match_type": "description"
},
{
	"name": "Method and apparatus for supporting multiple transport layer implementations under a socket interface",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system for communicating data using a socket interface with multiple transport layer implementations. During operation the system creates a socket which can be used with a set of transport layer implementations. Next, the system binds the socket to a local port without specifying a particular transport layer implementation. The system then receives a request to connect to a target port that is associated with a target address. Next, the system selects a protocol implementation from the set of transport layer implementations using the target port and the target address. The system then sends a connection request to the target port using the selected protocol implementation. Note that the present invention does not require changing a networking application because the transport layer implementation is selected automatically by the system, instead of requiring the application to possess the knowledge to select the appropriate transport layer implementation.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07779132",
	"publication_date": "2010-08-17",
	"application_number": "11274600",
	"application_date": "2005-11-14",
	"tags": null,
	"slug": "method-and-apparatus-for-supporting-multiple-transport-layer-implementations-under-a-socket-interface",
	"match_type": "description"
},
{
	"name": "Method and apparatus for tracking changes in a system",
	"summary": "",
	"abstract": "A method for analyzing a target system that includes obtaining a plurality of characteristics from the target system using a characteristics extractor, wherein the plurality of characteristics is associated with a characteristics model, storing each of the plurality of characteristics in a characteristics store using a tracking mechanism, and analyzing the target system by issuing a query to the characteristics store to obtain an analysis result, wherein the query uses tracking information associated with the tracking mechanism.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07703074",
	"publication_date": "2010-04-20",
	"application_number": "11133831",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "method-and-apparatus-for-tracking-changes-in-a-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus to obtain service capability credentials",
	"summary": "",
	"abstract": "A service discovery mechanism may allow clients in a distributed computing environment to search for services. The service discovery mechanism may allow a client to request a capability credential from a service. In one embodiment, the client may present to the service a set of desired capabilities. The service may then respond with a capability credential that may convey to the client the rights to use the requested capabilities. A complete service advertisement may be needed to create a message endpoint for accessing the service. In an embodiment, the capability credential may be used by a client to obtain a complete advertisement for the requested capabilities. The capability credential may provide an additional level of security for the service provider. The capability credential that may be used to receive the complete advertisement may also be used to construct a message gate to communicate with the service where the gate embeds the capability credential in each message to the service.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07716492",
	"publication_date": "2010-05-11",
	"application_number": "09653215",
	"application_date": "2000-08-31",
	"tags": null,
	"slug": "method-and-apparatus-to-obtain-service-capability-credentials",
	"match_type": "description"
},
{
	"name": "Method and system for analyzing software test results",
	"summary": "",
	"abstract": "A method for analyzing software test results that includes identifying a test result of a failed test case in a test log, determining whether the failed test case has a related defect report, and storing a selectable link to the related defect report in the test result when the failed test case has the related defect report.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07836346",
	"publication_date": "2010-11-16",
	"application_number": "11761300",
	"application_date": "2007-06-11",
	"tags": null,
	"slug": "method-and-system-for-analyzing-software-test-results",
	"match_type": "description"
},
{
	"name": "Method and system for automatic correlation of asynchronous errors and stimuli",
	"summary": "",
	"abstract": "A test and system state recorder (TSSR) controller of a test and system state recorder automatically correlates and captures information about possible stimuli from telemetry information events generated by a test or tests of a test system. The TSSR controller simultaneously and automatically correlates and captures information about other possible stimuli, such as environmental stimuli from telemetry information events generated by optional telemetry event generators. TSSR controller keeps a snap-shot list of the most current stimuli from each sender of telemetry information events. On receipt of an asynchronous trigger event generated by a fault management controller the snap-shot list is logged in a test and system state recorder log. The entry in the log provides automatic correlation of asynchronous errors and stimuli.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07757124",
	"publication_date": "2010-07-13",
	"application_number": "11879304",
	"application_date": "2007-07-16",
	"tags": null,
	"slug": "method-and-system-for-automatic-correlation-of-asynchronous-errors-and-stimuli",
	"match_type": "description"
},
{
	"name": "Method and system for bandwidth control on a network interface card",
	"summary": "",
	"abstract": "A method for bandwidth control on a network interface card (NIC), the method that includes initiating a current time period, receiving a plurality of incoming packets for a receive ring, populating, by a NIC, the receive ring with the plurality of incoming packets according to a size of the receive ring during the current time period, wherein the size of the receive ring is based on an allocated bandwidth for the receive ring, and sending, by the NIC, the plurality of incoming packets to a host when a duration of the current time period elapses, wherein the duration is based on the allocated bandwidth for the receive ring.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07801046",
	"publication_date": "2010-09-21",
	"application_number": "12111022",
	"application_date": "2008-04-28",
	"tags": null,
	"slug": "method-and-system-for-bandwidth-control-on-a-network-interface-card",
	"match_type": "description"
},
{
	"name": "Method and system for child-parent mechanism emulation via a general interface",
	"summary": "",
	"abstract": "A method for emulating a system call includes making the system call by a first process in a first operating system (OS) for interacting with a second process, wherein the first OS is emulated in a second OS, spawning an agent process, wherein the agent process is a child process of the first process, implementing a functionality of the system call using a general mechanism in the second OS between the agent process and the second process, passing a result associated with the system call from the second process to the agent process using the general mechanism, and relaying the result from the agent process to the first process using a system call in the second OS, wherein the result is stored by the first process.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07720671",
	"publication_date": "2010-05-18",
	"application_number": "11606748",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "method-and-system-for-childparent-mechanism-emulation-via-a-general-interface",
	"match_type": "description"
},
{
	"name": "Method and system for dynamically changing quality of service for message communication",
	"summary": "",
	"abstract": "A quality of service policy for one or more documents for transmission from the local storage to one or more end points for said documents through a communication system is retrieved from a remote registry associated with an offering, and said documents are enqueued according to said quality of service policy. In some cases, the registry may be co-hosted with at least one of the document end points. The quality of service policy may be derived from a transport policy for said one or more documents, and may even be such as to not specify a quality of service for delivery of some or all of the documents. In some cases, XML documents may be used to set forth the quality of service policies.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07773527",
	"publication_date": "2010-08-10",
	"application_number": "11209293",
	"application_date": "2005-08-22",
	"tags": null,
	"slug": "method-and-system-for-dynamically-changing-quality-of-service-for-message-communication",
	"match_type": "description"
},
{
	"name": "Method and system for generation of delegating implementation for IDL interfaces using inheritance",
	"summary": "",
	"abstract": "A method of generating an interface definition language (IDL) interface involves identifying parents for the IDL interface, identifying parent interfaces associated with the parents, wherein the parent interfaces include concrete parent interfaces, computing a set of directly implemented methods for the parent interfaces, generating an implementation of the IDL interface with the concrete parent interfaces to generate a plurality of delegation fields, generating an initialization method and a setting method for each of the plurality of delegation fields, and generating indirectly implemented methods with a body that delegates functionality to one of the plurality of delegate fields.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07735015",
	"publication_date": "2010-06-08",
	"application_number": "10883104",
	"application_date": "2004-07-01",
	"tags": null,
	"slug": "method-and-system-for-generation-of-delegating-implementation-for-idl-interfaces-using-inheritance",
	"match_type": "description"
},
{
	"name": "Method and system for minor garbage collection in a multitasking environment",
	"summary": "",
	"abstract": "A method for minor garbage collection in a multitasking environment involves marking cards as clean, where the cards designate ranges of memory locations in a shared older generation. The method further involves marking a card as dirty when a reference field of an object within the card is modified, where a memory location of the reference field is designated by the card, where the reference field references a live young object in a task-specific young generation, and where the task-specific young generation is associated with a first task. The method further involves marking the card as single-dirty when the card only includes roots of live young objects in the task-specific young generation, and optimizing task-specific minor garbage collection for a second task by skipping the card when the card is marked as single-dirty.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07756912",
	"publication_date": "2010-07-13",
	"application_number": "11864849",
	"application_date": "2007-09-28",
	"tags": null,
	"slug": "method-and-system-for-minor-garbage-collection-in-a-multitasking-environment",
	"match_type": "description"
},
{
	"name": "Method and system for presence state assignment based on schedule information in an instant messaging system",
	"summary": "",
	"abstract": "A method and system for presence state assignment based on schedule information in an instant messenger system. In one embodiment, the method may include storing schedule information corresponding to a given user, where the schedule information is indicative of an activity status of the given user at a given time. The method may further include querying the schedule information, and if a current presence state of an instant messenger does not correspond to the activity status indicated by the schedule information, assigning a different presence state that corresponds to the activity status in response to the querying, where the current presence state and the different presence state each correspond to the given user.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07752268",
	"publication_date": "2010-07-06",
	"application_number": "10670549",
	"application_date": "2003-09-25",
	"tags": null,
	"slug": "method-and-system-for-presence-state-assignment-based-on-schedule-information-in-an-instant-messaging-system",
	"match_type": "description"
},
{
	"name": "Method and system for processing a message by a message provider",
	"summary": "",
	"abstract": "A method for processing a message by a message provider that includes receiving, for a topic, a mutual exclusion function from each application instance of a plurality of application instances, receiving the message for the topic, and sending the message to one application instance of the plurality of application instances based on executing each of the mutual exclusion functions, wherein the mutual exclusion functions ensure that the message is sent to a single application instance of the plurality of application instances.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07818426",
	"publication_date": "2010-10-19",
	"application_number": "11728625",
	"application_date": "2007-03-27",
	"tags": null,
	"slug": "method-and-system-for-processing-a-message-by-a-message-provider",
	"match_type": "description"
},
{
	"name": "Method and system for running multiple virtual machines in a single process",
	"summary": "",
	"abstract": "A method and system for running a Java ME application on a computer system are described. The Java ME application is a software program designed for execution on a resource-constrained platform. A first virtual machine is launched in a process, the first virtual machine being is caused to run an application emulator. A second virtual machine is launched in the process, the second virtual machine being caused to run the Java ME application. The application emulator interfaces with application programming interfaces of the second virtual machine to interface with inputs and outputs of the Java ME application and redirect the inputs and outputs to local devices controlled by the application emulator.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07730492",
	"publication_date": "2010-06-01",
	"application_number": "11744044",
	"application_date": "2007-05-03",
	"tags": null,
	"slug": "method-and-system-for-running-multiple-virtual-machines-in-a-single-process",
	"match_type": "abstract"
},
{
	"name": "Method and system of communicating devices, and devices therefor, with protected data transfer",
	"summary": "",
	"abstract": "A method and a communicating system to enhance the reliability of communication between devices by protecting against failure of a device, e.g. due to power interruption. Additional data is included in communication primitives transmitted between communicating devices. The additional data relates to state data of the device having generated the additional data. The additional data is used to check the state data. The state data may also be derivable from the additional data upon receiving the additional data back from an other device.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07828218",
	"publication_date": "2010-11-09",
	"application_number": "10333355",
	"application_date": "2000-07-20",
	"tags": null,
	"slug": "method-and-system-of-communicating-devices-and-devices-therefor-with-protected-data-transfer",
	"match_type": "description"
},
{
	"name": "Method for managing annotation inheritance",
	"summary": "",
	"abstract": "Rules are provided to address the interplay of annotations and inheritance in the JAVA programming language. Class-level annotations affect the class they annotate and members of the class they annotate. Class-level annotations do not affect a class member declared by a superclass. If a class member carries a specific member-level annotation, an annotation of the same type implied by a class-level annotation is ignored. An interface implemented by a class does not contribute annotations to the implementing class or members of the implementing class. Class members inherited from a superclass, that are neither hidden nor overridden, maintain the annotations they had in the class that declared them. Member-level annotations on class members inherited from a superclass, that are either hidden or overridden, are ignored. Interface-level annotations affect the interface they annotate and all members of the interface they annotate, including inherited members.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07840939",
	"publication_date": "2010-11-23",
	"application_number": "11372822",
	"application_date": "2006-03-09",
	"tags": null,
	"slug": "method-for-managing-annotation-inheritance",
	"match_type": "description"
},
{
	"name": "Method for secure communication from chip card and system for performing the same",
	"summary": "",
	"abstract": "A method and system is provided to secure a data transmission from a chip card to an off-card entity. A transport key is generated at the off-card entity. The transport key is transmitted in a secure manner from the off-card entity to the chip card. At the chip card, the transport key is used to encrypt data to be sent from the chip card to the off-card entity. The data having been encrypted at the chip card using the transport key is then transmitted from the chip card to the off-card entity. The off-card entity is capable of decrypting the data received from the chip card through use of the transport key previously generated at the off-card entity.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07805611",
	"publication_date": "2010-09-28",
	"application_number": "11004707",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": "method-for-secure-communication-from-chip-card-and-system-for-performing-the-same",
	"match_type": "description"
},
{
	"name": "Method, apparatus and program product to use factory-defined multiple MAC addresses for virtual NICS",
	"summary": "",
	"abstract": "Apparatus, methods and computer program products are disclosed for specifying a MAC identifier for a network-interface-device that includes multiple universally administered MAC identifiers and connects to a network through a port. The network-interface-device accepts data packets received through the port if the data packets contain a destination address that matches any active MAC identifier. The method includes reserving a first and second universally administered MAC identifiers from the available universally administered MAC identifiers. The first universally administered MAC identifier and the second universally administered MAC identifier are respectively associated with a first and second resource of the network-interface-device. The MAC identifier is assigned to one of the first or second resource and activated. Other aspects include apparatus logics and program products that perform the method.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07843821",
	"publication_date": "2010-11-30",
	"application_number": "11644561",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "method-apparatus-and-program-product-to-use-factorydefined-multiple-mac-addresses-for-virtual-nics",
	"match_type": "description"
},
{
	"name": "Migrating documents",
	"summary": "",
	"abstract": "A source document set including one or more source documents to be migrated from a source application package to a destination application package can be analyzed for migration issues. The migration issues can be reported to a user and/or resolved prior to migration by software. Software can also be provided for the extraction of a source macro from a source document, parsing of the source macro, mapping of specific source APIs to destination APIs and the generation of destination macro code.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07730025",
	"publication_date": "2010-06-01",
	"application_number": "10999597",
	"application_date": "2004-11-30",
	"tags": null,
	"slug": "migrating-documents",
	"match_type": "description"
},
{
	"name": "Object oriented communication between isolates",
	"summary": "",
	"abstract": "A computer implemented method and machine readable media for managing a registry of bound objects for inter-Xlet communication (IXC) is described. A request from a first Xlet to bind an exported object name with a remote reference is received. A number of objects exported by the first Xlet is compared with a maximum number. If the number of objects exported is less than the maximum number then a binding is added for the exported object name and the remote reference. If the number of objects exported is greater than the maximum number, then the request is denied.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07765560",
	"publication_date": "2010-07-27",
	"application_number": "11259996",
	"application_date": "2005-10-26",
	"tags": null,
	"slug": "object-oriented-communication-between-isolates",
	"match_type": "description"
},
{
	"name": "Quickly reacquirable locks",
	"summary": "",
	"abstract": "Techniques are provided for quickly reacquiring mutual exclusion locks (QRLs), such as in the case in which a single process repeatedly acquires and releases the lock and in which no other process attempts to acquire the same lock. When the first holder of a QRL first acquires the lock, it biases the lock to itself. Bias may be directed in different way or at different times in some realizations. Biasing may involve a one-time compare-and-swap instruction. Thereafter, this bias-holder can reacquire and release the lock free of atomic read-modify-write operations. If a second process attempts to acquire a QRL, then the lock may revert to a u201cdefault locku201d. Any standard mutual exclusion lock may be used as the default lock. A QRL lock may be reinitialized so that it can be rebiased. Rebiasing may be valuable in the case of migratory data access patterns.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07814488",
	"publication_date": "2010-10-12",
	"application_number": "10669948",
	"application_date": "2003-09-24",
	"tags": null,
	"slug": "quickly-reacquirable-locks",
	"match_type": "description"
},
{
	"name": "Receiver-processor-dispatcher mechanism for inbound connectors",
	"summary": "",
	"abstract": "System and method for receiving inbound messages from external systems and delivering the messages to applications within application servers are described. Embodiments may provide implementations of a Receiver-Processor-Dispatcher (RPD) architecture for inbound connectors that segments the work of delivering inbound messages from an Enterprise Information System (EIS) to an application into the discrete stages of receiving messages from the EIS, processing the messages to determine which components in the application should receive the messages, and dispatching the messages to the components. The delivery of messages from an EIS to an application is performed by receiver, processor, and dispatcher components of an RPD connector. RPD connectors implemented according to the RPD architecture may provide a common framework for delivering messages from an EIS to an application. Developers may implement RPD connectors according to the common framework, while customizing the RPD connectors according to the particular requirements of the EIS and/or application.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07802260",
	"publication_date": "2010-09-21",
	"application_number": "10914402",
	"application_date": "2004-08-09",
	"tags": null,
	"slug": "receiverprocessordispatcher-mechanism-for-inbound-connectors",
	"match_type": "description"
},
{
	"name": "Resource discovery and enumeration in meta-data driven instrumentation",
	"summary": "",
	"abstract": "A method for enumerating an asset includes receiving an enumeration request for enumerating an asset, obtaining a data acquisition (DAQ) definition associated with the enumeration request, translating the enumeration request from an information model format to a DAQ format, wherein the DAQ definition complies with the DAQ format, identifying an actual uniform resource identifier (URI) from the DAQ definition based on the enumeration request, where the URI identifies an enumeration mechanism, triggering a protocol handler associated with the enumeration mechanism, and obtaining information about at least one instance of the asset from the protocol handler.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07734640",
	"publication_date": "2010-06-08",
	"application_number": "11473098",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "resource-discovery-and-enumeration-in-metadata-driven-instrumentation",
	"match_type": "description"
},
{
	"name": "Reuse of circuit labels for verification of circuit recognition",
	"summary": "",
	"abstract": "A method for identifying instances of a smaller circuit in a larger circuit is provided. Both the smaller circuit and the larger circuit have a plurality of vertices. A vertex is one of a device or a net. The device, such a transistor, includes a Gate, a Drain, and a Source. The net is a wired connection between devices. The method includes recursively relabeling of each of the plurality of vertices until labels of all neighboring vertices of a selected vertex are zero. The neighboring vertices of a vertex are vertices that are directly connected to the vertex. Each successive iteration of the relabeling uses labels of each of the plurality of vertices after a previous iteration of the relabeling. Then, a recursive circuit tracing operation is performed.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07861193",
	"publication_date": "2010-12-28",
	"application_number": "12035405",
	"application_date": "2008-02-21",
	"tags": null,
	"slug": "reuse-of-circuit-labels-for-verification-of-circuit-recognition",
	"match_type": "description"
},
{
	"name": "State data persistence in a distributed computing environment",
	"summary": "",
	"abstract": "Various embodiments of a system and method for persisting application state data are disclosed. The system may include a server cluster networked to a persistent data store such as a database resident on a backend system. Each server of the cluster may include a server container providing services for one or more applications along with a persistence mechanism. The persistence mechanism may be able to detect changes to the state of an application and persist only the portion of the application state that changed to the remote, persistent data store. In some embodiments, the persistence mechanism may be a Java Data Object (JDO) persistence manager which provides object persistence and transaction support while masking the peculiarities of resource managers for particular databases.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07716274",
	"publication_date": "2010-05-11",
	"application_number": "10824099",
	"application_date": "2004-04-14",
	"tags": null,
	"slug": "state-data-persistence-in-a-distributed-computing-environment",
	"match_type": "description"
},
{
	"name": "Stationary semantic zooming",
	"summary": "",
	"abstract": "A system and method for stationary semantic zooming. Stationary semantic zooming allows selected non-spatial rendering attributes, such as level of detail, to be varied according to other specified non-spatial rendering attributes. Stationary semantic zooming allows low importance objects to be rendered with a lower level of detail than higher importance objects. A system and method for displaying network status and realty information using stationary semantic zooming are also disclosed.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07710429",
	"publication_date": "2010-05-04",
	"application_number": "11521781",
	"application_date": "2006-09-15",
	"tags": null,
	"slug": "stationary-semantic-zooming",
	"match_type": "description"
},
{
	"name": "Synchronized objects for software transactional memory",
	"summary": "",
	"abstract": "A system for implementing synchronized objects for software transactional memory may include one or more processors and a memory storing program instructions executable by the processor to implement a transactional-memory manager configured to coordinate memory access requests directed at the memory from a plurality of transactions. The transactional-memory manager records, within a collaborator record for a shared data object in the memory, identifications of a set of two or more transactions that have requested synchronization on the object. In response to a commit request from a given transaction of the set, the transactional-memory manager determines whether to commit or abort the given transaction based at least in part on the transactional states of other transactions in the set, examining the collaborator record to identify the other transactions.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07720891",
	"publication_date": "2010-05-18",
	"application_number": "11353478",
	"application_date": "2006-02-14",
	"tags": null,
	"slug": "synchronized-objects-for-software-transactional-memory",
	"match_type": "description"
},
{
	"name": "System and method for batch tuning intelligent devices",
	"summary": "",
	"abstract": "System and method for batch-tuning multiple software components of an intelligent device. An intelligent device may include tunable components each associated with a tunable configuration file. A batch tuner may be used to generate batch configuration documents from the configuration files. The batch tuner may also be used to generate configuration files from a batch configuration document. In one embodiment, the batch configuration document and the configuration files are markup language documents. In one embodiment, an XML document type definition (DTD) may be used as the method of information exchange. In one embodiment, the batch tuner may use an API (e.g. DOM or SAX API) to access the batch configuration document and configuration files. In one embodiment, each component may be associated with an executable module conforming to the API, and the batch tuner may call the module for the component to generate the configuration file.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07774435",
	"publication_date": "2010-08-10",
	"application_number": "10077520",
	"application_date": "2002-02-15",
	"tags": null,
	"slug": "system-and-method-for-batch-tuning-intelligent-devices",
	"match_type": "description"
},
{
	"name": "System and method for limiting exposure of cryptographic keys protected by a trusted platform module",
	"summary": "",
	"abstract": "A cryptographic module for limiting exposure of cryptographic keys protected by a trusted platform module (TPM) is provided. The cryptographic module includes logic for establishing a session with the TPM on behalf of a cryptographic client and logic for sending a request from the cryptographic client to the TPM to retrieve in plaintext a cryptographic key of the cryptographic client. Logic for receiving the cryptographic key in plaintext from the TPM are also included in cryptographic module. Further, cryptographic module includes logic for performing a cryptographic operation requested by the cryptographic client using the cryptographic key, and logic for sending the results of the cryptographic operation to the cryptographic client. A hardware-based method and system for limiting exposure of cryptographic keys also are described.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07802111",
	"publication_date": "2010-09-21",
	"application_number": "11117243",
	"application_date": "2005-04-27",
	"tags": null,
	"slug": "system-and-method-for-limiting-exposure-of-cryptographic-keys-protected-by-a-trusted-platform-module",
	"match_type": "description"
},
{
	"name": "System and method for maintaining alternate object views",
	"summary": "",
	"abstract": "A binding framework including a binder operable to associate and synchronize particular document objects with corresponding content objects performs unmarshalling to create the content objects from the XML documents. The content objects, which may in particular configurations be JAXB content objects, provide an alternate view to the XML data contained in the underlying XML documents. Java (i.e. user) applications then modify, or update the content objects via the alternate view, and rewrite, or update, the corresponding XML document during a marshalling process (i.e. writing the data from Java back into XML). The binding framework maintains the associations such that bound content objects are modifiable and may update the corresponding XML data in a non-destructive manner which avoids overwriting or u201cclobberingu201d other preexisting data contained in the XML document object during marshalling. The synchronizer employs the associations to maintain runtime consistency between the XML, or DOM view and the Java, or JAXB view.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07793255",
	"publication_date": "2010-09-07",
	"application_number": "11069609",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": "system-and-method-for-maintaining-alternate-object-views",
	"match_type": "description"
},
{
	"name": "System and method for RMI-IIOP request load balancing",
	"summary": "",
	"abstract": "System and method for client-side RMI-IIOP request load balancing. Embodiments provide a vendor-independent mechanism for load balancing RMI-IIOP requests using standards-based JNDI (Java Naming and Directory Interface) SPIs. One embodiment may use an implementation of a Context Factory class such as the JNDI ContextFactory SPI (Service Provider Interface) for RMI-IIOP request load balancing. Using embodiments, a client may load-balance RMI-IIOP requests to application server instances in an application server cluster. A plurality of client-side Object Request Brokers (ORBs) may be created u201cup frontu201d on a client system. After the client-side ORBs are initially created, the client-side ORBs may be selected according to a load balancing scheme in response to requests to access the application server. Note that embodiments may be adapted for use in client-side load balancing for other types of client-server systems.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07752626",
	"publication_date": "2010-07-06",
	"application_number": "10675479",
	"application_date": "2003-09-30",
	"tags": null,
	"slug": "system-and-method-for-rmiiiop-request-load-balancing",
	"match_type": "description"
},
{
	"name": "Thread-safe remote debugger",
	"summary": "",
	"abstract": "A thread-safe debugging system and method including a thread-safe debug service library and a thread-safe remote control library residing on at least one client computer system. The client and server libraries provide APIs which allow multi-threaded applications executing on the client computer system to take advantage of debug services in a thread-safe and dynamic manner. The remote control library provides third party applications the capability to initiate and manage the debug services on the client dynamically and remotely. The debug services may include providing debug output, listing the one or more debug objects in the multi-threaded application, listing the state of each debug object, turning on or off any debug object by name or pattern, directing the debug output to a remote location, allowing multiple remote diagnostic applications to view the debug output of the application, and logging statistical or performance information. The debug print function provides debug output for one or more threads of the multi-threaded application such that the debug output of each thread remains distinct from the debug output of the other threads. Thread safety may be ensured through the use of thread-safe mechanisms such as locks.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07779390",
	"publication_date": "2010-08-17",
	"application_number": "09553970",
	"application_date": "2000-04-21",
	"tags": null,
	"slug": "threadsafe-remote-debugger",
	"match_type": "description"
},
{
	"name": "Use of URI-specifications in meta-data driven instrumentation",
	"summary": "",
	"abstract": "A method for managing an asset that includes identifying a relative location of a scheme, wherein the scheme is used to manage the asset, creating a relative Uniform Resource Identifier (URI) using the relative location, wherein the relative URI that includes at least one variable, and creating an entry in a native access interface definition, wherein the entry that includes the relative URI, wherein the native asset interface definition is bound to a data acquisition (DAQ) definition, and wherein the DAQ definition is an interface between a protocol handler and an information model, wherein managing the asset is performed using an actual URI to obtain management information, wherein the actual URI is obtained by replacing the at least one variable of the relative URI, and wherein the management information is transmitted to a management application.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07805507",
	"publication_date": "2010-09-28",
	"application_number": "11472928",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "use-of-urispecifications-in-metadata-driven-instrumentation",
	"match_type": "description"
},
{
	"name": "Web services message broker architecture",
	"summary": "",
	"abstract": "A web services message broker architecture. In one embodiment, a system may include a server system and a plurality of applications, each configured to implement one or more enterprise functions and to execute on the server system. The system may further include a web services message broker configured to execute on the server system and to present a central web services interface to the plurality of applications, through which a given one of the plurality of applications is configured to communicate with a web service. In one specific implementation of the system, the web services message broker may be further configured to receive an incoming web service request and to convey the incoming web service request to one of the plurality of applications.",
	"url": null,
	"owner": "Oracle America, Inc.",
	"publication_number": "07702724",
	"publication_date": "2010-04-20",
	"application_number": "10854885",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "web-services-message-broker-architecture",
	"match_type": "description"
},
{
	"name": "Effort based relevance",
	"summary": "",
	"abstract": "Systems, methods, media, and other embodiments associated with effort based relevance in discussion forums are described. One example method includes receiving activity data concerning messages associated with electronic discussion forum topics. The activity data may include a view count (Vw), a book mark count (Bf), a reference count (Rf), and a reply count (Rp). The effort based relevance may be computed from Vw and one or more of, Bf, Rf, and Rp. Topics may be logically ordered using the effort based relevance.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07809733",
	"publication_date": "2010-10-05",
	"application_number": "11366096",
	"application_date": "2006-03-02",
	"tags": null,
	"slug": "effort-based-relevance",
	"match_type": "description"
},
{
	"name": "Filesystem snapshot enhancement to improve system performance",
	"summary": "",
	"abstract": "Reducing copy on write activity during snapshot backup processing in computer system. A snap shot of the data is created. As the backup of each file is successfully completed, the copy-on-write functionality for the file is disabled. As the backup of each other file is successfully completed, the copy-on-write for each other file is disabled.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07774316",
	"publication_date": "2010-08-10",
	"application_number": "11292095",
	"application_date": "2005-12-02",
	"tags": null,
	"slug": "filesystem-snapshot-enhancement-to-improve-system-performance",
	"match_type": "description"
},
{
	"name": "Recommending materialized views for queries with multiple instances of same table",
	"summary": "",
	"abstract": "Systems, methods, computer-readable media and other embodiments are provided that relate to processing database queries. In one embodiment, a query analysis logic can be configured to analyze a query to identify multiple instances of the same table. Instance numbering for the multiple table instances can then be performed using the query structure such that equivalent queries will likely get the same instance number assignments to improve materialized view recommendations for queries.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07840553",
	"publication_date": "2010-11-23",
	"application_number": "11366068",
	"application_date": "2006-03-02",
	"tags": null,
	"slug": "recommending-materialized-views-for-queries-with-multiple-instances-of-same-table",
	"match_type": "description"
},
{
	"name": "Transportation planning with drop trailer arrangements",
	"summary": "",
	"abstract": "Systems, methodologies, media, and other embodiments associated with transportation planning in light of drop trailer arrangements are described. One exemplary computer-implemented method embodiment includes receiving orders that describe items to be delivered to facilities as controlled by order requirements. The method may also include accessing a transportation planning model that includes information concerning shipping modes and carriers by which an order can be delivered to a facility. The transportation planning model may also include data concerning drop trailer arrangements between facilities and the carriers. The method may also include selectively consolidating orders into shipments based on the transportation planning model and the availability of a drop trailer arrangement. The method may also include selectively assigning shipments to loads based on the transportation planning model and the availability of a drop trailer action. The method may output an actionable plan of loads stored, for example, on a computer-readable medium.",
	"url": null,
	"owner": "Oracle International Corp.",
	"publication_number": "07672855",
	"publication_date": "2010-03-02",
	"application_number": "11067154",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "transportation-planning-with-drop-trailer-arrangements",
	"match_type": "description"
},
{
	"name": "Crawlable applications",
	"summary": "",
	"abstract": "Systems and methods in accordance with various embodiments of the present invention provide for a computer based method for crawling application data from an application data store. The applications data store has business objects of an application stored thereon. The method may include identifying a first request for application data received from a search engine as a seed universal resource locator (URL). A crawlable definition for the identified business object is accessed, the crawlable definition including a query selecting one or more attributes of the business object. Moreover, the method can include sending the query to the application data store and receiving query results in response thereto. Additionally, the method can include forming a crawlable document which includes the retrieved results of the business object.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07752207",
	"publication_date": "2010-07-06",
	"application_number": "11742961",
	"application_date": "2007-05-01",
	"tags": null,
	"slug": "crawlable-applications",
	"match_type": "description"
},
{
	"name": "Delta operations on a large object in a database",
	"summary": "",
	"abstract": "A computer modifies data inside a database large object (LOB) of unknown structure without modifying other data in the remainder of the LOB. Insertion of new data at a specified location in the LOB does not require movement of existing data in the LOB. Instead, the computer is programmed to insert new data at a physical end of the LOB, and modify metadata based on the specified location. Similarly, deletion of existing data from a specified location in the LOB is performed without movement of other data in the LOB, by updating the metadata. The computer uses the metadata when reading from the LOB, so that the new data is automatically read whenever the specified location is accessed. The computer may optionally output a handle that is static, relative to other insertions and deletions, to identify specific data within the LOB, for use in building indexes on the LOB.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07761411",
	"publication_date": "2010-07-20",
	"application_number": "11781103",
	"application_date": "2007-07-20",
	"tags": null,
	"slug": "delta-operations-on-a-large-object-in-a-database",
	"match_type": "description"
},
{
	"name": "Determining a user's groups",
	"summary": "",
	"abstract": "The present invention is directed to technology for determining the set of groups of which a user is a member. A user can be a static member, dynamic member or nested member of a group. A user is a nested member of a first group if that user is a member of a second group and the second group is a member of the first group. There can be multiple levels of nesting. For example, an entity can be a nested member of a first group if that entity is a member of a second group, which is a member of a third group, which is a member of a fourth group, which is a member of the first group. The present invention can determine the groups of which the user is a static member, dynamic member or nested member.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07673047",
	"publication_date": "2010-03-02",
	"application_number": "11382981",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "determining-a-users-groups",
	"match_type": "description"
},
{
	"name": "Determining taxes by applying tax rules specified using configurable templates",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that is designed in a manner that processes used for determining or administering taxes for a transaction apply tax rules that are specified (by a tax user) using configurable templates. During operation, the system receives a transaction for which taxes are to be determined during which a process may require the application of rules. The system then examines a configurable template associated with a tax rule, wherein the configurable template identifies a set of attributes associated with the transaction. The system also examines a condition group for the set of attributes. If each condition of the condition group is satisfied, the system, by way of completing the said process, uses the process result that is associated with the condition group for the process.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07647258",
	"publication_date": "2010-01-12",
	"application_number": "10617327",
	"application_date": "2003-07-09",
	"tags": null,
	"slug": "determining-taxes-by-applying-tax-rules-specified-using-configurable-templates",
	"match_type": "description"
},
{
	"name": "Domain based workflows",
	"summary": "",
	"abstract": "Technology is disclosed for using workflows based on domains in a hierarchical data structure (e.g. LDAP directory) or other type of data structure. When a workflow is created, it is associated with domain. The domain is defined by a selected node and all nodes below that selected node in the hierarchical data structure. At run time, the system identifies which workflows perform a requested task and are associated with a domain that includes the target of the task. If multiple workflows are determined, the user is provided with the ability to choose one of the identified workflows for performing the tasks.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07802174",
	"publication_date": "2010-09-21",
	"application_number": "09998895",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": "domain-based-workflows",
	"match_type": "description"
},
{
	"name": "Enterprise service-to-service trust framework",
	"summary": "",
	"abstract": "Embodiments of the invention provide a trust framework for governing service-to-service interactions. This trust framework can provide enhanced security and/or manageability over prior systems. Merely by way of example, in some cases, an information store can be used to store information security information (such as trust information, credentials, etc.) for a variety of services across an enterprise. In other cases, the trust framework can provide authentication policies to define and/or control authentication between services (such as, for example, types of authentication credentials and/or protocols are required to access a particular serviceu2014either as a user and/or as another serviceu2014and/or types of authentication credentials and/or protocols a service may be enabled to use to access another service). Alternatively and/or additionally, the trust framework can provide authorization policies to define and/or control authorization between services.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07721322",
	"publication_date": "2010-05-18",
	"application_number": "11387644",
	"application_date": "2006-03-22",
	"tags": null,
	"slug": "enterprise-servicetoservice-trust-framework",
	"match_type": "description"
},
{
	"name": "Grid automation bus to integrate management frameworks for dynamic grid management",
	"summary": "",
	"abstract": "Methods and apparatus that integrate management frameworks with an enterprise manager in a grid computing environment are disclosed. According to one aspect of the present invention, a grid computing system includes a management arrangement and at least a first management framework. The management arrangement includes an integration arrangement that brokers requests. The first management framework sends a first request to the integration arrangement which effectively allows the first management framework to communicate bi-directionally with the management arrangement.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07673029",
	"publication_date": "2010-03-02",
	"application_number": "11306081",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "grid-automation-bus-to-integrate-management-frameworks-for-dynamic-grid-management",
	"match_type": "description"
},
{
	"name": "Installed base data hub",
	"summary": "",
	"abstract": "An installed base data hub for centrally managing information about the installed customer base of an enterprise is disclosed. According to one embodiment, an installed base data hub comprises a data repository configured to store installed base data, the installed base data including first information representative of at least one customer of the enterprise and second information representative of one or more products purchased by the customer. The hub further includes a data librarian configured to cleanse the installed base data, a security module configured to manage access to the data repository, a subscription interface configured to enable one or more of a plurality of spoke systems to read data from the repository, and a publication interface configured to enable one or more of the plurality of spoke systems to write data into the repository. In various embodiments, at least one of the spoke systems is external to the enterprise.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07747643",
	"publication_date": "2010-06-29",
	"application_number": "11775425",
	"application_date": "2007-07-10",
	"tags": null,
	"slug": "installed-base-data-hub",
	"match_type": "description"
},
{
	"name": "Integration functionality for a test tool for application programming interfaces",
	"summary": "",
	"abstract": "Methods and apparatus for enabling efficient testing of application programming interface (API) frameworks and application code are disclosed. According to one aspect of the present invention, a method for capturing a call to an API using a framework including an execution engine that communicate with an adapter to cause the API call to be executed involves making the API call and constructing an object using metadata associated with the API call. The constructed object is converted into a node that is of a declarative metadata format, and the node is stored.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07779036",
	"publication_date": "2010-08-17",
	"application_number": "10991608",
	"application_date": "2004-11-17",
	"tags": null,
	"slug": "integration-functionality-for-a-test-tool-for-application-programming-interfaces",
	"match_type": "name"
},
{
	"name": "Lightweight highly available infrastructure to trace program execution",
	"summary": "",
	"abstract": "A portable tracing utility provides trace configuration, trace instrumentation and trace management functionality for single or multithreaded programs. Through various application programming interfaces (u201cAPIsu201d) of the tracing utility, a client may control tracing behavior to setup in-memory data structures for storing trace records that record the program's history of execution or to alter the granularity of execution history being traced. The trace behavior can be modified during the life of a program by using the APIs, either dynamically when the program assumes certain states, or through remote procedure calls issued by, for example, an external interface. Programs are instrumented with these APIs to record the history of execution, which during execution of the program is stored in circular in-memory buffers.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07770154",
	"publication_date": "2010-08-03",
	"application_number": "11173675",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": "lightweight-highly-available-infrastructure-to-trace-program-execution",
	"match_type": "abstract"
},
{
	"name": "Mechanism for creating member private data in a global namespace",
	"summary": "",
	"abstract": "A system and techniques are described for creating member private data in a global namespace. According to one aspect, first data that is associated with a key is stored in a repository shared by multiple members. After the first data has been stored, second data that is associated with the key is stored without overwriting the first data. Mapping data is stored. The mapping data maps the key, relative to a first member, to a first data structure that stores the first data. The mapping data also maps the key, relative to a second member, to a second data structure that stores the second data. Based on the mapping data, the first member is allowed to access the first data and not the said second data. Based on the mapping data, the second member is allowed to access the second data and not the first data. The first data and the second data may include key values and subtrees of child keys.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07672945",
	"publication_date": "2010-03-02",
	"application_number": "10304449",
	"application_date": "2002-11-25",
	"tags": null,
	"slug": "mechanism-for-creating-member-private-data-in-a-global-namespace",
	"match_type": "description"
},
{
	"name": "Method and apparatus for automatically executing rules in enterprise systems",
	"summary": "",
	"abstract": "One embodiment of the present invention provides an enterprise system that automatically executes a rule associated with an event. During operation, the system receives an event object at the enterprise system. Next, the system creates an intermediate event object based on the event object, wherein the intermediate object is an invocation context for the rule. The system also filters a set of rules with the intermediate event object to obtain a subset of rules. The system then selects a rule that is associated with the event from the subset of rules. Finally, the system executes the rule.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07797289",
	"publication_date": "2010-09-14",
	"application_number": "11850566",
	"application_date": "2007-09-05",
	"tags": null,
	"slug": "method-and-apparatus-for-automatically-executing-rules-in-enterprise-systems",
	"match_type": "description"
},
{
	"name": "Method and apparatus for ensuring accountability in the examination of a set of data elements by a user",
	"summary": "",
	"abstract": "A method for substantially assuring the examination of a set of data elements by a first user with a messaging device, the set of data elements further comprising a metadata portion. The method further includes determining a set of data elements, each data element of the set of data elements further comprising a state. The method also includes creating a first set of rules for monitoring a change to the state, creating a second of rules for transforming the set of data elements from a first representation to a second representation, based in part on the metadata, and creating a third set of rules for optimizing the delivery of a notification to the first user, based in part on the first set of rules, the notification further comprising a link to the second representation. The method further includes sending the notification to the first user based in part on the third set of rules. And, if the first user does not redeem the second representation, the method includes sending the notification to a second user.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07668917",
	"publication_date": "2010-02-23",
	"application_number": "10289155",
	"application_date": "2002-11-05",
	"tags": null,
	"slug": "method-and-apparatus-for-ensuring-accountability-in-the-examination-of-a-set-of-data-elements-by-a-user",
	"match_type": "description"
},
{
	"name": "Method and apparatus for making inter-process procedure calls through shared memory",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that facilitates making an inter-process procedure call through a shared memory that is shared between a client process and a server process, wherein the client makes the inter-process procedure call as if the client is making a local procedure call, but the procedure call actually executes on the server. The system operates by providing an Application Programming Interface (API) to allow the client to make an inter-process procedure call. The system then allocates a section of the shared memory for the data structure parameters of the inter-process procedure call.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07779417",
	"publication_date": "2010-08-17",
	"application_number": "11259240",
	"application_date": "2005-10-25",
	"tags": null,
	"slug": "method-and-apparatus-for-making-interprocess-procedure-calls-through-shared-memory",
	"match_type": "abstract"
},
{
	"name": "Method and apparatus for preventing unauthorized access to computer system resources",
	"summary": "",
	"abstract": "A system is provided to prevent unauthorized access to computer system resources. The system operates by receiving a section of programming language code to execute on a computer system. This programming language code includes a pragma that defines a set of resources that the programming language code has permission to access. The system analyzes the pragma to determine the set of resources. After analyzing the pragma, the system processes the programming language code in accordance with the pragma. The system can further process the program in accordance with the pragma involves creating a sandbox that includes the set of resources defined by the pragma. The system then executes the programming language code within the boundaries of the sandbox.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07702692",
	"publication_date": "2010-04-20",
	"application_number": "11355736",
	"application_date": "2006-02-16",
	"tags": null,
	"slug": "method-and-apparatus-for-preventing-unauthorized-access-to-computer-system-resources",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing a tax service that is configurable for local jurisdictions",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that implements a tax service that is configurable for local jurisdictions by an expert in the field, such as a tax professional, who may have little or no knowledge of computer programming. The system operates by receiving a request from a subscriber, wherein servicing the request involves calculating taxes for one or more local jurisdictions. Tax rules for a local jurisdiction can be fed into a tax rule base that is used by a tax engine that is configured to use these externally specified rules in performing tax computations. Next, the system uses the tax engine to calculate taxes for each local jurisdiction, and subsequently uses the results of the calculations in servicing the request.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07693760",
	"publication_date": "2010-04-06",
	"application_number": "10106729",
	"application_date": "2002-03-26",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-a-tax-service-that-is-configurable-for-local-jurisdictions",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing speech recognition resolution on a database",
	"summary": "",
	"abstract": "A method of providing speech recognition resolution in a database includes receiving an utterance from an end-user or application, and dispatching it to the database which is coupled to or has access to a speech recognition technology. The method further includes converting the utterance to an intermediate form suitable for searching, and transmitting the intermediate form from the database to the speech recognition technology. An item-matching is then performed via the speech recognition technology which returns items matching the utterance to the database along with a confidence metric, and the utterance matches are then provided from the database in the form of an ordered result set.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07752048",
	"publication_date": "2010-07-06",
	"application_number": "11140647",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-speech-recognition-resolution-on-a-database",
	"match_type": "description"
},
{
	"name": "Method(s) for updating database object metadata",
	"summary": "",
	"abstract": "Two computers are respectively programmed to generate descriptions of database objects (such as tables) in a first database, and compare the generated descriptions to corresponding schema objects in a second database. Objects in the second database are changed to conform to the first database if differences are found during comparison. The just-described differences in objects may arise due to changes being made to a software program that uses data contained in the objects.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07809763",
	"publication_date": "2010-10-05",
	"application_number": "10966250",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": "methods-for-updating-database-object-metadata",
	"match_type": "description"
},
{
	"name": "Non-negative matrix factorization from the data in the multi-dimensional data table using the specification and to store metadata representing the built relational database management system",
	"summary": "",
	"abstract": "An implementation of NMF functionality integrated into a relational database management system provides the capability to apply NMF to relational datasets and to sparse datasets. A database management system comprises a multi-dimensional data table operable to store data and a processing unit operable to perform non-negative matrix factorization on data stored in the multi-dimensional data table and to generate a plurality of data tables, each data table being smaller than the multi-dimensional data table and having reduced dimensionality relative to the multi-dimensional data table. The multi-dimensional data table may be a relational data table.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07734652",
	"publication_date": "2010-06-08",
	"application_number": "10927083",
	"application_date": "2004-08-27",
	"tags": null,
	"slug": "nonnegative-matrix-factorization-from-the-data-in-the-multidimensional-data-table-using-the-specification-and-to-store-metadata-representing-the-built-relational-database-management-system",
	"match_type": "description"
},
{
	"name": "Replicating data between heterogeneous data systems",
	"summary": "",
	"abstract": "A method and apparatus for replicating data between heterogeneous databases is provided. Data is replicated between two heterogeneous databases with the use of a volatile storage queue, enabling the rapid replication of data across databases provided by different vendors or operating on different platforms. According to one embodiment, an in-memory queue is used to queue change operations to be performed on a target data repository. The change operations may be operations that were applied to a source data repository. An apply process retrieves the change operations from in-memory queue and commits the change operations to persistent storage. When the change operations have been committed, the apply process notifies the source platform that the particular change operation has been stored.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07668878",
	"publication_date": "2010-02-23",
	"application_number": "11496949",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": "replicating-data-between-heterogeneous-data-systems",
	"match_type": "description"
},
{
	"name": "Search based application development framework",
	"summary": "",
	"abstract": "Methods and apparatus for creating a search framework that provides a semantic interface for searching transactional applications are disclosed. According to one aspect of the present invention, a method for enabling at least one transactional application to be searched includes creating a canonical object associated with the transactional application and indexing data associated with the transaction application. The method also includes creating an index store using information associated with the canonical object. The index store is associated with the indexed data. Finally, a semantic engine is interfaced with the index store.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07689580",
	"publication_date": "2010-03-30",
	"application_number": "11277585",
	"application_date": "2006-03-27",
	"tags": null,
	"slug": "search-based-application-development-framework",
	"match_type": "description"
},
{
	"name": "Support for multiple data stores",
	"summary": "",
	"abstract": "Technology is disclosed for supporting multiple data stores. The set of data stores can be of a uniform type, or the various data stores can be different types (e.g. Lightweight Directory Access Protocol (LDAP), Structured Query Language (SQL), etc.). One implementation of the disclosed technology is with an Identity System. Another implementation is with an integrated Identity System and Access System. Various embodiments of the present invention utilize different means to separate the business logic of a system from the data access logic so that different types of data stores can be used without changing the business logic.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07711818",
	"publication_date": "2010-05-04",
	"application_number": "09998908",
	"application_date": "2001-11-30",
	"tags": null,
	"slug": "support-for-multiple-data-stores",
	"match_type": "description"
},
{
	"name": "Suspending a result set and continuing from a suspended result set for scrollable cursors",
	"summary": "",
	"abstract": "A system, method, computer program and system for suspending a result set and continuing from a suspended result set for a scrollable cursor is disclosed. The rows from a row source corresponding to the scrollable cursor result set are suspended into storage so that when a fetch is requested the data can be sent (continued) from the suspended storage and does not depend on the original scrollable cursor row source or session to be available.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07743333",
	"publication_date": "2010-06-22",
	"application_number": "11097065",
	"application_date": "2005-04-01",
	"tags": null,
	"slug": "suspending-a-result-set-and-continuing-from-a-suspended-result-set-for-scrollable-cursors",
	"match_type": "description"
},
{
	"name": "System and method for protecting against failure through geo-redundancy in a SIP server",
	"summary": "",
	"abstract": "The SIP server deployment can be comprised of an engine tier that provides high throughput processing and a state tier that maintains SIP state data in a set of partitions and replicas. Two sites of SIP server deployments can be configured, each being remotely located with respect to the other. A primary site can process various SIP transactions and communications and upon determining a transaction boundary, replicate the state data associated with the transaction being processed, to a secondary site. Engines in the primary site can generate hints for the state replicas which can be in turn responsible for replicating the SIP session state. The replicas can choose to follow or disregard the generated hints. Upon failure of the primary site, calls can be routed from the failed primary site to the secondary site for processing. Similarly, upon recovery, the calls can be re-routed back to the primary site.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07844851",
	"publication_date": "2010-11-30",
	"application_number": "11956094",
	"application_date": "2007-12-13",
	"tags": null,
	"slug": "system-and-method-for-protecting-against-failure-through-georedundancy-in-a-sip-server",
	"match_type": "description"
},
{
	"name": "Template driven type and mode conversion",
	"summary": "",
	"abstract": "Techniques for providing type (and/or mode) conversion of parameters for software applications are provided. In general, a type conversion utility accesses a template that defines type and mode conversions for parameters between different components. The type conversion utility utilizes information stored in the template for that direct how the parameters will be converted. Additionally, techniques are provided for returning output values.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07860894",
	"publication_date": "2010-12-28",
	"application_number": "11126422",
	"application_date": "2005-05-11",
	"tags": null,
	"slug": "template-driven-type-and-mode-conversion",
	"match_type": "description"
},
{
	"name": "Testing subsystems on platforms for software applications",
	"summary": "",
	"abstract": "Techniques for testing subsystems on a platform for a software application are provided. A test application receives instructions for calling platform dependent subsystems directly. The instructions can be designed to fully test the capabilities of the subsystems. Once the instructions are executed, the results of the subsystems can be analyzed for platform certification, performance, reliability, and/or characteristics.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07831962",
	"publication_date": "2010-11-09",
	"application_number": "10453703",
	"application_date": "2003-06-03",
	"tags": null,
	"slug": "testing-subsystems-on-platforms-for-software-applications",
	"match_type": "description"
},
{
	"name": "Tree-based information query model",
	"summary": "",
	"abstract": "A mechanism and method for querying between two data centers managed by two different data center management products is described. A single information query model is utilized to query multiple instances of another data center, which receives, translates and responds to the information query through the use of a schema. Knowledge of the other (foreign) data center's APIs for each instance is made unnecessary. Improved query efficiency is achieved by combining a plurality of disparate queries into a single information query. The responses to the plurality of queries are populated into a single reply to the information query, which is then transmitted back to the querying data center, translated and made readable to the IT administrator.",
	"url": null,
	"owner": "Oracle International Corporation",
	"publication_number": "07814114",
	"publication_date": "2010-10-12",
	"application_number": "11470077",
	"application_date": "2006-09-05",
	"tags": null,
	"slug": "treebased-information-query-model",
	"match_type": "description"
},
{
	"name": "Graphical user interface to facilitate rapid and reliable electronic trading assessment and execution",
	"summary": "",
	"abstract": "An electronic trading user interface allows a trader to react to market conditions very quickly in order to give the trader an improved probability of trading at a desired price and volume. The electronic order process is made faster, more efficient, and more reliable. The construction and sending of orders may be performed using a simple u201cclicku201d of a mouse or other input device. The current market data is presented dynamically and in a user-friendly way to allow a trader to quickly assess the current market situation, including the trader's own orders, and to send orders quickly and reliably. Different embodiments are presented that ensure that the trader sends the order at the price intended, which is particularly desirable when the market is moving simultaneously or very close in time with when the trader is selecting and placing an order.",
	"url": null,
	"owner": "ORC Software AB",
	"publication_number": "07805355",
	"publication_date": "2010-09-28",
	"application_number": "11302319",
	"application_date": "2005-12-14",
	"tags": null,
	"slug": "graphical-user-interface-to-facilitate-rapid-and-reliable-electronic-trading-assessment-and-execution",
	"match_type": "description"
},
{
	"name": "GPS system for tracking an object of interest and method for using the same",
	"summary": "",
	"abstract": "An assisted global positioning system (AGPS) for tracking a movable object of interest is disclosed. The system comprises a service center for calculating a tag location, a plurality of ground base stations, a plurality of beacons adapted to transmit individual ID data, and at least one GPS-based smart tag releasably affixed to the movable object. The system components are interconnected by means of one or more communication links. The service center is adapted for inquiring the tag and receiving a response from the tag constituting pseudo-ranges according to a predetermined protocol.",
	"url": null,
	"owner": "P. W. Precyse Wireless Ltd",
	"publication_number": "07855679",
	"publication_date": "2010-12-21",
	"application_number": "12045344",
	"application_date": "2008-03-10",
	"tags": null,
	"slug": "gps-system-for-tracking-an-object-of-interest-and-method-for-using-the-same",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for providing multi-band operation in a mobile computing device",
	"summary": "",
	"abstract": "Various embodiments for providing multi-band operation in a mobile computing device are described. In one or more embodiments, a mobile computing device may be arranged to support quad-band GSM communication in the GSM-850, GSM-900, GSM-1800, and GSM-1900 frequency bands. The mobile computing device may be arranged to determine a starting frequency band based on the home country and home network. By using the determined starting frequency band associated with the home country and home network of the user, fewer and/or shorter delays may be experienced when searching for and acquiring an available frequency. Once a network search is completed, the mobile computing device may be arranged to determine whether a network can be found in current frequency band pair for normal service, to disconnect from the acquired network if normal service is not supported, and to intelligently search for an available frequency in a different frequency band. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07835712",
	"publication_date": "2010-11-16",
	"application_number": "11613086",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": "apparatus-and-methods-for-providing-multiband-operation-in-a-mobile-computing-device",
	"match_type": "description"
},
{
	"name": "Data synchronization transparent to application",
	"summary": "",
	"abstract": "Synchronization of data accessible by an application program is performed transparent to the application program. After a data item is instantiated by the application program, the synchronization engine performs data synchronization without or with minimal intervention of the application program. The synchronization engine may be part of an operating system. The synchronization engine is preinstalled on a computing device; therefore, application program developers can simply define whether the data items associated with the application programs should be syncable, and if so, to what extent the data items should be syncable. The application program developer is relieved of the task of developing the synchronization engine or other software components associated with data synchronization.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07734828",
	"publication_date": "2010-06-08",
	"application_number": "11761834",
	"application_date": "2007-06-12",
	"tags": null,
	"slug": "data-synchronization-transparent-to-application",
	"match_type": "description"
},
{
	"name": "Method and apparatus for configuring information for multiple network access providers",
	"summary": "",
	"abstract": "A computer program product that provides a graphical user interface for configuring communication information for multiple network service providers on a computer system. The program product is operable to display a network communication scene that includes edit windows and selectable options for a user to view, enter, remove, and modify configuration information for at least one network service provider, and allows the user to enter information for establishing communication with the same network service provider using at least two different communication mediums, and from several different geographical locations.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07676556",
	"publication_date": "2010-03-09",
	"application_number": "10349737",
	"application_date": "2003-01-21",
	"tags": null,
	"slug": "method-and-apparatus-for-configuring-information-for-multiple-network-access-providers",
	"match_type": "description"
},
{
	"name": "Presence engine and a method of operating a presence engine for encoding or decoding availability status into a signal representative of an audio signal",
	"summary": "",
	"abstract": "A system and a method are disclosed for a presence engine and a method of operating a presence engine for encoding or decoding availability status into a signal representative of an audio signal. The presence engine is configured to manage availability status of a user. The presence engine comprises an input configured to receive a signal representative of an audio signal and an output configured to send a signal representative of an audio signal. The presence engine also comprises a processor configured to encode availability status of a user into a signal representative of an audio signal and/or configured to decode availability status of a user from a signal representative of an audio signal.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07715859",
	"publication_date": "2010-05-11",
	"application_number": "11615805",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "presence-engine-and-a-method-of-operating-a-presence-engine-for-encoding-or-decoding-availability-status-into-a-signal-representative-of-an-audio-signal",
	"match_type": "description"
},
{
	"name": "Terminating device and a method of operating a terminating device configured to communicate availability status directly between terminating devices",
	"summary": "",
	"abstract": "A system and a method are disclosed for a terminating device for a communications network which comprises an application program configured to utilize an availability status of a user; a communications interface configured to receive and/or transmit data and a presence engine. The presence engine is configured to provide the communications interface with data representative of an availability status of a user, and cause the communications interface to transmit the data directly to another terminating device. Alternatively, or additionally, the presence engine is configured to receive data representative of an availability status of the user directly from another terminating device, and make available data representative of the received availability status of a user to the application program.",
	"url": null,
	"owner": "Palm, Inc.",
	"publication_number": "07694313",
	"publication_date": "2010-04-06",
	"application_number": "11615801",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "terminating-device-and-a-method-of-operating-a-terminating-device-configured-to-communicate-availability-status-directly-between-terminating-devices",
	"match_type": "description"
},
{
	"name": "N-way synchronization of computer databases",
	"summary": "",
	"abstract": "A method and system for N-way synchronization of computer databases. Synchronization of computer databases is structured into three rounds, namely an agenda round, a query round and a report round. In the agenda round, a synchronization agent software module inquires of a common synchronization engine for updates to the agent's database and provides information as to the level of information in the agent's database. During a query round, a common synchronization engine may request information from databases with new information and distribute that database information to databases needing the new information during a report round. Multiple agents, each representing an associated database may participate a synchronization. In addition, various special purpose agents may also receive, provide and otherwise operate on synchronization information.",
	"url": null,
	"owner": "PalmSource Inc.",
	"publication_number": "07792794",
	"publication_date": "2010-09-07",
	"application_number": "11602841",
	"application_date": "2006-11-21",
	"tags": null,
	"slug": "nway-synchronization-of-computer-databases",
	"match_type": "description"
},
{
	"name": "Single ended synchronization agents",
	"summary": "",
	"abstract": "A single ended synchronization agent which communicates with a single endpoint. Responsive to instructions from a synchronization manager, a single ended synchronization agent transfers information between its endpoint and a common synchronization engine. Endpoints may include databases, hand held computers, communication links and the like. These novel single ended agent programs in cooperation with a common synchronization engine are able to synchronize databases. The agent programs need not implement synchronization logic and agent programs are required to understand only a single database. These aspects of the single ended agent programs greatly simplify the design, construction and maintenance of this software when compared with the prior art.",
	"url": null,
	"owner": "PalmSource Inc.",
	"publication_number": "07707175",
	"publication_date": "2010-04-27",
	"application_number": "10159321",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": "single-ended-synchronization-agents",
	"match_type": "description"
},
{
	"name": "Synchronization protocol for synchronizing data between nodes",
	"summary": "",
	"abstract": "A method and system thereof for synchronizing a data set comprising a first data set residing on a first node with a second data set residing on a second node. Packets are exchanged with the second node. A packet comprises one or more messages and a message comprises a plurality of elements. At least one of the elements identifies the data set. Other information in the packets is used to identify any data from the first data set that needs to be sent to the second node and any data from the second data set that needs to be received from the second node, in order to synchronize the data set on both nodes. The data so identified can then be exchanged.",
	"url": null,
	"owner": "PalmSource Inc.",
	"publication_number": "07747561",
	"publication_date": "2010-06-29",
	"application_number": "10159918",
	"application_date": "2002-05-31",
	"tags": null,
	"slug": "synchronization-protocol-for-synchronizing-data-between-nodes",
	"match_type": "description"
},
{
	"name": "Method, device, and program product for a social dashboard associated with a persistent virtual environment",
	"summary": "",
	"abstract": "Device, method, and computer program product that provides a user interface for monitoring the social health of a persistent virtual environment. The disclosed technology allows a user to monitor and diagnose the health of the persistent virtual environment based on the social interactions between subscribers of on-line entities who have interactions related to the persistent virtual environment.",
	"url": null,
	"owner": "Palo Alto Research Center Incorporated",
	"publication_number": "07716149",
	"publication_date": "2010-05-11",
	"application_number": "11402399",
	"application_date": "2006-04-11",
	"tags": null,
	"slug": "method-device-and-program-product-for-a-social-dashboard-associated-with-a-persistent-virtual-environment",
	"match_type": "description"
},
{
	"name": "Method, device, and program product to monitor the social health of a persistent virtual environment",
	"summary": "",
	"abstract": "Device, method, and computer program product for monitoring the social health of a persistent virtual environment. The disclosed technology monitors social interactions between subscribers of on-line entities who have interactions related to the persistent virtual environment.",
	"url": null,
	"owner": "Palo Alto Research Center Incorporated",
	"publication_number": "07720777",
	"publication_date": "2010-05-18",
	"application_number": "11402568",
	"application_date": "2006-04-11",
	"tags": null,
	"slug": "method-device-and-program-product-to-monitor-the-social-health-of-a-persistent-virtual-environment",
	"match_type": "description"
},
{
	"name": "Systems and methods for automatically converting web pages to structured shared web-writable pages",
	"summary": "",
	"abstract": "A system and method for an automatic conversion of web pages to shared structured web pages. An input web page is augmented with syntactic elements of a server-based software tool to create and customize group-writeable web pages. Sub-regions of the web page that are to be individually-editable items are identified, and syntactic elements are added to show where these editable regions begin and end, and where clickable buttons will appear that trigger the editing of an individual item, the addition of a new item, or other editing features. Also, syntactic elements are added that act as templates for the layout of any item to be added or modified. The conversion process includes parsing the Web page into an intermediate structure, adding information to individual tokens about the structures in which the tokens play a part, and them generating the new page while making one or more final passes through the intermediate structure from beginning to end.",
	"url": null,
	"owner": "Palo Alto Research Center Incorporated",
	"publication_number": "07703004",
	"publication_date": "2010-04-20",
	"application_number": "10751955",
	"application_date": "2004-01-07",
	"tags": null,
	"slug": "systems-and-methods-for-automatically-converting-web-pages-to-structured-shared-webwritable-pages",
	"match_type": "description"
},
{
	"name": "Vehicle entertainment and gaming system",
	"summary": "",
	"abstract": "An entertainment system is for a vehicle and includes a vehicle environment sensor apparatus that captures data indicative of the vehicle's environment and that generates a vehicle environment data feed. A video game console is electronically coupled to the vehicle environment sensor apparatus and has an application program interface. The video game console receives the vehicle environment data feed, operates a game medium, and generates a video output signal based on both the game medium and the vehicle environment data feed. At least one controller is communicatively coupled to the video game console and directs the operation of the game medium. A display unit communicatively coupled with the application program interface receives the video output signal and displays images dependent upon the video output signal.",
	"url": null,
	"owner": "Panasonic Automotive Systems Company of America division of Panasonic Corporation of North America",
	"publication_number": "07756602",
	"publication_date": "2010-07-13",
	"application_number": "11818493",
	"application_date": "2007-06-14",
	"tags": null,
	"slug": "vehicle-entertainment-and-gaming-system",
	"match_type": "description"
},
{
	"name": "Access control device and electronic device",
	"summary": "",
	"abstract": "An access control device controls an access right with respect to a plurality of electronic devices in a network for each combination of electronic devices. An authority information generating section generates authority information which is used when an electronic device accesses an application on an electronic device. A permission information generating section generates permission information which is information about whether or not the electronic device permits an access request from the electronic device, in relation with the authority information. An access information storing section stores the authority information and the permission information. A transmission control section transmits via the communication section the authority information to the electronic device and the permission information to the electronic device.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07752655",
	"publication_date": "2010-07-06",
	"application_number": "11547266",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": "access-control-device-and-electronic-device",
	"match_type": "description"
},
{
	"name": "Broadcast receiving terminal",
	"summary": "",
	"abstract": "Although a scheduled recording that is set by an EPG (Electronic Program Guide) specifies in advance a time slot for using the resource, reproduction that is set by the EPG does not specify a time slot for using the resource. Therefore, although it is possible to carry out resource allocations for a plurality of scheduled recordings in advance, it is not possible to carry out a resource adjustment in advance when the scheduled recording and the reproduction operation use the same resource. However, when an adjustment process is performed after the starting time of the scheduled recording, the adjustment process itself takes up some time, thus giving rise to the possibility that the scheduled recording may not start at the specified starting time. The resource adjustment for the scheduled recording and the reproduction is initiated ahead of the starting time of the scheduled recording. The amount of time ahead of the scheduled recording, by which the resource adjustment is to be started, can be specified by the EPG.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07840116",
	"publication_date": "2010-11-23",
	"application_number": "11421145",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": "broadcast-receiving-terminal",
	"match_type": "description"
},
{
	"name": "Creating standardized playlists and maintaining coherency",
	"summary": "",
	"abstract": "Updating automatically generated playlists in response to media content being edited. Aspects of the invention associate a playlist type or other code with each playlist to define the structure of the playlist. When media content is added to or deleted from a collection of media files, one or more playlist types corresponding to the media content are identified. The playlists with the identified playlist types are updated to reflect the addition or deletion of the media content.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07707231",
	"publication_date": "2010-04-27",
	"application_number": "11167963",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "creating-standardized-playlists-and-maintaining-coherency",
	"match_type": "description"
},
{
	"name": "Encryption and data-protection for content on portable medium",
	"summary": "",
	"abstract": "A source generates a medium key (KM) and a media secret table including a plurality of entries, each entry including (KM) encrypted by a public key (PU-PD) of a plurality of devices, obtains the medium ID of a medium therefrom, generates a content key (KD) for a piece of content, encrypts the content with (KD) to result in (KD(content)), encrypts (KD) with (KM) to result in (KM(KD)), generates a package for the content including (KD(content)), (KM(KD)), the medium ID, and a signature based on at least the medium ID and verifiable with (KM), and copies the generated package and the media secret table to the medium. Thus, a device with the medium and a private key (PR-PD) corresponding to an entry of the media secret table can access and render the content.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07644446",
	"publication_date": "2010-01-05",
	"application_number": "10945542",
	"application_date": "2004-09-20",
	"tags": null,
	"slug": "encryption-and-dataprotection-for-content-on-portable-medium",
	"match_type": "description"
},
{
	"name": "Playlist structure for large playlists",
	"summary": "",
	"abstract": "Enabling efficient navigation of a playlist of media files stored on a computer-readable medium. Aspects of the invention define a playlist structure to have one or more playlist units. Each playlist unit identifies one or more media files in the playlist and includes metadata for the media files. A consumer electronic device retrieves the playlist units and displays the metadata contained therein to a user to enable navigation of the playlist. Aspects of the invention reduce the memory requirements of the consumer electronic devices and reduce the quantity of disk seek operations needed for playlist navigation.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07668842",
	"publication_date": "2010-02-23",
	"application_number": "11168060",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "playlist-structure-for-large-playlists",
	"match_type": "description"
},
{
	"name": "Program execution device and program execution method",
	"summary": "",
	"abstract": "A service program recorded on a portable medium is executed directly or after being installed temporarily in a long-term storage apparatus. A program execution device prevents unrestricted execution of the program when the portable medium is not inserted in the device, from the viewpoint of managing resource access to the device. The program is attached with permission information indicating resource access rights. According to an acquisition route of the program to be executed, first permission information and second permission information indicating different access rights are applied for executing the program.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07823197",
	"publication_date": "2010-10-26",
	"application_number": "11571098",
	"application_date": "2005-06-28",
	"tags": null,
	"slug": "program-execution-device-and-program-execution-method",
	"match_type": "description"
},
{
	"name": "System architecture and process for automating intelligent surveillance center operations",
	"summary": "",
	"abstract": "The intelligent, automated surveillance system collects the interactions between the security personal and the surveillance system during the handling of an alarm. Each alarm is modeled as a u201ctransactionu201d and each operation/action that a security personal executes modeled as an u201ceventu201d within the transaction. The collected events within the transaction are in partial order. Furthermore, the system provides a scoring system for a security manager to evaluate the performance of the security guard. The score of the sequence of actions that the security guard performed manually and the system performed automatically for each set of dependent alarms are used to decide future sequence of operation. Security guards can overwrite the automatic sequencing of actions with manual sequence of operations.",
	"url": null,
	"owner": "Panasonic Corporation",
	"publication_number": "07840515",
	"publication_date": "2010-11-23",
	"application_number": "11676043",
	"application_date": "2007-02-16",
	"tags": null,
	"slug": "system-architecture-and-process-for-automating-intelligent-surveillance-center-operations",
	"match_type": "description"
},
{
	"name": "Remotely reprogrammable communications adapter for providing access to an electronic device",
	"summary": "",
	"abstract": "A communications adapter for facilitating electronic communications with an electronic device is disclosed. The adapter is remotely reprogrammable by a provider computer through a communications network. The adapter includes a communications port for electronically connecting the adapter to the electronic device. The adapter also includes communications hardware for communicating with the provider computer through the communications network. In addition, the adapter includes a processor and memory. The memory is programmed with instructions to cause the adapter to receive new data sent by the provider computer via the communications network. The new data comprises device instructions for communicating with the electronic device through the communications port.",
	"url": null,
	"owner": "Panasonic Electric Works Co., Ltd.",
	"publication_number": "07694046",
	"publication_date": "2010-04-06",
	"application_number": "10784485",
	"application_date": "2004-02-20",
	"tags": null,
	"slug": "remotely-reprogrammable-communications-adapter-for-providing-access-to-an-electronic-device",
	"match_type": "description"
},
{
	"name": "Exercise system with graphical feedback and method of gauging fitness progress",
	"summary": "",
	"abstract": "A system and method for providing visual feedback to a user of an exercise machine for gauging fitness progress of the user. The system provides a user of an exercise machine with a virtual competition in which the user competes against virtual competitors based on his past performances or those of other users, either as an individual or as a member of a team. The team may also be part of a league. For an individual competing against his own past performance(s), the system may raise the level of performance required to win the virtual competition, and may also lower the level of performance required if the user is not performing well on a particular day. For an individual competing against others in either real-time or against designated results, either as part of a team or a league, the system may reduce the isolation, disconnection, and tedium often experienced by users of cardiovascular exercise equipment and provide a social outlet. The system attempts to keep the user engaged and motivated to achieve desired fitness goals by providing real-time performance data and historical performance data displayed in a graphical manner coupled with the entertainment and excitement of competition and social interaction.",
	"url": null,
	"owner": "Pantometrics, Ltd.",
	"publication_number": "07846069",
	"publication_date": "2010-12-07",
	"application_number": "12814633",
	"application_date": "2010-06-14",
	"tags": null,
	"slug": "exercise-system-with-graphical-feedback-and-method-of-gauging-fitness-progress",
	"match_type": "description"
},
{
	"name": "Synchronous and asynchronous collaboration between heterogeneous applications",
	"summary": "",
	"abstract": "A network-based collaboration system and method can be used to create, modify or otherwise manipulate a design using heterogeneous applications on clients connected to a network. The system and method enables design collaboration between the heterogeneous applications each having a different design abstraction and a different local data model by exchanging application states normalized at a design abstraction level recognized by each of the heterogeneous applications.",
	"url": null,
	"owner": "Parametric Technology Corporation",
	"publication_number": "07661101",
	"publication_date": "2010-02-09",
	"application_number": "10757975",
	"application_date": "2004-01-15",
	"tags": null,
	"slug": "synchronous-and-asynchronous-collaboration-between-heterogeneous-applications",
	"match_type": "description"
},
{
	"name": "Method and apparatus to validate a subscriber line",
	"summary": "",
	"abstract": "A method is described to verify the identity of a user. The method, in one example embodiment, comprises obtaining automatic number identification (ANI) data or billing telephone number (BTN) data associated with a subscriber line of a telecommunications network; obtaining identification data associated with a subscriber, said identification data being different from the ANI data or the BTN data;nn",
	"url": null,
	"owner": "PaymentOne Corporation",
	"publication_number": "07848500",
	"publication_date": "2010-12-07",
	"application_number": "11836603",
	"application_date": "2007-08-09",
	"tags": null,
	"slug": "method-and-apparatus-to-validate-a-subscriber-line",
	"match_type": "description"
},
{
	"name": "Uniform network access",
	"summary": "",
	"abstract": "According to some embodiments, a registry is displayed. The registry may, for example, indicate resources available from a plurality of remote network access devices via a communications network. Moreover, a personal network address may be associated with each available resource, the personal network address including an destination address portion and an application program identifier portion. A direct communications link may then be established between a first network access device hosting an available resource and a second network address device using the personal network address associated with the resource.",
	"url": null,
	"owner": "Peer Communications Corporation",
	"publication_number": "07860921",
	"publication_date": "2010-12-28",
	"application_number": "11173856",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "uniform-network-access",
	"match_type": "description"
},
{
	"name": "Recommendation systems and methods using interest correlation",
	"summary": "",
	"abstract": "A search technology generates recommendations with minimal user data and participation, and provides better interpretation of user data, such as popularity, thus obtaining breadth and quality in recommendations. It is sensitive to the semantic content of natural language terms and lets users briefly describe the intended recipient (i.e., interests, eccentricities, previously successful gifts). Based on that input, the recommendation software system and method determines the meaning of the entered terms and creatively discover connections to gift recommendations from the vast array of possibilities. The user may then make a selection from these recommendations. The search/recommendation engine allows the user to find gifts through connections that are not limited to previously available information on the Internet. Thus, interests can be connected to buying behavior by relating terms to respective items.",
	"url": null,
	"owner": "Peerset, Inc.",
	"publication_number": "07734641",
	"publication_date": "2010-06-08",
	"application_number": "11807191",
	"application_date": "2007-05-25",
	"tags": null,
	"slug": "recommendation-systems-and-methods-using-interest-correlation",
	"match_type": "description"
},
{
	"name": "Software-based method for gaining privacy by affecting the screen of a computing device",
	"summary": "",
	"abstract": "A method and apparatus for allowing the user of an electronic device to enhance privacy over a display with the use of software, are disclosed. A security window including a translucent graphical effects region may be displayed on the electronic device such that it overlays content the user may choose to protect. The security window allows the protected content to remain discernable for the user of the device yet substantially indiscernible to a person at a further distance and/or greater viewing angle from the screen of the device. One or more security windows, each of which may be of any size, shape, texture, translucency level and any other graphical or behavioral properties may be displayed on the display associated with the electronic device. The user may control the size, shape, texture, translucency level and any other graphical or behavioral properties of the security window and graphical effects region. The user may invoke or terminate a security window with the single click of a button. Security windows may automatically attach to applications in focus, or be attached in response to a user command, and allow uninterrupted usability of those applications.",
	"url": null,
	"owner": "PetNote LLC",
	"publication_number": "07779475",
	"publication_date": "2010-08-17",
	"application_number": "11496382",
	"application_date": "2006-07-31",
	"tags": null,
	"slug": "softwarebased-method-for-gaining-privacy-by-affecting-the-screen-of-a-computing-device",
	"match_type": "description"
},
{
	"name": "Method for processing speech data for a distributed recognition system",
	"summary": "",
	"abstract": "Speech signal information is formatted, processed and transported in accordance with a format adapted for TCP/IP protocols used on the Internet and other communications networks. NULL characters are used for indicating the end of a voice segment. The method is useful for distributed speech recognition systems such as a client-server system, typically implemented on an intranet or over the Internet based on user queries at his/her computer, a PDA, or a workstation using a speech input interface.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07672841",
	"publication_date": "2010-03-02",
	"application_number": "12123336",
	"application_date": "2008-05-19",
	"tags": null,
	"slug": "method-for-processing-speech-data-for-a-distributed-recognition-system",
	"match_type": "description"
},
{
	"name": "Network based interactive speech recognition system",
	"summary": "",
	"abstract": "A network based interactive speech system responds in real-time to speech-based queries addressed to a set of topic entries. A best matching response is provided based on speech recognition processing and natural language processing performed on recognized speech utterances to identify a selected set of phrases related to the set of topic entries. Another routine converts the selected set of phrases into a search query suitable for identifying a first group of one or more topic entries corresponding to the speech-based query. The words/phrases can be assigned different weightings and can include entries which are not actually in the set of topic entries.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07831426",
	"publication_date": "2010-11-09",
	"application_number": "11426242",
	"application_date": "2006-06-23",
	"tags": null,
	"slug": "network-based-interactive-speech-recognition-system",
	"match_type": "description"
},
{
	"name": "Partial speech processing device and method for use in distributed systems",
	"summary": "",
	"abstract": "A client device incorporates partial speech recognition for recognizing a spoken query by a user. The full recognition process is distributed over a client/server architecture, so that the amount of partial recognition signal processing tasks can be allocated on a dynamic basis based on processing resources, channel conditions, etc. Partially processed speech data from the client device can be streamed to a server for a real-time response. Additional natural language processing operations can also be performed to implement sentence recognition functionality.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07729904",
	"publication_date": "2010-06-01",
	"application_number": "11003085",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": "partial-speech-processing-device-and-method-for-use-in-distributed-systems",
	"match_type": "description"
},
{
	"name": "Query engine for processing voice based queries including semantic decoding",
	"summary": "",
	"abstract": "An intelligent query system for processing voiced-based queries is disclosed. This distributed client-server system, typically implemented on an intranet or over the Internet accepts a user's queries at his/her computer, PDA or workstation using a speech input interface. After converting the user's query from speech to text, a natural language engine, a database processor and a full-text SQL database is implemented to find a single answer that best matches the user's query. Both statistical and semantic decoding are used to assist and improve the performance of the query recognition.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07725307",
	"publication_date": "2010-05-25",
	"application_number": "10653039",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": "query-engine-for-processing-voice-based-queries-including-semantic-decoding",
	"match_type": "description"
},
{
	"name": "Speech based query system using semantic decoding",
	"summary": "",
	"abstract": "An intelligent query system for processing voiced-based queries is disclosed, which uses a combination of both statistical and semantic based processing to identify the question posed by the user by understanding the meaning of the user's utterance. Based on identifying the meaning of the utterance, the system selects a single answer that best matches the user's query. The answer that is paired to this single question is then retrieved and presented to the user. The system, as implemented, accepts environmental variables selected by the user and is scalable to provide answers to a variety and quantity of user-initiated queries.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07725321",
	"publication_date": "2010-05-25",
	"application_number": "12144492",
	"application_date": "2008-06-23",
	"tags": null,
	"slug": "speech-based-query-system-using-semantic-decoding",
	"match_type": "description"
},
{
	"name": "System and method for natural language processing of query answers",
	"summary": "",
	"abstract": "Candidate answers responsive to a user query are analyzed using a natural language engine to determine appropriate answers from an electronic database. The system and methods are useful for Internet based search engines, as well as distributed speech recognition systems such as a client-server system. The latter are typically implemented on an intranet or over the Internet based on user queries at his/her computer, a PDA, or a workstation using a speech input interface.",
	"url": null,
	"owner": "Phoenix Solutions, Inc.",
	"publication_number": "07702508",
	"publication_date": "2010-04-20",
	"application_number": "11003055",
	"application_date": "2004-12-03",
	"tags": null,
	"slug": "system-and-method-for-natural-language-processing-of-query-answers",
	"match_type": "description"
},
{
	"name": "Rule based system and method for automatically generating photomask orders by conditioning information from a customer's computer system",
	"summary": "",
	"abstract": "A system for generating photomask orders in a specified format includes at least one template or order for entry and storage of photomask order data, wherein the at least one template or order is created based upon requirements of a specified photomask order format. The system includes at least one set of rules corresponding to the at least one template or order, wherein the set of rules includes instructions which insure that a user enter complete information into the at least one template or order as required by the specified order format. A graphical user interface is associated with the at least one template or order, wherein the user can access the at least one template or order to enter photomask order data and create an order in a specified format. A data processing mechanism imports electronic information from external media into the at least one template or order.",
	"url": null,
	"owner": "Photronics, Inc.",
	"publication_number": "07669167",
	"publication_date": "2010-02-23",
	"application_number": "10877001",
	"application_date": "2004-06-25",
	"tags": null,
	"slug": "rule-based-system-and-method-for-automatically-generating-photomask-orders-by-conditioning-information-from-a-customers-computer-system",
	"match_type": "description"
},
{
	"name": "Method and system for operating applications for remote terminal devices",
	"summary": "",
	"abstract": "Method for allowing a user of a mobile terminal device having predetermined computational resources to remotely develop and operate upgraded content delivery applications. A client-side application and a corresponding remote application are installed on the terminal device and on a server connected to the terminal device. The remote application dynamically splits the tasks to be performed by the content delivery application between the client-side application and remote application, according to its computational resources and processes, in real-time, the content and its associated logic and input data to be delivered to the terminal device. The processed content is then transmitted to the terminal device over the data network and the content is rendered by the client-side application. The client-side application responds to inputs from the user and/or to messages from the server or further connected devices.",
	"url": null,
	"owner": "Pike Ltd.",
	"publication_number": "07747683",
	"publication_date": "2010-06-29",
	"application_number": "12159553",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "method-and-system-for-operating-applications-for-remote-terminal-devices",
	"match_type": "description"
},
{
	"name": "Confidential block trading system and method",
	"summary": "",
	"abstract": "A method for facilitating trading of securities over a computer system comprises electronically receiving a buy or sell order for a security from a first user; determining that the order is reasonably priced; transmitting to a second user an electronic notification that a reasonably priced order for the security is present, but without notifying the second user of the side of the first user's order; receiving an order from the second user, wherein the second user's order is a contra to the first user's order and sufficiently aggressive in price to cross the first user's order; and executing a trade comprising the first user's order and the second user's order at the limit price of the first user's order. Also described is an electronic system for facilitating securities trading that comprises a facilitator module, a financial information exchange server, a transactional database, and an analytics server.",
	"url": null,
	"owner": "Pipeline Financial Group, Inc.",
	"publication_number": "07685052",
	"publication_date": "2010-03-23",
	"application_number": "10603100",
	"application_date": "2003-06-24",
	"tags": null,
	"slug": "confidential-block-trading-system-and-method",
	"match_type": "description"
},
{
	"name": "Method for managing distributed trading data",
	"summary": "",
	"abstract": "In a preferred embodiment, the invention comprises a computer-implemented system and method of managing market information across a network of data providers, comprising the steps of: (a) electronically receiving first data including confidential information regarding market participants in a first system that protects said first data behind a firewall; (b) electronically receiving second data including confidential information regarding market participants in a second system that protects said second data behind a firewall; (c) electronically receiving an order and targeting parameters from a first market participant; (d) electronically issuing an advertisement request message to said first system and said second system, said advertisement message comprising display attributes of said order and comprising said targeting parameters; (e) electronically prompting said first system and said second system via the advertisement request message to each send a coordination request message to a Coordination Hub, said coordination request message comprising information deduced from said confidential information regarding market participants in said first and second systems, wherein the selection of the information that is sent to the Coordination Hub is based at least in part on said first market participant's targeting parameters; (f) electronically prompting based on the coordination request message said Coordination Hub to issue permissions to advertise the order to selected market participants, wherein market participants are selected based, at least in part, on said received information regarding market participants; and (g) electronically prompting based on the permission to advertise the order said first system and said second system to route information about said order from first participant to said selected market participants.",
	"url": null,
	"owner": "Pipeline Financial Group, Inc.",
	"publication_number": "07778919",
	"publication_date": "2010-08-17",
	"application_number": "12463886",
	"application_date": "2009-05-11",
	"tags": null,
	"slug": "method-for-managing-distributed-trading-data",
	"match_type": "description"
},
{
	"name": "Graphs of components for digital productions",
	"summary": "",
	"abstract": "The components of a computer graphics scene can be organized using multiple independent graphs. Each component can include graph relationship attributes specifying its location in one or more graphs. Graph can be utilized for any purpose within the digital production pipeline. A component can include any number of graph relationship attributes. The number and type of graph relationship attributes can be different for each component. Software tools can access one or more graphs to determine structural or functional relationships between components. Software tools can enforce policies for a graph independent of other graphs. Software tools can optimize the components of a graph independent of other graphs. A graph relationship attribute of a component can include optional parameter data to specify properties of the relationship between two or more components. Layer data structures including opinions of value can specify graph relationships.",
	"url": null,
	"owner": "Pixar",
	"publication_number": "07836087",
	"publication_date": "2010-11-16",
	"application_number": "11759919",
	"application_date": "2007-06-07",
	"tags": null,
	"slug": "graphs-of-components-for-digital-productions",
	"match_type": "description"
},
{
	"name": "Layering and referencing of scene description",
	"summary": "",
	"abstract": "A unified mechanism of scene description includes layering and cross-referencing relationships. The scene description specifies components using one or more layers. A layer includes an opinion of value for one or more attributes of one or more components. A layer can be sparsely populated with opinions of attribute values for only portions of components' attributes. Layers express opinions of value for an attribute using the semantic structure associated with the attribute. The scene description organizes layers in a layer hierarchy, which determines a layer stacking order. The layer stacking order specifies the compositing of opinions of attribute values to determine the complete authored state of the component. The layer stacking order enables attributes of components to be selectively overridden without disturbing other attribute values. Cross-referencing relationships enable encapsulation and reuse of components. Cross-referencing relationships can encapsulate components defined by one or more layers.",
	"url": null,
	"owner": "Pixar",
	"publication_number": "07836086",
	"publication_date": "2010-11-16",
	"application_number": "11738953",
	"application_date": "2007-04-23",
	"tags": null,
	"slug": "layering-and-referencing-of-scene-description",
	"match_type": "description"
},
{
	"name": "Information exchange engine providing a critical infrastructure layer and methods of use thereof",
	"summary": "",
	"abstract": "A virtual record manager and a data exchange engine are provided for dynamically defining data records in a database and for dynamically allocating instances of defined data records. These components are capable of mediating between the database and application and client interface layers to facilitate exchange of information over a network. Embodiments are configured to allow complex data records having a plurality of related fields, and to allow management and exchange of information at both the data field level and data record level.",
	"url": null,
	"owner": "Planetid, Inc.",
	"publication_number": "07788222",
	"publication_date": "2010-08-31",
	"application_number": "09742699",
	"application_date": "2000-12-20",
	"tags": null,
	"slug": "information-exchange-engine-providing-a-critical-infrastructure-layer-and-methods-of-use-thereof",
	"match_type": "description"
},
{
	"name": "Apparatus and method for communications control",
	"summary": "",
	"abstract": "An apparatus and method for controlling telecommunications is provided. The apparatus, which in one embodiment is a switch, may be connected between a computer-telephony integrated (CTI) workstation and multiple communication lines to elements such as Central Offices. The switch may be manipulated either manually or by the CTI workstation to connect to one of the multiple communication lines.",
	"url": null,
	"owner": "Plant Equipment, Inc.",
	"publication_number": "07684386",
	"publication_date": "2010-03-23",
	"application_number": "11038587",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": "apparatus-and-method-for-communications-control",
	"match_type": "description"
},
{
	"name": "Goal-oriented predictive scheduling in a grid environment",
	"summary": "",
	"abstract": "A method for scheduling jobs in a networked computing grid is described. The method includes scheduling jobs to meet goals related to execution of the jobs within the computing grid. The jobs may be scheduled by evaluating job execution goals against available resource slots provided by the computing grid. Also disclosed are related methods for scheduling jobs in which the jobs are submitted to service classes having defined job execution goals, and wherein the jobs are scheduled according to the job execution goals of the service classes.",
	"url": null,
	"owner": "Platform Computing Corporation",
	"publication_number": "07844969",
	"publication_date": "2010-11-30",
	"application_number": "10871502",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": "goaloriented-predictive-scheduling-in-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Job-centric scheduling in a grid environment",
	"summary": "",
	"abstract": "Systems and methods for scheduling jobs in a networked computing grid having job service components for creating jobs having certain resource requirements are described. One embodiment includes resource manager components communicatively linked with the job service components, each resource manager component being configured to manage a plurality of resources. Such a system further includes information components communicatively linked with the job service components and the resource manager components, the information components being configured to aggregate resource data obtained from the resource manager components. The jobs include a scheduling mechanism for querying the information components for resource data, comparing the resource data against the resource requirements and independently scheduling the job to the resource manager components. A resource reservation is also provided for reserving resources for the jobs.",
	"url": null,
	"owner": "Platform Computing Corporation",
	"publication_number": "07861246",
	"publication_date": "2010-12-28",
	"application_number": "10871286",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": "jobcentric-scheduling-in-a-grid-environment",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for enabling bus connectivity over a data network",
	"summary": "",
	"abstract": "A method and system for interconnecting peripherals, processor nodes, and hardware devices to a data network to produce a network bus providing OS functionality for managing hardware devices connected to the network bus involves defining a network bus driver at each of the processor nodes that couples hardware device drivers to a network hardware abstraction layer of the processor node. The network bus can be constructed to account for the hot-swappable nature of the hardware devices using a device monitoring function, and plug and play functionality for adding and, removing device driver instances. The network bus can be used to provide a distributed processing system by defining a shared memory space at each processor node. Distributed memory pages are provided with bus-network-wide unique memory addresses, and a distributed memory manager is added to ensure consistency of the distributed memory pages, and to provide a library of functions for user mode applications.",
	"url": null,
	"owner": "Pleora Technologies Inc.",
	"publication_number": "07694312",
	"publication_date": "2010-04-06",
	"application_number": "10937423",
	"application_date": "2004-09-10",
	"tags": null,
	"slug": "methods-and-apparatus-for-enabling-bus-connectivity-over-a-data-network",
	"match_type": "description"
},
{
	"name": "Systems and methods for distributing remote technical support via a centralized service",
	"summary": "",
	"abstract": "The solution described herein provides an innovative use of remote services technology integrated with service personnel onsite at the point of service, such as a consumer repair outlet, to provide a pool of technical support resources to service a widely distributed resource need, such as support and repair resource needs of a chain of consumer outlets or an aggregated group of single proprietor consumer outlets. With this solution, qualified technical resources are provided from a central location to service a widely distributed retail environment. This is on-demand online remote support service is called or referred to as u201csupport from a spigot.u201d The distribution method enables the delivery of higher quality, more reliable and overall lower cost services. Instead of requiring dedicated technical resources at each location, lower skilled labor may be deployed at the location to enable the remote technical support services process.",
	"url": null,
	"owner": "PlumChoice, Inc.",
	"publication_number": "07676035",
	"publication_date": "2010-03-09",
	"application_number": "12169706",
	"application_date": "2008-07-09",
	"tags": null,
	"slug": "systems-and-methods-for-distributing-remote-technical-support-via-a-centralized-service",
	"match_type": "description"
},
{
	"name": "Method and apparatus for reconstruction of 3D image volumes from projection images",
	"summary": "",
	"abstract": "The invention provides improvements in reconstructive imaging of the type in which a volume is reconstructed from a series of measured projection images (or other two-dimensional representations) by utilizing the capabilities of graphics processing units (GPUs). In one aspect, the invention configures a GPU to reconstruct a volume by initializing an estimated density distribution of that volume to arbitrary values in a three-dimensional voxel-based matrix and, then, determining the actual density distribution iteratively by, for each of the measured projections, (a) forward-projecting the estimated volume computationally and comparing the forward-projection with the measured projection, (b) generating a correction term for each pixel in the forward-projection based on that comparison, and (c) back-projecting the correction term for each pixel in the forward-projection onto all voxels of the volume that were mapped into that pixel in the forward-projection.",
	"url": null,
	"owner": "PME IP Australia Pty Ltd",
	"publication_number": "07693318",
	"publication_date": "2010-04-06",
	"application_number": "11263568",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": "method-and-apparatus-for-reconstruction-of-3d-image-volumes-from-projection-images",
	"match_type": "description"
},
{
	"name": "Method of reconstructing computed tomography (CT) volumes suitable for execution on commodity central processing units (CPUs) and graphics processors, and apparatus operating in accord with those methods (rotational X-ray on GPUs)",
	"summary": "",
	"abstract": "The invention provides in one aspect methods and apparatus for use with C-arm and other CT systems, e.g., with non-rigid geometries. In such systems, by way of example, calibration can be performed to determine the exact position of the x-ray source and the exact orientation of the detector where each projection measurement is made. Next, a weighting coefficient can be determined for the voxels in each plane of a reconstruction volume at every possible projection. Finally, the order in which to process the voxels during image reconstruction can be determined. Following an actual CT scan procedure in which scans are obtained of a volume to be constructed, a system according to these and related aspects of the invention can use an optimal, pre-calculated processing method, while utilizing offsets and weighting coefficients determined during calibration, for performing backprojection image reconstruction.",
	"url": null,
	"owner": "PME IP Australia Pty Ltd",
	"publication_number": "07778392",
	"publication_date": "2010-08-17",
	"application_number": "11264287",
	"application_date": "2005-11-01",
	"tags": null,
	"slug": "method-of-reconstructing-computed-tomography-ct-volumes-suitable-for-execution-on-commodity-central-processing-units-cpus-and-graphics-processors-and-apparatus-operating-in-accord-with-those-methods-rotational-xray-on-gpus",
	"match_type": "description"
},
{
	"name": "Polymorphic automatic test systems and methods",
	"summary": "",
	"abstract": "An Analog/mixed signal automatic test system includes a software architecture that creates a virtual composite instruments through novel software dynamic allocation of low level resources. These virtual composite instruments provide backwards and forwards compatibility to a variety of automatic test equipment, known or available on the market. The virtual composite instruments are free from the normal constraints imposed by hardware implementations. Creation of the virtual composite instruments allows a single piece of automatic test equipment system to emulate many implementations of automatic test equipment, providing higher utilization, and therefore a lower cost test solution for device manufacturers. The test instruments are preferably object controls and are preferably instantiated and controlled by the test system server. This allows multiple users to control the tester simultaneously across, for example, the Internet.",
	"url": null,
	"owner": "Practical Engineering Inc.",
	"publication_number": "07673197",
	"publication_date": "2010-03-02",
	"application_number": "10995083",
	"application_date": "2004-11-21",
	"tags": null,
	"slug": "polymorphic-automatic-test-systems-and-methods",
	"match_type": "description"
},
{
	"name": "Systems and methods for delegating information technology authorization to at least one other person",
	"summary": "",
	"abstract": "A system for delegating authorization relating to an information technology resource is described. The system includes a processor and memory in electronic communication with the processor. A user database is stored in the memory. The user database includes a plurality of user identifications and trusted circle data. Instructions are stored in the memory and are executable to add a new user to the trusted circle data and to provide a user interface for the new user so that the new user is capable of resetting a password for an account owner or of reinstating an account for the account owner.",
	"url": null,
	"owner": "PresenceID, Inc.",
	"publication_number": "07788708",
	"publication_date": "2010-08-31",
	"application_number": "11866310",
	"application_date": "2007-10-02",
	"tags": null,
	"slug": "systems-and-methods-for-delegating-information-technology-authorization-to-at-least-one-other-person",
	"match_type": "description"
},
{
	"name": "System, method and computer program for facet analysis",
	"summary": "",
	"abstract": "Automated facet analysis of input information selected from a domain of information in accordance with a source data structure is described. Facet analysis may proceed by discovering at least one of facets, facet attributes, and facet attribute hierarchies of the input information using pattern augmentation and statistical analyses to identify patterns of facet attribute relationships in the input information.",
	"url": null,
	"owner": "Primal Fusion Inc.",
	"publication_number": "07860817",
	"publication_date": "2010-12-28",
	"application_number": "12556349",
	"application_date": "2009-09-09",
	"tags": null,
	"slug": "system-method-and-computer-program-for-facet-analysis",
	"match_type": "description"
},
{
	"name": "System, method and computer program for faceted classification synthesis",
	"summary": "",
	"abstract": "A method (system and computer program product) performs facet classification synthesis to relate concepts represented by concept definitions defined in accordance with a faceted data set comprising facets, facet attributes, and facet attribute hierarchies. Dimensional concept relationships are expressed between the concept definitions. Two concept definitions are determined to be related in a particular dimensional concept relationship by examining whether at least one of explicit relationships and implicit relationships exist in the faceted data set between the respective facet attributes of the two concept definitions.",
	"url": null,
	"owner": "Primal Fusion Inc.",
	"publication_number": "07849090",
	"publication_date": "2010-12-07",
	"application_number": "11625452",
	"application_date": "2007-01-22",
	"tags": null,
	"slug": "system-method-and-computer-program-for-faceted-classification-synthesis",
	"match_type": "description"
},
{
	"name": "System, method and computer program for using a multi-tiered knowledge representation model",
	"summary": "",
	"abstract": "A method (system and computer program product) performs facet classification synthesis to relate concepts represented by concept definitions defined in accordance with a faceted data set comprising facets, facet attributes, and facet attributes hierarchies. Dimensional concept relationships are expressed between the concept definitions. Two concept definitions are determined to be related in a particular dimensional concept relationship by examining whether at least one of explicit relationships and implicit relationships exist in the faceted data set between the respective facet attributes of the two concept definitions.",
	"url": null,
	"owner": "Primal Fusion Inc.",
	"publication_number": "07844565",
	"publication_date": "2010-11-30",
	"application_number": "12477994",
	"application_date": "2009-06-04",
	"tags": null,
	"slug": "system-method-and-computer-program-for-using-a-multitiered-knowledge-representation-model",
	"match_type": "description"
},
{
	"name": "Method and system for providing a secure multi-user portable database",
	"summary": "",
	"abstract": "A system and method for providing, managing, and accessing a multi-user secure portable database using secure memory cards is provided. The database has a secure portion for storing security keys and a non-secure portion for encrypted data files. Access to the encrypted data files is controlled by assigning access rights through an access control matrix to each encrypted data file according to a hierarchical structure of users. A user requesting access is identified in the hierarchy, associated with a key for allowing the requested access, and the requested access allowed to a file in accordance with the rights allocated through the access control matrix. A patient can selectively grant access to encrypted medical records on his card to a physician. Authentication of the owner/patient is preferably required. Other records required by emergency medical personnel are readable from the same card without requiring permission from the patient.",
	"url": null,
	"owner": "PrivaMed, Inc.",
	"publication_number": "07661146",
	"publication_date": "2010-02-09",
	"application_number": "11173133",
	"application_date": "2005-07-01",
	"tags": null,
	"slug": "method-and-system-for-providing-a-secure-multiuser-portable-database",
	"match_type": "description"
},
{
	"name": "Method and device for questioning a plurality of computerized devices",
	"summary": "",
	"abstract": "Some embodiments of the present invention may relate to a device and a method of questioning computerized devices within an organization's network. The device, in accordance with some embodiments of the present invention, may include a questioning module and an agentless module. The questioning module may be adapted to receive data specifying a plurality of computerized devices to be questioned, and to receive data indicating which one or more questioning subjects are selected to be questioned on the specified computerized devices. The agentless module may be adapted to invoke and configure at least a remote access process, to question at least a registry of a remote computerized device. In accordance with some embodiments of the present invention, the questioning module may be adapted to utilize multiple threads of the agentless module to invoke and configure a plurality of remote access processes to question in parallel and without using agents at least a registry of the specified computerized devices, in accordance with the selected questioning subjects.",
	"url": null,
	"owner": "Promisec Ltd.",
	"publication_number": "07752671",
	"publication_date": "2010-07-06",
	"application_number": "11226451",
	"application_date": "2005-09-15",
	"tags": null,
	"slug": "method-and-device-for-questioning-a-plurality-of-computerized-devices",
	"match_type": "description"
},
{
	"name": "Method and system for providing remote access to the facilities of a server computer",
	"summary": "",
	"abstract": "A method and system for providing remote access to the facilities of a server computer are provided. A site integration application programming interface at a co-branded Web site. The site integration application programming interface exposes a number of servlets that may be executed in response to requests received from a business partner Web site over a secure communications link. The servlets provide functionality for accessing the user registration and deletion facilities of the co-branded Web site. Moreover, the servlets also provide access to other administrative facilities provided at the co-branded Web site. The servlets also provide functionality for authorizing a user to access the co-branded we site. This servlet may be executed in conjunction with the login facilities of the business partner web site to permit concurrent login at both sites.",
	"url": null,
	"owner": "Punch Networks Corporation",
	"publication_number": "07730089",
	"publication_date": "2010-06-01",
	"application_number": "09927899",
	"application_date": "2001-08-10",
	"tags": null,
	"slug": "method-and-system-for-providing-remote-access-to-the-facilities-of-a-server-computer",
	"match_type": "abstract"
},
{
	"name": "Method and system for processing markers, data integrity fields and digests",
	"summary": "",
	"abstract": "A system with a host bus adapter (u201cHBAu201d) having a TCP/IP offload engine is provided. The HBA includes logic for concurrently processing markers, data integrity fields (u201cDIFsu201d) and digests by using plural counters that count words in a data stream and individual routing bits are set for markers, DIFs and digests based on the plural counter values. When a counter reaches a certain threshold value, then locator bits are set for a field and the locator bits are forwarded with the data stream. A marker counter is incremented when each word in a data stream passes by the marker counter and markers can be inserted at a programmed interval. For DIF calculation an offset of a first byte in a DMA transfer and partial cyclic redundancy code value is seeded into a DIF location counter, which is incremented for each byte of data that passes by the DIF location counter.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07761608",
	"publication_date": "2010-07-20",
	"application_number": "10931850",
	"application_date": "2004-09-01",
	"tags": null,
	"slug": "method-and-system-for-processing-markers-data-integrity-fields-and-digests",
	"match_type": "description"
},
{
	"name": "Method and system for processing network data",
	"summary": "",
	"abstract": "Method and system for a network for receiving and sending network packets is provided. The system includes a host processor that executes an operating system for a host system and at least one application that runs in a context that is different from a context of the operating system; and a network adapter with a hardware device that can run a network protocol stack, wherein the application can access the network adapter directly via an application specific interface layer without using the operating system and the application designates a named memory buffer for a network connection and when data is received by the network adapter for the network connection, then the network adapter passes the received data directly to the designated named buffer.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07735099",
	"publication_date": "2010-06-08",
	"application_number": "11317315",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": "method-and-system-for-processing-network-data",
	"match_type": "description"
},
{
	"name": "Method and system for processing network data packets",
	"summary": "",
	"abstract": "A method for processing IP datagrams using an outbound processing state machine, in an outbound processor, wherein the IP datagrams are generated by a host system is provided. The method includes, creating an IOCB with plural host memory addresses that define host data to be sent and a host memory address of a network control block (u201cNCBu201d) used to build network protocol headers, wherein the host sends the IOCB to the outbound processor. The outbound processor reads the NCB from host memory and creates an IP and MAC level protocol header(s) for a data packet(s) used to send the IP data. If a datagram fits into an IP packet, the outbound processor builds headers to send the datagram and then uses the plural host memory addresses defining the host data to read the data from the host, places the data into the packet and sends the packet.",
	"url": null,
	"owner": "QLOGIC, Corporation",
	"publication_number": "07830919",
	"publication_date": "2010-11-09",
	"application_number": "12389308",
	"application_date": "2009-02-19",
	"tags": null,
	"slug": "method-and-system-for-processing-network-data-packets",
	"match_type": "description"
},
{
	"name": "Method and system for providing transparent access to hardware graphic layers",
	"summary": "",
	"abstract": "The present invention relates generally to computer graphics, and more specifically to methods of, and systems for, configuring, controlling and accessing multiple hardware graphics layers that are used to compose a single video display. One aspect of the invention is broadly defined as follows: in a computer environment including a software application and an operating system running on a computer, the computer including a graphics card and a video display, the graphics card being operable to render images to the video display, the improvement comprising: the operating system including a universal application programming interface (API) which supports hardware layers on graphics cards; the operating system being operable to: receive draw events via the universal API; determine what hardware layers are available on the graphics card, and what their parameters are; and respond to draw requests from the software application by rendering the draw requests selectively to any of the available hardware layers on the graphics card; whereby the computer environment allows software applications to exploit available hardware layers on the graphics card.",
	"url": null,
	"owner": "QNX Software Systems GmbH & Co. KG",
	"publication_number": "07830372",
	"publication_date": "2010-11-09",
	"application_number": "10928698",
	"application_date": "2004-08-30",
	"tags": null,
	"slug": "method-and-system-for-providing-transparent-access-to-hardware-graphic-layers",
	"match_type": "abstract"
},
{
	"name": "Process scheduler employing adaptive partitioning of critical process threads",
	"summary": "",
	"abstract": "A system is set forth that includes a processor, one or more memory storage units, and software code stored in the one or more memory storage units. The software code is executable by the processor to generate a plurality of adaptive partitions that are each associated with one or more process threads. Each of the plurality of adaptive partitions has a corresponding processor time budget. One or more of the process threads are designated as critical threads. Each adaptive partition associated with a critical thread is assigned a corresponding critical time budget. The software code also includes a scheduling system that is executable by the processor for selectively allocating the processor to run the process threads based, at least in part, on the processor time budgets of the respective adaptive partitions. The scheduling system may allocate the processor to run a critical thread based on the available critical time budget of the associated adaptive partition even when the processor time budget of the associated adaptive partition has been exhausted. In one example, the scheduling system functions so that it only bills the critical time budget of an adaptive partition for time used to run an associated critical thread when the processor is overloaded and the critical time budget for the adaptive partition is concurrently exhausted. Methods of implementing such a system are also set forth.",
	"url": null,
	"owner": "QNX Software Systems GmbH & Co. KG",
	"publication_number": "07840966",
	"publication_date": "2010-11-23",
	"application_number": "11371638",
	"application_date": "2006-03-08",
	"tags": null,
	"slug": "process-scheduler-employing-adaptive-partitioning-of-critical-process-threads",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for detection and management of unauthorized executable instructions on a wireless device",
	"summary": "",
	"abstract": "Detection and management methods and apparatus for wireless devices may include an executable instruction authorization module operable to scan executable instructions on a wireless device, generate a log indicative of a virus or otherwise unauthorized executable instructions based on a received authorization configuration, and forward the log to a user manager. The user manager may be operable to analyze the log and generate an authorization report which may be viewable by an operator to determine the disposition of unauthorized executable instructions. At least one of the executable instruction authorization module, the user manager, and the operator may be operable to generate a control command operable to delete, or otherwise disable, unauthorized executable instructions on the wireless device, or to restore the executable instructions on the wireless device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07770785",
	"publication_date": "2010-08-10",
	"application_number": "11435049",
	"application_date": "2006-05-15",
	"tags": null,
	"slug": "apparatus-and-methods-for-detection-and-management-of-unauthorized-executable-instructions-on-a-wireless-device",
	"match_type": "description"
},
{
	"name": "Apparatus and methods for speed management and control",
	"summary": "",
	"abstract": "Apparatus, methods and computer readable media for speed management and control, including logic executable to determine a present geographic position of a wireless device, logic executable to determine a speed limit corresponding to the present geographic position, and logic executable to selectively generate an alert based upon the speed limit.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07660658",
	"publication_date": "2010-02-09",
	"application_number": "11361221",
	"application_date": "2006-02-23",
	"tags": null,
	"slug": "apparatus-and-methods-for-speed-management-and-control",
	"match_type": "description"
},
{
	"name": "Apparatus and methods of selective collection and selective presentation of content",
	"summary": "",
	"abstract": "Disclosed are apparatus and methods operable to distribute targeted content. Additionally, disclosed are corresponding apparatus and methods operable to selectively choose and cache selected ones from among the distributed targeted content, and to further choose ones from among the cached content to present on a device. In some aspects, selective caching of content may be based upon a match between predetermined content attribute information and predetermined profile information. Further, in some aspects, an indicator is operable to trigger the selective inclusion of one or more of the cached content in a presentation of other content, which may be based on a match between a desired content attribute associated with the indicator and the respective predetermined content attribute information of the cached content.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07706740",
	"publication_date": "2010-04-27",
	"application_number": "11614863",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "apparatus-and-methods-of-selective-collection-and-selective-presentation-of-content",
	"match_type": "description"
},
{
	"name": "Asynchronous signaling and data delivery in wireless communication system",
	"summary": "",
	"abstract": "A system and method for signaling and delivering group communication data, such as push-to-talk (PTT) setup data, to a dormant wireless telecommunication device across a control channel on a wireless communication network. Each wireless telecommunication device is able to direct a single group communication stream to a designated target group of other wireless telecommunication devices, and the wireless telecommunication device has a dormant state in which the wireless telecommunication devices bridges a control channel with a communication server and an active state in which the wireless telecommunication device bridges a dedicated communication channel with the communication server. The wireless telecommunication device receives group communication setup data though a control channel for incoming group communications, and such delivery occurring without fully bridging a dedicated communication channel to that wireless telecommunication device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07796995",
	"publication_date": "2010-09-14",
	"application_number": "11156176",
	"application_date": "2005-06-17",
	"tags": null,
	"slug": "asynchronous-signaling-and-data-delivery-in-wireless-communication-system",
	"match_type": "description"
},
{
	"name": "Graphics system employing pixel mask",
	"summary": "",
	"abstract": "The system includes a bounds primitive rasterizer that rasterizes a bounds primitive into a selection of primitive pixels. The selection of primitive pixels bounds a shape to be rendered to a screen. The system also includes a pixel mask generator that generates a pixel mask for the shape. The pixel mask includes mask pixels that each corresponds to one of the primitive pixels. A mask pixel is a covered pixel when the shape covers at least a threshold portion of the mask pixel and is an uncovered pixel when the shape does not cover the mask pixel. The system also includes a pixel screener configured to retain primitive pixels that correspond to covered mask pixels and to discard primitive pixels that correspond to uncovered mask pixels.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07652677",
	"publication_date": "2010-01-26",
	"application_number": "11499200",
	"application_date": "2006-08-03",
	"tags": null,
	"slug": "graphics-system-employing-pixel-mask",
	"match_type": "description"
},
{
	"name": "Managing multiple languages in a data language",
	"summary": "",
	"abstract": "Described are various methods and apparatuses that provide for variants for multiple resource types and efficiently managing these resources by use of common variables and an organized file structure. A file structure is organize by a common variables, such as the $lang variable, and includes resource references such that once the common variable is defined, similar resources can be referenced using the same instruction by the use of modifying the common variable. Multiple resource types, including text, images as well as other resource types may be managed using the file structure disclosed herein.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07797308",
	"publication_date": "2010-09-14",
	"application_number": "11421388",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": "managing-multiple-languages-in-a-data-language",
	"match_type": "description"
},
{
	"name": "Method and apparatus for monitoring usage patterns of a wireless device",
	"summary": "",
	"abstract": "Apparatus and methods for monitoring usage patterns of a wireless device may include a usage monitoring and reporting module operable to monitor and log usage on a wireless device based on a received usage configuration. Further, based on the usage configuration, the wireless device may forward the log to another device operable to analyze the log and generate a usage pattern report viewable by an authorized user.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07817983",
	"publication_date": "2010-10-19",
	"application_number": "11374888",
	"application_date": "2006-03-13",
	"tags": null,
	"slug": "method-and-apparatus-for-monitoring-usage-patterns-of-a-wireless-device",
	"match_type": "description"
},
{
	"name": "Method and apparatus for network initiated uninstallation of application program over wireless network",
	"summary": "",
	"abstract": "Network-initiated uninstallation of programs on remote modules, such as wireless telephones, is performed over a wireless network to recall programs stored on the wireless telephone that are faulty or harmful to the wireless telephone, the wireless network, or a user of the wireless telephone. If one or more recall criteria are met for uninstallation of a targeted application program, a recall command source constructs a recall command. A program manager, using a database containing information about each program downloaded onto each wireless telephone in the network, identifies, for the recall command source, which wireless telephones carry the targeted application program. The recall command includes a unique application identification for the targeted application program and an instruction to the wireless telephone to uninstall the targeted application program. The recall command is broadcast over the wireless network to the wireless telephones. In response to the recall command, the wireless telephone automatically uninstalls the targeted application program by executing a recall program on the wireless telephone.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07734285",
	"publication_date": "2010-06-08",
	"application_number": "09825588",
	"application_date": "2001-04-03",
	"tags": null,
	"slug": "method-and-apparatus-for-network-initiated-uninstallation-of-application-program-over-wireless-network",
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing position determination with pre-session action",
	"summary": "",
	"abstract": "A network sends to a user equipment (UE) an indication (e.g., a request for permission) to perform a position fix for the UE. The network also selectively sends to the UE a pre-session command for an action related to position determination. For example, the command may direct the UE to (1) clear all or a portion of location-related data at the UE prior to performing the position fix, (2) send back a position estimate for the UE, if available, or (3) apply a time offset and/or a position offset in performing the position fix. The UE sends to the network an acknowledgment (e.g., a grant of permission) to perform the position fix. The UE also performs the action indicated by the command (if any) received from the network prior to or in conjunction with performing the position fix. The network and UE perform the position fix for the UE.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07747258",
	"publication_date": "2010-06-29",
	"application_number": "11050575",
	"application_date": "2005-02-04",
	"tags": null,
	"slug": "method-and-apparatus-for-performing-position-determination-with-presession-action",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for actuated position determination in a wireless communication device",
	"summary": "",
	"abstract": "Systems, methods, device, apparatus, and machine-readable medium are described that provide for actuation of position determination in a wireless device based on a user input to an input mechanism associated with a group communication, such as a push-to talk and/or half-duplex communication. By marrying actuation of position determination with a user's request for push-to-talk communication (i.e., a request for a talk spurt in a PTT communication), the user is not required to perform any additional position determining initiating action to start the position determining process. In addition, the actuation of position determination is coupled with the initiation of another function on the wireless device, specifically, a push-to-talk request, which benefits from having accurate and current position data available for all current call members and/or a group administrator or the like.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07692579",
	"publication_date": "2010-04-06",
	"application_number": "11563050",
	"application_date": "2006-11-24",
	"tags": null,
	"slug": "methods-and-apparatus-for-actuated-position-determination-in-a-wireless-communication-device",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for an environmental and behavioral adaptive wireless communication device",
	"summary": "",
	"abstract": "Methods, devices, apparatus and systems are provided for adaptation of a wireless communication device based on current environmental conditions, historical environmental condition patterns and/or historical usage patterns. In this regard, the device senses such environmental conditions as light, sound, motion, temperature and the like and, automatically or at user discretion, adjusts functionality on the device that is affected by these conditions. Additionally, by determining environmental and usage patterns the device can adapt to the patterns by providing certain functionality and/or applications to the user at prescribed times of the day, week, month, etc. By being able to automatically adapt the functionality of a wireless communication device, the user of such a device experiences greater ease in using the device and an overall heightened user experience.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07675414",
	"publication_date": "2010-03-09",
	"application_number": "11627293",
	"application_date": "2007-01-25",
	"tags": null,
	"slug": "methods-and-apparatus-for-an-environmental-and-behavioral-adaptive-wireless-communication-device",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for monitoring voice quality on a wireless communication device",
	"summary": "",
	"abstract": "Methods and apparatus for providing monitoring of voice quality and diagnostic data related to voice quality on a wireless device. Monitoring thresholds can be implemented that allow for additional precautionary measures and/or further monitoring to occur if a threshold level of voice quality performance is experienced. The results of the voice and diagnostic monitoring can be communicated to the service provider who can then collect, analyze and generate reports to assess and determine quality-related problems experienced by the communication network.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07843991",
	"publication_date": "2010-11-30",
	"application_number": "11405927",
	"application_date": "2006-04-17",
	"tags": null,
	"slug": "methods-and-apparatus-for-monitoring-voice-quality-on-a-wireless-communication-device",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for providing on-demand assistance for a wireless device",
	"summary": "",
	"abstract": "Methods, devices, apparatus, computer-readable media and processors are provided that allow for on-demand user-assistance in a wireless communication device. User assistance is provided by demonstration routines that are stored locally and/or remotely, and which may be standard routines or customized routines to address the needs of the device user. The demonstration routines are accessed, and in some applications communicated to the wireless device, seamlessly to allow for a highly efficient means of providing user-assistance.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07828216",
	"publication_date": "2010-11-09",
	"application_number": "11336435",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": "methods-and-apparatus-for-providing-ondemand-assistance-for-a-wireless-device",
	"match_type": "description"
},
{
	"name": "Power control in communication systems",
	"summary": "",
	"abstract": "Systems and methods for estimating transmit power in a communication system are disclosed. An estimate of a reverse channel condition is based on a received signal from an access point. A correction factor is determined based on at least one of the number of access points detected, a Rise-over-Thermal (RoT) at the access point, a message error rate, and a message size. Then the correction factor is applied to the transmit power determination.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07813753",
	"publication_date": "2010-10-12",
	"application_number": "11363670",
	"application_date": "2006-02-27",
	"tags": null,
	"slug": "power-control-in-communication-systems",
	"match_type": "description"
},
{
	"name": "Reduced paging cycles in a wireless communication system",
	"summary": "",
	"abstract": "Systems and methods for reducing paging cycles in a wireless communication system are disclosed. An extended suspend time can be set in a close connection message. A low power state can be initiated on a wireless device. Then, the wireless device can periodically wake from the low power state to check for a page directed to the wireless device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07764969",
	"publication_date": "2010-07-27",
	"application_number": "11353511",
	"application_date": "2006-02-13",
	"tags": null,
	"slug": "reduced-paging-cycles-in-a-wireless-communication-system",
	"match_type": "description"
},
{
	"name": "Safe application distribution and execution in a wireless environment",
	"summary": "",
	"abstract": "The present invention provides safe and secure application distribution and execution by providing systems and methods that test an application to ensure that it satisfies predetermined criteria associated with the environment in which it will execute. Furthermore, by using rules and permission lists, application removal, and a modification detection technique, such as digital signatures, the present invention provides mechanisms to safely distribute and execute tested, or untested, applications by determining whether the application has been modified, determining if it has permission to execute in a given wireless device environment, and removing the application should it be desirable to do so.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07684792",
	"publication_date": "2010-03-23",
	"application_number": "11467877",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": "safe-application-distribution-and-execution-in-a-wireless-environment",
	"match_type": "description"
},
{
	"name": "System and method for distributing VoIP data packets in group communications amoung wireless telecommunication devices",
	"summary": "",
	"abstract": "In group wireless telecommunication, such as push-to-talk (PTT) calls, a voice communication is broadcast through Internet protocol data packets to other member devices of the PTT group. At least one communication server receives a single communication stream from a communicating wireless device, such as a PTT call, and creates a group communication to all wireless telecommunication devices of the designated group with the broadcast of Internet protocol data packets containing the voice data of the communication stream to one or more wireless telecommunication devices of the receiving group that can receive and handle the packets. Other wireless network infrastructure can be used to assist the communication server in generation and broadcast of the Internet protocol data packets to the receiving wireless telecommunication devices.",
	"url": null,
	"owner": "Qualcomm Incorporated",
	"publication_number": "07724743",
	"publication_date": "2010-05-25",
	"application_number": "11097044",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": "system-and-method-for-distributing-voip-data-packets-in-group-communications-amoung-wireless-telecommunication-devices",
	"match_type": "description"
},
{
	"name": "Systems, methods and apparatus for determining a radiated performance of a wireless device",
	"summary": "",
	"abstract": "Systems, methods, apparatus, processors and computer-readable media include a radiated testing module that executes a predetermined radiated performance test on a wireless device. The test dictates various performance-related parameters to measure and log at each of a plurality of predetermined positions. Further, the wireless device receives synchronization information operable to enable synchronization between the logged measurements and each of the positions. The synchronized log allows the wireless device, or another apparatus, to determine a radiated performance characteristic based on a predetermined analysis protocol. Further, the described embodiments allow for the determination of several radiated performance characteristics in a single test, using a single, unaltered wireless device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07773964",
	"publication_date": "2010-08-10",
	"application_number": "11258334",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": "systems-methods-and-apparatus-for-determining-a-radiated-performance-of-a-wireless-device",
	"match_type": "description"
},
{
	"name": "Wireless communication system utilizing a persistence value for group communication requests to reduce latency",
	"summary": "",
	"abstract": "A system and method for minimizing latency for direct group communications, such as push-to-talk (PTT) calls, among a group of wireless telecommunication devices on a wireless telecommunication network. The wireless telecommunication device selectively requests and then receives an open dedicated broadcast channel for an outgoing communication, which can include a group communication stream to a communication server that receives and creates a group communication to all wireless telecommunication devices of the designated group. The wireless telecommunication device selectively receives a broadcast channel based upon a predetermined probability, and assigns a greater probability of receiving an open broadcast channel for requests to transmit group communication streams than for requests to open a broadcast channel that are not for a group communication.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07664517",
	"publication_date": "2010-02-16",
	"application_number": "11155256",
	"application_date": "2005-06-16",
	"tags": null,
	"slug": "wireless-communication-system-utilizing-a-persistence-value-for-group-communication-requests-to-reduce-latency",
	"match_type": "description"
},
{
	"name": "Wireless USB hub",
	"summary": "",
	"abstract": "This invention provides a Wireless USB hub that includes a first port configured to communicate with a wired USB enabled device, a second port configured to communicate with a first wireless USB enabled device, and a controller that detects the wired USB enabled device and presents the wired USB enabled device as a native wireless USB enabled device to the first wireless USB enabled device.",
	"url": null,
	"owner": "QUALCOMM Incorporated",
	"publication_number": "07761627",
	"publication_date": "2010-07-20",
	"application_number": "11963499",
	"application_date": "2007-12-21",
	"tags": null,
	"slug": "wireless-usb-hub",
	"match_type": "description"
},
{
	"name": "Data storage system including unique block pool manager and applications in tiered storage",
	"summary": "",
	"abstract": "A data storage system () that receives a data set from a software module (A-D) includes a first tier storage device (), a second tier storage device (), a redundancy reducer () and a migration engine (). The first tier storage device () has a first effective storage capacity and the second tier storage device () can have a second effective storage capacity that is greater than the first effective storage capacity. The redundancy reducer () subdivides the data set into a plurality of data blocks () and reduces the redundancy of the data blocks (). The migration engine () moves one or more of the data blocks () between the first tier storage device () and the second tier storage device () based on a migration parameter of the data block (). The first tier storage device () can store data in a random access manner and the second tier storage device () can store data in a random or sequential access manner. The first tier storage device () has a first I/O bandwidth, and the second tier storage device () can have a second I/O bandwidth that is less than the first I/O bandwidth. The first tier storage device () has a first access time to data, and the second tier storage device () can have a second access time to data that is lengthier than the first access time to data. The data storage system () can also include a third tier storage device () used for retired data blocks ().",
	"url": null,
	"owner": "Quantum Corporation",
	"publication_number": "07831793",
	"publication_date": "2010-11-09",
	"application_number": "11710876",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "data-storage-system-including-unique-block-pool-manager-and-applications-in-tiered-storage",
	"match_type": "description"
},
{
	"name": "Systems and methods for a protocol gateway",
	"summary": "",
	"abstract": "A protocol management system is capable of detecting certain message protocols and applying policy rules to the detected message protocols that prevent intrusion, or abuse, of a network's resources. In one aspect, a protocol message gateway is configured to apply policy rules to high level message protocols, such as those that reside at layer 7 of the ISO protocol stack.",
	"url": null,
	"owner": "Quest Software, Inc.",
	"publication_number": "07707401",
	"publication_date": "2010-04-27",
	"application_number": "10459408",
	"application_date": "2003-06-10",
	"tags": null,
	"slug": "systems-and-methods-for-a-protocol-gateway",
	"match_type": "description"
},
{
	"name": "Interactive content representations enabling content sharing",
	"summary": "",
	"abstract": "A system and method providing interactive content representations enabling content sharing are disclosed. In general, a content representation that is descriptive of content made accessible by a hosting user is presented in association with a content representation host representing the hosting user. The content representation host may be, for example, an avatar in a virtual environment, a custom webpage of the hosting user, an identifier of the hosting user in a peer-to-peer (P2P) network, an identifier of the hosting user in a mobile network, or the like. Based on the content representation, a viewing user can determine whether content of interest is accessible from the hosting user. The viewing user may interact with the content representation to further explore the content made accessible by the hosting user and, if desired, initiate transfer of at least some of the content to a client device associated with the viewing user.",
	"url": null,
	"owner": "Qurio Holdings, Inc.",
	"publication_number": "07849420",
	"publication_date": "2010-12-07",
	"application_number": "11678813",
	"application_date": "2007-02-26",
	"tags": null,
	"slug": "interactive-content-representations-enabling-content-sharing",
	"match_type": "description"
},
{
	"name": "Systems and methods for controlled transmittance in a telecommunication system",
	"summary": "",
	"abstract": "Systems and methods for authenticating digital assets in relation to a telecommunications network. In various cases, the systems include a network interface device associated with a customer premises. The network interface device includes a local authentication authority operable to authenticate one or more digital assets maintained in relation to the customer premises. In some cases, a global authentication authority can authenticate the network interface device, and implicitly authenticate the one or more digital assets. Many other cases and/or embodiments are disclosed herein.",
	"url": null,
	"owner": "Qwest Communications International Inc",
	"publication_number": "07793337",
	"publication_date": "2010-09-07",
	"application_number": "11733089",
	"application_date": "2007-04-09",
	"tags": null,
	"slug": "systems-and-methods-for-controlled-transmittance-in-a-telecommunication-system",
	"match_type": "description"
},
{
	"name": "Systems and methods for integrating microservers with a network interface device",
	"summary": "",
	"abstract": "A network interface device has an isolation device adapted to isolate a transport medium internal to a customer premises from a transport medium external to the customer premises such that operational changes to one of the internal and external transport media do not affect the other of the internal and external transport media. A first interface is coupled with the isolation device and adapted to communicate with the external transport medium, which is in communication with a distribution point. A second interface is coupled with the isolation device and adapted to communicate with the internal transport medium. A microserver is disposed external to the customer premises and coupled with the first and second interfaces. The microserver is adapted to receive telecommunication information from the external transport medium and includes software for implementing a predetermined function over the internal transport medium by processing the received telecommunication information.",
	"url": null,
	"owner": "Qwest Communications International Inc",
	"publication_number": "07793003",
	"publication_date": "2010-09-07",
	"application_number": "10624454",
	"application_date": "2003-07-21",
	"tags": null,
	"slug": "systems-and-methods-for-integrating-microservers-with-a-network-interface-device",
	"match_type": "description"
},
{
	"name": "System and method for distributing content to portable computing devices",
	"summary": "",
	"abstract": "A method of operating a portable computing device comprises receiving broadcast information including a data repository and formatting information. Creation of a search query is facilitated, and a search result is retrieved from the data repository based upon the search query. The search result is transformed in accordance with the formatting information to produce formatted content.",
	"url": null,
	"owner": "Qwikker, Inc.",
	"publication_number": "07680802",
	"publication_date": "2010-03-16",
	"application_number": "11462660",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": "system-and-method-for-distributing-content-to-portable-computing-devices",
	"match_type": "description"
},
{
	"name": "Code replacement for irrigation controllers",
	"summary": "",
	"abstract": "Described herein are several embodiments relating to modular irrigation controllers. In many implementations, methods of implementing irrigation control are provided that detect a presence of a first module coupled with a control unit of an irrigation controller, the control unit operating in accordance with a bootloader set of code and a first set of code to implement irrigation control, identify that the first module stores a second set of code, and activate the bootloader set of code to replace the first set of code with the second set of code. Also described are various different types of modular controllers, expansion modules that may be coupled to the modular controller, having as variety of functions and features, as well as related methods of use and configuration of the controller and these modules in the controller.",
	"url": null,
	"owner": "Rain Bird Corporation",
	"publication_number": "07844367",
	"publication_date": "2010-11-30",
	"application_number": "11767390",
	"application_date": "2007-06-22",
	"tags": null,
	"slug": "code-replacement-for-irrigation-controllers",
	"match_type": "description"
},
{
	"name": "Modular and expandable irrigation controller",
	"summary": "",
	"abstract": "Described herein are several embodiments relating to modular irrigation controllers. In many implementations, the irrigation controllers are modular in that various functional components of the irrigation controller are implemented in removable modules that when inserted into position within the controller, expand the capabilities of the controller. Also described are various different types of expansion modules that may be coupled to the modular controller, having as variety of functions and features, as well as related methods of use and configuration of these modules in the controller. In some embodiments, authentication procedures are provided for one or both of a modular irrigation controller and an expansion module to determine if they are authorized to operate together.",
	"url": null,
	"owner": "Rain Bird Corporation",
	"publication_number": "07844369",
	"publication_date": "2010-11-30",
	"application_number": "12184201",
	"application_date": "2008-07-31",
	"tags": null,
	"slug": "modular-and-expandable-irrigation-controller",
	"match_type": "description"
},
{
	"name": "System for deadlock condition detection and correction by allowing a queue limit of a number of data tokens on the queue to increase",
	"summary": "",
	"abstract": "The execution environment provides for scalability where components will execute in parallel and exploit various patterns of parallelism. Dataflow applications are represented by reusable dataflow graphs called map components, while the executable version is called a prepared map. Using runtime properties the prepared map is executed in parallel with a thread allocated to each map process. The execution environment not only monitors threads, detects and corrects deadlocks, logs and controls program exceptions, but also data input and output ports of the map components are processed in parallel to take advantage of data partitioning schemes. Port implementation supports multi-state null value tokens to more accurately report exceptions. Data tokens are batched to minimize synchronization and transportation overhead and thread contention.",
	"url": null,
	"owner": "Ramal Acquisition Corp.",
	"publication_number": "07743382",
	"publication_date": "2010-06-22",
	"application_number": "10700281",
	"application_date": "2003-11-03",
	"tags": null,
	"slug": "system-for-deadlock-condition-detection-and-correction-by-allowing-a-queue-limit-of-a-number-of-data-tokens-on-the-queue-to-increase",
	"match_type": "description"
},
{
	"name": "Method and apparatus for utility pricing analysis",
	"summary": "",
	"abstract": "In one implementation, a volatility of expected service usage is calculated along with an expected revenue. User input provides estimates of service usage such as an estimated high usage, an estimated low usage, and a swing range of percentiles for the high and low usage estimates, for each time period in a plurality of future time periods. A user also provides a schedule of prices that are based on usage rates. A model volatility is calculated based on the swing range of percentiles, the estimated high and low usage, and a cumulative density function, such as a cumulative lognormal density function, for each time period in a plurality of time periods. The expected usage and the schedule of prices, along with any discount plans, are also used to calculate an estimated revenue.",
	"url": null,
	"owner": "Rapt, Inc.",
	"publication_number": "07693762",
	"publication_date": "2010-04-06",
	"application_number": "10304467",
	"application_date": "2002-11-26",
	"tags": null,
	"slug": "method-and-apparatus-for-utility-pricing-analysis",
	"match_type": "description"
},
{
	"name": "Systems and methods for scheduling, processing, and monitoring tasks",
	"summary": "",
	"abstract": "A computer-implemented method for performing a process is provided. The method comprises: (a) receiving a request to perform a process, the process comprising a plurality of tasks and at least a scheduler rule; (b) receiving a plurality of checkpoints associated with the process, each checkpoint comprising checkpoint state data and at least a respective checkpoint rule governing execution of the process; (c) determining a first task of the plurality of tasks to be scheduled into a priority queue, in accordance with the scheduler rule; (d) determining the first checkpoint of the plurality of checkpoints that is to be the first checkpoint used in processing the first task, in accordance with the scheduler rule; (e) creating the checkpoint state data for the first checkpoint; (f) saving the checkpoint state data for the first checkpoint; (g) processing the first task in accordance with the checkpoint rule associated with the first checkpoint; (h) determining the next task in the plurality of tasks to perform, based on the checkpoint rule associated with the first checkpoint; (i) updating the saved checkpoint data for the first checkpoint with the data and state associated with the first task; and (j) repeating steps (c) through (i) for each subsequent task and checkpoint, in accordance with the respective scheduler and checkpoint rules, until a predetermined condition has been reached.",
	"url": null,
	"owner": "Raytheon Company",
	"publication_number": "07669081",
	"publication_date": "2010-02-23",
	"application_number": "11535723",
	"application_date": "2006-09-27",
	"tags": null,
	"slug": "systems-and-methods-for-scheduling-processing-and-monitoring-tasks",
	"match_type": "description"
},
{
	"name": "Systems, methods, and language for selection and retrieval of information from databases",
	"summary": "",
	"abstract": "The invention provides a system configured to enable a first entity to query a second entity for a result, the system comprising a language specification component and an interface between the first entity and the second entity. The language specification component defines a communications language by which the first and second entities can communicate with each other. The interface is operable to receive from the second entity an instance of a generic request that is specific to the second entity, the instance of the generic request providing information about at least one query element that is supported in a second-entity specific request; and convert a first query from the first entity to the second entity into a second query, wherein the second query includes the at least one query element that is supported in the second-entity specific request.",
	"url": null,
	"owner": "Raytheon Company",
	"publication_number": "07747569",
	"publication_date": "2010-06-29",
	"application_number": "11534402",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "systems-methods-and-language-for-selection-and-retrieval-of-information-from-databases",
	"match_type": "description"
},
{
	"name": "System and method for remote data acquisition and distribution",
	"summary": "",
	"abstract": "Methods and systems for remote data collection and distribution include components and operations for receiving, at a server, data transmitted by a first client device via a communication network. The method may also include selecting, by one or more client devices associated with the communication network, a second device to receive the data. The method may further include establishing a connection between the server and the selected second device via the communication network. The method may also include automatically transmitting the received data to the second device using the connection via the communication network. The method may further include causing, by the one or more client devices, the second device to execute a predefined operation.",
	"url": null,
	"owner": "Reality Mobile LLC",
	"publication_number": "07860994",
	"publication_date": "2010-12-28",
	"application_number": "11653305",
	"application_date": "2007-01-16",
	"tags": null,
	"slug": "system-and-method-for-remote-data-acquisition-and-distribution",
	"match_type": "description"
},
{
	"name": "Automatic generation of test cases from error data",
	"summary": "",
	"abstract": "Some embodiments of a method and apparatus for automatically generating test cases from error data have been presented. In one embodiment, the method includes providing a graphical user interface (GUI) to allow a user to submit a report of an error in a program. The report may be partially written in a natural language. Further, the method may include receiving the report from the user via the GUI and processing the report to generate a test case to reproduce the error.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07844861",
	"publication_date": "2010-11-30",
	"application_number": "11605782",
	"application_date": "2006-11-27",
	"tags": null,
	"slug": "automatic-generation-of-test-cases-from-error-data",
	"match_type": "description"
},
{
	"name": "Database access server with compression translator",
	"summary": "",
	"abstract": "A database access server includes a network interface device and a processing device coupled to the network interface device via a bus. The network interface device receives a data request that includes a data identifier. The processing device retrieves data having the data identifier. The processing device determines if the retrieved data is compressed. The processing device decompresses the retrieved data if the retrieved data is compressed. The processing device sends the uncompressed retrieved data in response to the data request.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07647350",
	"publication_date": "2010-01-12",
	"application_number": "11470603",
	"application_date": "2006-09-06",
	"tags": null,
	"slug": "database-access-server-with-compression-translator",
	"match_type": "description"
},
{
	"name": "Efficient coding of integers in non-power-of-two ranges",
	"summary": "",
	"abstract": "Coding efficiently in non-power-of-two ranges. Coding is performed in an N-bit system, where certain codes are represented with N bits and other codes are represented with (N+1) bits. An example is where the other codes may have an N-bit representation used to represent multiple values, with the additional bit being disambiguation information provided to distinguish the codes having multiple values. Thus, N bits are used to represent most codes, and an extra bit is used to represent other codes. The number of bits per element used for representing a sequence is, on average, close to a theoretical minimum for N-bits.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07773000",
	"publication_date": "2010-08-10",
	"application_number": "12394634",
	"application_date": "2009-02-27",
	"tags": null,
	"slug": "efficient-coding-of-integers-in-nonpoweroftwo-ranges",
	"match_type": "description"
},
{
	"name": "Identity management for open overlay for social networks and online services",
	"summary": "",
	"abstract": "Embodiments of the present invention provide methods and systems for managing the multiple identities used by a user. The user's existing contact lists, website accounts, buddy lists, and the like are analyzed to determine the identities used by the user. A graph is then constructed in order to track and integrate the multiple identities of the user in a social network. The social network graph may then be used by a social network overlay so that the user can share information across their different identities with different users that only know some of the user's multiple identities.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07792903",
	"publication_date": "2010-09-07",
	"application_number": "11443060",
	"application_date": "2006-05-31",
	"tags": null,
	"slug": "identity-management-for-open-overlay-for-social-networks-and-online-services",
	"match_type": "description"
},
{
	"name": "Logical addresses",
	"summary": "",
	"abstract": "A method and apparatus for processing message is described. In one embodiment, a channel layer is configured to form a logical address upon a creation of a channel of a group communication protocol, to store an association of the logical address with a message received with a sender's address in a cache of a member of the group, and to dissolve the logical address when the channel is to be closed or disconnected.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07830876",
	"publication_date": "2010-11-09",
	"application_number": "11809269",
	"application_date": "2007-05-30",
	"tags": null,
	"slug": "logical-addresses",
	"match_type": "description"
},
{
	"name": "Method and system for aggregating and displaying an event stream",
	"summary": "",
	"abstract": "Embodiments of the present invention provide an aggregated event stream that indicates activities to a user across a range of online services. Embodiments may include a web site, a client application, or mobile device. In particular, a display is provided to a user that indicates various events in a u201cstackedu201d format. Each block of the stacked format represents one or more events originating from the user's own activities or activities of the user's contacts in their social network. Activities may originate from accounts on other online services that the user linked to their account or profile. The stacked format is updated in substantially real time to provide the user a sense of the activities of their social network around them.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07752553",
	"publication_date": "2010-07-06",
	"application_number": "11565624",
	"application_date": "2006-12-01",
	"tags": null,
	"slug": "method-and-system-for-aggregating-and-displaying-an-event-stream",
	"match_type": "description"
},
{
	"name": "Method and system for embedding an aggregated event stream into a third party web page",
	"summary": "",
	"abstract": "Embodiments of the present invention provide a way of embedding a display of activities relevant to a social network in a third party website. In particular, embodiments of the present invention provide for an embedded aggregated event stream. In particular, a display is provided to a user that indicates various events in a u201cstackedu201d format. Each block of the stacked format represents one or more events originating from the user's own activities or activities of the user's contacts in their social network. Activities may originate from accounts on other online services that the user linked to their account or profile. The stacked format is updated in substantially real time to provide the user a sense of the activities of their social network around them.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07752552",
	"publication_date": "2010-07-06",
	"application_number": "11565222",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "method-and-system-for-embedding-an-aggregated-event-stream-into-a-third-party-web-page",
	"match_type": "description"
},
{
	"name": "Method for providing a unified view of a domain model to a user",
	"summary": "",
	"abstract": "Techniques for providing a unified view of a domain model to a user are described herein. In one embodiment, in response to a first search query received from a client via a first search mechanism (e.g., outside of the relational DB) for a list of persistent objects representing data entries of a relational database, it is determined whether the persistent objects have been accessed via a second search query via a second search mechanism based on an object identifier of the persistent object. If the requested persistent object has been accessed via a second search query, an identical instance of the persistent object is returned to the client as a result of the first search query. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07689535",
	"publication_date": "2010-03-30",
	"application_number": "11809282",
	"application_date": "2007-05-30",
	"tags": null,
	"slug": "method-for-providing-a-unified-view-of-a-domain-model-to-a-user",
	"match_type": "description"
},
{
	"name": "Name-based filters utilized in full-text search engine",
	"summary": "",
	"abstract": "Techniques for filtering a full-text search result in a full-text search engine level are described herein. According to one embodiment, a filter is defined via a definition statement a filter using a filter name which identifies a filter object representing an implementation of the filter. In response to a search query received at the ORM system from an application client, where the search query identifying the filter via the filter name, a full-text search engine is invoked to perform a full-text search in a database based on one or more keywords in the search query. The filter object is identified based on the filter name extracted from the search query and the filter object associated with the search query is invoked using the filter name of the filter object to filter a search result generated from the full-text search engine. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07788270",
	"publication_date": "2010-08-31",
	"application_number": "12074090",
	"application_date": "2008-02-28",
	"tags": null,
	"slug": "namebased-filters-utilized-in-fulltext-search-engine",
	"match_type": "description"
},
{
	"name": "Out of band messages",
	"summary": "",
	"abstract": "A method and apparatus for processing message is described. In one embodiment, an application programming interface is configured for receiving and sending messages. A building block layer is coupled to the application programming interface. A channel layer is coupled to the building block layer. A transport protocol stack is coupled to the channel layer for implementing properties specified by the channel layer. The transport protocol stack has a concurrent stack consisting of an out of band thread pool and a regular thread pool. The regular thread pool forms one thread for every messages from a sender. The out of band thread pool to form one thread for messages marked as out of band from the sender. Messages processed with the thread from the out of band thread pool are processed before messages processed with the regular thread pool.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07733863",
	"publication_date": "2010-06-08",
	"application_number": "11809076",
	"application_date": "2007-05-30",
	"tags": null,
	"slug": "out-of-band-messages",
	"match_type": "abstract"
},
{
	"name": "System and method for accessing data in disparate information sources",
	"summary": "",
	"abstract": "The present invention relates to a system () for generating and maintaining virtual and physical metadata layers in a MetaBase metadata repository () in order to simplify and optimize the retrieval of data from a plurality of disparate information sources (-). The system stores in a physical metadata layer of a MetaBase metadata repository a plurality of physical metadata elements, wherein each one of the physical metadata elements corresponds to the metadata elements in the plurality of information sources. Logical metadata elements are stored in the virtual metadata layer and are linked to the physical metadata elements in order to maintain the relationships therebetween. By maintaining the relationships between the physical metadata elements, users can initiate a data query request for data corresponding to a logical metadata element, and the system is configurated to retrieve the desired data from the relevant information sources, even in the event that relevant information sources maintain the data in fields having different data field names, that the information sources employ incompatible data formats, and that the relevant information sources employ different query languages.",
	"url": null,
	"owner": "Red Hat, Inc.",
	"publication_number": "07668798",
	"publication_date": "2010-02-23",
	"application_number": "10450581",
	"application_date": "2001-04-04",
	"tags": null,
	"slug": "system-and-method-for-accessing-data-in-disparate-information-sources",
	"match_type": "description"
},
{
	"name": "Method and system allowing for one mobile phone number (MSISDN) to be associated with a plurality of wireless devices (u2018Multi-SIMu2019)",
	"summary": "",
	"abstract": "The method and system allowing for one mobile phone number (MSISDN) to be associated with a plurality of wireless devices is described.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07680491",
	"publication_date": "2010-03-16",
	"application_number": "10438097",
	"application_date": "2003-05-15",
	"tags": null,
	"slug": "method-and-system-allowing-for-one-mobile-phone-number-msisdn-to-be-associated-with-a-plurality-of-wireless-devices-multisim",
	"match_type": "description"
},
{
	"name": "Method and system for international roaming and call bridging",
	"summary": "",
	"abstract": "Disclosed is an enhanced system and method for bridging calls across telecommunications networks, including an illustrative application of the invention as it relates to international roaming among prepaid wireless subscribers. For instance, whenever wireless subscribers roam internationally they may invoke the system by keying in an Unstructured Supplementary Service Data (USSD) short code followed by the number to be dialed. Said subscriber's prepaid account is then decremented in real-time (until such account is fully depleted). A key feature of the disclosure generally is the bridging of the call legs between the wireless subscriber initiating the telephone communication and that of the receiving party through a series of general purpose databases and computers without requiring modifications to existing core network or handset infrastructure.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07702331",
	"publication_date": "2010-04-20",
	"application_number": "12248478",
	"application_date": "2008-10-09",
	"tags": null,
	"slug": "method-and-system-for-international-roaming-and-call-bridging",
	"match_type": "description"
},
{
	"name": "Method and system for presence determination of mobile devices",
	"summary": "",
	"abstract": "A presence server for determining presence of a mobile station in a mobile network, including structure and/or function to: receive a request for a presence indication that the mobile station is active; send a first query into the mobile network based on the request; receive a response to the first query; and, if the response indicates the mobile station is active then: provide the presence indication; if the response indicates the mobile station is not active then: send a second query into the mobile network for establishing a notification trigger; receive a second query response based on the notification trigger; the second query response including the presence indication and being based on short message service (u201cSMSu201d); and provide the presence indication based on the second query response.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07809380",
	"publication_date": "2010-10-05",
	"application_number": "12393211",
	"application_date": "2009-02-26",
	"tags": null,
	"slug": "method-and-system-for-presence-determination-of-mobile-devices",
	"match_type": "description"
},
{
	"name": "Method and system for the prevention of unwanted wireless telecommunications",
	"summary": "",
	"abstract": "A method and system for the prevention of unwanted wireless telecommunications, which is implemented as part of a computer program product in (preferentially) the telecommunications operator's network. The method and system meets and/or exceeds much of current, proposed, and even academically anticipated legislative (and by necessity, technical) criteria, and thus the broader body of consumer requirements associated with wireless telecommunications spam filtering. Indeed, the method and system provides for a remarkably flexible and customizable advance in the art through the utilization of a progressive filtering algorithm. This algorithm offers both the subscriber and the service provider with the capability to block and/or extract potentially harmful or unsolicited SMS, MMS and other such messages on the basis of an extensive range of parameters and rules.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07805132",
	"publication_date": "2010-09-28",
	"application_number": "12146977",
	"application_date": "2008-06-26",
	"tags": null,
	"slug": "method-and-system-for-the-prevention-of-unwanted-wireless-telecommunications",
	"match_type": "description"
},
{
	"name": "Method for implementing an internet protocol (IP) charging and rating middleware platform and gateway system",
	"summary": "",
	"abstract": "A method for Internet Protocol (IP) charging and rating gateway within a system having a proxy server for connection to an Authentication, Authorization, and Accounting (AAA) server, an access gateway, an IP classification engine for connection between a data network and the access gateway and a gateway controller connected to the proxy server and the IP classification engine, including the steps of receiving IP packets at the IP classification engine, the IP packets originating from the data network and destined for a subscriber device via the access gateway, classifying the IP packets according to the protocol of each of the packets at the IP classification engine and selectively instructing the IP classification engine to permit or deny the flow of IP packets between the data network and the access gateway at the gateway controller. Preferably, the proxy server is configured to emulate the access gateway and the AAA server.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07644158",
	"publication_date": "2010-01-05",
	"application_number": "12264137",
	"application_date": "2008-11-03",
	"tags": null,
	"slug": "method-for-implementing-an-internet-protocol-ip-charging-and-rating-middleware-platform-and-gateway-system",
	"match_type": "description"
},
{
	"name": "Method for implementing an Open Charging (OC) middleware platform and gateway system",
	"summary": "",
	"abstract": "The art of present discloses a method and system for enabling mobile network operators to collect charging information from various other network elements; and indeed, is intended to exploit the resiliency of open network architecture and lessen the requisite dependency on proprietary network elements services and billing systems. The Open Charging (OC) middleware platform and gateway system interacts with proprietary network elements and effectually creates a unifying, enabling layer in mobile networks. Indeed, the art is directed at permitting mobile subscriber access to, among others, third party content and services with the simplicity and convenience of such charges appearing on either mobile phone bill, or decremented from said mobile subscriber's pre-paid account.",
	"url": null,
	"owner": "Redknee Inc.",
	"publication_number": "07801171",
	"publication_date": "2010-09-21",
	"application_number": "10307335",
	"application_date": "2002-12-02",
	"tags": null,
	"slug": "method-for-implementing-an-open-charging-oc-middleware-platform-and-gateway-system",
	"match_type": "description"
},
{
	"name": "Semiconductor integrated circuit device and power consumption control device",
	"summary": "",
	"abstract": "To perform execution scheduling of function blocks so as to control the total required power of the function blocks within a supplyable power budget value, and thereby realize stable operations at low power consumption. Function block identifiers are allotted to all the function blocks, and to a RAM area that a power consumption control device can read and write, a list to store identifiers and task priority, power mode value showing power states, and power mode time showing the holding time of power states can be linked. A single or plural link lists for controlling the schedules of tasks operating on the function blocks, a link list for controlling the function block in execution currently in high power mode, a link list for controlling the function block in stop currently in stop mode, and a link list for controlling the function block in execution currently in low power mode are allotted, and thereby the power source and the operation clock are controlled by the power consumption control device.",
	"url": null,
	"owner": "Renesas Technology Corp.",
	"publication_number": "07646197",
	"publication_date": "2010-01-12",
	"application_number": "11542133",
	"application_date": "2006-10-04",
	"tags": null,
	"slug": "semiconductor-integrated-circuit-device-and-power-consumption-control-device",
	"match_type": "description"
},
{
	"name": "Detecting race conditions in computer programs",
	"summary": "",
	"abstract": "Recording and replaying computer programs includes detecting whether a race condition exists among multiple threads of a multithreaded application program. In an embodiment, detecting race conditions comprises detecting and preventing an operation of a first thread of an application program to read or write a computer memory, wherein the application program executes a plurality of threads; storing an exception point representing a current location in an execution path of the application program; allowing the operation to read or write the memory; creating and storing a record identifying the memory, the first thread, and an index value for a location in the execution path; and determining, based on the record and a plurality of other similar records, whether a race condition exists at the exception point for the first thread and one or more other threads in the plurality of the threads.",
	"url": null,
	"owner": "Replay Solutions, Inc.",
	"publication_number": "07673181",
	"publication_date": "2010-03-02",
	"application_number": "11449157",
	"application_date": "2006-06-07",
	"tags": null,
	"slug": "detecting-race-conditions-in-computer-programs",
	"match_type": "description"
},
{
	"name": "Memory assistance system comprising of a signal processing server receiving a media signal and associated data relating to information to be remembered and processing the input signal to identify media characteristics relevant to aiding user memory",
	"summary": "",
	"abstract": "Methods and systems for enhancing and/or improving one's memory are disclosed. In one embodiment of the invention, a computer-implemented memory assistance system is comprised of a client and a memory assistance server. The memory assistance server includes a signal processing server to receive and process media signals (e.g., audio, video, or photographs) and associated data received from the client. The signal processing server includes a variety of servers or services for processing signals and/or data. Each signal processing server or service identifies characteristics of the received media signal that are relevant to aiding a user in recalling and/or reinforcing an existing memory of a particular event or fact. In addition, the memory assistance server includes presentation logic to generate one or more media clips from the received media signal. Furthermore, the presentation logic determines a time and medium to present one or more media clips to a user so as to aid the user in recalling and/or reinforcing one or more existing memories of a particular event or fact.",
	"url": null,
	"owner": "Reqall, Inc.",
	"publication_number": "07716153",
	"publication_date": "2010-05-11",
	"application_number": "11560295",
	"application_date": "2006-11-15",
	"tags": null,
	"slug": "memory-assistance-system-comprising-of-a-signal-processing-server-receiving-a-media-signal-and-associated-data-relating-to-information-to-be-remembered-and-processing-the-input-signal-to-identify-media-characteristics-relevant-to-aiding-user-memory",
	"match_type": "description"
},
{
	"name": "Automatic application definition distribution",
	"summary": "",
	"abstract": "A new master application definition is installed at a server. Responsively, the server determines the identity of a user associated with the server-side application related to the master application definition. The server may then generate an application definition file specific to the application and to the remote wireless device associated with the identified user. The application definition file may contain definitions for: a user interface format; a format for network messages; and a format for storing data. Using these definitions, the wireless device may receive data generated by the server-side application and formatted in accordance with the definitions. The wireless device may then present a user interface for the application. Preferably, the application definition file is an XML file. Advantageously, when changes occur to previously established server-side applications, automatic updating of devices is efficiently accomplished.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07805133",
	"publication_date": "2010-09-28",
	"application_number": "11459054",
	"application_date": "2006-07-21",
	"tags": null,
	"slug": "automatic-application-definition-distribution",
	"match_type": "description"
},
{
	"name": "Automatic mobile device configuration",
	"summary": "",
	"abstract": "A remote wireless device registers with a server. Responsively, the server determines the identity of a server-side application associated with a user of the remote wireless device. The server may then generate an application definition file specific to the server-side application and to the remote wireless device. The application definition file may contain definitions for: a user interface format; a format for network messages; and a format for storing data. Using these definitions, the wireless device may receive data generated by the server-side application and formatted in accordance with the definitions. The wireless device may then present a user interface for the server-side application. The application definition file may be an Extensible Markup Language (XML) file. Advantageously, configuration of devices is more efficiently accomplished.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07779085",
	"publication_date": "2010-08-17",
	"application_number": "11457841",
	"application_date": "2006-07-17",
	"tags": null,
	"slug": "automatic-mobile-device-configuration",
	"match_type": "description"
},
{
	"name": "Camera-steady focus requirements for preventing inconspicuous use of cameras on handheld mobile communication devices",
	"summary": "",
	"abstract": "Methods and devices for implementing a camera restriction on a wireless handheld communication device. As more handheld devices incorporate camera functionalities, organizations and individuals with privacy concerns are more vulnerable to unauthorized disclosure. The camera restriction prevents a user from taking a picture of a subject if the device has not been steadily focused on the subject in question for a predetermined period of time. In short, this process extends the normal camera-taking procedure and thus requires the camera user to take pictures in a conspicuous manneru2014the rationale being that a camera user would be less likely to take unauthorized pictures if such actions could be easily recognized. The camera restriction can be communicated to the device via a wireless communication network. Additionally, the restrictions and boundaries can be communicated to the device as part of an IT security policy.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07711256",
	"publication_date": "2010-05-04",
	"application_number": "11469487",
	"application_date": "2006-09-01",
	"tags": null,
	"slug": "camerasteady-focus-requirements-for-preventing-inconspicuous-use-of-cameras-on-handheld-mobile-communication-devices",
	"match_type": "description"
},
{
	"name": "Disabling operation of a camera on a handheld mobile communication device based upon enabling or disabling devices",
	"summary": "",
	"abstract": "A handheld communication device capable of transmitting and receiving at least voice and text communication. The device has a body assembly including a front face arranged to be directed toward an operator of the device when held in a text communicating orientation. A display screen and a text-input keyboard are included and are each exposed at the front face of the body assembly. The keyboard has a plurality of keys that include a set of alphabetic keys with which either QWERTY-, QWERTZ- AZERTY- or Dvorak-arranged alphabetic characters are associated. An integrated camera assembly is also included that is configured for taking photographs and the communication device enabled to wirelessly communicate photographs taken with the camera assembly to a remote receiver. The camera assembly includes a photo-initiating actuator having an actuated position and an unactuated position and at least one of a selective enablement device or a selective disablement device.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07706837",
	"publication_date": "2010-04-27",
	"application_number": "11469486",
	"application_date": "2006-09-01",
	"tags": null,
	"slug": "disabling-operation-of-a-camera-on-a-handheld-mobile-communication-device-based-upon-enabling-or-disabling-devices",
	"match_type": "description"
},
{
	"name": "Electronic mail communications system with client email internet service provider (ISP) polling application and related methods",
	"summary": "",
	"abstract": "An electronic mail (email) communications system may include a mobile wireless communications device, a wireless communications network connected to the Internet, and an Internet Service Provider (ISP) server connected to the Internet for receiving emails for a given user. The system may further include an email proxy server connected to the Internet for pushing emails from the ISP server to the mobile wireless communications device via the wireless communications network. A user computer may be connected to the Internet and may include a client email application for periodically polling the ISP server to detect new emails. The client email application may also send new email notifications to the email proxy server upon detection of new emails to cause the email proxy server to push the new emails to the mobile wireless communications device.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07805489",
	"publication_date": "2010-09-28",
	"application_number": "11426668",
	"application_date": "2006-06-27",
	"tags": null,
	"slug": "electronic-mail-communications-system-with-client-email-internet-service-provider-isp-polling-application-and-related-methods",
	"match_type": "description"
},
{
	"name": "Limited lifespan for outgoing data at a mobile device",
	"summary": "",
	"abstract": "An outgoing message may be generated, at a mobile communication device, based on a received application definition document, which indicates a lifespan for the message. In conjunction with generating a message in accordance with a format provided in the application definition document, a message expiry time may be generated. The message may be stored in a queue for transmission. Additionally, an indication of the expiry time may be stored in the queue in association with the message. The expiry time of the message may periodically be compared to the current time to determine whether the message has expired. Upon expiry, a user of the mobile communication device may be presented with the option to cancel transmission of the message or re-attempt transmission.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07764970",
	"publication_date": "2010-07-27",
	"application_number": "12622908",
	"application_date": "2009-11-20",
	"tags": null,
	"slug": "limited-lifespan-for-outgoing-data-at-a-mobile-device",
	"match_type": "description"
},
{
	"name": "Method of reflecting on another device an addition to a browser cache on a handheld electronic device, and associated device",
	"summary": "",
	"abstract": "An improved handheld electronic device includes an Application Programming Interface (API) that generates various notifications in certain circumstances. The handheld electronic device provides an improved method of employing the notifications to enable another device to reflect an addition to a browser cache on the handheld electronic device.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07644149",
	"publication_date": "2010-01-05",
	"application_number": "11414779",
	"application_date": "2006-04-28",
	"tags": null,
	"slug": "method-of-reflecting-on-another-device-an-addition-to-a-browser-cache-on-a-handheld-electronic-device-and-associated-device",
	"match_type": "abstract"
},
{
	"name": "Method, software and device for effecting independently refreshable, markup language-based database queries and user interface screens",
	"summary": "",
	"abstract": "To effect database queries and user interface screens that are independently refreshable and markup language-based, a machine-readable medium contains object-oriented code for defining a database query, including instructions for storing the result of the database query, based on a markup language element representation of the query, and object-oriented code for displaying a user interface screen based on a markup language element representations of the screen which has a display element that is based at least in part upon the result of the database query. The machine-readable medium also contains object-oriented code for refreshing the database query and object-oriented code for refreshing the screen that are capable of mutually exclusive instantiation based upon a user specification of one of a markup language element representing a refreshing of the database query and a markup language element representing a screen refresh. The markup language may be Extensible Markup Language (XML).",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07779029",
	"publication_date": "2010-08-17",
	"application_number": "11449587",
	"application_date": "2006-06-09",
	"tags": null,
	"slug": "method-software-and-device-for-effecting-independently-refreshable-markup-languagebased-database-queries-and-user-interface-screens",
	"match_type": "description"
},
{
	"name": "Method, system and smart card reader for management of access to a smart card",
	"summary": "",
	"abstract": "The described embodiments relate generally to devices, methods and systems for managing access to a memory card, such as a smart card, by a plurality of accessing devices. Certain embodiments relate to a smart card reader (SCR) for managing access to a smart card by a plurality of accessing devices. The SCR comprises: a processor; a channel manager responsive to the processor for interfacing with the smart card; and a communication interface responsive to the channel manager for communicating with the plurality of accessing devices.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07766243",
	"publication_date": "2010-08-03",
	"application_number": "11687331",
	"application_date": "2007-03-16",
	"tags": null,
	"slug": "method-system-and-smart-card-reader-for-management-of-access-to-a-smart-card",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for providing map locations in user applications using URL strings",
	"summary": "",
	"abstract": "In one illustrative example, a method for use in mapping a location in a computer device includes the steps of receiving an electronic file or message which includes a hypertext link mapping indicator associated with a uniform resource locator (URL) string having a server address and latitude and longitude coordinates; receiving, through a user interface of the computer device, an end user selection of the hypertext link mapping indicator in the electronic file or message; and in response to the end user selection of the hypertext link mapping indicator: if a predetermined type of mapping application is provided in the computer device, invoking a mapping function of the mapping application to produce a map of a location corresponding to the latitude and longitude coordinates for visual display in a display of the computer device (e.g. based on received maplet data); and if the predetermined type of mapping application type is not provided in the computer device, requesting and receiving map data from a map coordinating server identified by the server address of the URL string to produce a map of the location for visual display in the display (e.g. based on a bitmap image). Advantageously, processing of the received hypertext link mapping indicator is handled differently depending on the type of device or whether a predetermined mapping application is installed in the device, so that optimal mapping functionality is provided for different device environments.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07720893",
	"publication_date": "2010-05-18",
	"application_number": "11483215",
	"application_date": "2006-07-07",
	"tags": null,
	"slug": "methods-and-apparatus-for-providing-map-locations-in-user-applications-using-url-strings",
	"match_type": "description"
},
{
	"name": "Schema updating for synchronizing databases connected by wireless interface",
	"summary": "",
	"abstract": "A method of updating a database, including data records, to accord with an updated schema. The method includes obtaining, at a portable electronic device, the updated schema associated with the database. If a field is deleted in the updated schema, the data records are updated by deleting the field from each of the data records. An update command is transmitted from the portable electronic device for updating the database schema for a corresponding backup database at a server.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07730028",
	"publication_date": "2010-06-01",
	"application_number": "11534239",
	"application_date": "2006-09-22",
	"tags": null,
	"slug": "schema-updating-for-synchronizing-databases-connected-by-wireless-interface",
	"match_type": "description"
},
{
	"name": "Smart card session optimization",
	"summary": "",
	"abstract": "A method is provided for facilitating communications between a computer device and a smart card reader having an associated smart card. The computer device includes a smart card resource manager and a smart card reader service, the smart card reader service acting as a relay for commands between the smart card resource manager and the smart card reader. The reader sends multiple commands based on the state of the smart card prior to receiving the commands.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07726568",
	"publication_date": "2010-06-01",
	"application_number": "11688935",
	"application_date": "2007-03-21",
	"tags": null,
	"slug": "smart-card-session-optimization",
	"match_type": "description"
},
{
	"name": "System and method for an extendable mobile communications device user interface",
	"summary": "",
	"abstract": "A system and method for an extendable software interface includes a software architecture for use in a mobile device having a processor and a memory device. The software architecture includes a set of first-order controller software instructions configured to interface the application program with a first-order data model, and a first-order data object stored in the memory device in the form of the first-order data model. The first-order data object includes a second-order data object. A second-order set of controller software instructions configured to interact with the second-order data object is also included in the software architecture.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07805729",
	"publication_date": "2010-09-28",
	"application_number": "11237010",
	"application_date": "2005-09-28",
	"tags": null,
	"slug": "system-and-method-for-an-extendable-mobile-communications-device-user-interface",
	"match_type": "description"
},
{
	"name": "System and method for automatically responding to a received communication",
	"summary": "",
	"abstract": "A device and a method of responding to a received interrupt event received by a communication device is provided. The method comprises accessing data associated with a calendar application and/or a location application to determine a current state of availability of a user of the device using data; determining whether a response action is to be sent in response to the event when the device is note available; and sending the response action. The device incorporates modules to perform the method.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07673055",
	"publication_date": "2010-03-02",
	"application_number": "11159118",
	"application_date": "2005-06-23",
	"tags": null,
	"slug": "system-and-method-for-automatically-responding-to-a-received-communication",
	"match_type": "description"
},
{
	"name": "System and method for checking digital certificate status",
	"summary": "",
	"abstract": "A method and system for handling digital certificate status checks are provided. Digital certificate status request data transmitted from a client system is received at a proxy system. The proxy system generates query data for the digital certificate status in response to receiving the digital certificate status request data. The query data is transmitted to a status provider system, and status data from the status provider system in response to the query data is received at the proxy system. Digital certificate status data based on the status data received is generated by the proxy system and transmitted to the client system.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07761703",
	"publication_date": "2010-07-20",
	"application_number": "10508114",
	"application_date": "2003-03-20",
	"tags": null,
	"slug": "system-and-method-for-checking-digital-certificate-status",
	"match_type": "description"
},
{
	"name": "System and method for filter content pushed to client device",
	"summary": "",
	"abstract": "A system and method are provided for filtering data be pushed from a server to a communication device in accordance with a set of predefined rules. Data to be pushed to the communication device is received at the server. A content filter engine is used to determine at the server whether the data meets criteria established by the set of predefined rules, the set of predefined rules having been established by a user of the communication device via a user interface. The data is transmitted to the communication device only if the data is not filtered by the set of predefine rules.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07752272",
	"publication_date": "2010-07-06",
	"application_number": "11032098",
	"application_date": "2005-01-11",
	"tags": null,
	"slug": "system-and-method-for-filter-content-pushed-to-client-device",
	"match_type": "description"
},
{
	"name": "System and method for notifying users of an event using alerts",
	"summary": "",
	"abstract": "An alert engine module receives an alert for an event in a generic communications format and delivers an alert for the event to a target address in a communications format that is preferred by a user based on the alert content. The generic format can be an e-mail message, such as a Simple Mail Transfer Protocol (SMTP) message. The alert engine can be operative to transform the alert based on a header and/or format of a target address.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07747288",
	"publication_date": "2010-06-29",
	"application_number": "11554318",
	"application_date": "2006-10-30",
	"tags": null,
	"slug": "system-and-method-for-notifying-users-of-an-event-using-alerts",
	"match_type": "description"
},
{
	"name": "System and method for processing encoded messages for exchange with a mobile data communication device",
	"summary": "",
	"abstract": "A system and method are provided for pre-processing encrypted and/or signed messages at a host system before the message is transmitted to a wireless mobile communication device. The message is received at the host system from a message sender. There is a determination as to whether any of the message receivers has a corresponding wireless mobile communication device. For each message receiver that has a corresponding wireless mobile communication device, the message is processed so as to modify the message with respect to one or more encryption and/or authentication aspects. The processed message is transmitted to a wireless mobile communication device that corresponds to the first message receiver. The system and method may include post-processing messages sent from a wireless mobile communications device to a host system. Authentication and/or encryption message processing is performed upon the message. The processed message may then be sent through the host system to one or more receivers.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07653815",
	"publication_date": "2010-01-26",
	"application_number": "10480514",
	"application_date": "2002-06-12",
	"tags": null,
	"slug": "system-and-method-for-processing-encoded-messages-for-exchange-with-a-mobile-data-communication-device",
	"match_type": "description"
},
{
	"name": "System and method for real time self-provisioning for a mobile communication device",
	"summary": "",
	"abstract": "A system and method of provisioning services for a mobile communication device are disclosed. A provisioning request including provisioning information and specifying a provisioning operation and a first communication service is prepared on the mobile communication device and sent to a provisioning system. Processing of the provisioning request is dependent upon whether or not a second communication service has been activated for the mobile communication device. If the mobile communication device is outside a coverage area of a wireless communication network when a provisioning request is prepared, the request is stored at the mobile communication device and sent to the provisioning system when the mobile communication device enters the coverage area. The provisioning system preferably manages service provisioning for multiple services, any of which may be hosted by different service providers.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07817988",
	"publication_date": "2010-10-19",
	"application_number": "10489433",
	"application_date": "2002-09-10",
	"tags": null,
	"slug": "system-and-method-for-real-time-selfprovisioning-for-a-mobile-communication-device",
	"match_type": "description"
},
{
	"name": "System and method for registering entities for code signing services",
	"summary": "",
	"abstract": "A system and method for registering entities for code signing services. The entities may be software application developers or other individuals or entities that wish to have applications digitally signed. Signing of the applications may be required in order to enable the applications to access sensitive APIs and associated resources of a computing device when the applications are executed on the computing device. In one embodiment, a method of registering entities for code signing services will comprise the step of transmitting at least some account data to the registering individual or entity using an out-of-band communication system. This provides added security that the individual or entity registering for a code signing service is who that individual or entity purports to be.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07797545",
	"publication_date": "2010-09-14",
	"application_number": "11237727",
	"application_date": "2005-09-29",
	"tags": null,
	"slug": "system-and-method-for-registering-entities-for-code-signing-services",
	"match_type": "description"
},
{
	"name": "System and method for supporting multiple certificate authorities on a mobile communication device",
	"summary": "",
	"abstract": "A system and method for supporting operations with multiple certification authorities (CAs) on a communication device. A common CA interface is provided between a plurality of secure communication applications and a plurality of CA-specific components, each of which interacts with a particular CA. A further common interface may also be provided for operatively coupling the secure communication applications to cryptographic components in the device.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07757079",
	"publication_date": "2010-07-13",
	"application_number": "11690977",
	"application_date": "2007-03-26",
	"tags": null,
	"slug": "system-and-method-for-supporting-multiple-certificate-authorities-on-a-mobile-communication-device",
	"match_type": "description"
},
{
	"name": "System and method of presenting entities of standard device applications in wireless devices",
	"summary": "",
	"abstract": "A data entity presentation system and method of presenting data entities of standard device applications in wireless devices are provided. The data entity presentation system comprises an application runtime environment module for hosting component-based applications on a device, an integrated development environment for hosting component definitions and a device repository for storing device data and device-specific application programming interfaces. The method comprises the steps of hosting component-based applications on a device, hosting component definitions and storing device data and device-specific application programming interfaces.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07835726",
	"publication_date": "2010-11-16",
	"application_number": "11405510",
	"application_date": "2006-04-18",
	"tags": null,
	"slug": "system-and-method-of-presenting-entities-of-standard-device-applications-in-wireless-devices",
	"match_type": "abstract"
},
{
	"name": "System and method of representing data entities of standard device applications as built-in components",
	"summary": "",
	"abstract": "A system and method for developing a standard data component for coupling with a plurality of components of a component-based application to access a stored data entity of a non-component-based native application, the applications for executing in a runtime environment of a device. The system and method comprises an application module configured for storing a model of the component-based application including features of data and message component definitions expressed in a structured definition language. Also included is a native module configured for storing properties of the data entity of the native application and a standard module for generating the standard data component definition based on the features of the component-based application and the properties of the data entity of the native application. The standard data component definition is expressed in the structured definition language.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07805735",
	"publication_date": "2010-09-28",
	"application_number": "11350098",
	"application_date": "2006-02-09",
	"tags": null,
	"slug": "system-and-method-of-representing-data-entities-of-standard-device-applications-as-builtin-components",
	"match_type": "description"
},
{
	"name": "System and method of secure authentication information distribution",
	"summary": "",
	"abstract": "A system and method of distributing authentication information for remotely accessing a computer resource. A request for authentication information, including identity information, is received from a user of a remote device. When the user is authenticated based on the identity information, requested authentication information is retrieved and returned to the remote device. The authentication information, or information generated from the authentication information, is then used for remotely accessing the computer resource.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07809953",
	"publication_date": "2010-10-05",
	"application_number": "10730183",
	"application_date": "2003-12-08",
	"tags": null,
	"slug": "system-and-method-of-secure-authentication-information-distribution",
	"match_type": "description"
},
{
	"name": "System and method of skinning themes",
	"summary": "",
	"abstract": "A media engine for creating a graphical interface for an application on a device is disclosed. The media engine comprises an interaction interface for notifying the media engine of changes to the application, a renderer for rendering the graphical interface, a parser for parsing, from a template file, template information for controlling how the renderer renders the graphical interface, and a layout manager for optionally controlling the display of template information.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07840901",
	"publication_date": "2010-11-23",
	"application_number": "11748751",
	"application_date": "2007-05-15",
	"tags": null,
	"slug": "system-and-method-of-skinning-themes",
	"match_type": "description"
},
{
	"name": "Transparent virtual machine for mobile applications",
	"summary": "",
	"abstract": "The inclusion of metadata within an application description file allows a virtual machine to create an application descriptor file that may be registered with the mobile device operating system so that an icon associated with the application description file may be displayed in the main ribbon. Execution of an application defined by the application definition file may then be initiated by the selection, by the user, of the icon that is associated with the application definition file. This improves over the situation wherein execution of the application defined by the application definition file would require a selection of the runtime environment for the application and then the selection of the application.",
	"url": null,
	"owner": "Research in Motion Limited",
	"publication_number": "07734583",
	"publication_date": "2010-06-08",
	"application_number": "11405492",
	"application_date": "2006-04-18",
	"tags": null,
	"slug": "transparent-virtual-machine-for-mobile-applications",
	"match_type": "description"
},
{
	"name": "Wireless communication device use of application server applications",
	"summary": "",
	"abstract": "To enable use of an application on an application server at a mobile communication device, at a transaction server, a message received from the mobile is pushed out to the application. Any return messages is routed back to the mobile. The transaction server may use a queue to store all messages destined to a given application and attempt to push all messages on a given queue on receipt of a further message for the queue.",
	"url": null,
	"owner": "Research In Motion Limited",
	"publication_number": "07668937",
	"publication_date": "2010-02-23",
	"application_number": "10537430",
	"application_date": "2005-02-22",
	"tags": null,
	"slug": "wireless-communication-device-use-of-application-server-applications",
	"match_type": "description"
},
{
	"name": "Determining the geographic location of a network device",
	"summary": "",
	"abstract": "Provided are techniques and apparatuses for determining the geographic location of a node on a network. In a representative embodiment, a data packet is received over the network from a second node, the data packet including a network identifier for the second node and a Time-To-Live (TTL) field that has a value, with the value of the TTL field for the data packet indicating a maximum additional number of hops that could have been made by the data packet. A probe packet addressed to the network identifier for the second node is then sent, the probe packet also including a TTL field. The initial value for the TTL field of the probe packet is set based on the value for the TTL field of the data packet.",
	"url": null,
	"owner": "Resource Consortium Limited",
	"publication_number": "07673032",
	"publication_date": "2010-03-02",
	"application_number": "11678581",
	"application_date": "2007-02-24",
	"tags": null,
	"slug": "determining-the-geographic-location-of-a-network-device",
	"match_type": "description"
},
{
	"name": "Asynchronous hypertext messaging",
	"summary": "",
	"abstract": "An asynchronous hypertext messaging system and method are disclosed. The system and method use existing hypertext transfer protocols and is capable of transmitting real-time asynchronous data between server and client regardless of firewalls or proxy servers implemented at the client or the server. In a communication system comprising a client and server interconnected by an internet, initial authentication is performed initially between the server and the client. A secure log in is performed by the client with the server in conjunction with a possible java applet download. The communication server then initiates a multiplexed virtual connection between the server and the client and transmission of asynchronous real-time data can occur over the virtual connection. The virtual connection is periodically refreshed by a request issued from the java applet.",
	"url": null,
	"owner": "Reuters America, Inc.",
	"publication_number": "07734791",
	"publication_date": "2010-06-08",
	"application_number": "11734964",
	"application_date": "2007-04-13",
	"tags": null,
	"slug": "asynchronous-hypertext-messaging",
	"match_type": "description"
},
{
	"name": "Advanced, self-balancing video multiplexer system",
	"summary": "",
	"abstract": "An advanced video multiplexer system designed and optimized for next generation on-demand video distribution is described. The system optimizes identifies a multi-program transport stream best able to accommodate new seesions based upon Quality of Service (QoS) and QAM utilization ratios. MPTS channels are rebalanced via re-grouping and transrating as necessary to optimize bandwidth utilization. Multiple video formats are supported via built-in transcoding. The multiplexer manages encryption resources and supports new sessions using previously allocated encryption resources where possible. Sessions can be grouped into encryption channels either by using a single authorization tier per channel policy, or by requiring all clients of the group to be in physically separated service groups. Encryption channels can be released when a channel no longer serves any clients or when one or more other channels that have been assigned the same entitlement can accommodate any remaining clients.",
	"url": null,
	"owner": "RGB Networks, Inc.",
	"publication_number": "07804856",
	"publication_date": "2010-09-28",
	"application_number": "11123677",
	"application_date": "2005-05-06",
	"tags": null,
	"slug": "advanced-selfbalancing-video-multiplexer-system",
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to a resource manager",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if urgent service is needed by the device. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information to the resource administrator using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07801977",
	"publication_date": "2010-09-21",
	"application_number": "11935161",
	"application_date": "2007-11-05",
	"tags": null,
	"slug": "method-and-system-for-remote-diagnostic-control-and-information-collection-based-on-various-communication-modes-for-sending-messages-to-a-resource-manager",
	"match_type": "description"
},
{
	"name": "Method and system for remote diagnostic, control and information collection based on various communication modes for sending messages to users",
	"summary": "",
	"abstract": "A method, system, and program product for communicating with machines and end users connected to a network. Information sent to or from the machines is transmitted using electronic mail or a via a direct connection. The electronic mail may be transmitted over the Internet to a service center or from a service center to a resource administrator, but also may remain within a local or wide area network for transmission between a machine and an end user or a resource administrator. E-mail messages may be transmitted from a computer which is attached to a device which is being monitored or controlled and include information regarding the status, usage or capabilities of the attached device. The device may send status messages and usage information of the device by an end user to either a resource administrator or to a service center on the Internet through a firewall. The message may be sent directly to the resource administrator station if an urgent need of the end user is indicated, so that a communication may be sent either directly to the end user or to a device driver so that the device driver may communicate the message to the end user. For example, an end user may have exceeded a predetermined limit of resource usage, and needs to be informed. For routine information, the service center may manage all the resources on an intranet and may send predetermined types of information such as summary information regarding usage of network resources to the end user using e-mail.",
	"url": null,
	"owner": "Ricoh Co., Ltd.",
	"publication_number": "07689691",
	"publication_date": "2010-03-30",
	"application_number": "12028281",
	"application_date": "2008-02-08",
	"tags": null,
	"slug": "method-and-system-for-remote-diagnostic-control-and-information-collection-based-on-various-communication-modes-for-sending-messages-to-users",
	"match_type": "description"
},
{
	"name": "Method and system of remote position reporting device",
	"summary": "",
	"abstract": "A remote position monitoring system, method, and computer-program product using a global position satellite receiver and information from at least two global position satellites to determine a position of a mobile object with the global position satellite receiver and report via Internet the position of the mobile object to a recipient in search of the mobile object. A remote position reporting device of the monitoring system can be part of or attached to any mobile object such as a child, a skier, a car, and expensive items. The remote position reporting device includes a global positioning system (GPS) receiver, monitoring software and an Internet access module. The monitoring software (e.g., a dynamic link library) supports multiple data formats and multiple protocols to communicated the position information. The GPS receiver provides the monitoring software with position information at prescribed times, and the monitoring software records the position information. The monitoring software communicates the position information at prescribed times to a desired party through the Internet access module.",
	"url": null,
	"owner": "Ricoh Company Limited",
	"publication_number": "07650233",
	"publication_date": "2010-01-19",
	"application_number": "11182889",
	"application_date": "2005-07-18",
	"tags": null,
	"slug": "method-and-system-of-remote-position-reporting-device",
	"match_type": "description"
},
{
	"name": "Image forming apparatus, image forming method, and computer product",
	"summary": "",
	"abstract": "An image forming apparatus includes a rendering processing unit that represents position information of each vertex of a plurality of triangles forming a figure in a first image data with coordinate values in a first axis in a depth direction, a second axis perpendicular to the first axis, and a third axis perpendicular to both the first axis and the second axis, obtains the position information and color information on each vertex of the triangles, and performs the rendering process on the first image data to produce a second image data, a hidden-surface processing unit that performs a hidden-surface process on the second image data to produce a third image data, and an image processing unit that performs an image process on the third image data.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07701594",
	"publication_date": "2010-04-20",
	"application_number": "10942904",
	"application_date": "2004-09-17",
	"tags": null,
	"slug": "image-forming-apparatus-image-forming-method-and-computer-product",
	"match_type": "description"
},
{
	"name": "Image processing device and method of controlling the image processing device which estimates a state-transition sequence for a USB driver",
	"summary": "",
	"abstract": "An object of the invention is to provide an image processing device having a sub-system performing a power saving control to support the use of a USB device or provided to allow the supporting of the use of a USB device, in which operational mismatching which may occur at a start of a the power saving mode between the USB device and a USB device driver provided in the main system of the image processing device can be effectively suppressed. A state of the USB device driver before the mode of the image processing device is changed to the power saving mode is held, and, when the state of the USB device acquired after the mode of the image processing device returns from the power saving mode differs from the held state of the USB device driver, an estimated state-transition sequence for changing a state of the USB device driver is determined by an ACPI driver based on a result of comparison of the held state of the USB device driver and the acquired state of the USB device, thereby changing the state of the USB device driver according to the estimated state-transition sequence.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07765413",
	"publication_date": "2010-07-27",
	"application_number": "11663955",
	"application_date": "2006-07-26",
	"tags": null,
	"slug": "image-processing-device-and-method-of-controlling-the-image-processing-device-which-estimates-a-statetransition-sequence-for-a-usb-driver",
	"match_type": "description"
},
{
	"name": "Print information processing apparatus",
	"summary": "",
	"abstract": "A print information processing apparatus for performing a printing process is disclosed. The print information processing apparatus is connected to a printer via a network and includes an interface configured to connect a removable recording medium; a data storage unit configured to store encrypted data; a decryption unit configured to read decryption information used to decrypt the encrypted data from the removable recording medium connected to the interface and to decrypt the encrypted data by using the decryption information. In the print information processing apparatus, the decryption unit permits the printing process of the encrypted data only when the removable recording medium is connected to the interface.",
	"url": null,
	"owner": "Ricoh Company, Ltd.",
	"publication_number": "07835024",
	"publication_date": "2010-11-16",
	"application_number": "11527593",
	"application_date": "2006-09-27",
	"tags": null,
	"slug": "print-information-processing-apparatus",
	"match_type": "description"
},
{
	"name": "Content delivery for client-server protocols with user affinities using connection end-point proxies",
	"summary": "",
	"abstract": "In a network supporting transactions between clients and servers over a network path having operating characteristics to overcome, data is transported to overcome the operating characteristics using user affinities and dynamic user location information to selectively preload data, or representations, signatures, segments, etc. of data, in order to overcome the one or more operating characteristic. Examples of operating characteristics to overcome include bandwidth limitations, errors and latency. The dynamic location information can be stored in data structures accessible by agents of a data server and the data structures are populated based on user activities with respect to proxies associated with user locations, or the dynamic location information can be obtained implicitly as proxies maintain connections after termination by clients and the use of those maintained connections for preloading of data for the users associated with those clients. The data being preloaded can be protocol-specific data or protocol-independent data.",
	"url": null,
	"owner": "Riverbed Technology",
	"publication_number": "07650416",
	"publication_date": "2010-01-19",
	"application_number": "10640459",
	"application_date": "2003-08-12",
	"tags": null,
	"slug": "content-delivery-for-clientserver-protocols-with-user-affinities-using-connection-endpoint-proxies",
	"match_type": "description"
},
{
	"name": "Interactive manual, system and method for vehicles and other complex equipment",
	"summary": "",
	"abstract": "A method and system of providing an interactive manual, including a speech engine to receive and process speech from a user, convert the speech into a word sequence, and identify meaning structures from the word sequence, a structured manual including information related to an operation of a device, a visual model to relate visual representation of the information, a dialog management arrangement to interpret the meaning structures in a context and to extract pertinent information and the visual representation from the structured manual and the visual model, and an output arrangement to output the information and visual representation.",
	"url": null,
	"owner": "Robert Bosch GmbH",
	"publication_number": "07720680",
	"publication_date": "2010-05-18",
	"application_number": "10871249",
	"application_date": "2004-06-17",
	"tags": null,
	"slug": "interactive-manual-system-and-method-for-vehicles-and-other-complex-equipment",
	"match_type": "description"
},
{
	"name": "Controlling display screen legibility",
	"summary": "",
	"abstract": "Computer screen legibility is controlled. A logically topmost software window of a particular color and of a certain transparency is created. Additionally, a pattern is used to further control legibility. The window allows screen objects logically beneath it on a z-axis to be viewed and manipulated and the window reduces a contrast of screen objects logically beneath it on the z-axis.",
	"url": null,
	"owner": "Rocket Software, Inc.",
	"publication_number": "07644369",
	"publication_date": "2010-01-05",
	"application_number": "11155395",
	"application_date": "2005-06-17",
	"tags": null,
	"slug": "controlling-display-screen-legibility",
	"match_type": "description"
},
{
	"name": "Automation system unified data access for disparate data sources",
	"summary": "",
	"abstract": "Historical and real-time data access is leveraged to provide unified data access for interacting with manufacturing process entities such as, for example, process overview displays, charting systems, reporting systems, logging systems, and/or recipe systems and the like. The unified data, for example, allows for playback of historical process overviews for a user selected period of time. In one instance, a u201cVCR likeu201d user interface can be employed to allow u2018rewindingu2019 and u2018replayingu2019 of a historical process overview. This facilitates in proper monitoring and/or troubleshooting of manufacturing processes. The unified availability of past and current data also enables reporting systems to provide u201clivingu201d reports that automatically update with real-time data. This can allow for efficient comparison of current data with historical data for a given manufacturing process.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07650198",
	"publication_date": "2010-01-19",
	"application_number": "11241534",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "automation-system-unified-data-access-for-disparate-data-sources",
	"match_type": "description"
},
{
	"name": "Services for industrial control systems",
	"summary": "",
	"abstract": "A message component for an industrial automation system is provided. This includes a service component that is employed to locate functionality of applications associated with a control system message bus. An operations component exchanges messages with the message bus, where the service component and the operations component form an external view to facilitate communications between the applications.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07676279",
	"publication_date": "2010-03-09",
	"application_number": "11536827",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "services-for-industrial-control-systems",
	"match_type": "description"
},
{
	"name": "Systems and methods providing distributed management of electronic signatures in industrial automation systems",
	"summary": "",
	"abstract": "The subject invention relates to a system and methodology facilitating automated manufacturing processes in a regulated industrial controller environment, wherein a centralized signature component generates signature events to remote locations and validates signatures required to satisfy such events. A system for distributed signature processing is provided. The system includes a signature component to determine when to generate one or more electronic signature events and to validate electronic signatures that have been received from various local or remote locations. An application layer distributes interface components to the locations in order to facilitate generation of the electronic signature events and validation of the electronic signatures.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07861085",
	"publication_date": "2010-12-28",
	"application_number": "10952984",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": "systems-and-methods-providing-distributed-management-of-electronic-signatures-in-industrial-automation-systems",
	"match_type": "description"
},
{
	"name": "Systems and methods that employ an extensible architecture to define configuration functionality",
	"summary": "",
	"abstract": "The subject invention relates to systems and methods that generate modules profiles for industrial control modules (e.g., I/O, scanners, adapters . . . ). A module profile generally includes a set of components, interfaces and/or plug-ins that determine possible configurations for a module. Such entities are packaged in an XML based format to provide a dynamic module profile, wherein a definition type can be dynamically changed. Development and/or configuration of a module can be achieved through an industrial software development environment via a graphical hierarchical representation of configuration options defined in the module profile. In addition, the module profile provides for separately installable/release independent utilization via XML and COM based interfaces, wherein an end-user does not have to wait for a new software release in order to add a new module.",
	"url": null,
	"owner": "Rockwell Automation Technologies, Inc.",
	"publication_number": "07861223",
	"publication_date": "2010-12-28",
	"application_number": "10951193",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": "systems-and-methods-that-employ-an-extensible-architecture-to-define-configuration-functionality",
	"match_type": "description"
},
{
	"name": "Cryptographic engine abstraction layer for a software defined radio",
	"summary": "",
	"abstract": "A radio system comprises radio frequency receiving electronics and digital signal processing electronics coupled to the radio frequency receiving electronics. The radio system is characterized by security electronics coupled to the digital signal processing electronics. The security electronics comprise a cryptographic subsystem. The cryptographic subsystem comprises cryptographic equipment software, core cryptographic algorithms and a cryptographic engine abstraction layer hardware each of which is stacked with but separate from one another. The cryptographic engine abstraction layer hardware has been designed for the specific radio system design.",
	"url": null,
	"owner": "Rockwell Collins, Inc.",
	"publication_number": "07835523",
	"publication_date": "2010-11-16",
	"application_number": "11213399",
	"application_date": "2005-08-26",
	"tags": null,
	"slug": "cryptographic-engine-abstraction-layer-for-a-software-defined-radio",
	"match_type": "description"
},
{
	"name": "Portable communications device with enhanced security",
	"summary": "",
	"abstract": "A portable communications device adapted to provide communications security and user identification, and authentication. In one embodiment, the device is useful with an untrusted network, and comprises security apparatus adapted to create associations with one or more security devices on the network. Traffic between the associated devices may be encrypted and residue-protected for e.g., data confidentiality and integrity protection. In one variant, the security apparatus comprises a software entity disposed at least partly within the software stack of a host. A security card may also be used as part of the security apparatus. The portable device may be untrusted (e.g., have an untrusted operating system) and also be physically unsecure. In one variant, the security apparatus is also agnostic to the portable device with which it is used.",
	"url": null,
	"owner": "Round Rock Research, LLC",
	"publication_number": "07831722",
	"publication_date": "2010-11-09",
	"application_number": "11776406",
	"application_date": "2007-07-11",
	"tags": null,
	"slug": "portable-communications-device-with-enhanced-security",
	"match_type": "description"
},
{
	"name": "Portable computerized device with network security",
	"summary": "",
	"abstract": "A portable computerized device useful within a network and adapted to provide communication security. In one embodiment, the network comprises an untrusted network, and the portable device comprises network security apparatus adapted to create associations with other network security devices on the network. Traffic between the associated devices may be encrypted for e.g., data confidentiality and integrity protection. In one variant, the network security apparatus comprises a software entity disposed at least partly within the software stack of a host computer. A card-like hardware structure may also be used as part of the security apparatus. The host computer may be untrusted (e.g., have an untrusted operating system).",
	"url": null,
	"owner": "Round Rock Research, LLC",
	"publication_number": "07844706",
	"publication_date": "2010-11-30",
	"application_number": "11776461",
	"application_date": "2007-07-11",
	"tags": null,
	"slug": "portable-computerized-device-with-network-security",
	"match_type": "description"
},
{
	"name": "Remote generation and distribution of command programs for programmable devices",
	"summary": "",
	"abstract": "A system for controlling a motion device. A motion control system comprises a motion control device, and a first user is associated with the motion control system. An output system is arranged to generate motion signals that may be perceived by the first user. A motion server system comprises a plurality of motion scripts associated with messages to be transmitted to the first user and a motion program web page. A processing system comprises a browser program compatible with the motion program web page. A communications system transfers data between the various systems. A second user controls the server system to form a motion message corresponding to a desired motion signal based on the at least one motion script stored by the server system. The motion control system causes the output system to generate the desired motion signal based on the motion message.",
	"url": null,
	"owner": "Roy-G-Biv Corporation",
	"publication_number": "07853645",
	"publication_date": "2010-12-14",
	"application_number": "10966848",
	"application_date": "2004-10-14",
	"tags": null,
	"slug": "remote-generation-and-distribution-of-command-programs-for-programmable-devices",
	"match_type": "description"
},
{
	"name": "System and methods for avoiding base address collisions",
	"summary": "",
	"abstract": "Processes are monitored as components are loaded into memory. Relocation of a component to an alternate base address instead of its preferred base address, causes an alternate component to be created corresponding to the relocated component. The alternate component is a copy of the relocated component, but the preferred base address of the alternate component is reset to be the alternate base address of the relocated component. Additional alternate components may be created for each relocated component, with each additional alternate component being optimized in a different manner. Alternate components may be implemented as alternate data stream of the corresponding relocated components. In response to subsequent requests to load a selected component into memory, it is determined whether the selected component has at least one corresponding alternate component. If so, one of the corresponding alternate components is loaded into memory instead of the selected component.",
	"url": null,
	"owner": "RTO Software, Inc.",
	"publication_number": "07694098",
	"publication_date": "2010-04-06",
	"application_number": "12206780",
	"application_date": "2008-09-09",
	"tags": null,
	"slug": "system-and-methods-for-avoiding-base-address-collisions",
	"match_type": "description"
},
{
	"name": "License management system and method with license balancing",
	"summary": "",
	"abstract": "A system for balancing a distribution of allocations for protected software over a communication network is disclosed. The system is comprised of at least one client computer and a pool of license servers coupled to the communication network. The client computers request authorizations to use the protected software, while a distribution of allocations is managed among the pool of servers for tracking and managing available allocations for using the protected software. One license server in the pool is designated as the current leader server. When a particular license server does not have a selectable minimum amount of available allocations, the current leader server re-assigns, where possible, the allocations within the pool by updating memory containing the distribution tables of license servers in the pool, to give at least one additional allocation to the particular license server.",
	"url": null,
	"owner": "SafeNet, Inc.",
	"publication_number": "07716348",
	"publication_date": "2010-05-11",
	"application_number": "09648720",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": "license-management-system-and-method-with-license-balancing",
	"match_type": "description"
},
{
	"name": "Application identity design",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, implementing and using techniques for providing user credentials over a network to a remote computer application. User credentials for the remote computer application are stored in a central repository that is accessible through the network. A request is sent to a service to perform, on behalf of a user, a particular task involving the remote computer application. It is determined whether the service has been granted permission to act on behalf of the user with respect to the remote computer application. When the service has permission to act on behalf of the user, the service is used to retrieve the user's credentials for the remote computer application from the central repository and to supply the retrieved user credentials to the remote computer application.",
	"url": null,
	"owner": "Salesforce.com Inc.",
	"publication_number": "07721328",
	"publication_date": "2010-05-18",
	"application_number": "11012639",
	"application_date": "2004-12-14",
	"tags": null,
	"slug": "application-identity-design",
	"match_type": "description"
},
{
	"name": "Providing on-demand access to services in a wide area network",
	"summary": "",
	"abstract": "An integration services network is described which is operable to facilitate access to a composite service by a plurality of users having associated client machines. Each of the users is associated with one of a plurality of independent enterprises. At least one data store has a directory stored therein which maps an identity for each of the users to a policy framework which defines access information relating to a plurality of services. At least one computing device is operable to set up the composite service by integrating operation of the plurality of services. The plurality of services are associated with and controlled by a plurality of independent service providers. The at least one computing device is further operable to connect with the client machines and each of the services, and to selectively facilitate interaction among the client machines and the services with reference to the directory and the policy framework, thereby enabling each of the users to access the plurality of services as an integrated solution.",
	"url": null,
	"owner": "Salesforce.com, Inc.",
	"publication_number": "07725605",
	"publication_date": "2010-05-25",
	"application_number": "11016566",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": "providing-ondemand-access-to-services-in-a-wide-area-network",
	"match_type": "description"
},
{
	"name": "System and method for mapping of services",
	"summary": "",
	"abstract": "A system and method for enabling the interchange of enterprise data through an open platform is disclosed. This open platform can be based on a standardized interface that enables parties to easily connect to and use the network. Services operating as senders, recipients, and in-transit parties can therefore leverage a framework that overlays a public network.",
	"url": null,
	"owner": "Salesforce.com, Inc.",
	"publication_number": "07788399",
	"publication_date": "2010-08-31",
	"application_number": "09820964",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": "system-and-method-for-mapping-of-services",
	"match_type": "description"
},
{
	"name": "System and method for routing messages between applications",
	"summary": "",
	"abstract": "A system and method for enabling the interchange of enterprise data through an open platform is disclosed. This open platform can be based on a standardized interface that enables parties to easily connect to and use the network. Services operating as senders, recipients, and in-transit parties can therefore leverage a framework that overlays a public network.",
	"url": null,
	"owner": "salesforce.com, inc.",
	"publication_number": "07689711",
	"publication_date": "2010-03-30",
	"application_number": "09820966",
	"application_date": "2001-03-30",
	"tags": null,
	"slug": "system-and-method-for-routing-messages-between-applications",
	"match_type": "description"
},
{
	"name": "Techniques for providing connections to services in a network environment",
	"summary": "",
	"abstract": "Methods and apparatus for facilitating consumption of services via a services network are described. Access is provided to a services directory which identifies a plurality of services and at least one connector for facilitating consumption of each of the services via the network. Each connector is operable to mediate communication protocol and business policy differences between a first network end point associated with the corresponding service and a second network end point associated with a consumer of the service. For each of selected ones of the connectors, information accessible via the services directory is provided regarding how to use the connector to consume the corresponding service. For each of selected ones of the services, access to a connector design process is provided via the services directory. The connector design process is operable to facilitate creation of a new connector for the corresponding service, and to specify at least one business process for mediating the business policy differences.",
	"url": null,
	"owner": "Salesforce.com, Inc.",
	"publication_number": "07802007",
	"publication_date": "2010-09-21",
	"application_number": "10849602",
	"application_date": "2004-05-19",
	"tags": null,
	"slug": "techniques-for-providing-connections-to-services-in-a-network-environment",
	"match_type": "description"
},
{
	"name": "Apparatus and method for providing remote user interface service",
	"summary": "",
	"abstract": "An apparatus and method for providing Remote User Interface (RUI) service are provided. The apparatus includes a service browser module and a virtual RUI server module. The service browser module communicates with a service registry, which is located outside a home network, and provides a service search User Interface (UI) to allow an RUI client, which is located inside a home network, to search for services that are present outside the home network. The virtual RUI server module is responsible for intermediation so that the services present outside the home network can be used through a service UI.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07743042",
	"publication_date": "2010-06-22",
	"application_number": "11634877",
	"application_date": "2006-12-07",
	"tags": null,
	"slug": "apparatus-and-method-for-providing-remote-user-interface-service",
	"match_type": "description"
},
{
	"name": "Apparatus for providing inter-processor communication using TCP/IP in communication system",
	"summary": "",
	"abstract": "An apparatus for providing inter-processor communication (IPC) using transmission control protocol/Internet protocol (TCP/IP) in a communication system, including: an Ethernet interface module for providing an interface between an Ethernet device driver and an interprocessor communication (IPC) module, determining a type of a received message, transmitting the received message to a message process module if the type of the received message is non-frame data, and queuing the received message in a corresponding mailbox corresponding to frame data if the type of the received message is the frame data; a message process module for queuing the non-frame data received through the Ethernet interface module in a corresponding mailbox; and a common application programming interface (API) module for providing an interface for basically performing data transmission and reception through the message process module, mailbox management, interprocessor communication (IPC) buffer management and an interprocessor communication (IPC) control function.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07774507",
	"publication_date": "2010-08-10",
	"application_number": "10645522",
	"application_date": "2003-08-22",
	"tags": null,
	"slug": "apparatus-for-providing-interprocessor-communication-using-tcpip-in-communication-system",
	"match_type": "abstract"
},
{
	"name": "Device driver including a flash memory file system and method thereof and a flash memory device and method thereof",
	"summary": "",
	"abstract": "A device driver including a flash memory file system and method thereof and a flash memory device and method thereof are provided. The example device driver may include a flash memory file system configured to receive data scheduled to be written into the flash memory device, the flash memory file system selecting one of a first data storage area and a second data storage area within the flash memory device to write the received data to based upon an expected frequency of updating for the received data, the first data storage area configured to store data which is expected to be updated more often than the second data storage area. The example flash memory device may include a first data storage area configured to store first data, the first data having a first expected frequency for updating and a second data storage area configured to store second data, the second data having a second expected frequency of updating, the first expected frequency being higher than the second expected frequency.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07844772",
	"publication_date": "2010-11-30",
	"application_number": "11605265",
	"application_date": "2006-11-29",
	"tags": null,
	"slug": "device-driver-including-a-flash-memory-file-system-and-method-thereof-and-a-flash-memory-device-and-method-thereof",
	"match_type": "description"
},
{
	"name": "Keyword generation and management for selection of customized content for a user device",
	"summary": "",
	"abstract": "A system for selecting customized content for a user device is provided. The system includes a processor and an information extractor that, when executed by the processor, is configured to obtain at least one keyword from analyzing data entered into the user device. The system includes a behavioral engine that, when executed by the processor, is configured to obtain at least one keyword from analyzing a behavior of a user of the user device. The system also includes a keyword manager that, when executed by the processor, is configured to receive at least two keywords from the information extractor and/or the behavioral engine and to analyze the at least two keywords to obtain a prioritized list of keywords and to provide the prioritized list of keywords to a component that is configured to select customized content for the user device based on the prioritized list of keywords.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07761408",
	"publication_date": "2010-07-20",
	"application_number": "11844194",
	"application_date": "2007-08-23",
	"tags": null,
	"slug": "keyword-generation-and-management-for-selection-of-customized-content-for-a-user-device",
	"match_type": "description"
},
{
	"name": "Method and apparatus for reproducing AV data in interactive mode, and information storage medium thereof",
	"summary": "",
	"abstract": "A method and apparatus for reproducing audio/visual data in an Enhanced Navigation mode, and an information storage medium thereof. The information storage medium stores audio/visual data, and at least one Enhanced Navigation application including at least one Enhanced Navigation file, the Enhanced Navigation file being reproduced together with the audio/visual data, wherein the Enhanced Navigation application includes a loading information file, which includes preload information specifying the location of the Enhanced Navigation file to be buffered before reproduction of the Enhanced Navigation application, as the Enhanced Navigation file. Accordingly, it is possible to guarantee seamless reproduction of audio/visual data for an Enhanced Navigation application.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07650063",
	"publication_date": "2010-01-19",
	"application_number": "10897080",
	"application_date": "2004-07-23",
	"tags": null,
	"slug": "method-and-apparatus-for-reproducing-av-data-in-interactive-mode-and-information-storage-medium-thereof",
	"match_type": "description"
},
{
	"name": "Method and device for managing images stored in a plurality of storage media included in or connected to image forming apparatus",
	"summary": "",
	"abstract": "A method and device for managing images stored in a plurality of storage media by using a display unit included in an image forming apparatus to prints the images are provided. The method includes: displaying identification names of a plurality of storage media included in or connected to the image forming apparatus; and linking information on images stored in the plurality of storage media with the identification names of the plurality of storage media and displaying the information on images stored in the plurality of storage media. Accordingly, the identification names of the plurality of storage media included in or connected to the image forming apparatus are displayed by linking information on images with the identification names in order to manage the images stored in the storage media. Therefore, a user can conveniently and promptly recognize and manage the storage media and the images stored in the storage media. In addition, since the plurality of storage media are controlled concurrently, image data can be promptly read from or written to the storage media, and data transfer speed between the storage media can be increased.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07701607",
	"publication_date": "2010-04-20",
	"application_number": "11528259",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "method-and-device-for-managing-images-stored-in-a-plurality-of-storage-media-included-in-or-connected-to-image-forming-apparatus",
	"match_type": "description"
},
{
	"name": "Network switch and related method using integrated service logic objects to handle service requests",
	"summary": "",
	"abstract": "A telecommunication switch for operating in a CS-2 intelligent network architecture. The telecommunication switch comprises: 1) integrated service logic (ISL) objects that perform requested services; and 2) a service control function access manager object that receives a first service request and determines if one of the ISL objects can perform a first requested service associated with the first service request. The service control function access manager object, in response to a determination that none of the ISL objects is capable of performing the first requested service, transmits the first service request to a service control function object external to the telecommunication switch. The service control function access manager object, in response to a determination that a first one of the ISL objects is capable of performing the first requested service, causes the first ISL object to perform the first requested service.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07769158",
	"publication_date": "2010-08-03",
	"application_number": "10919978",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": "network-switch-and-related-method-using-integrated-service-logic-objects-to-handle-service-requests",
	"match_type": "description"
},
{
	"name": "System and method for a pseudo dynamic link library (DLL) linker for a monolithic image in a wireless device",
	"summary": "",
	"abstract": "The present disclosure relates generally to a system and method for a pseudo DLL linker. In one example, the method includes identifying a plurality of components forming an image and identifying all symbols exportable from each component and all symbols imported by each component from another component. A redirection mechanism is built containing an address of each symbol exported by a component that is imported by another component, and each component is modified to alter each direct reference to a symbol associated with another component to a reference to the redirection mechanism. A linker is called to link a final image based on the modified components.",
	"url": null,
	"owner": "Samsung Electronics Co., Ltd.",
	"publication_number": "07735075",
	"publication_date": "2010-06-08",
	"application_number": "11334600",
	"application_date": "2006-01-18",
	"tags": null,
	"slug": "system-and-method-for-a-pseudo-dynamic-link-library-dll-linker-for-a-monolithic-image-in-a-wireless-device",
	"match_type": "description"
},
{
	"name": "Method for interacting with a memory device in cryptographic operations",
	"summary": "",
	"abstract": "A method for interacting with a memory device is provided. In this method, a cryptographic communication application is registered to be associated with a protocol type in a web browser. A message encapsulated in the protocol type from the web browser is received and thereafter transmitted to the memory device. Here, the message is associated with a cryptographic operation.",
	"url": null,
	"owner": "SanDisk Corporation",
	"publication_number": "07743258",
	"publication_date": "2010-06-22",
	"application_number": "11511766",
	"application_date": "2006-08-28",
	"tags": null,
	"slug": "method-for-interacting-with-a-memory-device-in-cryptographic-operations",
	"match_type": "description"
},
{
	"name": "Portable mass storage device with virtual machine activation",
	"summary": "",
	"abstract": "A portable mass storage device is used to store large files such as digital pictures, movies and music. The mass storage device has firmware with security mechanisms that limit access to read write operations to ensure reliable operation of the device to prevent unwanted copying or storing of secure content such a copyrighted material. Although the security mechanisms generally limit access, the firmware is operable to work with a virtual machine and allows the virtual machine to access the secure content and work in conjunction with the firmware to read and write data to the mass storage memory, if the virtual machine is present. The virtual machine is either loaded but not activated at the time of manufacture, or is downloaded and activated post manufacture. Any royalty for the virtual machine is paid for only if and when the virtual machine is both present and activated in the device.",
	"url": null,
	"owner": "SanDisk Corporation",
	"publication_number": "07725614",
	"publication_date": "2010-05-25",
	"application_number": "11463256",
	"application_date": "2006-08-08",
	"tags": null,
	"slug": "portable-mass-storage-device-with-virtual-machine-activation",
	"match_type": "description"
},
{
	"name": "Management of internal operations by a storage device",
	"summary": "",
	"abstract": "A method enables a storage device to autonomously (i.e., without intervention of a host device) determines whether an integral sequence of commands, which is related to one or more storage commands issued by the host device, is in a certain state (i.e., it is u201cactiveu201d or u201cinactiveu201d) or is transitioning from u201cactiveu201d state to u201cinactiveu201d state, or from u201cinactiveu201d state to u201cactiveu201d state. Depending on the determined state or transition, the storage device determines whether to refrain from executing Extra-Sequence (u201cESQu201d) operations and permit executing Intra-Sequence (u201cISQu201d) operations, or vice versa.",
	"url": null,
	"owner": "Sandisk IL Ltd.",
	"publication_number": "07788415",
	"publication_date": "2010-08-31",
	"application_number": "12127229",
	"application_date": "2008-05-27",
	"tags": null,
	"slug": "management-of-internal-operations-by-a-storage-device",
	"match_type": "description"
},
{
	"name": "Client interfaces for packages",
	"summary": "",
	"abstract": "A method and system for employing client interfaces for packages. In one embodiment, an access object associated with a service provided by a first package is located, where the service is seeking to access content residing at a second package. A client interface is then created at the second package using the access object. The client interface is used to provide access to the content by exposing the content to the service via the client interface.",
	"url": null,
	"owner": "SAP (AG)",
	"publication_number": "07669181",
	"publication_date": "2010-02-23",
	"application_number": "11118560",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "client-interfaces-for-packages",
	"match_type": "description"
},
{
	"name": "Access control system, a rule engine adaptor, a rule-based enforcement platform and a method for performing access control",
	"summary": "",
	"abstract": "An access control system provides access control to at least one information resource associated with at least one application within a computer network. The system comprises a plurality of context sources being relevant for the at least one application and providing context information, a constraint specification console providing an interface to specify application specific constraints based on the context sources, a rule engine capable of handling facts and applying inference rules on those facts, an application specific constraint enforcement point configured for receiving access requests, hence querying facts and further being responsible for making access decisions regarding the information resource based on those facts and on application specific constraints and a rule engine adaptor acting as intermediary in communication of the rule engine with the context sources, the constraint specification console and the enforcement point, respectively, so as to allow access control to the at least one information resource based on specified application specific constraints with regard to context information originating from the context sources.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07689562",
	"publication_date": "2010-03-30",
	"application_number": "11712280",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "access-control-system-a-rule-engine-adaptor-a-rulebased-enforcement-platform-and-a-method-for-performing-access-control",
	"match_type": "description"
},
{
	"name": "Adaptive models framework",
	"summary": "",
	"abstract": "A system for extending a business object used in a user interface. The system includes a service layer comprising the business object. The system also includes a models framework comprising a meta model including business data of the business object, wherein the meta model is extended for use in the user interface. The system further includes a processing engine for generating the user interface, wherein the processing engine provides a platform for extending the meta model for use in the user interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07702650",
	"publication_date": "2010-04-20",
	"application_number": "11646400",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "adaptive-models-framework",
	"match_type": "description"
},
{
	"name": "Agent engine",
	"summary": "",
	"abstract": "An agent engine includes a definition process, the definition process operable to define a data set associated with an objective, a library storing a set of components, the components comprising at least one of a pre-programmed application, object, algorithm, function, and data set definition, and an agent generator process, the agent generator process operable to define at least one agent that includes at least one component from the library, the at least one generated agent defined to perform a function related to the objective.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07711670",
	"publication_date": "2010-05-04",
	"application_number": "10328855",
	"application_date": "2002-12-24",
	"tags": null,
	"slug": "agent-engine",
	"match_type": "description"
},
{
	"name": "Analytical regression testing on a software build",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for testing software involve generating a software build of source files and initiating tests on the software build. Each test is performed using a portion of the software build that corresponds to one or more of the source files. Results data relating to the tests, such as an indication of errors identified in the tests, is stored. The results data further identifies source files associated with each of the tests. A notification message relating to the results data is sent to a user.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07840944",
	"publication_date": "2010-11-23",
	"application_number": "11170940",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "analytical-regression-testing-on-a-software-build",
	"match_type": "description"
},
{
	"name": "Application server architecture",
	"summary": "",
	"abstract": "Embodiments of the invention are generally directed to a system and method for an application server architecture having a common connection manager for at least two heterogeneous application server software suites. One of the software suites is a standards-based application server software suite having a plurality of worker nodes. In one embodiment, the plurality of worker nodes share code and data that is stored in a shared memory.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07689660",
	"publication_date": "2010-03-30",
	"application_number": "11149562",
	"application_date": "2005-06-09",
	"tags": null,
	"slug": "application-server-architecture",
	"match_type": "description"
},
{
	"name": "Breadcrumb with alternative restriction traversal",
	"summary": "",
	"abstract": "A breadcrumb may be displayed which identifies at least two restrictions of a plurality of documents in a sequence. The breadcrumb may include a graphical user interface element associated with a selected one of the restrictions having at least one subsequent restriction in the sequence. Once this graphical user interface element is selected, at least one attribute and a numeric indication of a number of the documents responsive to each restriction prior to the selected restriction that contain the attribute and each restriction in the sequence subsequent to the selected restriction may be displayed.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07707506",
	"publication_date": "2010-04-27",
	"application_number": "11321270",
	"application_date": "2005-12-28",
	"tags": null,
	"slug": "breadcrumb-with-alternative-restriction-traversal",
	"match_type": "description"
},
{
	"name": "Business query language",
	"summary": "",
	"abstract": "Methods and apparatuses enable providing a structured business query interface to receive a structured business query. The interface can be provided as an extension to a business productivity application. The query is made without having to change context from the application to another program, but rather can be made within the context of the application. The query triggers access to a backend, which may result in accessing a data object that is inserted or embedded into the application, or a document of the application. In one embodiment, a business process extension is also available to the application, which enables a task pane within the application with other features and/or data. In one embodiment, related data can be accessed in response to selecting the inserted data object, which can provide additional information on the data object without leaving the context of the application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07802194",
	"publication_date": "2010-09-21",
	"application_number": "11759841",
	"application_date": "2007-06-07",
	"tags": null,
	"slug": "business-query-language",
	"match_type": "description"
},
{
	"name": "Common trace files",
	"summary": "",
	"abstract": "A method and system for generating common trace files for multiple components. In one embodiment, separate trace information is received from multiple components. The separate trace information received from multiple components is integrated into a single common trace file to provide common trace information for multiple components.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07810075",
	"publication_date": "2010-10-05",
	"application_number": "11118208",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "common-trace-files",
	"match_type": "description"
},
{
	"name": "Compatibility framework using versioning class loaders",
	"summary": "",
	"abstract": "A method and system for performing version-based class loading. In one embodiment, a first version is sought to continue running an application, where a first class is associated with the first version being sought. A first class loader capable of loading the first class is created. The first class is then loaded using the first class loader.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07703089",
	"publication_date": "2010-04-20",
	"application_number": "11118738",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "compatibility-framework-using-versioning-class-loaders",
	"match_type": "description"
},
{
	"name": "Compiling user profile information from multiple sources",
	"summary": "",
	"abstract": "Systems and techniques to compile profile information for a user of a computer network into a user object. In general, in one implementation, the technique includes: collecting profile information implicitly and explicitly from structured data sources; collecting profile information implicitly from unstructured data sources; and importing profile information inherited from collaborative entities with which the user is associated.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07765166",
	"publication_date": "2010-07-27",
	"application_number": "10663372",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": "compiling-user-profile-information-from-multiple-sources",
	"match_type": "description"
},
{
	"name": "Computer software development incorporating core and compound services",
	"summary": "",
	"abstract": "A method is provided for providing one or more services by a service provider to a service consumer. The method may include defining a meta-model describing at least one core service and at least one compound service; creating a model for the core service based on the meta-model; and implementing the core service on the service provider based on the model. The method may also include implementing the compound service on the service provider and implementing a generic access interface on the service consumer to dynamically access the core service and the compound service.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07770146",
	"publication_date": "2010-08-03",
	"application_number": "11436613",
	"application_date": "2006-05-19",
	"tags": null,
	"slug": "computer-software-development-incorporating-core-and-compound-services",
	"match_type": "description"
},
{
	"name": "Control center pages",
	"summary": "",
	"abstract": "Systems and techniques to provide control center pages in a portal. In general, in one implementation, the technique includes enabling a user of a portal to navigate between control level pages and execution level pages without losing work performed in the execution level pages. The control level includes user-centric control center page(s) that provide the user with personal resources and serve as an anchor, or u201chomeu201d, page.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07849175",
	"publication_date": "2010-12-07",
	"application_number": "10663382",
	"application_date": "2003-09-15",
	"tags": null,
	"slug": "control-center-pages",
	"match_type": "description"
},
{
	"name": "Control systems and methods for virtual power plants",
	"summary": "",
	"abstract": "Systems and methods for the control of distributed systems are presented, particularly virtual power plants. Control software therefore communicates through an interface with decentralized devices. Modules are provided to formulate strategies based on predicted demand for the system, for controlling individual system devices, for system evaluation, for accounting purposes and to provide a user interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07813814",
	"publication_date": "2010-10-12",
	"application_number": "11529739",
	"application_date": "2006-09-29",
	"tags": null,
	"slug": "control-systems-and-methods-for-virtual-power-plants",
	"match_type": "description"
},
{
	"name": "Data access service queries",
	"summary": "",
	"abstract": "A technique includes selectively obtaining information stored in a business warehouse. Such a technique may include selecting a data access service from a library during run-time and presenting data within the business warehouse using the selected data access service. The library may contain at least one data access service for each of the plurality of on-line analytical processing data access queries. Related apparatus, systems, computer program products, and computer systems are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07814044",
	"publication_date": "2010-10-12",
	"application_number": "11087203",
	"application_date": "2005-03-22",
	"tags": null,
	"slug": "data-access-service-queries",
	"match_type": "description"
},
{
	"name": "Deploying a variety of containers in a Java 2 enterprise edition-based architecture",
	"summary": "",
	"abstract": "A system and method are described for deploying non-J2EE containers on a J2EE server. In one embodiment, non-J2EE containers are created and deployed on the J2EE server in communication with J2EE containers already deployed on the J2EE server.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07721283",
	"publication_date": "2010-05-18",
	"application_number": "10852893",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": "deploying-a-variety-of-containers-in-a-java-2-enterprise-editionbased-architecture",
	"match_type": "description"
},
{
	"name": "Distributed handling of associated data sets in a computer network",
	"summary": "",
	"abstract": "A networked database includes the automatic creation of follow-on data sets from initial data sets. A dialogue routine is implemented for initiating a dialogue-type communication that includes inputting and confirming data required for creating the follow-on data sets. The database is provided with a plurality of data sets and is capable of generating and displaying a list of data sets according to user-defined criteria. For a data set in the generated list that allows for the automatic creation of a follow-on data set, a related, configurable, user-activated control element is displayed. Upon user-activation, the control element, generates a control signal for initiating the automatic creation of the follow-on data set based on data derived from the selected data set and/or any data set associated with the selected data set. The newly created follow-on data set is then associated with the selected data set.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07693893",
	"publication_date": "2010-04-06",
	"application_number": "10949331",
	"application_date": "2004-09-27",
	"tags": null,
	"slug": "distributed-handling-of-associated-data-sets-in-a-computer-network",
	"match_type": "description"
},
{
	"name": "Enhanced application of spoken input",
	"summary": "",
	"abstract": "Enhanced application of spoken input, in which a single, natural language voice command is accessed. Using a repository that associates multiple operations with natural language voice commands, multiple selected operations that correspond to the received single, natural language voice command are determined and applied to a user interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07672851",
	"publication_date": "2010-03-02",
	"application_number": "12049562",
	"application_date": "2008-03-17",
	"tags": null,
	"slug": "enhanced-application-of-spoken-input",
	"match_type": "description"
},
{
	"name": "Execution of modified byte code for debugging, testing and/or monitoring of object oriented software",
	"summary": "",
	"abstract": "A method is described that comprises, in an object oriented environment, invoking a second method from a first method. The invoking comprises providing an identification of the first method and a class that the first method is a part of. The method further comprises identifying a plug-in module for the first method based upon the identification. The plug-in module contains a handler method. The method further comprises executing the handler method to perform an output function for the first method and then executing the first method from a point beyond where the second method was invoked.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07707557",
	"publication_date": "2010-04-27",
	"application_number": "10749617",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "execution-of-modified-byte-code-for-debugging-testing-andor-monitoring-of-object-oriented-software",
	"match_type": "description"
},
{
	"name": "Extended UDDI with item registry functionality",
	"summary": "",
	"abstract": "A method for extending Universal Description, Discovery and Integration (u201cUDDIu201d) registry is disclosed. Information of at least one item provided in a UDDI registry is published by a Web Service provider utilizing an item data structure. An item in the UDDI registry may them be searched utilizing at least one Application Program Interface (u201cAPIu201d) associated with the item data structure.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07822778",
	"publication_date": "2010-10-26",
	"application_number": "10745134",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": "extended-uddi-with-item-registry-functionality",
	"match_type": "description"
},
{
	"name": "Grid compute node software application deployment",
	"summary": "",
	"abstract": "A method including, in a grid network, determining available compute devices for installation and execution of an application, the application requiring a specific operating system. The method also includes, in response to determining that there are no available compute devices having the specific operating system, sending a request to install the specific operating system and a grid manager through a link to a management system. The method also includes installing the specific operating system on one of a plurality of compute devices controlled by the management system and linking the one of a plurality of compute devices controlled by the management system to the grid network. Lastly, the method includes installing the application on the one of a plurality of compute devices controlled by the management system.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07810090",
	"publication_date": "2010-10-05",
	"application_number": "10740160",
	"application_date": "2003-12-17",
	"tags": null,
	"slug": "grid-compute-node-software-application-deployment",
	"match_type": "description"
},
{
	"name": "Interface to lock a database row through a logical locking interface",
	"summary": "",
	"abstract": "A method is described that comprises receiving at a first interface a request to lock a row of data from a database table. The method also comprises formatting the request into a format suitable for reception by a second interface. The second interface is an interface to a logical locking function.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07707194",
	"publication_date": "2010-04-27",
	"application_number": "10864228",
	"application_date": "2004-06-08",
	"tags": null,
	"slug": "interface-to-lock-a-database-row-through-a-logical-locking-interface",
	"match_type": "description"
},
{
	"name": "Items on workplaces",
	"summary": "",
	"abstract": "This document discusses, among other things, a system and a method for using a meta-model to manage relationships between software artifacts, the method comprising determining a meta-model; identifying one or more available artifacts in one or more software applications; using the meta-model to define one or more relationships between the one or more available artifacts, wherein each relationship is a specific instance of a possible association defined in the meta-model; and providing the one or more relationships as one or more configurations to the one or more software applications.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07761850",
	"publication_date": "2010-07-20",
	"application_number": "11318359",
	"application_date": "2005-12-22",
	"tags": null,
	"slug": "items-on-workplaces",
	"match_type": "description"
},
{
	"name": "Limiting extensibility of a visual modeling language",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for selectively supporting extensions to a modeling language. A method includes receiving a request to extend a modeling language entity and selectively providing support to define an extension of the modeling language entity. Support is selectively provided by determining whether the support to define the extension of the modeling language entity can be provided based on a definition of the modeling language entity in a visual modeling language. If the support can be provided, the support is provided; otherwise, the support is excluded. The method can further include selectively generating the extended modeling language entity. The extended modeling language entity can be selectively generated by determining whether the extension meets one or more conditions for being a valid extension to the modeling language entity, and if the extension meets the conditions, the extended modeling language entity is generated.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07757204",
	"publication_date": "2010-07-13",
	"application_number": "11323393",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "limiting-extensibility-of-a-visual-modeling-language",
	"match_type": "description"
},
{
	"name": "Log configuration and online deployment services",
	"summary": "",
	"abstract": "Methods and apparatuses for configuring logging of a deployment of an enterprise component are described herein. In one embodiment, in response to a request for deploying an enterprise component, a logging configuration process extracts logging configuration information from a logging configuration file associated with the enterprise component and configures the logging for the respective enterprise component being deployed. The logging configuration file is designed exclusively for configuring logging of the enterprise component. Thereafter, the deployment information of the enterprise component is logged based on the extracted logging configuration information when the enterprise component is deployed. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07743029",
	"publication_date": "2010-06-22",
	"application_number": "10836851",
	"application_date": "2004-04-30",
	"tags": null,
	"slug": "log-configuration-and-online-deployment-services",
	"match_type": "description"
},
{
	"name": "Mapping of designtime to runtime in a visual modeling language environment",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for generating runtime entities in a visual modeling environment. A method includes providing designtime graphical modeling language entities for use in a visual modeling program, receiving input defining an application definition at designtime as including at least a first and second designtime entities as components of a designtime version of the application, and generating runtime entities of the application. The designtime graphical modeling language entities include the first and second designtime entities, and the first designtime entity has an associated first runtime entity precompiled for a first platform. The input includes a configuration of properties of the first and second designtime entities, and generating the runtime entities includes setting properties of the first runtime entity in accordance with the configuration of properties of the first designtime entity.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07774745",
	"publication_date": "2010-08-10",
	"application_number": "11323391",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "mapping-of-designtime-to-runtime-in-a-visual-modeling-language-environment",
	"match_type": "description"
},
{
	"name": "Matching user interface elements to screen reader functions",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for providing information to a screen reader. A method includes the actions of receiving at a client side information for representing a web page in a browser; setting focus initially on an element of the web page and presenting the web page to a user; and in response to a user command directing the focus to an element of the web page, determining whether the element is present in a functionality map, and if so, looking up the element in the functionality map, then processing the element as indicated by a corresponding entry point in the map, and if not, providing the focus and information related to web page elements associated with the focus to a placeholder control, and providing a screen reader with access to the placeholder control.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07669149",
	"publication_date": "2010-02-23",
	"application_number": "11027768",
	"application_date": "2004-12-30",
	"tags": null,
	"slug": "matching-user-interface-elements-to-screen-reader-functions",
	"match_type": "description"
},
{
	"name": "Method and apparatus for runtime error handling",
	"summary": "",
	"abstract": "A method and an apparatus for receiving an error notification associated with a runtime error of a software application to generate a plurality of context attributes from a runtime state of the software application associated with an instant of time of the runtime error are described. One or more potential solutions are searched from a data storage including a solution repository based on the plurality of context attributes at substantially the same instant of time. An acceptable solution for the runtime error is determined based on the one or more potential solutions. The solution repository is updated with a new solution if the acceptable solution cannot be determined.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07861120",
	"publication_date": "2010-12-28",
	"application_number": "12002070",
	"application_date": "2007-12-14",
	"tags": null,
	"slug": "method-and-apparatus-for-runtime-error-handling",
	"match_type": "description"
},
{
	"name": "Method and system for catch-weight management",
	"summary": "",
	"abstract": "A multiple transaction quantity inventory management system including an inventory management component to store and manage inventory information using a base unit of measure (u201cUOMu201d) and in a valuation UOM related by at least one conversion factor for each of a plurality of goods; a material management component connected to the inventory management component, the material management component to monitor and maintain information on the plurality of goods in the base UOM and in the valuation UOM for each of the plurality of goods; a sales delivery component connected to the inventory management component, the sales delivery component to receive and process sales orders in the base UOM; a warehouse management component connected to the inventory management component, the warehouse management component to control stock information for the plurality of goods in a single UOM; and a financial component connected to the inventory management component, the material management component, the sales delivery component, and the warehouse management component, the financial component to value movement of the plurality of goods using the valuation UOM.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07664684",
	"publication_date": "2010-02-16",
	"application_number": "10940658",
	"application_date": "2004-09-15",
	"tags": null,
	"slug": "method-and-system-for-catchweight-management",
	"match_type": "description"
},
{
	"name": "Method and system for configurable options in enhanced network-based auctions",
	"summary": "",
	"abstract": "A system and method are provided for including a configurable order option in a listing on a network-based auction service. The system and method include specifying the configurable order using an auction application separate from the network-based auction service and communicating the configurable order option specified using the auction application to the network-based auction service as part of the listing. A seller may specify configurable order options during the creation of a listing that may be communicated to the network-based auction service along with the listing information. Configurable order options provide at least two possible choices for a bidder/buyer thereby allowing customization of the listing to the degree permitted by the seller. Configurable order options may include information such as, for example, the shipping method, payment method, an optional accessory purchase for a product in the listing, a warranty for a product in the listing, a color selection, and a model selection. The winning bidder/buyer's selection for a configurable order option is communicated back to the auction application which may process the selection and send the appropriate order information to a back-end business information management system or the auction application may send the selection directly to the back-end business information management system for processing as part of the order.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07788160",
	"publication_date": "2010-08-31",
	"application_number": "11026023",
	"application_date": "2005-01-03",
	"tags": null,
	"slug": "method-and-system-for-configurable-options-in-enhanced-networkbased-auctions",
	"match_type": "description"
},
{
	"name": "Method and system for employing a hierarchical monitor tree for monitoring system resources in a data processing environment",
	"summary": "",
	"abstract": "A method, apparatus, and system are provided for monitoring of system resources using a monitor tree. According to one embodiment, a resource may be associated with a monitor managed bean at a node of a monitor tree. Monitoring information regarding the associated resources may be requested from a runtime managed bean, and the monitoring information may be received by the monitor managed bean at the node of the monitor tree.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07756968",
	"publication_date": "2010-07-13",
	"application_number": "10748774",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "method-and-system-for-employing-a-hierarchical-monitor-tree-for-monitoring-system-resources-in-a-data-processing-environment",
	"match_type": "description"
},
{
	"name": "Method and system for managing complex database information",
	"summary": "",
	"abstract": "Methods and systems are described for storage and retrieval of complex data. An example method may store a first data item in a first data table included in a database. An aggregated data object may be generated based on preprocessing the first data table based on satisfying a predefined retrieval query. The aggregated data object may be stored based on a preprocessed format in a cluster table included in the database. The first data table may be updated, and the aggregated data object may be updated in the cluster table based on the update of the first data table.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07822775",
	"publication_date": "2010-10-26",
	"application_number": "11780938",
	"application_date": "2007-07-20",
	"tags": null,
	"slug": "method-and-system-for-managing-complex-database-information",
	"match_type": "description"
},
{
	"name": "Method and system for monitoring performance on a mobile device",
	"summary": "",
	"abstract": "A method and system are provided for implementing performance monitoring of an application on a mobile device. An instrumentation tool is provided allowing a user to view the entities in an application file for a mobile device and selecting those entities for which performance monitoring is to be implemented. The instrumentation tool adds performance monitoring methods to the application file and generates a new instrumented application file that is transferred to the mobile device. When the instrumented application file is executed on the mobile device, the performance monitoring methods instrumented into the file execute generating data in a performance log file that is stored on the mobile device. This performance log file may be transferred to a remote device for further analysis in addition to viewing the performance log file on the mobile device. The user selected entities for performance monitoring in the application file may be saved to a configuration file that can later be loaded and modified by the user to facilitate further performance monitoring of an application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07788644",
	"publication_date": "2010-08-31",
	"application_number": "11090682",
	"application_date": "2005-03-24",
	"tags": null,
	"slug": "method-and-system-for-monitoring-performance-on-a-mobile-device",
	"match_type": "description"
},
{
	"name": "Method and system for providing a collaboration service in enterprise business software",
	"summary": "",
	"abstract": "Disclosed is a method and system for creating a first collaboration service node for a first software object node and linking the first collaboration service node to a second collaboration service node hierarchically to represent a link structure between the first software object node and a second software object node. A collaboration service provided by the first collaboration service node is determined based on a type of the first software object node and the collaboration service for the first software object node is executed.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07836130",
	"publication_date": "2010-11-16",
	"application_number": "11947801",
	"application_date": "2007-11-30",
	"tags": null,
	"slug": "method-and-system-for-providing-a-collaboration-service-in-enterprise-business-software",
	"match_type": "description"
},
{
	"name": "Method and system to implement a deploy service to perform deployment services to extend and enhance functionalities of deployed applications",
	"summary": "",
	"abstract": "A system and method are described for implementing and using a deploy system for deployment of entities. In one embodiment, a deploy service is implemented as a module on a J2EE engine to perform deployment services on a container on the J2EE engine. The deployment services include deploying one or more entities on the container which includes a J2EE container and/or a non-J2EE container.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07735097",
	"publication_date": "2010-06-08",
	"application_number": "10853374",
	"application_date": "2004-05-24",
	"tags": null,
	"slug": "method-and-system-to-implement-a-deploy-service-to-perform-deployment-services-to-extend-and-enhance-functionalities-of-deployed-applications",
	"match_type": "description"
},
{
	"name": "Method and system to provide access to factories in a naming system",
	"summary": "",
	"abstract": "A method and system to provide easy access to factories in a naming service. The system receives an indication that a factory is needed by a client. A plurality of resolvers are checked in turn to find the factory indicated. If a resolver that can provide the factory is found, the factory is returned to the client. In one embodiment, resolvers register with a resolver manager that performs the checking in response to a naming operation. Because the resolver manager can access all registered resolvers, access to the factories is independent of a class path of the user.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07721256",
	"publication_date": "2010-05-18",
	"application_number": "10856051",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "method-and-system-to-provide-access-to-factories-in-a-naming-system",
	"match_type": "description"
},
{
	"name": "Method of developing specific content and creating standardized content from the specific content",
	"summary": "",
	"abstract": "Techniques for providing software as a service for enterprise entities are described herein. In one embodiment, a first interface is provided to allow a client to browse over a network a plurality of standard content to be selected to use in one or more software applications used by the client, where the standard content is listed in one or more catalog and each catalog corresponding to a particular industrial usage. A second interface is provided to allow the client to subscribe a service of one or more specific categories selected from the standard content available via the first interface for a predetermined period of time, wherein during the predetermined period of time, the client can select one or more standard content from the subscribed categories and deploy the selected standard content in a system of the client without additional cost. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07788138",
	"publication_date": "2010-08-31",
	"application_number": "11923980",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "method-of-developing-specific-content-and-creating-standardized-content-from-the-specific-content",
	"match_type": "description"
},
{
	"name": "Methods and apparatuses for organizing events",
	"summary": "",
	"abstract": "Techniques for organizing events via an electronic organizer are described herein. In one embodiment, an example of a process includes, but is not limited to, dynamically accessing a first event organization system over a network to retrieve a first event data representing one or more events scheduled by the first event organization system, and presenting the first event data in a second event organization system as if the first event data is scheduled by the second event organization system, wherein the first and second event organization systems are incompatible. Other methods and apparatuses are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07774224",
	"publication_date": "2010-08-10",
	"application_number": "11601466",
	"application_date": "2006-11-16",
	"tags": null,
	"slug": "methods-and-apparatuses-for-organizing-events",
	"match_type": "description"
},
{
	"name": "Modeling editor",
	"summary": "",
	"abstract": "Methods and apparatus, including computer systems and program products, that implement a modeling editor associated with development objects. A computer program product includes instructions operable to receive user input including a user-defined graphical object, and a selection of a development object from a set of development objects in a development environment; generate an association between the selected development object and the user-defined graphical object; generate a graphical representation including the user-defined graphical object; and store the graphical representation and the association in a document. A graphical object need not be associated with any of the development objects. The user-defined graphical object can be presented to a user. Presenting the user-defined graphical object can include selectively presenting information associated with the user-defined graphical object based on user settings, such as abstraction information that can define an abstraction level for presenting the user-defined graphical object.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07818682",
	"publication_date": "2010-10-19",
	"application_number": "10999738",
	"application_date": "2004-11-29",
	"tags": null,
	"slug": "modeling-editor",
	"match_type": "description"
},
{
	"name": "Modified classfile registration with a dispatch unit that is responsible for dispatching invocations during runtime execution of modified bytecode",
	"summary": "",
	"abstract": "A byte code modification method for a classfile is described. The classfile describes properties of a class within an object oriented environment. The byte code modification method entails modifying a classfile after the classfile has been compiled from source code. The modification of the classfile entails modifying a method information structure by adding byte code instructions to the byte code instructions of the method information structure's respective method. The added, byte code instructions cause a plug-in module's handler method to execute an output function for the method when it is executed during runtime. The modification of the classfile also entails adding a method information structure that includes byte code instructions for registering the identities of the class and the method with a dispatch unit. The dispatch unit is responsible for dispatching an invocation to the plug-in module during runtime execution of the modified byte code, where, the invocation is directed to the dispatch unit from the added byte code instructions.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07836438",
	"publication_date": "2010-11-16",
	"application_number": "10749740",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "modified-classfile-registration-with-a-dispatch-unit-that-is-responsible-for-dispatching-invocations-during-runtime-execution-of-modified-bytecode",
	"match_type": "description"
},
{
	"name": "Navigation through components",
	"summary": "",
	"abstract": "This disclosure provides various embodiments of software for navigating through components. In one aspect, the software associates a transactional process with a first component, triggers navigation from the first component to a second component, and performs the transactional process associated with the first component upon triggering navigation from the first component to the second component. In some implementations, the transactional process comprises validating modifications made to the data of the first component. In other implementations, the transactional process further comprises saving the modifications to the data of the first component if the validation is successful, and if the validation is unsuccessful, not saving the modifications to the data of the first component.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07769698",
	"publication_date": "2010-08-03",
	"application_number": "11689997",
	"application_date": "2007-03-22",
	"tags": null,
	"slug": "navigation-through-components",
	"match_type": "description"
},
{
	"name": "Nomination locking system and method",
	"summary": "",
	"abstract": "A method for locking a nomination item in a multi-user distribution scheduling system is provided. At least one nomination item, associated with a voyage, may be created and stored within a database. A lock object, associated with the nomination item, may be created to prevent concurrent modification of the nomination item. The nomination item may be modified and stored within the database, and then the lock object may be deleted.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07730046",
	"publication_date": "2010-06-01",
	"application_number": "10740557",
	"application_date": "2003-12-22",
	"tags": null,
	"slug": "nomination-locking-system-and-method",
	"match_type": "description"
},
{
	"name": "Notification architecture and method employed within a clustered node configuration",
	"summary": "",
	"abstract": "A monitoring system and method are described which simplify the management of complex, multi-tiered networks such as those used in large enterprises. One embodiment of the system is implemented across a cluster of application servers which are communicatively coupled together on a network to serve applications over the network to a plurality of client. Each application server is comprised of a plurality of server nodes. Each of the server nodes is assigned its own dedicated management bean (u201cMBeanu201d) server and each of the MBean servers are associated with a plurality of MBeans for monitoring specified system resources. In addition, one embodiment of the invention includes notification logic which generates cluster-wide notifications on certain specified events associated with certain server node resources. The cluster-wide notifications are accessible from any one of the server nodes within the application server cluster. Thus, a client communicatively coupled to any server node within the cluster will be provided with a comprehensive view of all cluster-wide notifications.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07725572",
	"publication_date": "2010-05-25",
	"application_number": "10750007",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "notification-architecture-and-method-employed-within-a-clustered-node-configuration",
	"match_type": "description"
},
{
	"name": "Obtaining a graphical user interface to access a remote computing system",
	"summary": "",
	"abstract": "Embodiments of the invention are generally directed to a system and method for a remote Graphical User Interface (GUI). In an embodiment, a local computing system requests access to a remote computing system. In response, the remote computing system provides connection information to identify an appropriate GUI for accessing the remote computing system. The local computing system forwards the connection information to another local computing system to obtain the identified GUI. In one embodiment, the local computing system automatically downloads the GUI and accesses the remote computing system with the GUI.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07703024",
	"publication_date": "2010-04-20",
	"application_number": "10931438",
	"application_date": "2004-08-31",
	"tags": null,
	"slug": "obtaining-a-graphical-user-interface-to-access-a-remote-computing-system",
	"match_type": "description"
},
{
	"name": "Packet network telecommunication system",
	"summary": "",
	"abstract": "Packet network telecommunication systems, especially Internet Protocol (IP) telephony removes the need of explicit installing of TSP (TAPI service provider) software or other telephony software at each workstation. Application server software or corresponding control software is arranged to take care of all call control actions on behalf of the phone client software so that the phone client software only needs to receive and transmit speech data streams, and to communicate all control messaging from and to the particular phone client software via the communication link between the control software and the phone client software. Since modern operating systems include support for the user interface devices as well as transmitting and receiving real-time data streams, the phone client software does not require any specific interfacing software to be installed on the client workstation.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07855965",
	"publication_date": "2010-12-21",
	"application_number": "12017768",
	"application_date": "2008-01-22",
	"tags": null,
	"slug": "packet-network-telecommunication-system",
	"match_type": "description"
},
{
	"name": "Queued asynchronous remote function call dependency management",
	"summary": "",
	"abstract": "A system, computer program product and method of processing function calls in a distributed application environment are provided. A number of function calls for communication from a sending application to a receiving application are queued in a database. Dependencies among at least a portion of the function calls that are being queued are determined while the function calls are stored in the queues. A schedule of execution of the function calls is then generated based on the determined dependencies.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07823170",
	"publication_date": "2010-10-26",
	"application_number": "11218344",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": "queued-asynchronous-remote-function-call-dependency-management",
	"match_type": "description"
},
{
	"name": "Registration method for supporting bytecode modification",
	"summary": "",
	"abstract": "A method is described that comprises receiving from a classfile registration information. The registration information comprises a class name and a different method name for each of the class's methods. Each of the methods are modified with at least one additional byte code instruction to cause, for its respective method, a plug-in module's handler method to provide output function treatment for the respective method. Also, a plug-in pattern is referred to in order to determine which of a plurality of plug-in modules are appropriate for each of the class's methods. The plug-in pattern lists for each of the plug-in modules those of the methods that are to be handled with its corresponding output function treatment.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07743367",
	"publication_date": "2010-06-22",
	"application_number": "10749686",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "registration-method-for-supporting-bytecode-modification",
	"match_type": "description"
},
{
	"name": "Restrictive visualization of a stereotype construct for entities in a visual modeling environment",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for stereotype constructs in a visual modeling environment. A method of generating applications includes providing a first set of modeling language entities and a predefined stereotype construct, receiving input specifying the stereotype construct as a component of an application being developed, and generating the application, where the application includes a runtime version of the stereotype construct. In that method, each entity in the first set of modeling language entities has an associated graphical representation, the stereotype construct defines an encapsulation of at least one or more modifications to a second set of one or more modeling language entities selected from the first set of modeling language entities, the stereotype construct has an associated graphical representation, and the associated graphical representation of the stereotype construct includes representations of properties of the entities in the second set of entities that are configurable by an end-user.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07840935",
	"publication_date": "2010-11-23",
	"application_number": "11323385",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "restrictive-visualization-of-a-stereotype-construct-for-entities-in-a-visual-modeling-environment",
	"match_type": "description"
},
{
	"name": "Robust sharing of runtime systems",
	"summary": "",
	"abstract": "Methods and apparatus, including computer systems and program products, for sharing objects in runtime systems and for providing isolation between user sessions in a scalable manner. A user context corresponding to a user session is stored in a shared memory area. Upon receiving a request corresponding to the user session, a process is selected from a set of operating system processes, and a runtime system is selected from a set of runtime systems. The runtime system is bound to the process, and the user context is associated with the runtime system to process the request. In some implementations, sharing user contexts enables virtual machines to be used in a shared but isolated manner: Each user context can be exclusively associated with an available virtual machine from a fixed set of virtual machines, and each virtual machine can be exclusively executed in an available process from a fixed set of processes.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07707583",
	"publication_date": "2010-04-27",
	"application_number": "10851794",
	"application_date": "2004-05-20",
	"tags": null,
	"slug": "robust-sharing-of-runtime-systems",
	"match_type": "description"
},
{
	"name": "Sending e-mail from a hosted system",
	"summary": "",
	"abstract": "A method includes receiving e-mail input data from a client at a server that is configured to serve a hosted application that includes an e-mail user interface to the client. The e-mail input data is used to generate an e-mail message from a user of the client, where the client is associated with a first domain and the server is associated with a second domain. An e-mail object corresponding to the e-mail message from the user of the client is generated at the server, and the e-mail object is forwarded from the server to the client along with instructions to convert the e-mail object into the e-mail message and to send the e-mail message from the first domain.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07707258",
	"publication_date": "2010-04-27",
	"application_number": "11830238",
	"application_date": "2007-07-30",
	"tags": null,
	"slug": "sending-email-from-a-hosted-system",
	"match_type": "description"
},
{
	"name": "Service adaptation of the enterprise services framework",
	"summary": "",
	"abstract": "Systems, methods, and computer program products are provided for adapting service entities using a declarative approach in a service framework. In accordance with one implementation, a method is provided for adapting service entities. The method includes the steps of retrieving at least one software entity from a first repository in response to a first input and receiving a declaration from a user for adapting the software entity. The method further includes the steps of adapting the software entity to an adapted software entity based on the declaration and storing the adapted software entity in a second repository.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07810102",
	"publication_date": "2010-10-05",
	"application_number": "11319406",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "service-adaptation-of-the-enterprise-services-framework",
	"match_type": "description"
},
{
	"name": "Specific runtime generators in a visual modeling language environment",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for generating runtime entities in a visual modeling environment. Input characterizing an application definition at designtime is received, a determination is made as to whether the designtime entity is to be compiled by a first generator or a second generator, and a runtime version of the designtime entity is generated. The application definition can include a designtime entity and a configuration of properties of the designtime entity. The first generator can support compilation of multiple types of designtime entities and the second generator can support compilation of a specific type of designtime entity. The runtime version can be generated with the second generator if the second generator is to be used or, otherwise, generated with the first generator.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07853923",
	"publication_date": "2010-12-14",
	"application_number": "11647638",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": "specific-runtime-generators-in-a-visual-modeling-language-environment",
	"match_type": "description"
},
{
	"name": "Support of a platform-independent model including descriptions of modeling language entities",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for supporting a model including descriptions of modeling language entities in a visual modeling environment. A method includes providing a visual modeling tool and modeling language entities being entities of a language of expressing applications designed in a visual modeling language environment, receiving input defining an application in the visual modeling language environment, and generating a platform-independent model of the application based on the input and the modeling language entities. In that method, the modeling language entities have a corresponding syntactic description that can be in accordance with the language, the input defines the application as a selection of the modeling language entities and a configuration of the selection, and the platform-independent model includes the selection, the configuration, and a syntactic description of the modeling language entities in the selection.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07840936",
	"publication_date": "2010-11-23",
	"application_number": "11323887",
	"application_date": "2005-12-29",
	"tags": null,
	"slug": "support-of-a-platformindependent-model-including-descriptions-of-modeling-language-entities",
	"match_type": "description"
},
{
	"name": "System and method employing bytecode modification techniques for tracing services within an application server",
	"summary": "",
	"abstract": "A system and method for employing bytecode modification techniques for tracing services within an application server. Application servers, such as those based on the Java 2 Enterprise Edition (u201cJ2EEu201d) standard, include a variety of different services. In one embodiment of the invention, a group of services executed on an application server are identified for tracing. For each service in the group, a group of entry and/or exit methods to be traced are identified. The group of entry/exit methods may represent entry and/or exit points to and from the service, respectively. Once the service's method are identified, the service's bytecode is modified based on the particular group of entry/exit methods specified. The service is then executed and method invocations of the bytecode modified entry/exit methods are registered.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07644395",
	"publication_date": "2010-01-05",
	"application_number": "10750066",
	"application_date": "2003-12-30",
	"tags": null,
	"slug": "system-and-method-employing-bytecode-modification-techniques-for-tracing-services-within-an-application-server",
	"match_type": "description"
},
{
	"name": "System and method for implementing a distributed keystore within an enterprise network",
	"summary": "",
	"abstract": "A keystore is described which provides unique views of certificates and keys to particular application components and/or users. Upon receiving a request from a user and/or an application component to view keystore data, the keystore system implements a first set of security restrictions associated with the request and provides a limited view of the keystore data to the requesting user and/or application component based on the results of the first set of security restrictions. Then, upon detecting an attempt by the user and/or application component to access specified portions of the keystore data provided in the view, the keystore system implements a second set of security restrictions associated with the attempt to access the specified portions of the keystore data, and provides access to the keystore data to the user and/or application component based on the results of the second set of security restrictions.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07823190",
	"publication_date": "2010-10-26",
	"application_number": "10860477",
	"application_date": "2004-06-02",
	"tags": null,
	"slug": "system-and-method-for-implementing-a-distributed-keystore-within-an-enterprise-network",
	"match_type": "description"
},
{
	"name": "System and method for providing access to an application through a common interface for application extensions",
	"summary": "",
	"abstract": "A method and system to permit externally created business objects to access a business management application database without using direct database language statements. An add-on framework includes an add-on extension manager to start an add-on application, register a form from the add-on application, and receive and route an event from the business management application to the add-on application through a user interface application programming interface component object model interface. A persistency layer provides a set of programming language classes and interface definitions to develop a persistent business object in the add-on extension, and connect the persistent business object to a database through a data interface application programming interface component object model interface to read and write data from the database associated with the business management application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07860890",
	"publication_date": "2010-12-28",
	"application_number": "11959572",
	"application_date": "2007-12-19",
	"tags": null,
	"slug": "system-and-method-for-providing-access-to-an-application-through-a-common-interface-for-application-extensions",
	"match_type": "abstract"
},
{
	"name": "Systems and methods for an enterprise services framework using a state model",
	"summary": "",
	"abstract": "Embodiments consistent with the principles of the invention check, before the data underlying a changed primary object is persistently save, for related objects whose data is also affected by the change. The related objects may be two or more degrees removed from the primary object. The changed primary object and all its changed related objects are then persistently saved together, so that the saved data is consistent across the related objects. Embodiments consistent with the principles of the invention also provide a state model for controlling access to services by clients and for making services available by servers.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07844615",
	"publication_date": "2010-11-30",
	"application_number": "11305113",
	"application_date": "2005-12-19",
	"tags": null,
	"slug": "systems-and-methods-for-an-enterprise-services-framework-using-a-state-model",
	"match_type": "description"
},
{
	"name": "Systems and methods for compiling applications on a test server",
	"summary": "",
	"abstract": "Methods and systems for synchronizing applications deployed on a test server are provided. The methods and systems may comprise a software application comprising a plurality of files deployed on a test server. After the software application is deployed on a test server, one of the plurality of files comprising the software application may be modified in a development environment. The methods and systems may comprise a synchronization manager operative to, after modification of the one of the plurality of files, synchronize only the modified file with the software application deployed on the test server.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07778968",
	"publication_date": "2010-08-17",
	"application_number": "11261581",
	"application_date": "2005-10-31",
	"tags": null,
	"slug": "systems-and-methods-for-compiling-applications-on-a-test-server",
	"match_type": "description"
},
{
	"name": "Systems and methods for enhanced meassage support using a generic client proxy",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, are provided for controlling message communication between a first computer and a second computer. An exemplary method includes receiving, at the first computer, one or more messages from the second computer, the messages being stored in a buffer associated with an interface at the first computer. The method also includes calling, by a user interface, the interface at the first computer to retrieve the messages from the buffer. Moreover, the method includes identifying, by the user interface, the messages for presentation based on one or more parameters of the message, and providing the identified messages to the user interface for presentation.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07769821",
	"publication_date": "2010-08-03",
	"application_number": "11311224",
	"application_date": "2005-12-20",
	"tags": null,
	"slug": "systems-and-methods-for-enhanced-meassage-support-using-a-generic-client-proxy",
	"match_type": "description"
},
{
	"name": "Systems and methods for generating technical documentation from enterprise service-oriented architecture content",
	"summary": "",
	"abstract": "Systems and methods are provided for generating technical documentation from content, such as enterprise SOA content. In one implementation, a computer-implemented method is provided that comprises receiving an identifier of a service interface description that defines an interface for implementing a service and processing one or more packages associated with the service interface description by reading data from one or more files of enterprise SOA content stored in a database. In addition, the method generates the technical documentation using the data read from the one or more files.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07849392",
	"publication_date": "2010-12-07",
	"application_number": "11783835",
	"application_date": "2007-04-12",
	"tags": null,
	"slug": "systems-and-methods-for-generating-technical-documentation-from-enterprise-serviceoriented-architecture-content",
	"match_type": "description"
},
{
	"name": "Systems and methods for processing natural language queries",
	"summary": "",
	"abstract": "Methods and systems are provided for processing natural language queries. Such methods and systems may receive a natural language query from a user and generate corresponding semantic tokens. Information may be retrieved from a knowledge base using the semantic tokens. Methods and systems may leverage an interpretation module to process and analyze the retrieved information in order to determine an intention associated with the natural language query. Methods and systems may leverage an actuation module to provide results to the user, which may be based on the determined intention.",
	"url": null,
	"owner": "SAP Ag",
	"publication_number": "07720674",
	"publication_date": "2010-05-18",
	"application_number": "10878307",
	"application_date": "2004-06-29",
	"tags": null,
	"slug": "systems-and-methods-for-processing-natural-language-queries",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing an interaction between a status management service and an audit trail service",
	"summary": "",
	"abstract": "Systems and methods are disclosed for providing an interaction between a status management service and an audit trail service. In one embodiment, a computer-implement method provides the interaction by enabling an audit of a business object when the business object reaches a designated status. At an application server, a change associated with the business object is received. In response to the change, it is determined whether the business object is a status business object and an auditable business object. If so, a status function set is implemented to interface with the application server to determine whether the change to the business object is allowed. The method also determines whether the business object has reached the designated status. When the business object has reached the designated status, auditing data is requested for the business object.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07774798",
	"publication_date": "2010-08-10",
	"application_number": "11508228",
	"application_date": "2006-08-23",
	"tags": null,
	"slug": "systems-and-methods-for-providing-an-interaction-between-a-status-management-service-and-an-audit-trail-service",
	"match_type": "description"
},
{
	"name": "Thread monitoring using shared memory",
	"summary": "",
	"abstract": "A system and method to monitor worker threads within a Java virtual machine. At least one program is executed on the Java virtual machine to perform a task. A worker thread of the Java virtual machine is assigned to perform the task. Status information for the worker thread is generated and reported into memory external to the Java virtual machine to enable monitoring of the worker thread from external to the Java virtual machine.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07689989",
	"publication_date": "2010-03-30",
	"application_number": "11024394",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": "thread-monitoring-using-shared-memory",
	"match_type": "description"
},
{
	"name": "Unified logging service with a logging formatter",
	"summary": "",
	"abstract": "An integrated tracing and logging system for an enterprise network. One embodiment of the integrated logging and tracing system has an object-oriented architecture which includes a controller class with two sub-classes: a tracing sub-class and a logging sub-class. Instances of the tracing sub-class (tracing modules) are associated with specified program code regions of network applications. The tracing modules receive method calls from the network applications and process the method calls based on defined severity levels. Instances of the logging sub-class (logging modules) are associated with specified u201ccategoriesu201d related to the enterprise network (e.g., system, database, etc). The logging modules receive and process method calls from network components associated with the categories. The integrated logging and tracing system allows the format of tracing and logging messages to be configured without recompiling any source code.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07721266",
	"publication_date": "2010-05-18",
	"application_number": "10815018",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": "unified-logging-service-with-a-logging-formatter",
	"match_type": "description"
},
{
	"name": "Unified meta-model for a service oriented architecture",
	"summary": "",
	"abstract": "An electronic message, containing a request to initiate a service, can be received in a landscape of computer systems providing message-based services. Thereafter, a contract can be accessed to determine if provision of the requested service is permitted. As a result, the requested service identified in the message if provision of the requested service is permitted can be initiated. Related techniques, articles, apparatus, and systems are also described.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07774463",
	"publication_date": "2010-08-10",
	"application_number": "11493102",
	"application_date": "2006-07-25",
	"tags": null,
	"slug": "unified-metamodel-for-a-service-oriented-architecture",
	"match_type": "description"
},
{
	"name": "Upgrading pattern configurations",
	"summary": "",
	"abstract": "Methods and systems, including computer program products, implementing techniques for upgrading pattern configurations. The techniques include receiving configuration for a pattern, determining whether the configuration is current with respect to the pattern, automatically upgrading the configuration if the configuration is not current, and using the configuration to modify one or more predefined elements of an application.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07761865",
	"publication_date": "2010-07-20",
	"application_number": "10843754",
	"application_date": "2004-05-11",
	"tags": null,
	"slug": "upgrading-pattern-configurations",
	"match_type": "description"
},
{
	"name": "Visual administrator for specifying service references to support a service",
	"summary": "",
	"abstract": "A method, apparatus, and system are provided for a visual administrator for specifying service references to support a service. According to one embodiment, a hierarchical tree structure having one or more tree nodes is displayed in a graphical user interface. Each of the one or more tree nodes may represent a resource of an application server. In an embodiment, at least one of the tree nodes represents a service of the application server. The tree node representing the service may be selected via a cursor control device. In one embodiment, upon selecting the tree node, a list of one or more service references associated with the service is displayed in the graphical user interface. Each listed service reference may include, for example, a server reference name, a service reference type, and/or a relationship value. In one embodiment, the relationship value specifies whether the listed service reference is to be automatically started when the service represented by the selected tree node is started.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07703019",
	"publication_date": "2010-04-20",
	"application_number": "10815037",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": "visual-administrator-for-specifying-service-references-to-support-a-service",
	"match_type": "description"
},
{
	"name": "Visual administrator providing java management bean support",
	"summary": "",
	"abstract": "A method, apparatus, and system are provided for a visual administrator providing Java management bean (MBean) support. According to one embodiment, a representation of a plurality of MBeans is displayed on a graphical user interface of a computing device. One of the plurality of MBeans may be selected with the graphical user interface. In an embodiment, an attribute of the selected MBean is accessed with the graphical user interface. In an embodiment, an operation of the selected MBean is invoked with the graphical user interface.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07661066",
	"publication_date": "2010-02-09",
	"application_number": "10814915",
	"application_date": "2004-03-26",
	"tags": null,
	"slug": "visual-administrator-providing-java-management-bean-support",
	"match_type": "description"
},
{
	"name": "Window positioner/sizer",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for a window positioner/sizer. A computer-implemented method of displaying information on a computer display device includes displaying a first popup window on a primary window, the first popup window comprising controls enabling selective positioning and sizing of the first popup window relative to the primary window.",
	"url": null,
	"owner": "SAP AG",
	"publication_number": "07836410",
	"publication_date": "2010-11-16",
	"application_number": "11326840",
	"application_date": "2006-01-06",
	"tags": null,
	"slug": "window-positionersizer",
	"match_type": "description"
},
{
	"name": "Client authentication using a challenge provider",
	"summary": "",
	"abstract": "A system for providing secured access to an application service includes a challenge provider that uses a first cryptographic technique to provide a challenge to a client seeking access to an application service. The client uses a second cryptographic technique to generate a response, and provides the response to an authentication service. The authentication service grants the client access to the application service only if the challenge and response are authenticated using a first authentication technique complementary to the first cryptographic technique and a second authentication technique complementary to the second cryptographic technique, respectively.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07673141",
	"publication_date": "2010-03-02",
	"application_number": "10959102",
	"application_date": "2004-10-07",
	"tags": null,
	"slug": "client-authentication-using-a-challenge-provider",
	"match_type": "description"
},
{
	"name": "Dynamic display of RFID and sensor data",
	"summary": "",
	"abstract": "Systems, methods and computer program products, implementing techniques for automatic data acquisition and the real-time display of automatically acquired data. A system implementing the techniques includes one or more automatic data acquisition devices that emit data; and a data integration system that receives data from the automatic data acquisition devices and processes the data. The data integration system includes a display system for displaying the data to a user. The display system is operable to generate a graphical display and to update the graphical display automatically and only when new data from the automatic data acquisition devices is available. The display system is operable to update only affected parts of the graphical display but not necessarily the entire display.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07817039",
	"publication_date": "2010-10-19",
	"application_number": "11767355",
	"application_date": "2007-06-22",
	"tags": null,
	"slug": "dynamic-display-of-rfid-and-sensor-data",
	"match_type": "description"
},
{
	"name": "Methods and software for a batch processing framework for wizard-based processes",
	"summary": "",
	"abstract": "Disclosed herein are systems and techniques to provide for batch processing of wizards. In general, the techniques may include a computer-implemented method that comprises presenting a wizard to a user to perform a step-by-step process, with each step associated with a step type and the step type being one of confirmation, processing, optional input, or mandatory input. The process is executed as a batch process based on a user request. Then, the batch process is interrupted based on an associated step type of a current step, the interrupting comprising comparing the associated step type to a user parameter.",
	"url": null,
	"owner": "Sap Aktiengesellschaft",
	"publication_number": "07757234",
	"publication_date": "2010-07-13",
	"application_number": "11257642",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": "methods-and-software-for-a-batch-processing-framework-for-wizardbased-processes",
	"match_type": "description"
},
{
	"name": "Process of performing an index search",
	"summary": "",
	"abstract": "One implementation provides a method included in performing a computer-implemented search of electronically stored content. The method includes receiving from one of multiple software applications an input indicating a user request that a computer-implemented search be performed to identify content that, firstly, is stored in a specified one of multiple knowledge bases, and secondly, satisfies user-specified conditions. The method further includes determining which one of multiple search engines has been preconfigured to be used for searches involving the one software application from which the search request input was received and the selected one knowledge base, and initiating the requested search to be executed by the determined search engine.",
	"url": null,
	"owner": "SAP Aktiengesellschaft",
	"publication_number": "07644065",
	"publication_date": "2010-01-05",
	"application_number": "10920047",
	"application_date": "2004-08-17",
	"tags": null,
	"slug": "process-of-performing-an-index-search",
	"match_type": "description"
},
{
	"name": "Portal runtime framework",
	"summary": "",
	"abstract": "Techniques that enable an application or component developed according to a first framework specification to use services provided by an application executing on a second framework that is different from the first framework. A portal architecture is described that is capable of running portal snippets developed according to different framework specifications. A J2EE framework-based portal is configured to execute portal snippets developed using Java for a Java-based framework and also to provide support for and execute portal snippets that have been developed using a language supported by another framework such as .NET framework.",
	"url": null,
	"owner": "SAP Portals Israel Ltd.",
	"publication_number": "07681202",
	"publication_date": "2010-03-16",
	"application_number": "10853024",
	"application_date": "2004-05-21",
	"tags": null,
	"slug": "portal-runtime-framework",
	"match_type": "description"
},
{
	"name": "Techniques for developing portal snippets using an integrated development environment (IDE)",
	"summary": "",
	"abstract": "Techniques for developing applications for various frameworks. An IDE is provided comprising user-selectable options for building applications for a first framework and also for building applications for a portal based upon a second framework different from the first framework. The portal applications for the portal based upon the second framework may be developed using a language supported by the first framework. User-selectable options provided by the IDE also enable deployment of the portal applications to the portal. A single IDE can be used to develop applications for different frameworks. For example, Visual Studio .NET may be used to develop applications for the .NET framework and also to develop and deploy portal applications (e.g., portal snippets) for a portal based upon a Java-based framework such as J2EE. The portal snippets may be developed using a .NET language.",
	"url": null,
	"owner": "SAP Portals Israel Ltd.",
	"publication_number": "07716640",
	"publication_date": "2010-05-11",
	"application_number": "10851696",
	"application_date": "2004-05-21",
	"tags": null,
	"slug": "techniques-for-developing-portal-snippets-using-an-integrated-development-environment-ide",
	"match_type": "description"
},
{
	"name": "Real-time streaming media measurement system and method",
	"summary": "",
	"abstract": "Systems and method for measuring parameters of a media stream are disclosed. Some example systems include a data collection agent that selectively couples with at least one user-designated media stream and collects data associated with the media stream. The example systems may further include a web server that communicates with at least one data collection agent. The web server may obtain a request from a user for measurement of a user-designated media stream, the user request including an identification of the media stream and a list of one or more performance parameters of said stream to be measured. The data collection agent receives from the web server a parameter set defining a measurement of the user-designated media stream, collects and measures media stream data according to the parameter set, and provides the user with real-time performance characteristics.",
	"url": null,
	"owner": "Savvis Communications Corporation",
	"publication_number": "07647418",
	"publication_date": "2010-01-12",
	"application_number": "10174481",
	"application_date": "2002-06-19",
	"tags": null,
	"slug": "realtime-streaming-media-measurement-system-and-method",
	"match_type": "description"
},
{
	"name": "Programmable logic device with embedded switch fabric",
	"summary": "",
	"abstract": "The invention in the simplest form is a programmable logic device comprising logic blocks configured substantially in a plane, external I/O endpoints, and embedded switched fabrics which provide non-contentious connection between the logic blocks and between logic blocks and I/O endpoints, the switch fabrics being offset from the plane of the logic blocks. The logic blocks are organized into logic groups, whereby a plurality of primary embedded switch fabrics are configurable for connecting logic blocks within logic groups, and at least one secondary switch fabric provides non-contentious connection between primary switch fabrics. The switch fabrics can employ non-blocking crossbar switches. A hierarchy of secondary switch fabrics can be included for providing non-contentions connection between both primary and other secondary switch fabrics.",
	"url": null,
	"owner": "SCA Technica, Inc.",
	"publication_number": "07839169",
	"publication_date": "2010-11-23",
	"application_number": "12795789",
	"application_date": "2010-06-08",
	"tags": null,
	"slug": "programmable-logic-device-with-embedded-switch-fabric",
	"match_type": "description"
},
{
	"name": "Programmable logic device with embedded switch fabric",
	"summary": "",
	"abstract": "The invention in the simplest form is a programmable logic device consisting of gate arrays, external I/O endpoints, and an embedded switch fabric configurable for connecting gates to gates, endpoints to endpoints and gates to endpoints. The architecture may employ a fabric interface of non-blocking crossbar switches for making complex bus connections of multiple devices to facilitate high speed processing.",
	"url": null,
	"owner": "SCA Technica, Inc.",
	"publication_number": "07733125",
	"publication_date": "2010-06-08",
	"application_number": "12177175",
	"application_date": "2008-07-22",
	"tags": null,
	"slug": "programmable-logic-device-with-embedded-switch-fabric",
	"match_type": "description"
},
{
	"name": "Method and system for enhancing performance of a physical network under real-time control using simulation of a reference model",
	"summary": "",
	"abstract": "A system and method for network simulation and enhancement includes an experiment configuration engine that provides various proposed traffic and/or network models, and a simulator responsive to the proposed traffic and/or network models to execute a plurality of simulations for the network using parallel discrete event simulation, to determine an optimal network configuration based upon an objective function for enhancing an aspect of network performance. The traffic and/or network models may be based on monitored data from the network indicating a current network state and current network traffic. Reconfiguration instructions for the new network configuration may be conveyed from the simulator to the network, so as to effectuate ongoing, real-time enhancement of the network. The network model(s) may cover internal operational details of individual network devices (e.g., routers and/or switches) as well as operation of the network as a whole.",
	"url": null,
	"owner": "Scalable Network Technologies, Inc.",
	"publication_number": "07774440",
	"publication_date": "2010-08-10",
	"application_number": "10165610",
	"application_date": "2002-06-07",
	"tags": null,
	"slug": "method-and-system-for-enhancing-performance-of-a-physical-network-under-realtime-control-using-simulation-of-a-reference-model",
	"match_type": "description"
},
{
	"name": "Method and system for dynamic binding in a storage area network",
	"summary": "",
	"abstract": "A system, method and computer program product for dynamically binding a server to a remote disk in a data center is provided. In a data center, servers and storage devices that manage multiple remote disks communicate over a switched fabric by using a standard protocol suite. The servers, storage devices and the switched fabric constitute a Storage Area Network (SAN). The devices present on the SAN are assigned a virtual identity, independent of their physical identity. The virtual identity of the servers facilitates the dynamic instantiation of the server images located on multiple remote disks on the servers.",
	"url": null,
	"owner": "Scalent Systems, Inc.",
	"publication_number": "07814274",
	"publication_date": "2010-10-12",
	"application_number": "11655477",
	"application_date": "2007-01-19",
	"tags": null,
	"slug": "method-and-system-for-dynamic-binding-in-a-storage-area-network",
	"match_type": "description"
},
{
	"name": "Disk driver cluster management of time shift buffer with file allocation table structure",
	"summary": "",
	"abstract": "A file allocation system for a hard disk drive includes a memory with driver logic and a processor configured with the driver logic to receive a request to allocate hard disk space of a defined size for a buffer file. In some embodiments, the processor is configured with the driver logic to allocate clusters for the buffer file from a plurality of clusters on the hard disk, wherein the clusters for the buffer file store media content instances. In some embodiments, the processor is configured with the driver logic to designate a portion of the clusters of the buffer file for at least one non-buffer file such that the non-buffer file is permitted to share the portion of the clusters of the buffer file with the buffer file.",
	"url": null,
	"owner": "Scientific-Atlanta LLC",
	"publication_number": "07769925",
	"publication_date": "2010-08-03",
	"application_number": "11381892",
	"application_date": "2006-05-05",
	"tags": null,
	"slug": "disk-driver-cluster-management-of-time-shift-buffer-with-file-allocation-table-structure",
	"match_type": "description"
},
{
	"name": "Positive parental control",
	"summary": "",
	"abstract": "A system for controlling viewer access to media content, the system comprising a memory with logic and a processor configured by the logic to provide interactive user interfaces that enable an administrator to positively define media content for access by a user. The processor is further configured by the logic to enable the user to access the media content as defined by the administrator.",
	"url": null,
	"owner": "Scientific-Atlanta, Inc.",
	"publication_number": "07690012",
	"publication_date": "2010-03-30",
	"application_number": "10085411",
	"application_date": "2002-02-28",
	"tags": null,
	"slug": "positive-parental-control",
	"match_type": "description"
},
{
	"name": "Disk driver cluster management of time shift buffer with file allocation table structure",
	"summary": "",
	"abstract": "A file allocation system for a hard disk drive includes a memory with driver logic and a processor configured with the driver logic to receive a request to allocate hard disk space of a defined size for a buffer file. In some embodiments, the processor is configured with the driver logic to allocate clusters for the buffer file from a plurality of clusters on the hard disk, wherein the clusters for the buffer file store media content instances. In some embodiments, the processor is configured with the driver logic to designate a portion of the clusters of the buffer file for at least one non-buffer file such that the non-buffer file is permitted to share the portion of the clusters of the buffer file with the buffer file.",
	"url": null,
	"owner": "Scientific-Atlanta, LLC",
	"publication_number": "07779181",
	"publication_date": "2010-08-17",
	"application_number": "11679625",
	"application_date": "2007-02-27",
	"tags": null,
	"slug": "disk-driver-cluster-management-of-time-shift-buffer-with-file-allocation-table-structure",
	"match_type": "description"
},
{
	"name": "Downloadable remotely stored device drivers for communication with set-top box peripherals",
	"summary": "",
	"abstract": "A system that downloads device drivers for peripheral devices to a media client device includes, among other things, a memory with logic, and a processor configured with the logic to download a peripheral device driver to a media client device in response to a peripheral device interfacing with the media client device.",
	"url": null,
	"owner": "Scientific-Atlanta, LLC",
	"publication_number": "07765280",
	"publication_date": "2010-07-27",
	"application_number": "10289197",
	"application_date": "2002-11-06",
	"tags": null,
	"slug": "downloadable-remotely-stored-device-drivers-for-communication-with-settop-box-peripherals",
	"match_type": "description"
},
{
	"name": "Filling blank spaces of a display screen",
	"summary": "",
	"abstract": "Systems and methods, including methods performed by a processing device, are disclosed herein for filling the unused or blank spaces of a display screen. In one exemplary system, among others, the system comprises a display screen configured to display video images and a display screen controller configured to control the display screen. The display screen controller comprising a device for sampling a plurality of pixels from a stream of video images and a device for calculating an average color of the plurality of sampled pixels. Also, the display screen controller includes a device for adding color bands in unused portions of the display screen, the color bands comprising a color corresponding to the calculated average color. With the present system, the difference between the burn-in pattern of a video image and the unused portions of the display screen is reduced, thereby preserving the integrity of the display screen.",
	"url": null,
	"owner": "Scientific-Atlanta, LLC",
	"publication_number": "07742059",
	"publication_date": "2010-06-22",
	"application_number": "11427673",
	"application_date": "2006-06-29",
	"tags": null,
	"slug": "filling-blank-spaces-of-a-display-screen",
	"match_type": "description"
},
{
	"name": "Proactive rebooting in a set-top terminal and corresponding methods",
	"summary": "",
	"abstract": "A set-top terminal and related methods is provided that, in one embodiment, comprises a memory with proactive reboot logic and a processor configured with the proactive reboot logic to detect an indication of a critical condition associated with the set-top terminal, determine based on a current status of resources in the set-top terminal if a current time provides an opportunity for a reboot of the set-top terminal in a manner that reduces user intrusiveness, and effect a rebooting of the set-top terminal if the current time provides the opportunity, otherwise postponing the reboot.",
	"url": null,
	"owner": "Scientific-Atlanta, LLC",
	"publication_number": "07681028",
	"publication_date": "2010-03-16",
	"application_number": "11556277",
	"application_date": "2006-11-03",
	"tags": null,
	"slug": "proactive-rebooting-in-a-settop-terminal-and-corresponding-methods",
	"match_type": "description"
},
{
	"name": "Single command payload transfers block of security functions to a storage device",
	"summary": "",
	"abstract": "A storage device has a storage medium and a processor. The processor is disposed within the storage device and is adapted to receive multiple commands as a command block over an interface. The processor is adapted to extract each of the multiple commands from the single block for execution on the storage device.",
	"url": null,
	"owner": "Seagate Technology LLC",
	"publication_number": "07747874",
	"publication_date": "2010-06-29",
	"application_number": "11143862",
	"application_date": "2005-06-02",
	"tags": null,
	"slug": "single-command-payload-transfers-block-of-security-functions-to-a-storage-device",
	"match_type": "description"
},
{
	"name": "Forms for completion with an electronic writing device",
	"summary": "",
	"abstract": "Embodiments include an article of manufacture, apparatus, device, system, computer-program product, and method. In an embodiment, an article of manufacture includes a display surface that includes a machine-distinguishable form identifier keyed to an electronic version of the form and at least two fields. Each field of the at least two fields respectively includes a unique machine-distinguishable field identifier keyed to a field of the electronic version of a form, a content area that accepts a hand-formed entry, and a unique user-understandable field identifier.",
	"url": null,
	"owner": "Searete LLC",
	"publication_number": "07672512",
	"publication_date": "2010-03-02",
	"application_number": "11167058",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": "forms-for-completion-with-an-electronic-writing-device",
	"match_type": "description"
},
{
	"name": "Power sparing synchronous apparatus",
	"summary": "",
	"abstract": "Embodiments include a system, an apparatus, a device, and a method. An apparatus includes a synchronous circuit including a first subcircuit powered by a first power plane having a first power plane voltage and a second subcircuit powered by a second power plane having a second power plane voltage. The apparatus also includes an error detector operable to detect an incidence of a computational error occurring in the first subcircuit. The apparatus includes a controller operable to change the first power plane voltage based upon the detected incidence of a computational error. The apparatus also includes a power supply configured to electrically couple with a portable power source and operable to provide a selected one of at least two voltages to the first power plane in response to the controller.",
	"url": null,
	"owner": "Searete, LLC",
	"publication_number": "07653834",
	"publication_date": "2010-01-26",
	"application_number": "11384236",
	"application_date": "2006-03-17",
	"tags": null,
	"slug": "power-sparing-synchronous-apparatus",
	"match_type": "description"
},
{
	"name": "Context sensitive dynamic authentication in a cryptographic system",
	"summary": "",
	"abstract": "A system for performing authentication of a first user to a second user includes the ability for the first user to submit multiple instances of authentication data which are evaluated and then used to generate an overall level of confidence in the claimed identity of the first user. The individual authentication instances are evaluated based upon: the degree of match between the user provided by the first user during the authentication and the data provided by the first user during his enrollment; the inherent reliability of the authentication technique being used; the circumstances surrounding the generation of the authentication data by the first user; and the circumstances surrounding the generation of the enrollment data by the first user. This confidence level is compared with a required trust level which is based at least in part upon the requirements of the second user, and the authentication result is based upon this comparison.",
	"url": null,
	"owner": "Security First Corporation",
	"publication_number": "07802104",
	"publication_date": "2010-09-21",
	"application_number": "11839927",
	"application_date": "2007-08-16",
	"tags": null,
	"slug": "context-sensitive-dynamic-authentication-in-a-cryptographic-system",
	"match_type": "description"
},
{
	"name": "System and method for displaying a digital video sequence modified to compensate for perceived blur",
	"summary": "",
	"abstract": "A system for displaying a digital video sequence includes a graphics processing unit (GPU) and a display device. The GPU receives and modifies the digital video sequence to compensate for perceived blur based on motion between frames of the digital video sequence. The display device displays the modified digital video sequence. A method and computer readable medium having computer readable code is also provided.",
	"url": null,
	"owner": "Seiko Epson Corporation",
	"publication_number": "07843462",
	"publication_date": "2010-11-30",
	"application_number": "11852133",
	"application_date": "2007-09-07",
	"tags": null,
	"slug": "system-and-method-for-displaying-a-digital-video-sequence-modified-to-compensate-for-perceived-blur",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for verifying context participants in a context management system in a networked environment",
	"summary": "",
	"abstract": "Methods and apparatus related to context management in a networked environment are provided. According to one aspect, a technique is provided for facilitating communication between a client and a context management (CM) server, comprising establishing a network connection between the client and the CM server to enable communication, and maintaining the connection for the period of time during which the context is maintained. According to another aspect, a requested change in at least one aspect of a context is facilitated by publishing a change decision from the context management server to the participant applications. In another aspect, a technique is employed to verify that a remote application is emulated on the same client as at least one other application in a context by receiving from the client and the remote application server information that uniquely identifies the client. In a further aspect, a technique is employed for verifying that two remote applications are emulated on a same client by receiving information from the remote applications that uniquely identifies the client on which they are emulated.",
	"url": null,
	"owner": "Sentillion, Inc.",
	"publication_number": "07660845",
	"publication_date": "2010-02-09",
	"application_number": "10632690",
	"application_date": "2003-08-01",
	"tags": null,
	"slug": "methods-and-apparatus-for-verifying-context-participants-in-a-context-management-system-in-a-networked-environment",
	"match_type": "description"
},
{
	"name": "Method and system for object-oriented management of multi-dimensional data",
	"summary": "",
	"abstract": "Methods and systems for managing and analyzing multi-dimensional data are provided. Example embodiments provide a Meta-Object Data Management System u201cMODMS,u201d which enables users to arrange and to rearrange hierarchical relationships of the data on an ad-hoc basis and allows the data to be analyzed using any set of attributes (dimensions) while the system is running. The MODMS represents heterogeneous data in a normalized (standardized) fashion using an object type management system that allows the arbitrary coercion of one type of object into another different type of object and automatically resolves attribute dependencies. In one embodiment, the MODMS comprises an object type management subsystem; a meta-object instantiation subsystem; one or more data repositories; and an input/output interface. These components cooperate to allow the creation, management, and analysis of relationships between many different types of single and multi-dimensional data. The MODMS may be used to implement an enterprise portfolio management system.",
	"url": null,
	"owner": "Serena Software, Inc.",
	"publication_number": "07853508",
	"publication_date": "2010-12-14",
	"application_number": "10613534",
	"application_date": "2003-07-03",
	"tags": null,
	"slug": "method-and-system-for-objectoriented-management-of-multidimensional-data",
	"match_type": "description"
},
{
	"name": "Method and system for object-oriented workflow management of multi-dimensional data",
	"summary": "",
	"abstract": "Methods and systems for managing and analyzing multi-dimensional data are provided. Example embodiments provide a Meta-Object Data Management System u201cMODMS,u201d which enables users to arrange and to rearrange the hierarchical relationships of the data on an ad-hoc basis and allows the data to be analyzed using any set of attributes (dimensions) while the system is running. The MODMS represents heterogeneous data in a normalized (standardized) fashion using an object type management system that allows the coercion of one type of object into another different type of object and automatically resolves attribute dependencies. The MODMS supports object transitions for transforming an object from one type to another based upon meeting a defined set of criteria and subject to approval by designated entities. In one embodiment, the MODMS is used to implement an enterprise portfolio management system.",
	"url": null,
	"owner": "Serena Software, Inc.",
	"publication_number": "07778899",
	"publication_date": "2010-08-17",
	"application_number": "10894658",
	"application_date": "2004-07-19",
	"tags": null,
	"slug": "method-and-system-for-objectoriented-workflow-management-of-multidimensional-data",
	"match_type": "description"
},
{
	"name": "Distributed peripheral device control system and method",
	"summary": "",
	"abstract": "A distributed peripheral device control method for controlling the interaction between an information device and a peripheral device in communication with the information device, comprising requesting the peripheral device to perform a specified task, sending device identification information identifying the peripheral device to a server, selecting a device driver corresponding to the peripheral device in dependence upon the device identification information, establishing a virtual port at the server to form part of a communications link between the server and the information device and associating the virtual port with the selected device driver, employing the server to perform, using the selected device driver, peripheral device-dependent processing operations relating to the performance of the task to produce device-dependent data, and sending the device-dependent data to the virtual port for onward transmission to the peripheral device via the information device to enable the peripheral device to perform the specified task.",
	"url": null,
	"owner": "Sharp Kabushiki Kaisha",
	"publication_number": "07688461",
	"publication_date": "2010-03-30",
	"application_number": "10828111",
	"application_date": "2004-04-20",
	"tags": null,
	"slug": "distributed-peripheral-device-control-system-and-method",
	"match_type": "description"
},
{
	"name": "Dual-plane graphics",
	"summary": "",
	"abstract": "Two or more graphics planes are combined according to a scheme that circumvents mixing of certain regions to conserve resources. Although some mixing is circumvented, the outputted display image remains visually adequate.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07746357",
	"publication_date": "2010-06-29",
	"application_number": "11382989",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "dualplane-graphics",
	"match_type": "description"
},
{
	"name": "Television having a java engine and a removable device port",
	"summary": "",
	"abstract": "Method and apparatus for use with televisions having an internal Java engine are included among the embodiments. In exemplary systems, a PCMCIA port allows the Java engine to load and execute Java applets selected by the viewer. Provision is made for system-aware applets to run concurrently with platform-independent applets on different Java display planes that are merged for display. Other embodiments are described and claimed.",
	"url": null,
	"owner": "Sharp Laboratories of America, Inc.",
	"publication_number": "07719617",
	"publication_date": "2010-05-18",
	"application_number": "11735949",
	"application_date": "2007-04-16",
	"tags": null,
	"slug": "television-having-a-java-engine-and-a-removable-device-port",
	"match_type": "description"
},
{
	"name": "Secure payment card transactions",
	"summary": "",
	"abstract": "Payment card transactions at a point of sale (POS) are secured in certain embodiments by intercepting, with a POS security layer installed on a POS terminal, payment data from the POS terminal, transmitting the payment data from the POS security layer to a server security application installed on a POS server, and providing false payment data from the POS security layer to a POS terminal application installed on the POS terminal. The false payment data in various embodiments is processed as if it were the payment data, such that the POS terminal transmits an authorization request to the POS server using the false payment data. In addition, the authorization request may be transmitted from the POS server to a payment gateway.",
	"url": null,
	"owner": "Shift4 Corporation",
	"publication_number": "07770789",
	"publication_date": "2010-08-10",
	"application_number": "11750239",
	"application_date": "2007-05-17",
	"tags": null,
	"slug": "secure-payment-card-transactions",
	"match_type": "description"
},
{
	"name": "Secure payment card transactions",
	"summary": "",
	"abstract": "Payment card transactions at a point of sale (POS) are secured in certain embodiments by intercepting, with a POS security layer installed on a POS terminal, payment data from the POS terminal, transmitting the payment data from the POS security layer to a server security application installed on a POS server, and providing false payment data from the POS security layer to a POS terminal application installed on the POS terminal. The false payment data in various embodiments is processed as if it were the payment data, such that the POS terminal transmits an authorization request to the POS server using the false payment data. In addition, the authorization request may be transmitted from the POS server to a payment gateway.",
	"url": null,
	"owner": "Shift4 Corporation",
	"publication_number": "07841523",
	"publication_date": "2010-11-30",
	"application_number": "11750184",
	"application_date": "2007-05-17",
	"tags": null,
	"slug": "secure-payment-card-transactions",
	"match_type": "description"
},
{
	"name": "Remote control server, center server, and system constituted them",
	"summary": "",
	"abstract": "A system for autonomous decentralized control in which a client terminal and a center server are connected, as a network through a WAN and/or LAN, to a remote control server connected to a monitored/-controlled target device through a control communication network. The system is characterized in that a virtual machine, which is described as the other self of the monitored/controlled target device having the same information as that possessed by the monitored/controlled target device, and which is a software object having communication protocols used for communication with the monitored/controlled target device and concealed in the software object, is moved in the system with transparency and/or is held in the client terminal, the center server, or the remote control server.",
	"url": null,
	"owner": "Shikoku Instrumentation Co., Ltd.",
	"publication_number": "07712095",
	"publication_date": "2010-05-04",
	"application_number": "10344692",
	"application_date": "2001-08-24",
	"tags": null,
	"slug": "remote-control-server-center-server-and-system-constituted-them",
	"match_type": "description"
},
{
	"name": "Computing system and method to perform compile-time extension for world wide web application",
	"summary": "",
	"abstract": "Methods and apparatuses for extending a web-based application class by performing a compile-time extension that is communicated from a client device, having a compiler implemented thereon, to a server device via a remote procedure call.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07853933",
	"publication_date": "2010-12-14",
	"application_number": "09970006",
	"application_date": "2001-09-29",
	"tags": null,
	"slug": "computing-system-and-method-to-perform-compiletime-extension-for-world-wide-web-application",
	"match_type": "description"
},
{
	"name": "Cross-reference service",
	"summary": "",
	"abstract": "A method and system for providing an integration environment in which integration processes can be developed independent of integration servers and applications. The integration environment provides an application service interface for each application that is independent of the integration servers. An integration process that is developed to use the application service interface is compatible with any integration server that supports the applications that the integration process accesses. The integration environment provides a common service interface for each type of application. The common service interface is independent of the application that is providing the service and is also independent of the integration server. Thus, an integration process developed to use the common service interface is compatible with any application of the appropriate type and any integration server.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07716675",
	"publication_date": "2010-05-11",
	"application_number": "10652575",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": "crossreference-service",
	"match_type": "description"
},
{
	"name": "Extensible interface for inter-module communication",
	"summary": "",
	"abstract": "A method and apparatus for inter-module communication is disclosed. The method includes forming a message that includes customer relations management system information. The customer relations management system information may include, for example, agent information, work item information, queuing information, statistical information, connection information or rule information, among other such information. The message can be communicated in order to perform a function, such as an agent-related function, a work item-related function, a statistics-related function or an administrative function, for example. The message can be, for example, a command, a request or a notification.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07730204",
	"publication_date": "2010-06-01",
	"application_number": "09823678",
	"application_date": "2001-03-31",
	"tags": null,
	"slug": "extensible-interface-for-intermodule-communication",
	"match_type": "description"
},
{
	"name": "Polylingual simultaneous shipping of software",
	"summary": "",
	"abstract": "Systems and methods for software development in which the development of a base product proceeds concurrently with the internationalization and localization of the base product to produce multiple language versions of the product for polylingual simultaneous shipment to customers wherein one or more of the multiple languages can be uploaded by the customer in a single installation process.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07761288",
	"publication_date": "2010-07-20",
	"application_number": "09845785",
	"application_date": "2001-04-30",
	"tags": null,
	"slug": "polylingual-simultaneous-shipping-of-software",
	"match_type": "description"
},
{
	"name": "Universal application network architecture",
	"summary": "",
	"abstract": "A method and system for providing an integration environment in which integration processes can be developed independent of integration servers and applications. The integration environment provides an application service interface for each application that is independent of the integration servers. An integration process that is developed to use the application service interface is compatible with any integration server that supports the applications that the integration process accesses. The integration environment provides a common service interface for each type of application. The common service interface is independent of the application that is providing the service and is also independent of the integration server. Thus, an integration process developed to use the common service interface is compatible with any application of the appropriate type and any integration server.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07694314",
	"publication_date": "2010-04-06",
	"application_number": "10653028",
	"application_date": "2003-08-28",
	"tags": null,
	"slug": "universal-application-network-architecture",
	"match_type": "description"
},
{
	"name": "User interface for processing requests for approval",
	"summary": "",
	"abstract": "A facility for presenting approval requests is described. The facility simultaneously displays information describing both a first approval request and a second approval request, where the first approval request is generated using a first application program, and the second approval request is generated using a second application program that is distinct from the first application program.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07672853",
	"publication_date": "2010-03-02",
	"application_number": "10112415",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": "user-interface-for-processing-requests-for-approval",
	"match_type": "description"
},
{
	"name": "User interface with context-based communication using media prediction",
	"summary": "",
	"abstract": "A method, system, computer system, and computer program product provide a context-sensitive user interface. The context in which the user interface operates is used to predict a media type of a communication channel that can be used for communicating via the user interface. Examples of media types include telephone, web chat, and web collaboration. The communication is facilitated according to the media type predicted. For example, an object of the user interface can be activated to enable communication according to the media type, or the user interface can initiate the communication via the communication channel. The user interface can be used for communicating with multiple communication channels of different media types. The context can include data presented by the user interface, data entered using the user interface, data selected using the user interface, and an action performed using the user interface.",
	"url": null,
	"owner": "Siebel Systems, Inc.",
	"publication_number": "07788679",
	"publication_date": "2010-08-31",
	"application_number": "10458541",
	"application_date": "2003-06-10",
	"tags": null,
	"slug": "user-interface-with-contextbased-communication-using-media-prediction",
	"match_type": "description"
},
{
	"name": "Automatic indexing of digital image archives for content-based, context-sensitive searching",
	"summary": "",
	"abstract": "A method is for automatically indexing multimedia data archives and categorizing the files held therein and also to a client/server architecture in an image retrieval system for content-based searching for relevant files in a particular format and having a particular file structure. The parsed files stored in a data archive managed by the document management system are subjected to a feature extraction algorithm. The features obtained are then used for producing a binary-coded inverted index which includes elements of at least two attributes and holds context information which is held in these files and is needed for content-based image retrieval. If new files or files with an extended or modified content are stored in the data archive, then it involves a parsing algorithm and also an algorithm for automatically extracting features of these files being executed under event control during every storage process, in order to extend the inverted index by individual attributes or in order to update particular elements of already existing index attributes.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07689544",
	"publication_date": "2010-03-30",
	"application_number": "10897102",
	"application_date": "2004-07-23",
	"tags": null,
	"slug": "automatic-indexing-of-digital-image-archives-for-contentbased-contextsensitive-searching",
	"match_type": "description"
},
{
	"name": "Data mart generation and use in association with an operations intelligence platform",
	"summary": "",
	"abstract": "Some embodiments include determination and storage of a plurality of relational database tables based on class model representing tag-based data and non-tag-based data and on a plurality of objects instantiated based on the class model. Also included are reception of a selection of one object of the objects as a dimension of a logical model, reception of a first indication of a first plurality of members of the selected object to be associated with dimension data of the logical model, reception of a second indication of a second plurality of members of the selected object to be associated with fact data of the logical model, to create a dimension table associated with the selected object and including columns corresponding to the first plurality of members, and creation of a fact table including a foreign key column corresponding to the dimension table and including a column corresponding to each of the second plurality of members.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07840607",
	"publication_date": "2010-11-23",
	"application_number": "11195439",
	"application_date": "2005-08-02",
	"tags": null,
	"slug": "data-mart-generation-and-use-in-association-with-an-operations-intelligence-platform",
	"match_type": "description"
},
{
	"name": "Management of component members using tag attributes",
	"summary": "",
	"abstract": "A system to associate a plurality of members with a component, associate a member type with one of the plurality of members, and associate a value tag attribute with the one of the plurality of members. Some aspects include receipt of an instruction to access data associated with a member of a component, determination of whether the member is associated with a first tag attribute, and issuance, if the member is associated with the first tag, of a first query for the data associated with the member of the component and for data associated with each other member of the component that is associated with a respective tag attribute.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07814123",
	"publication_date": "2010-10-12",
	"application_number": "11004493",
	"application_date": "2004-12-02",
	"tags": null,
	"slug": "management-of-component-members-using-tag-attributes",
	"match_type": "description"
},
{
	"name": "Method and system for driving an indicating element on a terminal",
	"summary": "",
	"abstract": "A terminal operated at a switching facility has at least one indicating element which indicates operating modes of another terminal allocated to the indicating element. The other terminal is operated at another switching facility. Calls to the other terminal may be picked up by operating a function element, e.g., pressing a key, associated with the indicating element that indicates the operating modes of the other terminal, when an incoming call to the other terminal is indicated.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07751544",
	"publication_date": "2010-07-06",
	"application_number": "10268088",
	"application_date": "2002-10-10",
	"tags": null,
	"slug": "method-and-system-for-driving-an-indicating-element-on-a-terminal",
	"match_type": "description"
},
{
	"name": "Method for controlling access to the resources of a data processing system, data processing system, and computer program",
	"summary": "",
	"abstract": "In a data processing system with at least one data processing device, a large number of databases allocated to the data processing system and having user-specific data are linked together for forming a single resulting user database. Access permissions for resources provided by the at least one data processing device are awarded by predefined user roles. At least one user role is allocated to at least one user of the data processing system.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07730093",
	"publication_date": "2010-06-01",
	"application_number": "10255078",
	"application_date": "2002-09-26",
	"tags": null,
	"slug": "method-for-controlling-access-to-the-resources-of-a-data-processing-system-data-processing-system-and-computer-program",
	"match_type": "description"
},
{
	"name": "Multiplanar reformatting visualization with multiple scrolling speeds",
	"summary": "",
	"abstract": "Multiplanar reformatting visualization is provided with multiple scrolling speeds. A plurality of buffers is provided. Each buffer stores composites of data from different planes. The amount of compositing to generate a total composite for a visualization may be less since the division into partial composites may reduce addition and subtraction or other compositing operations. One level of partial composite buffers may be used. The total is recomputed for each visualization. In other embodiments, a hierarchal buffer structure is used. For example, a total composite buffer is provided in addition to the partial composite buffers. By re-compositing the partial composites before and after adjustment for scrolling increment from the total composite buffer, the total composite is updated for scrolling. Two or more levels of buffers may be used.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07808514",
	"publication_date": "2010-10-05",
	"application_number": "11753663",
	"application_date": "2007-05-25",
	"tags": null,
	"slug": "multiplanar-reformatting-visualization-with-multiple-scrolling-speeds",
	"match_type": "description"
},
{
	"name": "Tag modeling within a decision, support, and reporting environment",
	"summary": "",
	"abstract": "A system and methods for retrieving and presenting data in a tag-based component environment. The disclosed system provides an efficient mechanism for associating point and non-point data using selected modeling approaches to organize and reference the data. The modeling approaches provide the ability generate customized retrieval routines that support reusable components incorporating direct and indirect referencing techniques.",
	"url": null,
	"owner": "Siemens Aktiengesellschaft",
	"publication_number": "07689579",
	"publication_date": "2010-03-30",
	"application_number": "10993709",
	"application_date": "2004-11-19",
	"tags": null,
	"slug": "tag-modeling-within-a-decision-support-and-reporting-environment",
	"match_type": "description"
},
{
	"name": "Systems and methods for programming motion control",
	"summary": "",
	"abstract": "Systems, methods and computer program code for the programming of motion control in load transportation systems are provided which may include programming motion control by specifying desired load motions.",
	"url": null,
	"owner": "Siemens Corporation",
	"publication_number": "07765025",
	"publication_date": "2010-07-27",
	"application_number": "11893166",
	"application_date": "2007-08-14",
	"tags": null,
	"slug": "systems-and-methods-for-programming-motion-control",
	"match_type": "description"
},
{
	"name": "Apparatus and method for automatic conference initiation",
	"summary": "",
	"abstract": "In some embodiments, an automatic conference initiator system may include one or more of the following features: (a) a memory having, (i) an automatic conference initiator program that initiates a conference when conferees are determined available based upon presence information, and (b) a processor coupled to the memory that executes the automatic conference initiator program.",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07848265",
	"publication_date": "2010-12-07",
	"application_number": "11524593",
	"application_date": "2006-09-21",
	"tags": null,
	"slug": "apparatus-and-method-for-automatic-conference-initiation",
	"match_type": "description"
},
{
	"name": "System and method for e-mail control of an integrated communications center",
	"summary": "",
	"abstract": "A system and method for e-mail control of a digital personal video stream manager (), for example, to program a video recording device (). The system includes a personal computer () having an e-mail client () and equipping the e-mail client with a DPVSM control plug in (). The DPVSM control plug in () is adapted to identify a special DPVSM control e-mail () which is then translated by the DPVSM control program (). The digital personal video stream manager () then activates at the appropriate time to record the program.",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07761898",
	"publication_date": "2010-07-20",
	"application_number": "10384482",
	"application_date": "2003-03-07",
	"tags": null,
	"slug": "system-and-method-for-email-control-of-an-integrated-communications-center",
	"match_type": "description"
},
{
	"name": "System and method for e-mail presence confirmation",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of electronic messaging clients (); at least one messaging server () having an e-mail presence activation module () adapted to receive an e-mail and determine therefrom whether a presence of a recipient is to be determined, and a presence module () responsive to controls from the e-mail presence activation module and adapted to determine a presence of a recipient of said e-mail prior to sending the e-mail to the recipient. In one embodiment, the e-mail presence activation module () is adapted to read a priority level of the e-mail message to determine whether to check a presence of the recipient.",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07761516",
	"publication_date": "2010-07-20",
	"application_number": "10383800",
	"application_date": "2003-03-06",
	"tags": null,
	"slug": "system-and-method-for-email-presence-confirmation",
	"match_type": "description"
},
{
	"name": "System and method for global positioning system (GPS) based presence",
	"summary": "",
	"abstract": "A telecommunications system includes a plurality of network clients () including a positioning controller () and a communications controller (); and a positioning server () including a coordinating controller () for maintaining a database of network clients to be tracked and provide updates of position-related information to a presence server (). The plurality of network clients () are configured to transmit position information received via the positioning controller () to the positioning server () using the communications controller ().",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07848761",
	"publication_date": "2010-12-07",
	"application_number": "10672641",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": "system-and-method-for-global-positioning-system-gps-based-presence",
	"match_type": "description"
},
{
	"name": "System and method for intelligent multimedia conference collaboration summarization",
	"summary": "",
	"abstract": "A telecommunications system includes a network () and a multimedia server () operably coupled to the network. The multimedia server () is adapted to manage a multimedia conference and includes a memory () for storing selectable portions of the multimedia conference. The system further includes one or more client devices () operably coupled to the network and adapted to set recording cues for choosing portions of said multimedia conference for playback. The multimedia server or clients may include a voice recognition system () for transcribing audio portions of the conference. The voice recognition system may further be used to detect instances of the recording cues.",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07756923",
	"publication_date": "2010-07-13",
	"application_number": "10316279",
	"application_date": "2002-12-11",
	"tags": null,
	"slug": "system-and-method-for-intelligent-multimedia-conference-collaboration-summarization",
	"match_type": "description"
},
{
	"name": "System and method for presence alarming",
	"summary": "",
	"abstract": "A telecommunications system includes a wireless device () including a positioning controller () and a communications controller (), said wireless device adapted to cause an audible warning to be generated if said wireless device is determined to be outside a first predetermined range; and an administrative device (-) for receiving alerts from said wireless communication device via said communications controller when said positioning controller determines that said wireless device is outside said first predetermined range for longer than a predetermined period or is outside said first predetermined range and a second predetermined range.",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07848760",
	"publication_date": "2010-12-07",
	"application_number": "10672106",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": "system-and-method-for-presence-alarming",
	"match_type": "description"
},
{
	"name": "System and method for voice portal control of an integrated communications center",
	"summary": "",
	"abstract": "A system for voice portal-based control of a digital personal video stream manager (), for example, to program a video recording device (). Such a system includes a DPVSM control module () at a server () of a service provider. The DPVSM control module () is adapted to respond to a user calling in a predetermined phone number and using an interactive voice response system, issue prompts and accept inputs for DPVSM control. The DPVSM control module () then converts the inputs to a DPVSM Instant Message or a DPVSM e-mail control message. The DPVSM Instant Message or a DPVSM e-mail control message is then transmitted to the user's personal computer (), where the IM or e-mail plug in translates it and uses it to control the DPVSM ().",
	"url": null,
	"owner": "Siemens Enterprise Communications, Inc.",
	"publication_number": "07787749",
	"publication_date": "2010-08-31",
	"application_number": "10384335",
	"application_date": "2003-03-07",
	"tags": null,
	"slug": "system-and-method-for-voice-portal-control-of-an-integrated-communications-center",
	"match_type": "description"
},
{
	"name": "Range-peeling for punching masks in volume rendering",
	"summary": "",
	"abstract": "Rendering with a punching mask is performed without voxelization. A plurality of sub-volumes are identified as a function of the punching mask. The sub-volumes are generally layered in range. Each sub-volume is rendered separately or independently. The renderings from multiple passes or sub-volumes are composited together.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07773086",
	"publication_date": "2010-08-10",
	"application_number": "11687728",
	"application_date": "2007-03-19",
	"tags": null,
	"slug": "rangepeeling-for-punching-masks-in-volume-rendering",
	"match_type": "description"
},
{
	"name": "Surface parameter adaptive ultrasound image processing",
	"summary": "",
	"abstract": "The depth buffer of a GPU is used to derive a surface normal or other surface parameter, avoiding or limiting computation of spatial gradients in 3D data sets and extra loading of data into the GPU. The surface parameter is used: to add shading with lighting to volume renderings of ultrasound data in real time, to angle correct velocity estimates, to adapt filtering or to correct for insonifying-angle dependent gain and compression. For border detection and segmentation, intersections with a volume oriented as a function of target structure, such as cylinders oriented relative to a vessel, are used for rendering. The intersections identify data for loading into the frame buffer for rendering.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07764818",
	"publication_date": "2010-07-27",
	"application_number": "11157412",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": "surface-parameter-adaptive-ultrasound-image-processing",
	"match_type": "description"
},
{
	"name": "System for managing healthcare data including genomic and other patient specific information",
	"summary": "",
	"abstract": "A system, for processing patient medical information for storage in an electronic patient medical record repository, includes an interface, a repository, and a data processor. The interface receives data representing genomic information of a patient. The repository includes a patient record incorporating data representing genomic information specific to a particular patient. A data processor compares the genomic information specific to a particular patient with the received genomic information. The data processor identifies a genomic match in response to the comparison and predetermined matching criteria. The data processor initiates processing of patient record information specific to the particular patient in response to an identified match.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07788040",
	"publication_date": "2010-08-31",
	"application_number": "11016038",
	"application_date": "2004-12-17",
	"tags": null,
	"slug": "system-for-managing-healthcare-data-including-genomic-and-other-patient-specific-information",
	"match_type": "description"
},
{
	"name": "Volume rendering processing distribution in a graphics processing unit",
	"summary": "",
	"abstract": "An intersection of a cut plane with a proxy geometry representing a scan volume is determined with a processor. The intersection is simplified, such as identifying a quadrilateral or triangle most closely enclosing the intersection. The vertex processor of a GPU deforms a reference grid and determines Cartesian coordinates and the texture coordinates for grid points of the reference grid as a function of the input intersection. The vertex processor provides coordinates for data for subsets of cut planes. The fragment processor inputs the texture coordinates and retrieves the data from the texture memory. The data is blended. The blended subsets are then blended together in the frame buffer of the GPU.",
	"url": null,
	"owner": "Siemens Medical Solutions USA, Inc.",
	"publication_number": "07714855",
	"publication_date": "2010-05-11",
	"application_number": "11126043",
	"application_date": "2005-05-09",
	"tags": null,
	"slug": "volume-rendering-processing-distribution-in-a-graphics-processing-unit",
	"match_type": "description"
},
{
	"name": "System and method for 3D radar image rendering",
	"summary": "",
	"abstract": "A 3D rendered image of a radar-scanned terrain surface is provided from a radar return signal from the surface, wherein the return signal includes data indicative of azimuth, elevation, and range of a radar-illuminated area of the surface. The data are processed for transformation into X, Y, and Z coordinates. The X and Y coordinates corresponding to each illuminated area are triangulated so as to create a mesh of triangles representing the terrain surface, each of the triangles in the mesh being defined by a vertex triplet. 3D imaging information (grey scale shading and/or coloring information) is added to each triangle in the mesh, based on the amplitude of the radar return signal from the coordinates represented by each vertex in the triplet and the value of the Z coordinate at each vertex, so as to form the 3D rendered image.",
	"url": null,
	"owner": "Sierra Nevada Corporation",
	"publication_number": "07688248",
	"publication_date": "2010-03-30",
	"application_number": "12277111",
	"application_date": "2008-11-24",
	"tags": null,
	"slug": "system-and-method-for-3d-radar-image-rendering",
	"match_type": "description"
},
{
	"name": "Quality of service application programming interface over socket",
	"summary": "",
	"abstract": "Disclosed is a Quality of Service (QoS) control mechanism for QoS-aware network applications running on computer devices. The mechanism provides IP socket-based QoS Application Program Interfaces (APIs) for QoS-aware applications for accessing MAC layer QoS function of network access devices. In various embodiments, the QoS mechanism utilizes QoS API over Socket (QAoS) handler and/or a MAC layer QAoS handler wrapper at the network access device to control and monitor the QoS data being transmitted by the application over the active network interface(s).",
	"url": null,
	"owner": "Sierra Wireless, Inc.",
	"publication_number": "07830804",
	"publication_date": "2010-11-09",
	"application_number": "12009231",
	"application_date": "2008-01-16",
	"tags": null,
	"slug": "quality-of-service-application-programming-interface-over-socket",
	"match_type": "name"
},
{
	"name": "Redirection of notifications to a wireless user device",
	"summary": "",
	"abstract": "Redirecting a notification to a wireless user device includes registering for notification of incoming messages for an account on a message server, the incoming messages being directed to an account on the message server. The redirecting also includes receiving at least one notification and redirecting the at least one notification through a firewall to a wireless user device associated with the account. The remote message server is in communication with a network protected by the firewall. According to one aspect, a cradle is configured to perform the redirection. According to another aspect, the cradle is associated with a remote desktop computer in communication with the network.",
	"url": null,
	"owner": "Sierra Wireless, Inc.",
	"publication_number": "07836131",
	"publication_date": "2010-11-16",
	"application_number": "10280878",
	"application_date": "2002-10-25",
	"tags": null,
	"slug": "redirection-of-notifications-to-a-wireless-user-device",
	"match_type": "description"
},
{
	"name": "Redirection of notifications to a wireless user device",
	"summary": "",
	"abstract": "Redirecting a notification to a wireless user device includes registering for notification of incoming messages for an account on a message server, the incoming messages being directed to an account on the message server. The redirecting also includes receiving at least one notification and redirecting the at least one notification through a firewall to a wireless user device associated with the account. The remote message server is in communication with a network protected by the firewall. According to one aspect, a cradle is configured to perform the redirection. According to another aspect, the cradle is associated with a remote desktop computer in communication with the network.",
	"url": null,
	"owner": "Sierra Wireless, Inc.",
	"publication_number": "07836138",
	"publication_date": "2010-11-16",
	"application_number": "11977967",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "redirection-of-notifications-to-a-wireless-user-device",
	"match_type": "description"
},
{
	"name": "Clustered filesystem with interruptible token acquisition",
	"summary": "",
	"abstract": "A cluster of computer system nodes share direct read/write access to storage devices via a storage area network using a cluster filesystem. Access to files on the storage devices is arbitrated by the cluster filesystem using tokens. Upon detection of a change in location of the metadata server, client nodes waiting for a token are interrupted to check on the status of at least one of data and node availability.",
	"url": null,
	"owner": "Silicon Graphics International",
	"publication_number": "07814058",
	"publication_date": "2010-10-12",
	"application_number": "11785256",
	"application_date": "2007-04-16",
	"tags": null,
	"slug": "clustered-filesystem-with-interruptible-token-acquisition",
	"match_type": "description"
},
{
	"name": "Messaging between heterogeneous clients of a storage area network",
	"summary": "",
	"abstract": "A cluster of computer system nodes connected by a storage area network transmit messages using a messaging protocol having multiple layers. The storage area network supports computer system nodes running different operating systems on different endian processors. A heartbeat signal is transmitted in a common wire format over the lowest level of the messaging protocol; however other messages between the nodes may be transmitted in a format different from the common wire format. The node receiving a message is responsible for converting the format as necessary in a layer just above the layer of the messaging protocol handling heartbeat signals. However, conversion may be performed by the sending node if the sending node knows the format used by the receiving node.",
	"url": null,
	"owner": "Silicon Graphics International",
	"publication_number": "07765329",
	"publication_date": "2010-07-27",
	"application_number": "10414245",
	"application_date": "2003-04-16",
	"tags": null,
	"slug": "messaging-between-heterogeneous-clients-of-a-storage-area-network",
	"match_type": "description"
},
{
	"name": "Display device configured such that an edge of print media is visible above an upper edge of the device",
	"summary": "",
	"abstract": "A display device for use as a computer monitor, the display device comprising:nn",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07692815",
	"publication_date": "2010-04-06",
	"application_number": "10922848",
	"application_date": "2004-08-23",
	"tags": null,
	"slug": "display-device-configured-such-that-an-edge-of-print-media-is-visible-above-an-upper-edge-of-the-device",
	"match_type": "description"
},
{
	"name": "Printing and display device incorporating at least two printheads",
	"summary": "",
	"abstract": "A printer configured to receive documents to be printed from a computer system, the printer including an interface, and being configured to: receive, via the interface, input from a user indicative of a print command; send, from the printer to the c A printing and display device comprising: a flat panel display for displaying images from a computer; and a printer, the printer including at least two the printheads, the printheads being disposed on either side of a path through which print media is fed for printing, thereby enabling substantially simultaneous printing of both sides of the print media.",
	"url": null,
	"owner": "Silverbrook Research Pty Ltd",
	"publication_number": "07661779",
	"publication_date": "2010-02-16",
	"application_number": "10803078",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": "printing-and-display-device-incorporating-at-least-two-printheads",
	"match_type": "description"
},
{
	"name": "Layered host based satellite positioning solutions",
	"summary": "",
	"abstract": "Methods and systems consistent with the present invention provide a host based positioning system. The host based positioning system includes a tracker hardware interface that connects to a dedicated hardware space vehicle tracker. The tracker hardware interface receives positioning information from the space vehicle tracker. The host based positioning system includes a layered approach to enable user applications on a host computer to access data from tracker hardware.",
	"url": null,
	"owner": "Sirf Technology, Inc.",
	"publication_number": "07813875",
	"publication_date": "2010-10-12",
	"application_number": "10269105",
	"application_date": "2002-10-10",
	"tags": null,
	"slug": "layered-host-based-satellite-positioning-solutions",
	"match_type": "description"
},
{
	"name": "RFID reader operating system and associated architecture",
	"summary": "",
	"abstract": "A framework structure for controlling an RFID device including a platform comprising an RFID radio. The structure comprises a layered framework including a first layer, with at least one functional module comprising a device driver, communicatively coupled with the platform; and a second layer, with at least one functional module comprising an API, communicatively coupled with the first layer and with an application for controlling the RFID device.",
	"url": null,
	"owner": "SkyeTek, Inc.",
	"publication_number": "07659819",
	"publication_date": "2010-02-09",
	"application_number": "11387421",
	"application_date": "2006-03-23",
	"tags": null,
	"slug": "rfid-reader-operating-system-and-associated-architecture",
	"match_type": "description"
},
{
	"name": "Location-based services that choose location algorithms based on number of detected access points within range of user device",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, periodically receive the GPS coordinates of the GPS device. While traversing the target area, detecting Wi-Fi signals from Wi-Fi access points in range of the Wi-Fi device and recording identity information of the detected Wi-Fi access point in conjunction with GPS location information of the vehicle when the detection of the Wi-Fi access point was made. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07769396",
	"publication_date": "2010-08-03",
	"application_number": "11950178",
	"application_date": "2007-12-04",
	"tags": null,
	"slug": "locationbased-services-that-choose-location-algorithms-based-on-number-of-detected-access-points-within-range-of-user-device",
	"match_type": "description"
},
{
	"name": "Location-based services that choose location algorithms based on number of detected wireless signal stations within range of user device",
	"summary": "",
	"abstract": "A location beacon database and server, method of building location beacon database, and location based service using same. Wi-Fi access points are located in a target geographical area to build a reference database of locations of Wi-Fi access points. At least one vehicle is deployed including at least one scanning device having a GPS device and a Wi-Fi radio device and including a Wi-Fi antenna system. The target area is traversed in a programmatic route to avoid arterial bias. The programmatic route includes substantially all drivable streets in the target geographical area and solves an Eulerian cycle problem of a graph represented by said drivable streets. While traversing the target area, periodically receive the GPS coordinates of the GPS device. While traversing the target area, detecting Wi-Fi signals from Wi-Fi access points in range of the Wi-Fi device and recording identity information of the detected Wi-Fi access point in conjunction with GPS location information of the vehicle when the detection of the Wi-Fi access point was made. The location information is used to reverse triangulate the position of the detected Wi-Fi access point; and the position of the detected access point is recorded in a reference database.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07818017",
	"publication_date": "2010-10-19",
	"application_number": "11950242",
	"application_date": "2007-12-04",
	"tags": null,
	"slug": "locationbased-services-that-choose-location-algorithms-based-on-number-of-detected-wireless-signal-stations-within-range-of-user-device",
	"match_type": "description"
},
{
	"name": "System and method of improving sampling of WLAN packet information to improve estimates of Doppler frequency of a WLAN positioning device",
	"summary": "",
	"abstract": "Systems and methods of improving sampling of WLAN packet information to improve estimates of Doppler frequency of a WLAN positioning device. A device estimates the position of itself. The device includes a WLAN radio module for receiving WLAN signals transmitted by WLAN APs in range of said device, extraction logic for extracting information from said received WLAN signals to identify the WLAN APs, and logic to cooperate with a WLAN-based positioning system to estimate the position of the device based at least in part on the extracted information identifying the WLAN APs in the range of said device. The WLAN radio module includes logic for measuring multiple received signal strength indicator (RSSI) values for sufficiently long WLAN packets to increase the sampled rate of RSSI of WLAN packets from WLAN APs and to thereby improve an estimate of the Doppler frequency of said device.",
	"url": null,
	"owner": "Skyhook Wireless, Inc.",
	"publication_number": "07768963",
	"publication_date": "2010-08-03",
	"application_number": "11774399",
	"application_date": "2007-07-06",
	"tags": null,
	"slug": "system-and-method-of-improving-sampling-of-wlan-packet-information-to-improve-estimates-of-doppler-frequency-of-a-wlan-positioning-device",
	"match_type": "description"
},
{
	"name": "Automated billing and distribution platform for application providers",
	"summary": "",
	"abstract": "Systems and methods according to certain embodiments of the invention include integrating a network-enabled application with a platform having a plurality of users and a plurality of communication channels with a respective plurality of wireless network carriers. The systems and methods include providing a developer library for use by developers in creating their network-enabled applications.",
	"url": null,
	"owner": "SMS.ac, Inc.",
	"publication_number": "07860484",
	"publication_date": "2010-12-28",
	"application_number": "11702954",
	"application_date": "2007-02-06",
	"tags": null,
	"slug": "automated-billing-and-distribution-platform-for-application-providers",
	"match_type": "description"
},
{
	"name": "Systems and methods for automatic generation, registration and mobile phone billing of a pod using third party web page content",
	"summary": "",
	"abstract": "The systems and methods described herein generally relate to a method and system for automatically generating an application pod for a third party through which the third party's content is offered for access, purchase and use by mobile phone users within a community network. More specifically, the systems and methods described herein are directed to an application pod that can be automatically generated based on content and information retrieved from one or more web pages of the third party.",
	"url": null,
	"owner": "SMS.ac, Inc.",
	"publication_number": "07835720",
	"publication_date": "2010-11-16",
	"application_number": "11751538",
	"application_date": "2007-05-21",
	"tags": null,
	"slug": "systems-and-methods-for-automatic-generation-registration-and-mobile-phone-billing-of-a-pod-using-third-party-web-page-content",
	"match_type": "description"
},
{
	"name": "Call intercept methods, such as for customer self-support on a mobile device",
	"summary": "",
	"abstract": "A method for intercepting calls from a remote or mobile device for customer self-support detects when users or subscribers dial one or more predetermined numbers. If the number corresponds to one of the predetermined numbers (such as a customer support number), the phone may intercept the call and display a list of potential solutions to the subscriber's problems. Various other features and embodiments art disclosed.",
	"url": null,
	"owner": "SNAPin Software Inc.",
	"publication_number": "07676221",
	"publication_date": "2010-03-09",
	"application_number": "11765387",
	"application_date": "2007-06-19",
	"tags": null,
	"slug": "call-intercept-methods-such-as-for-customer-selfsupport-on-a-mobile-device",
	"match_type": "description"
},
{
	"name": "Method for performing interactive services on a mobile device, such as time or location initiated interactive services",
	"summary": "",
	"abstract": "A system for performing interactive services at a mobile device is disclosed. In some cases, the system receives an indication of an event, and provides interactive services to a user of the mobile device based on the event. In some cases, an indication of an event in invokes a script-based process that determines one or more actions to present to a user of the mobile device.",
	"url": null,
	"owner": "SNAPin Software Inc.",
	"publication_number": "07756545",
	"publication_date": "2010-07-13",
	"application_number": "11685108",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "method-for-performing-interactive-services-on-a-mobile-device-such-as-time-or-location-initiated-interactive-services",
	"match_type": "description"
},
{
	"name": "Automated real-time data stream switching in a shared virtual area communication environment",
	"summary": "",
	"abstract": "In one aspect, one or more real-time data stream connections that deliver a set of real-time data streams to a given network node are determined based at least in part on bandwidth capabilities of the given network node. In another aspect, for each of one or more recipient network nodes, a respective link over which to transmit a respective transmission set of one or more real-time data streams is determined. For each of the links, the respective link bandwidth is apportioned between one or more channels that are respectively allocated to the one or more real-time data streams in the respective transmission set.",
	"url": null,
	"owner": "Social Communications Company",
	"publication_number": "07844724",
	"publication_date": "2010-11-30",
	"application_number": "11923634",
	"application_date": "2007-10-24",
	"tags": null,
	"slug": "automated-realtime-data-stream-switching-in-a-shared-virtual-area-communication-environment",
	"match_type": "description"
},
{
	"name": "Automated real-time data stream switching in a shared virtual area communication environment",
	"summary": "",
	"abstract": "Switching real-time data stream connections between network nodes sharing a virtual area is described. In one aspect, the switching involves storing a virtual area specification. The virtual area specification includes a description of one or more switching rules each defining a respective connection between sources of a respective real-time data stream type and sinks of the real-time data stream type in terms of positions in the virtual area. Real-time data stream connections are established between network nodes associated with respective objects each of which is associated with at least one of a source and a sink of one or more of the real-time data stream types. The real-time data stream connections are established based on the one or more switching rules, the respective sources and sinks associated with the objects, and respective positions of the objects in the virtual area.",
	"url": null,
	"owner": "Social Communications Company",
	"publication_number": "07769806",
	"publication_date": "2010-08-03",
	"application_number": "11923629",
	"application_date": "2007-10-24",
	"tags": null,
	"slug": "automated-realtime-data-stream-switching-in-a-shared-virtual-area-communication-environment",
	"match_type": "description"
},
{
	"name": "Method and system for developing post-layout electronic data automation (EDA) applications",
	"summary": "",
	"abstract": "A method and system for processing geometrical layout design data to manufacture an electronic circuit is provided. The method includes extracting the geometrical layout design data from one or more data-format files. The method further includes segregating the geometrical layout design data extracted from one or more data-format files into each of a structural data, a spatial data, and a raw-geometry data. Thereafter, one or more predefined operations are performed on one or more of the structural data, the spatial data, and the raw-geometry data.",
	"url": null,
	"owner": "SoftJin Technologies Private Limited",
	"publication_number": "07818708",
	"publication_date": "2010-10-19",
	"application_number": "11912144",
	"application_date": "2006-11-10",
	"tags": null,
	"slug": "method-and-system-for-developing-postlayout-electronic-data-automation-eda-applications",
	"match_type": "description"
},
{
	"name": "Business method and system for serving third party software applications",
	"summary": "",
	"abstract": "A method and system for serving software applications to remote clients across the interne, for example, is disclosed that preferably utilizes standard, SMB (server message block), protocols, which are available in commercial operating systems. Further, an associated business method is described in which subscribing institutions can out-source the application serving to a third party institution, transparently. Finally, a port proxy system is provided that enables tunneling through firewalls that are configured to block communications from SMB ports.",
	"url": null,
	"owner": "Softricity, Inc.",
	"publication_number": "07730169",
	"publication_date": "2010-06-01",
	"application_number": "09527929",
	"application_date": "2000-03-17",
	"tags": null,
	"slug": "business-method-and-system-for-serving-third-party-software-applications",
	"match_type": "description"
},
{
	"name": "Serving software applications from servers for client computers",
	"summary": "",
	"abstract": "An application serving system is disclosed that comprises a target client computer that connects to a server system and subscribing institution host Web Server, over a network. Both the client computer Web server and server system implement a network protocol layer to communicate across the network. In a preferred embodiment, network is the Internet, or other public or private network, and the network protocol layers are implemented on top of TCP/IP or UDP/IP. Other network configurations and network protocols layers, however, could be implemented in place or in addition to the Internet such as wireless CDPD, GPRS, or other networks. The target, client computer is preferably a PC.",
	"url": null,
	"owner": "Softricity, Inc.",
	"publication_number": "07797372",
	"publication_date": "2010-09-14",
	"application_number": "12062038",
	"application_date": "2008-04-03",
	"tags": null,
	"slug": "serving-software-applications-from-servers-for-client-computers",
	"match_type": "description"
},
{
	"name": "Method and system for testing websites",
	"summary": "",
	"abstract": "A method and system is provided for testing and analyzing websites via a test-enabled web browser. In the representative embodiment a user controls a test-enabled web browser via a set of pull-down menus, thereby choosing between alternative testing and analysis functional capabilities, selecting files in which to store recordings (scripts), choosing files into which to place test results and messages, and setting various parameters that affect how the testing and analysis functions are performed. When the user requests it, the representative embodiment provides for deep recording of user interactions as they relate to a specific web page currently on display in the browser view area, for extracting key information from the current web page sufficient to validate that a future playback does or does not produce the same effects on the chosen website page, for playing back a prior recording to confirm that a website page continues to pass the user-defined tests, and for providing detailed analyses based on the specific contents of the current website page. The general result of systematic use of the test-enabled browser on websites is improved content quality, demonstrated website server behavior for deep tests, quicker delivery by the website server, and better serviceability for e-business.",
	"url": null,
	"owner": "Software Research, Inc.",
	"publication_number": "07757175",
	"publication_date": "2010-07-13",
	"application_number": "11758624",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "method-and-system-for-testing-websites",
	"match_type": "description"
},
{
	"name": "Content router with multiple forwarding elements instantiated on hardware entities",
	"summary": "",
	"abstract": "A carrier grade content router, includes a distinct management plane for housing externally visible management applications, and coordinating and relaying external management requests to appropriate underlying application code in the router; a distinct control plane for running control protocols required within an XML routed network; and a distinct data plane for receiving and forwarding customer data. Some functions can be implemented in software or via a hardware accelerator.",
	"url": null,
	"owner": "Solace Systems, Inc.",
	"publication_number": "07844733",
	"publication_date": "2010-11-30",
	"application_number": "11012169",
	"application_date": "2004-12-16",
	"tags": null,
	"slug": "content-router-with-multiple-forwarding-elements-instantiated-on-hardware-entities",
	"match_type": "description"
},
{
	"name": "Voice XML network gateway",
	"summary": "",
	"abstract": "A system () for controlling telecommunications calls includes a voice XML network gateway () including a voice interpreter module () and a call center server module () association with a telecommunications switch (). The voice interpreter module () receives voice telecommunications signals, and the call center server module () receives call center telecommunications data signals. Interpreting circuitry () interprets the voice telecommunications signals using the voice interpreter module in association speech recognition application (s) (). Call center service providing () means provides call center service in response to the call center telecommunications data signals in association with call center application program(s). Control circuitry () associated with the telecommunications network server () controls the interpreting circuitry () and the call center providing means () in response to the flow of telecommunications calls from the telecommunications switch () according to the capabilities of the at least one speech recognition application () and the at least one call center application program ().",
	"url": null,
	"owner": "Soleo Communications, Inc.",
	"publication_number": "07715547",
	"publication_date": "2010-05-11",
	"application_number": "10867231",
	"application_date": "2004-06-14",
	"tags": null,
	"slug": "voice-xml-network-gateway",
	"match_type": "description"
},
{
	"name": "Method and apparatus for network packet capture distributed storage system",
	"summary": "",
	"abstract": "This is invention comprises a method and apparatus for Infinite Network Packet Capture System (INPCS). The INPCS is a high performance data capture recorder capable of capturing and archiving all network traffic present on a single network or multiple networks. This device can be attached to Ethernet networks via copper or SX fiber via either a SPAN port () router configuration or via an optical splitter (). By this method, multiple sources or network traffic including gigabit Ethernet switches () may provide parallelized data feeds to the capture appliance (), effectively increasing collective data capture capacity. Multiple captured streams are merged into a consolidated time indexed capture stream to support asymmetrically routed network traffic as well as other merged streams for external consumption.",
	"url": null,
	"owner": "Solera Networks",
	"publication_number": "07684347",
	"publication_date": "2010-03-23",
	"application_number": "12469744",
	"application_date": "2009-05-21",
	"tags": null,
	"slug": "method-and-apparatus-for-network-packet-capture-distributed-storage-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for network packet capture distributed storage system",
	"summary": "",
	"abstract": "This is invention comprises a method an apparatus for Infinite Network Packet Capture System (INPCS). The INPCS is a high performance data capture recorder capable of capturing and archiving all network traffic present on a single network or multiple networks. This device can be attached to Ethernet networks via copper or SX fiber via either a SPAN port () router configuration or via an optical splitter (). By this method, multiple sources or network traffic including gigabit Ethernet switches () may provide parallelized data feeds to the capture appliance (), effectively increasing collective data capture capacity. Multiple captured streams are merged into a consolidated time indexed capture stream to support asymmetrically routed network traffic as well as other merged streams for external consumption.",
	"url": null,
	"owner": "Solera Networks, Inc.",
	"publication_number": "07855974",
	"publication_date": "2010-12-21",
	"application_number": "11632249",
	"application_date": "2005-12-16",
	"tags": null,
	"slug": "method-and-apparatus-for-network-packet-capture-distributed-storage-system",
	"match_type": "description"
},
{
	"name": "System, method and article of manufacture for remote control and navigation of local content",
	"summary": "",
	"abstract": "A system, method and article of manufacture are provided for use in playing back content. Some embodiments provide a method for use in content playback by accessing an embedded object embedded within object oriented programming stored on a portable storage media where the embedded object controls playback of content, communicating a navigation command from the embedded object within the object oriented programming to the content, altering a register in response to the navigation command communicated, and controlling the playback of the content in response to the altering of the register.",
	"url": null,
	"owner": "Sonic Solutions",
	"publication_number": "07711795",
	"publication_date": "2010-05-04",
	"application_number": "11278403",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "system-method-and-article-of-manufacture-for-remote-control-and-navigation-of-local-content",
	"match_type": "description"
},
{
	"name": "Method of maintaining a peer-to-peer relay network",
	"summary": "",
	"abstract": "A method of maintaining a peer-to-peer relay network includes sending a maintenance message from a peer computer system to each of one or more connected peer computer systems connected to the peer computer system and evaluating any responses received from the one or more connected peer computer systems. The connection between the peer computer system and a connected peer computer system is closed when the response from that connected peer computer system is not acceptable. Each peer computer system is connected to a number of other peer computer systems that is less than or equal to a connection limit and each peer computer system is configured to relay data to peer computer systems connected to that peer computer system according to a set of one or more relay rules.",
	"url": null,
	"owner": "Sony Computer Entertainment America LLC",
	"publication_number": "07792968",
	"publication_date": "2010-09-07",
	"application_number": "11895968",
	"application_date": "2007-08-28",
	"tags": null,
	"slug": "method-of-maintaining-a-peertopeer-relay-network",
	"match_type": "description"
},
{
	"name": "Broadcast messaging in peer to peer overlay network",
	"summary": "",
	"abstract": "Broadcast messages are efficiently directed to nodes of an overlay network. Broadcast messages include an End ID parameter specifying the range of key values for nodes that should receive the broadcast message. Each node of an overlay network maintains a list of finger nodes and their respective key values. Upon receiving a broadcast message, a node assigns a finger node a new End ID value based upon the End ID value of the broadcast message or the key value of an adjacent finger node. The node compares a finger node's new End ID value with the finger node's key value to determine whether to forward the broadcast message to that finger node. A broadcast message forwarded to a finger node includes an End ID parameter equal to the new End ID value determined for the finger node. Nodes can aggregate response messages from its finger nodes.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07729280",
	"publication_date": "2010-06-01",
	"application_number": "12330267",
	"application_date": "2008-12-08",
	"tags": null,
	"slug": "broadcast-messaging-in-peer-to-peer-overlay-network",
	"match_type": "description"
},
{
	"name": "Method and system for identifying available resources in a peer-to-peer network",
	"summary": "",
	"abstract": "A method for a peer of a peer-to-peer network to search for an available resource is provided. The method initiates with representing a request for the available resource as a request bit string. The method includes transmitting the request to a parent of the peer. Then, an aggregate availability bit string associated with the parent is accessed. The aggregate availability bit string represents an aggregate resource availability for all children of the parent. Next, a logical operation is performed with the bits of the aggregate availability bit string and the bits of the request bit string. Then, it is determined whether any of the children of the parent are able to provide the available resource based upon a result of the logical operation. A peer-to-peer grid and a system for publishing and identifying an available resource in a peer-to-peer distributed network are also provided.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07734786",
	"publication_date": "2010-06-08",
	"application_number": "12214746",
	"application_date": "2008-06-20",
	"tags": null,
	"slug": "method-and-system-for-identifying-available-resources-in-a-peertopeer-network",
	"match_type": "description"
},
{
	"name": "Network address translation type for flexible neighbor selection in overlay networks",
	"summary": "",
	"abstract": "An overlay network uses flexible neighbor selection based on network address translation (NAT) to define routing between nodes. The NAT type is used as a flexible neighbor selection criteria, either alone or in conjunction with other criteria. A method of selecting a neighboring node for a first node in a distributed hash table network includes determining a desired key value for a node finger table entry and requesting a set of candidate neighboring nodes near this desired key value. The method determines a network address translation type of each of the set of candidate neighboring nodes and ranks the set of candidate neighboring nodes accordingly. The method selects one of the set of candidate neighboring nodes based on the ranking. The NAT types of candidate neighboring nodes are determined by sending probe messages or from data received from a central overlay network server.",
	"url": null,
	"owner": "Sony Computer Entertainment Inc.",
	"publication_number": "07725597",
	"publication_date": "2010-05-25",
	"application_number": "11839241",
	"application_date": "2007-08-15",
	"tags": null,
	"slug": "network-address-translation-type-for-flexible-neighbor-selection-in-overlay-networks",
	"match_type": "description"
},
{
	"name": "Method and system for identifying available resources in a peer-to-peer network",
	"summary": "",
	"abstract": "A method for a peer of a peer-to-peer network to search for an available resource is provided. The method initiates with representing a request for the available resource as a request bit string. The method includes transmitting the request to a parent of the peer. Then, an aggregate availability bit string associated with the parent is accessed. The aggregate availability bit string represents an aggregate resource availability for all children of the parent. Next, a logical operation is performed with the bits of the aggregate availability bit string and the bits of the request bit string. Then, it is determined whether any of the children of the parent are able to provide the available resource based upon a result of the logical operation. A peer-to-peer grid and a system for publishing and identifying an available resource in a peer-to-peer distributed network are also provided.",
	"url": null,
	"owner": "Sony Computer Entertainment, Inc.",
	"publication_number": "07814207",
	"publication_date": "2010-10-12",
	"application_number": "12214617",
	"application_date": "2008-06-20",
	"tags": null,
	"slug": "method-and-system-for-identifying-available-resources-in-a-peertopeer-network",
	"match_type": "description"
},
{
	"name": "Distribution contents forming method, contents distributing method and apparatus, and code converting method",
	"summary": "",
	"abstract": "A script is scanned to detect character strings that match predetermined criteria. The detected character strings are sorted in order of their appearance frequency and are associated with substitute characters or character strings such that a character string having a greater appearance frequency than another character string is associated with substitute characters or character string having a same or smaller number of characters. The script is searched for a given character string, and the given character string is replaced with its associated substitute characters or character strings. The content is unidirectionally distributed whereby the plurality of character strings is not distributed.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07653752",
	"publication_date": "2010-01-26",
	"application_number": "11903924",
	"application_date": "2007-09-25",
	"tags": null,
	"slug": "distribution-contents-forming-method-contents-distributing-method-and-apparatus-and-code-converting-method",
	"match_type": "description"
},
{
	"name": "Information processing apparatus and method, and storage medium",
	"summary": "",
	"abstract": "Disclosed is an information processing apparatus for controlling an application object moving autonomously in shared virtual space in which avatars representing users of other information processing apparatuses are active. The apparatus comprises a distribution examining element for examining distribution of the active avatars in the shared virtual space, a coordinate controlling element for controlling coordinates of the application object in accordance with results of the examination by the distribution examining element and a display controlling element for controlling display of information by the application object controlled in coordinates by the coordinate controlling element.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07653877",
	"publication_date": "2010-01-26",
	"application_number": "10914465",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": "information-processing-apparatus-and-method-and-storage-medium",
	"match_type": "description"
},
{
	"name": "Method and system for transmitting streaming data",
	"summary": "",
	"abstract": "A communication processing apparatus that performs processing of transmitting streaming data includes a communication control portion examining the state of data communication and performing processing of changing priority information to be defined for send data based on the result of the examination, and a network interface performing processing of outputting data with the priority information. In this case, the communication control portion performs processing of setting a lower priority than a predetermined priority for the streaming data in the initial period of the transmission of streaming data, examination of the state of data communication in a lower-priority-setting period at an examination point functioning as predefined examination timing, and processing of changing the priority setting based on the result of the examination.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07693155",
	"publication_date": "2010-04-06",
	"application_number": "11514126",
	"application_date": "2006-09-01",
	"tags": null,
	"slug": "method-and-system-for-transmitting-streaming-data",
	"match_type": "description"
},
{
	"name": "Overlay network system and service providing method",
	"summary": "",
	"abstract": "In an overlay network system in which at least one node is mapped in a hash space by distributed hash table techniques, each node having a nods identifier obtained by hashing identification information of the own node, at least one service concerning all the nodes is provided. Each node includes a storage unit and a controller. The storage unit stores a service name and a service body of the service. The controller searches for a current service provider node using a service key obtained by hashing the service name, checks whether the own node is allowed to take over the service if a distance between the node identifier of the own node and the service key is less than a distance between the node identifier of the current service provider node and the service key, and invokes the service body to provide the service if the takeover is permitted.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07792900",
	"publication_date": "2010-09-07",
	"application_number": "12034108",
	"application_date": "2008-02-20",
	"tags": null,
	"slug": "overlay-network-system-and-service-providing-method",
	"match_type": "description"
},
{
	"name": "Reproduction device, reproduction method, reproduction program, and recording medium",
	"summary": "",
	"abstract": "With a reproduction-only disc having a large recording capacity, an interactive function having a higher degree of freedom than the related art can be easily accomplished. A virtual player model corresponding to a function of a player is created and described in Java. BDBasicPlayer  detects a user input and the status change of the player and generates an event. An object  that implements a listener interface registers an event listener corresponding to an event that the object  is caused to receive to BDBasicPlayer  before the event takes place. When the event becomes unnecessary, it is unregistered. BDBasicPlayer  transmits the event to the object  in which the event listener has been registered. The object  executes a method corresponding to the received event. The relationships between events and methods can be flexibly set. Thus, a complicated interactive function can be easily accomplished.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07821881",
	"publication_date": "2010-10-26",
	"application_number": "10543372",
	"application_date": "2004-08-19",
	"tags": null,
	"slug": "reproduction-device-reproduction-method-reproduction-program-and-recording-medium",
	"match_type": "description"
},
{
	"name": "Signal processing apparatus and method thereof",
	"summary": "",
	"abstract": "A signal processing apparatus performs a signal processing using a plurality of signal processing modules associated with a corresponding plurality of signal processing functions. The plurality of signal processing modules are graphically displayed. One or more of a plurality of available commands are received from a user. A virtual connection state of the plurality of signal processing modules is set that defines connections among the inputs and outputs of the plurality of signal processing modules. The virtual connection state is stored and managed. A sequence of corresponding signal processing functions is determined based on the virtual connection state. Signal processing is performed in accordance with the determined sequence of signal processing functions.",
	"url": null,
	"owner": "Sony Corporation",
	"publication_number": "07752189",
	"publication_date": "2010-07-06",
	"application_number": "11135259",
	"application_date": "2005-05-23",
	"tags": null,
	"slug": "signal-processing-apparatus-and-method-thereof",
	"match_type": "description"
},
{
	"name": "System and method for selectively enabling or disabling an optical device using optical blocking material on an energy masked area of the optical device",
	"summary": "",
	"abstract": "A system for selectively enabling or disabling an optical device, such as an optical disc, includes an optical blocking material bonded or otherwise integrated into the optical device. In a specific embodiment, the optical blocking material includes a dye, such as an energy-sensitive dye. The optical blocking material is initially applied to the optical device during production using a spin coating or other suitable technique. An area of the optical device that will prevent a function of the device is then masked, and sufficient energy is applied to the unmasked area to activate the optical blocking material of the unmasked area while leaving the masked area unactivated. In a specific embodiment, the masked area corresponds with a lead-in area of an optical disc. The optical blocking material of the masked area remains non-transparent to disable the optical device until a second application of energy at a retail location.",
	"url": null,
	"owner": "Sony DADC US Inc.",
	"publication_number": "07830777",
	"publication_date": "2010-11-09",
	"application_number": "11656932",
	"application_date": "2007-01-24",
	"tags": null,
	"slug": "system-and-method-for-selectively-enabling-or-disabling-an-optical-device-using-optical-blocking-material-on-an-energy-masked-area-of-the-optical-device",
	"match_type": "description"
},
{
	"name": "Context-aware automatic service discovery and execution engine in mobile ad-hoc networks",
	"summary": "",
	"abstract": "In mobile computing and context awareness in mobile ad-hoc networks, node connectivity is unpredictably time-varying. A middleware entity solves the problem of automatically executing a user-defined set of actions, collected in a user profile, upon detection of events such as an attachment of a mobile terminal to the ad-hoc network, changes of the underlying network topology, the moving of mobile terminals into the physical proximity of further mobile terminals, the presence of services and/or of users within the network, and a detachment of a mobile terminal from the ad-hoc network. Thereby, the actions are invocations of services hosted on the mobile terminal or other mobile terminals interconnected via the ad-hoc network. The aforementioned profiles are stored on mobile terminals (e.g. PDAs, mobile phones, etc.) or on fixed or mobile customer-edge devices such as television sets, home gateways, etc. Also envisioned is the deployment of a distributed database holding the profiles.",
	"url": null,
	"owner": "Sony Deutschland GmbH",
	"publication_number": "07681203",
	"publication_date": "2010-03-16",
	"application_number": "10969760",
	"application_date": "2004-10-20",
	"tags": null,
	"slug": "contextaware-automatic-service-discovery-and-execution-engine-in-mobile-adhoc-networks",
	"match_type": "description"
},
{
	"name": "High-level interface for QoS-based mobile multimedia applications",
	"summary": "",
	"abstract": "The present invention generally relates to the field of mobile multimedia middleware, quality-of-service, shared resource reservation mechanisms, distributed processing systems, handheld computers, computer networking and wireless communication. Particularly, the present invention describes a processing system and pieces of software for one or more communication networks, with middleware comprising an application programming interface () cast over a data model describing quality-of-service contracts and quality-of-service adaptation paths specified by quality-of-service aware mobile multimedia applications () using said programming interface, in order to manage quality-of-service and mobility-aware for managing network connections with other applications. The present invention hereby relates to a corresponding data model as well as the necessary architecture.",
	"url": null,
	"owner": "Sony Deutschland GmbH",
	"publication_number": "07814184",
	"publication_date": "2010-10-12",
	"application_number": "10006067",
	"application_date": "2001-12-06",
	"tags": null,
	"slug": "highlevel-interface-for-qosbased-mobile-multimedia-applications",
	"match_type": "abstract"
},
{
	"name": "Messaging and service system for mobile computer",
	"summary": "",
	"abstract": "A service sends rich content messages including text and photos between any mobile device and potentially across a heterogeneous network. Furthermore, to enhance the user experience, content can be delivered based on personal preferences and device display capabilities.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07860937",
	"publication_date": "2010-12-28",
	"application_number": "10977356",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "messaging-and-service-system-for-mobile-computer",
	"match_type": "description"
},
{
	"name": "Modular imaging download system",
	"summary": "",
	"abstract": "A system and method of modular image downloading (MINDS) from a network for configuring computers, or computer-based devices. The program images typically comprise a foundation image (operating system) and application module images. The system is configured as software which executes in response to a tree of actions defined in configuration data and not embedded within the executable of the MINDS program. The action tree can be controlled by the user interface, started, paused, terminated, stepped forward or backward, and so forth. The executable operates on the action tree and need not be re-compiled for each action tree change, the modules for the action trees are dynamically linked prior to execution. The action tree approach allows the user to readily change, add, or delete actions, or entire action trees from the system without the need of recoding or additional program testing.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07653903",
	"publication_date": "2010-01-26",
	"application_number": "11090637",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": "modular-imaging-download-system",
	"match_type": "description"
},
{
	"name": "System and method for non-invasive conversion of film cameras into digital camera",
	"summary": "",
	"abstract": "A system and method for converting a film camera into a digital camera uses an electronic device placed in a space of the camera that normally contains film. The device includes an image sensing array arranged in optical communication with a lens of the camera when a shutter is open. An audio sensor is used to detect sounds within the camera, and an acoustic pattern recognizer with a built-in training mode is used to determine if the detected sounds correspond with the shutter operation. The image sensing array is switched into an image capture mode when the acoustic pattern recognizer determines that the shutter is being opened. When the shutter is opened, a read-out circuit captures multiple image frames from the image sensing array. An image processor associated with the image sensing array processes the captured images using advanced image processing algorithms.",
	"url": null,
	"owner": "Sony Electronics Inc.",
	"publication_number": "07773114",
	"publication_date": "2010-08-10",
	"application_number": "11727465",
	"application_date": "2007-03-27",
	"tags": null,
	"slug": "system-and-method-for-noninvasive-conversion-of-film-cameras-into-digital-camera",
	"match_type": "description"
},
{
	"name": "High performance storage device access for non-linear editing systems",
	"summary": "",
	"abstract": "Disclosed are systems and methods for storage device access control initiated by a non-linear editor (NLE). In one embodiment, a storage device access controller can include: a storage device configured to store clips, such as audio, graphics, or video clips, arranged in frames; an NLE coupled to the storage device for requesting one or more of the clips; and a buffer engine coupled to the storage device and the NLE. The buffer engine can include: buffers for storing data from the storage device; a data index for indicating a location of data in a clip on the storage device; and a reader configured to control an access of the data using the data index in response to one or more parameters. Embodiments of the present invention can provide for improved data access performance from a disk where the data is requested in clip form from an NLE.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07769269",
	"publication_date": "2010-08-03",
	"application_number": "11225921",
	"application_date": "2005-09-13",
	"tags": null,
	"slug": "high-performance-storage-device-access-for-nonlinear-editing-systems",
	"match_type": "description"
},
{
	"name": "Low dark current image sensors by substrate engineering",
	"summary": "",
	"abstract": "Image sensors and the manufacture of image sensors having low dark current. A SiGe or Ge layer is selectively grown on the silicon substrate of the sensing area using an epitaxial chemical vapor deposition (CVD) method. After the SiGe or Ge growth, a silicon layer may be grown by the same epitaxial CVD method in an in-situ manner. This facilitates the formation of the hole accumulation diode and reduces the defect density of the substrate, resulting in device having a lower dark current.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07834412",
	"publication_date": "2010-11-16",
	"application_number": "12076300",
	"application_date": "2008-03-17",
	"tags": null,
	"slug": "low-dark-current-image-sensors-by-substrate-engineering",
	"match_type": "description"
},
{
	"name": "System and method for multi-directional positioning of projected images",
	"summary": "",
	"abstract": "A system and method of multi-directional projection in which the optical output from a projector is modified in response to characteristics of nearby surfaces, upon which projection can be directed. The multi-directional projection system can provide beneficial output as a primary indicator or a secondary indicating device that can be controlled by itself or synchronously with other devices, such as output from a computer monitor. One implementation incorporates an optical sensor coupled to the projector for registering object characteristics (e.g., distance, reflectance, texture, color, and ambient lighting), such as during a mapping operation performed across the pan and tilt range of the projector. The projection system preferably incorporates a focusing assembly and may include other controllable optical elements such as zoom. Control is preferably provided through commands within an application programming interface (API), such as executing on a personal computer or other form of computer device.",
	"url": null,
	"owner": "Sony Electronics, Inc.",
	"publication_number": "07794094",
	"publication_date": "2010-09-14",
	"application_number": "11441974",
	"application_date": "2006-05-26",
	"tags": null,
	"slug": "system-and-method-for-multidirectional-positioning-of-projected-images",
	"match_type": "abstract"
},
{
	"name": "Method and apparatus for processing encoded audio data",
	"summary": "",
	"abstract": "To locate an encoded audio frame boundary and begin decoding audio at a point corresponding to that frame boundary, an audio decoder generates a matching pattern containing a syncword and additional bits related to a header of an encoded audio frame, detects an audio frame boundary by searching a data stream of encoded audio frame for instances of the matching pattern, and begins decoding audio frames at a point in the data stream corresponding to the detected frame boundary.",
	"url": null,
	"owner": "Sony Ericsson Mobile Communications AB",
	"publication_number": "07778839",
	"publication_date": "2010-08-17",
	"application_number": "11741297",
	"application_date": "2007-04-27",
	"tags": null,
	"slug": "method-and-apparatus-for-processing-encoded-audio-data",
	"match_type": "description"
},
{
	"name": "Frequency autonormalisation reservoir mapping",
	"summary": "",
	"abstract": "A method of locating subsurface hydrocarbon reservoirs includes acquiring seismic data, dividing the seismic data into time windows, applying a data transform to the seismic data having a plurality of components to obtain a smoothed frequency spectrum, selecting one or more local maxima and minima, determining a frequency product as a function of the maxima and minima in a form for display. Lower and higher ratio thresholds may be selected to further discriminate frequency product selection for display. A display or map of frequency products over a survey area may indicate the presence of subsurface fluid reservoirs.",
	"url": null,
	"owner": "Spectraseis AG",
	"publication_number": "07729862",
	"publication_date": "2010-06-01",
	"application_number": "11751659",
	"application_date": "2007-05-22",
	"tags": null,
	"slug": "frequency-autonormalisation-reservoir-mapping",
	"match_type": "description"
},
{
	"name": "VH Reservoir Mapping",
	"summary": "",
	"abstract": "A method and system of detecting and mapping a subsurface hydrocarbon reservoir includes determining ratio data for a plurality of orthogonal spectral components of naturally occurring low frequency background seismic data. The ratio data may be compared, plotted, contoured and displayed as a subsurface hydrocarbon reservoir map or a hydrocarbon potential map. The ratio data may represent a vertical spectral component of the seismic data over a horizontal spectral component of the seismic data. The subsurface hydrocarbon reservoir map may include contouring the ratio data over a geographical area associated with the seismic data.",
	"url": null,
	"owner": "Spectraseis AG",
	"publication_number": "07676326",
	"publication_date": "2010-03-09",
	"application_number": "11757362",
	"application_date": "2007-06-02",
	"tags": null,
	"slug": "vh-reservoir-mapping",
	"match_type": "description"
},
{
	"name": "Application-to-application security in enterprise security services",
	"summary": "",
	"abstract": "The present system allows disparate secure applications to communicate directly with one another in a heterogeneous application environment by providing for the creation of tokens that can be passed between the applications without human intervention. Security information is passed between applications in the form of a token with a string data type. Since a string is a primitive data type, it can be recognized by a large number of applications and interfaces. The token has no header and therefore no application-specific header configuration, making it platform and technology independent. This eliminates the need for conversion of security information between different formats. The use of tokens also eliminates the need for an application to be authenticated and authorized every time it sends a message to another application. Instead of a permanent context or session, a context is created with every invocation from one application to another.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07823192",
	"publication_date": "2010-10-26",
	"application_number": "10815518",
	"application_date": "2004-04-01",
	"tags": null,
	"slug": "applicationtoapplication-security-in-enterprise-security-services",
	"match_type": "description"
},
{
	"name": "Communication network route tracing",
	"summary": "",
	"abstract": "A method for tracing a communication route through a network coupling a first device with a second device is provided. A first signal is transferred from the first device to the second device to cause a plurality of intermediate devices to report first information concerning the first signal. The first information is processed to identify the intermediate devices as defining the communication route. The intermediate devices are configured so that a second signal, when transferred from the first device toward the second device, causes a subset of the intermediate devices to report second information concerning the second signal. The second signal is transferred from the first device toward the second device. The second information is processed to identify the subset of the intermediate devices as a portion of a sequence of the intermediate devices defining the communication route.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07843838",
	"publication_date": "2010-11-30",
	"application_number": "11095833",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": "communication-network-route-tracing",
	"match_type": "description"
},
{
	"name": "Enhanced data loading for test management tool",
	"summary": "",
	"abstract": "A computer automated method to update a data store is disclosed. The method comprises receiving a definition mapping one or more information fields in an upload file to fields in a data store, creating a first linkage between a test set identified in a first record in the upload file and a first test case based on the mapping, and creating a test set record in the data store including the first linkage and data in the information fields in the first record in the upload file based on the definition.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07761841",
	"publication_date": "2010-07-20",
	"application_number": "11118732",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "enhanced-data-loading-for-test-management-tool",
	"match_type": "description"
},
{
	"name": "Enhanced function point analysis",
	"summary": "",
	"abstract": "A system for automatically counting function points is provided. The system includes an electronic document, an analysis component, and a user interface. The electronic document contains a sequence diagram that specifies interactions in a software application. The analysis component can analyze the interactions in the sequence diagram to identify a start point and an end point in the sequence diagram as a function point. The analysis component can also maintain a count of the function points. The user interface can promote counting one or more function points when more than one of the sequence diagrams involve data that is part of a set of data objects identified via the user interface.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07743369",
	"publication_date": "2010-06-22",
	"application_number": "11193608",
	"application_date": "2005-07-29",
	"tags": null,
	"slug": "enhanced-function-point-analysis",
	"match_type": "description"
},
{
	"name": "Network access and quality of service troubleshooting",
	"summary": "",
	"abstract": "A method of maintaining a communication service is disclosed. The method comprises providing a communication path from a customer premises equipment (CPE) in a customer network to a port of a router located in a communication service provider network, wherein the port is allocated to the CPE, and wherein the customer network is different from the communication service provider network. The method also comprises determining a connectivity of the communication path from the CPE to the port of the router and determining an interface status of the port located on the router. The method also comprises determining a quality of service (QoS) of the communication path from the CPE to the port located on the router. Determining the connectivity and QoS of the communication path and determining the interface status of the port are initiated from the CPE.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07830816",
	"publication_date": "2010-11-09",
	"application_number": "11838175",
	"application_date": "2007-08-13",
	"tags": null,
	"slug": "network-access-and-quality-of-service-troubleshooting",
	"match_type": "description"
},
{
	"name": "Telecommunications device for use between an analog telephone and a packet network",
	"summary": "",
	"abstract": "A communication device is coupled to an analog telephone and a packet network. The communication device detects an off-hook condition for the analog telephone and transfers a dial tone to the analog telephone, detects digit tones from the analog telephone that indicate a called number and responsively transfers a first message indicating the called number to the packet network, receives a second message from the packet network indicating that a called party associated with the called number is being alerted and responsively transfers a ring tone to the analog telephone, receives a third message from the packet network indicating that the called party has accepted the communication session and responsively stops the transfer of the ring tone to the analog telephone, exchanges analog voice signals with the analog telephone, exchanges voice packets with the packet network, and interworks between the analog voice signals and the voice packets.",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07729364",
	"publication_date": "2010-06-01",
	"application_number": "11060258",
	"application_date": "2005-02-17",
	"tags": null,
	"slug": "telecommunications-device-for-use-between-an-analog-telephone-and-a-packet-network",
	"match_type": "description"
},
{
	"name": "Telecommunications provider agent",
	"summary": "",
	"abstract": "The invention is a provider agent product and method that operates as a software interface between a telephony card and a session manager in an advanced communications network. The provider agent receives event messages from the telephony card indicating on-hook events, off-hook events, and digit events. The provider agent instructs the telephony card to provide dial tone, ring current, ringback, and busy signals to the telephones. The provider agent also exchanges messages with a session manager in the network. These messages include: invite messages, reply messages, join messages, and terminate messages. In response to the above processing, the provider agent instructs the telephony card to interwork telephony signals on a telephony channel with ATM signals on an ATM virtual channel. The provider agent is comprised of a plurality of software objects that are stored on a software storage medium and that include: a controller object, port objects, and event objects. The provider agent objects are executed by a multithreaded processing system and each object has a separate processing thread. The provider agent and the telephony card communicate through an application programming interface that is specified in an Interface Definition Language (IDL) of a Common Object Request Broker Architecture (CORBA).",
	"url": null,
	"owner": "Sprint Communications Company L.P.",
	"publication_number": "07729338",
	"publication_date": "2010-06-01",
	"application_number": "10153237",
	"application_date": "2002-05-21",
	"tags": null,
	"slug": "telecommunications-provider-agent",
	"match_type": "abstract"
},
{
	"name": "Method and system for downloading and managing portable applications on a mobile device",
	"summary": "",
	"abstract": "A mobile information device may download and execute Java MIDlet and non-MIDlet applications. The mobile information device may use generic content descriptors to download and manage non-Java applications.",
	"url": null,
	"owner": "Sprint Spectrum L.P.",
	"publication_number": "07779408",
	"publication_date": "2010-08-17",
	"application_number": "10761748",
	"application_date": "2004-01-21",
	"tags": null,
	"slug": "method-and-system-for-downloading-and-managing-portable-applications-on-a-mobile-device",
	"match_type": "description"
},
{
	"name": "Audio signal processing",
	"summary": "",
	"abstract": "Systems and methods of processing audio signals are described. The audio signals comprise information about spatial position of a sound source relative to a listener. At least one audio filter generates two filtered signals for each of audio signal. The two filtered signals are mixed with other filtered signals from other audio signals to create a right output audio channel and a left audio output channel, such that the spatial position of the sound source is perceptible from the right and left audio output channels.",
	"url": null,
	"owner": "SRS Labs, Inc.",
	"publication_number": "07720240",
	"publication_date": "2010-05-18",
	"application_number": "11696128",
	"application_date": "2007-04-03",
	"tags": null,
	"slug": "audio-signal-processing",
	"match_type": "description"
},
{
	"name": "Address matching system and method",
	"summary": "",
	"abstract": "An address matching system that maintains a central database of valid addresses has been designed. According to the invention, address matching requests are received by the system from a plurality of remote users located at respective machines (u201cclientsu201d). Those requests are processed at the central system, and the results are returned to the client that made the request. In addition, novel techniques are implemented for improving the likelihood of obtaining one or more matches from a request.",
	"url": null,
	"owner": "Stamps.com",
	"publication_number": "07743043",
	"publication_date": "2010-06-22",
	"application_number": "11748460",
	"application_date": "2007-05-14",
	"tags": null,
	"slug": "address-matching-system-and-method",
	"match_type": "description"
},
{
	"name": "Application specific solar cell and method for manufacture using thin film photovoltaic materials",
	"summary": "",
	"abstract": "A method for manufacture of application specific solar cells includes providing and processing custom design information to determine at least a cell size and a cell shape. The method includes providing a transparent substrate having a back surface region, a front surface region, and one or more grid-line regions overlying the front side surface region. The one or more grid regions provide one or more unit cells having the cell size and the cell shape. The method further includes forming a layered structure including photovoltaic materials overlying the front surface region. Additionally, the method includes aligning a laser beam from the back surface region to illuminate a first region within the one or more grid-line regions, subjecting a first portion of the layered structure overlying the first region to the laser beam to separate the first portion of the layered structure from the first region, and scanning the laser beam along the one or more grid-line regions to cause formation of one or more unit cells having the cell size and cell shape. The method further includes transferring the one or more unit cells.",
	"url": null,
	"owner": "Stion Corporation",
	"publication_number": "07855089",
	"publication_date": "2010-12-21",
	"application_number": "12509136",
	"application_date": "2009-07-24",
	"tags": null,
	"slug": "application-specific-solar-cell-and-method-for-manufacture-using-thin-film-photovoltaic-materials",
	"match_type": "description"
},
{
	"name": "System and apparatus for digital audio/video decoder splitting signal into component data streams for rendering at least two video signals",
	"summary": "",
	"abstract": "The present invention provides a system and an apparatus for a digital audio/video decoder comprising a file reader capable of obtaining an encoded audio/video data stream from a data source, a navigator that instructs the file reader to obtain the encoded audio/video data stream, a splitter that separates the encoded audio/video data stream obtained by the file reader into one or more component data streams, and a reprogrammable proxy filter that decodes and converts the one or more component data streams into three or more renderable signals including at least one renderable audio signal and at least two renderable video signals.",
	"url": null,
	"owner": "STMicroelectronics, Inc.",
	"publication_number": "07844167",
	"publication_date": "2010-11-30",
	"application_number": "09207136",
	"application_date": "1998-12-08",
	"tags": null,
	"slug": "system-and-apparatus-for-digital-audiovideo-decoder-splitting-signal-into-component-data-streams-for-rendering-at-least-two-video-signals",
	"match_type": "description"
},
{
	"name": "Automatic connection to an online service provider from a backup system",
	"summary": "",
	"abstract": "A software application is provided for a user to select a backed up data file and specify a task to be performed by an online service provider on the selected file. The application automatically connects to the online service provider and uploads the selected file for the online service provider to perform the task. Tasks that can be performed include printing, sharing, viewing, playing and archiving the selected file. Task preferences, user settings and user information can also be specified by the user and uploaded to the online service provider. Automatic connection to the online service provider can be via default setting, selected file type, or specified task. Alternatively, the user can designate which service provider is to perform the task. Payment for the task can be accomplished via bundled credits or by other payment mechanisms.",
	"url": null,
	"owner": "Storage Appliance Corporation",
	"publication_number": "07844445",
	"publication_date": "2010-11-30",
	"application_number": "11801240",
	"application_date": "2007-05-08",
	"tags": null,
	"slug": "automatic-connection-to-an-online-service-provider-from-a-backup-system",
	"match_type": "description"
},
{
	"name": "Data backup devices and methods for backing up data",
	"summary": "",
	"abstract": "A data backup system comprises an emulation component and a storage device having logical storage areas. The emulation component is configured to represent a first logical storage area of the storage device, such as a solid state memory or a disk drive partition, as if it were an auto-launch device. Accordingly, a data source, such as a personal computer, will interact with the first logical storage area as if it were the auto-launch device. As some operating systems are configured to recognize auto-launch devices upon connection and automatically execute applications stored thereon, merely connecting the data backup system to a data source running such an operating system can cause a backup application stored by the first logical storage area to automatically execute on the data source to selectively back up data to a second logical storage area of the storage device.",
	"url": null,
	"owner": "Storage Appliance Corporation",
	"publication_number": "07818160",
	"publication_date": "2010-10-19",
	"application_number": "11506386",
	"application_date": "2006-08-18",
	"tags": null,
	"slug": "data-backup-devices-and-methods-for-backing-up-data",
	"match_type": "description"
},
{
	"name": "Emulation component for data backup applications",
	"summary": "",
	"abstract": "An emulation component for a data backup system is provided. The emulation component represents a storage device, such as a flash memory device or a partition of a disk drive, as if it were an auto-launch device, that will trigger applications to execute automatically. Accordingly, other computing systems, such as personal computers, interact with the storage device, through the emulation component, as if the storage device were the auto-launch device. Because the emulation component makes this representation, merely connecting the emulation component between the storage device and the computing system can cause a backup application stored on the storage device to automatically execute on the computing system. A data backup appliance including an emulation component and a storage device is also provided. The backup system can also include an interface for connecting another removable device, such as a disk drive, for storing backup content from the data source.",
	"url": null,
	"owner": "Storage Appliance Corporation",
	"publication_number": "07813913",
	"publication_date": "2010-10-12",
	"application_number": "11492380",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": "emulation-component-for-data-backup-applications",
	"match_type": "description"
},
{
	"name": "Methods for selectively copying data files to networked storage and devices for initiating the same",
	"summary": "",
	"abstract": "A data backup system comprises a USB flash drive that includes an emulation component and a flash memory. The emulation component is configured to represent the flash memory as if it were an auto-launch device. Accordingly, a data source, such as a personal computer, will interact with the flash memory as if it were the auto-launch device. As some operating systems are configured to recognize auto-launch devices upon connection and automatically execute applications stored thereon, merely connecting the USB flash drive to a data source running such an operating system will cause a backup application stored by the flash memory to automatically execute on the data source. Here, the backup application is configured to selectively back up data files from the data source to a networked storage such as a server of a commercial service provider.",
	"url": null,
	"owner": "Storage Appliance Corporation",
	"publication_number": "07702830",
	"publication_date": "2010-04-20",
	"application_number": "11601040",
	"application_date": "2006-11-16",
	"tags": null,
	"slug": "methods-for-selectively-copying-data-files-to-networked-storage-and-devices-for-initiating-the-same",
	"match_type": "description"
},
{
	"name": "Systems and methods for selectively copying embedded data files",
	"summary": "",
	"abstract": "A backup system is provided that includes a backup application configured to automatically execute upon connection of the backup system to a data source. The backup application is configured to selectively back up data from the data source to itself or to networked storage, for example. As part of selectively backing up data, the backup application is further configured to selectively extract embedded data files, such as attachments, from internal files of e-mail programs. Between backups, the backup application can selectively extract newly received embedded data files to a folder. During a subsequent backup, the contents of the folder can be copied from the data source.",
	"url": null,
	"owner": "Storage Appliance Corporation",
	"publication_number": "07822595",
	"publication_date": "2010-10-26",
	"application_number": "11704802",
	"application_date": "2007-02-08",
	"tags": null,
	"slug": "systems-and-methods-for-selectively-copying-embedded-data-files",
	"match_type": "description"
},
{
	"name": "System, method and computer program product for sharing information in a distributed framework",
	"summary": "",
	"abstract": "A system, method and computer program product are provided for sharing information in a distributed system. After information is received, it is stored on a bulletin board. In use, the information is shared, in real-time, among a plurality of heterogeneous processes.",
	"url": null,
	"owner": "Stragent, LLC",
	"publication_number": "07802263",
	"publication_date": "2010-09-21",
	"application_number": "10737690",
	"application_date": "2003-12-15",
	"tags": null,
	"slug": "system-method-and-computer-program-product-for-sharing-information-in-a-distributed-framework",
	"match_type": "description"
},
{
	"name": "Sporting event image capture, processing and publication",
	"summary": "",
	"abstract": "Systems, methods and software are disclosed for capturing and/or importing and processing media items such as digital images or video () associated with a sporting event such as a marathon or bicycle race (FIG. ). The media items are processed, including bib number or facial recognition if necessary (), to associate them with an individual participant. Other input sources may include spectator uploads (), external web sites and media sharing () or social networking () services. The system () aggregates, organizes and generates content, and distributes it () via various output channels, which may include event web sites (), personal feeds (), and other output channels (, FIG. ). Preferably, selected content is associated with at least one individual participant in the event, and that content is automatically distributed to channels that are associated with that individual participant.",
	"url": null,
	"owner": "Strands, Inc.",
	"publication_number": "07800646",
	"publication_date": "2010-09-21",
	"application_number": "12763420",
	"application_date": "2010-04-20",
	"tags": null,
	"slug": "sporting-event-image-capture-processing-and-publication",
	"match_type": "description"
},
{
	"name": "Distributed transaction processing system",
	"summary": "",
	"abstract": "A distributed transaction processing system is disclosed in which a process automation application receives a transaction request from a requesting application. In response to the request, the process automation application obtains a transaction definition for the transaction requested by the requesting application. This transaction definition comprises a plurality of operation definitions, which indicate a plurality of operations constituting the requested transaction. For each of the operation definitions in the transaction definition, the process automation application produces an operation request. These operation requests are sent to one or more service applications, and one or more responses are received by the process automation application after the operations are performed by the service applications. Based on the responses, the process automation application produces a transaction response, which is sent to the requesting application. In this manner, the requested transaction is completed.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07661106",
	"publication_date": "2010-02-09",
	"application_number": "11073398",
	"application_date": "2005-03-04",
	"tags": null,
	"slug": "distributed-transaction-processing-system",
	"match_type": "description"
},
{
	"name": "Dynamic quota policy for queuing mechanism",
	"summary": "",
	"abstract": "Methods and systems for effecting cleanup and other policies for queues and similar data stores, which policies account for preferences of consumers of the data so stored. Queuing policies for local storage of one or more documents for transmission from the local storage to one or more end points for said documents are retrieved from a remote registry. Upon such retrieval, the documents are enqueued according to the queuing policies, unless, prior to such enqueuing the queues into which the documents are to be placed require creation or clean-up, for example according to one or more queue quota policies. In some cases, the documents are queued according to associated qualities of service to be accorded to delivery of said documents. Such qualities of service may be specified in the queuing policy.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07734605",
	"publication_date": "2010-06-08",
	"application_number": "11209305",
	"application_date": "2005-08-22",
	"tags": null,
	"slug": "dynamic-quota-policy-for-queuing-mechanism",
	"match_type": "description"
},
{
	"name": "Dynamic web services stack",
	"summary": "",
	"abstract": "System and method for providing a binary encoding protocol as an alternative to markup language protocols for Web services. Embodiments may provide a Web services stack with a single API that supports a binary encoding protocol in addition to a markup language protocol. Embodiments may dynamically and transparently switch between the markup language protocol and the binary encoding protocol, for example for communications between servers and clients in a Web services network environment. An exemplary markup language is XML. An exemplary binary encoding protocol that may be used is WS-Fast, which may use Abstract Syntax Notation One (ASN.1) and a mapping from XML Schema to ASN.1 for on-the-wire binary messages. Some embodiments may be implemented as a Java Web services stack that implements WS-Fast as an alternative to XML, while still supporting XML and providing one API to both protocols.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07647415",
	"publication_date": "2010-01-12",
	"application_number": "10787007",
	"application_date": "2004-02-25",
	"tags": null,
	"slug": "dynamic-web-services-stack",
	"match_type": "description"
},
{
	"name": "Introspection support for local and anonymous classes",
	"summary": "",
	"abstract": "A technique in accordance with one embodiment of the present invention provides introspection support for anonymous and local classes. As a result of the technique, an enclosing class that defines a generic type variable that is not defined within a local or anonymous class that refers to the generic type variable can be determined. According to one embodiment of the invention, when a compiler determines that a particular class is a local or anonymous class, the compiler emits, into the particular class' binary class file, information that indicates which class encloses the particular class. In response to the invocation of a method (described herein) relative to a reflective proxy that corresponds to an enclosed class, information that identifies an enclosing class that encloses the enclosed class is returned. This is so even if the enclosed class is a local or anonymous class.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07669184",
	"publication_date": "2010-02-23",
	"application_number": "11173976",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "introspection-support-for-local-and-anonymous-classes",
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating a characteristics model for a pattern-based system design analysis using a schema",
	"summary": "",
	"abstract": "A method for analyzing a target system that includes generating a characteristics model using a schema defining a domain, obtaining a plurality of characteristics from the target system using a characteristics extractor, wherein the plurality of characteristics is associated with the characteristics model storing each of the plurality of characteristics in a characteristics store, and analyzing the target system by issuing at least one query to the characteristics store to obtain an analysis result.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07653898",
	"publication_date": "2010-01-26",
	"application_number": "11133714",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "method-and-apparatus-for-generating-a-characteristics-model-for-a-patternbased-system-design-analysis-using-a-schema",
	"match_type": "description"
},
{
	"name": "Method and apparatus for generating components for pattern-based system design analysis using a characteristics model",
	"summary": "",
	"abstract": "A method for analyzing a target system that includes obtaining a characteristics model, generating at least one selected from the group consisting of a schema, characteristics store API, and a characteristics extractor, using the characteristics model, obtaining a plurality of characteristics from the target system using characteristics extractor, wherein each of the plurality of characteristics is associated with the characteristics model, storing each of the plurality of characteristics in the characteristics store using the schema, and analyzing the target system by issuing at least one query to the characteristics store to obtain an analysis result.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07660802",
	"publication_date": "2010-02-09",
	"application_number": "11133717",
	"application_date": "2005-05-20",
	"tags": null,
	"slug": "method-and-apparatus-for-generating-components-for-patternbased-system-design-analysis-using-a-characteristics-model",
	"match_type": "description"
},
{
	"name": "Method and apparatus to interface an offload engine network interface with a host machine",
	"summary": "",
	"abstract": "A system that includes a host including at least one per-connection data structure and at least one per-processor data structure, wherein the at least one per-connection data structure is associated with a connection, and an offload engine operatively connected to the host. The engine includes offload engine connection registers and functionality to update the at least one per-connection data structures in the host, wherein the offload engine is configured to send and receive network data on the connection, wherein the host and the offload engine communicate using the at least one per-processor data structure, and wherein the offload engine communicates a status of the connection to the host using the offload engine connection registers.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07647436",
	"publication_date": "2010-01-12",
	"application_number": "11118004",
	"application_date": "2005-04-29",
	"tags": null,
	"slug": "method-and-apparatus-to-interface-an-offload-engine-network-interface-with-a-host-machine",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for coordinating processing of network connections between two network protocol stacks",
	"summary": "",
	"abstract": "Methods and apparatus for processing a network connection are disclosed. The network connection is established by a first network protocol stack. A determination is made whether to offload the network connection from the first network protocol stack to the second network protocol stack. The network connection is then transferred from the first network protocol stack to the second network protocol stack when a determination has been made to offload the network connection from the first network protocol stack to the second network protocol stack. The network connection is handled by second network protocol stack until a determination has been made to offload the network connection back to the first network protocol stack. When an indicator is received indicating a request to transfer the network connection back to the first network protocol stack, the network connection is transferred back to the first network protocol stack. State information associated with the network connection is shared by the two network protocol stacks, thereby enabling the network connection to be transferred seamlessly and without loss of data.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07689702",
	"publication_date": "2010-03-30",
	"application_number": "10698212",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": "methods-and-apparatus-for-coordinating-processing-of-network-connections-between-two-network-protocol-stacks",
	"match_type": "description"
},
{
	"name": "System and method for controlling the use of a method in an object-oriented computing environment",
	"summary": "",
	"abstract": "A system and method for controlling the use by caller objects to a restricted method of a resource object in an object-oriented computing environment are provided in accordance with one embodiment of the invention. The method is based on associating an access-token with a caller object which is to be allowed to access the restricted method and sharing this access-token with the resource object. When subsequent calls to the restricted method are made by a caller object, access is made contingent on the caller object providing the access-token as part of the call procedure. Where no access-token is provided, or an invalid access-token is provided, access to the method is denied or restricted. The method provides protection against innocently made wrong calls to a restricted method by a caller object, for example due to coding errors. The method also provides protection against maliciously made calls to a restricted method by caller objects that should not have access to it.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07668862",
	"publication_date": "2010-02-23",
	"application_number": "11049517",
	"application_date": "2005-02-02",
	"tags": null,
	"slug": "system-and-method-for-controlling-the-use-of-a-method-in-an-objectoriented-computing-environment",
	"match_type": "description"
},
{
	"name": "System and method for efficient meta-data driven instrumentation",
	"summary": "",
	"abstract": "A method for gathering management information about an asset that includes receiving a first request for the management information about the asset, wherein the first request complies with the information model format, identifying a data acquisition (DAQ) definition for the DAQ definition complies with the DAQ format, triggering a protocol handler according to the DAQ definition, receiving the management information from the protocol handler about the asset, and updating a cache entry with the management information.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07676475",
	"publication_date": "2010-03-09",
	"application_number": "11472660",
	"application_date": "2006-06-22",
	"tags": null,
	"slug": "system-and-method-for-efficient-metadata-driven-instrumentation",
	"match_type": "description"
},
{
	"name": "System and method for providing exceptional flow control in protected code through watchpoints",
	"summary": "",
	"abstract": "A system and method for providing exceptional flow control in protected code through watchpoints is described. Code is generated. The generated code includes a sequence of normal operations and is subject to protection against copying during execution of the generated code. Execution points within the generated code are identified. A watchpoint corresponding to each of the execution points is set. An exception handler associated with each watchpoint is defined and includes operations exceptional to the normal operations sequence that are performed upon a triggering of each watchpoint during execution of the generated code.",
	"url": null,
	"owner": "Sun Microsystems, Inc.",
	"publication_number": "07647586",
	"publication_date": "2010-01-12",
	"application_number": "10918131",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": "system-and-method-for-providing-exceptional-flow-control-in-protected-code-through-watchpoints",
	"match_type": "description"
},
{
	"name": "Information search, retrieval and distillation into knowledge objects",
	"summary": "",
	"abstract": "The invention provides for various methods and apparatuses for searching bodies of knowledge, such as previously indexed source documents reachable over a network, search results from previous searches, and results from performing meta-searches. Search criteria is received from a client, and the bodies of knowledge are searched based on the search criteria, and search results provided responsive to said searching. Search results may be configured to have associated distillation triggers, where selecting a trigger causes its associated search result to be distilled in real-time. Distilled search results can be indexed into portions of the source document for focused entry, and can also be grouped and analytically presented on mid-menus to allow the user to review distilled data in summary form. Results may also have associated status symbols indicating by symbol a particular topic area to which a result is related, and by opacity or other indicator the apparent relevance of a result to the particular topic area. Search and viewing preferences may be determined according to psychometrics, user selection of a default user category, through a question/answer session, or based on monitoring user activity which incrementally defines a profile.",
	"url": null,
	"owner": "Surfwax, Inc.",
	"publication_number": "07844594",
	"publication_date": "2010-11-30",
	"application_number": "09649436",
	"application_date": "2000-08-25",
	"tags": null,
	"slug": "information-search-retrieval-and-distillation-into-knowledge-objects",
	"match_type": "description"
},
{
	"name": "Transaction server and computer programme product",
	"summary": "",
	"abstract": "A computerized transaction server (), for the conclusion of contracts between service users and service providers, comprises a user interface with several data input modules (), having data input fields for the input of data relating to the object of the contract. Data rules and business rules, provided for the data input fields, are stored in a regulatory databank (). The quality of inputted data values are verified by the transaction server (), according to the provided data rules and the data values are evaluated based on the provided business rules. Various contract conclusion processes () and/or data input modules () for the input of additional data are automatically selected and activated by the transaction server, depending on the result of the evaluation. For the checking and evaluation of the data values, sets of rules with differing business rules and/or data rules are selected by the transaction server (), depending on inputted data values. The transaction server () permits a complex and flexibly configurable automatic evaluation or inputted data values and dynamic and automatically adjustable data input sequence and process operation plan dependent on inputted data values and stored business rules.",
	"url": null,
	"owner": "Swiss Reinsurance Company",
	"publication_number": "07650315",
	"publication_date": "2010-01-19",
	"application_number": "10542174",
	"application_date": "2004-07-22",
	"tags": null,
	"slug": "transaction-server-and-computer-programme-product",
	"match_type": "description"
},
{
	"name": "System and method for location transparency",
	"summary": "",
	"abstract": "A service that augments a key element of Unified Messaging and Unified Communications initiativesu2014i.e., Mobile Subscriber Location Awarenessu2014to enhance substantially the value, usefulness, etc. of the presence awareness, place shifting, etc. components of such initiatives. The service may optionally leverage the capabilities of a centrally-located, full-featured Messaging Inter-Carrier Vendor.",
	"url": null,
	"owner": "Sybase 365, Inc.",
	"publication_number": "07805148",
	"publication_date": "2010-09-28",
	"application_number": "11763588",
	"application_date": "2007-06-15",
	"tags": null,
	"slug": "system-and-method-for-location-transparency",
	"match_type": "description"
},
{
	"name": "Development system with methodology providing optimized message parsing and handling",
	"summary": "",
	"abstract": "A development system with methodology providing optimized message parsing and handling is described. In one embodiment, for example, a computer-implemented method is described for improved processing of certain types of messages, the method comprises steps of: loading metadata at design time, the metadata characterizing a particular message type; based on the metadata, automatically generating source code for creating runtime components highly optimized for the particular message type; compiling the source code into the runtime components, for deployment in a runtime environment; and at runtime, processing messages of the particular message type with the runtime components, so that messages are processed in a manner that is highly optimized for the particular message type.",
	"url": null,
	"owner": "Sybase, Inc.",
	"publication_number": "07844957",
	"publication_date": "2010-11-30",
	"application_number": "11164054",
	"application_date": "2005-11-08",
	"tags": null,
	"slug": "development-system-with-methodology-providing-optimized-message-parsing-and-handling",
	"match_type": "description"
},
{
	"name": "Hierarchical entitlement system with integrated inheritance and limit checks",
	"summary": "",
	"abstract": "A hierarchical entitlement system, method, and computer program product with integrated inheritance and limit checks are described. In one embodiment, for example, a computer-implemented method is described for specifying and enforcing entitlements for performance of financial transactions, the method comprises steps of: providing a hierarchical entitlement structure with inheritance for specifying entitlements for performing financial transactions; receiving user input for defining a plurality of entitlement groups of the hierarchical entitlement structure, wherein each entitlement group has specified permissions to perform financial transactions, limits on performance of the financial transactions, and membership of each user; in response to a particular user request to perform a financial transaction at runtime, identifying the particular user's membership in a certain entitlement group; and determining whether to allow the particular user to perform the financial transaction based on permissions and limits of the hierarchical entitlement structure applicable to the particular user's performance of the financial transaction.",
	"url": null,
	"owner": "Sybase, Inc.",
	"publication_number": "07797239",
	"publication_date": "2010-09-14",
	"application_number": "11519927",
	"application_date": "2006-09-13",
	"tags": null,
	"slug": "hierarchical-entitlement-system-with-integrated-inheritance-and-limit-checks",
	"match_type": "description"
},
{
	"name": "System providing methodology for consolidation of financial information",
	"summary": "",
	"abstract": "A system providing methodology for consolidation of financial information is described. In one embodiment, for example, a system is described for consolidating financial transaction information from multiple sources for presentation to a user, the system comprises: a file importer for importing data files from a first source and processing each data file to create parsed information for each transaction present in the data file and represent any additional information present in the data file in Extensible Markup Language (XML) format; a data consolidator for receiving parsed information from the file importer, consolidating the parsed information with transaction information from a user-accessible system to create consolidated transaction records, assigning a unique identifier to each consolidated transaction record for an account, and storing the consolidated transaction records; and a reporting module for receiving a request for financial transaction information for a particular account and presenting consolidated transaction records for the particular account to the user in response to the request, wherein the user may navigate through the consolidated transaction records based upon the unique indentifier.",
	"url": null,
	"owner": "Sybase, Inc.",
	"publication_number": "07805344",
	"publication_date": "2010-09-28",
	"application_number": "10708584",
	"application_date": "2004-03-12",
	"tags": null,
	"slug": "system-providing-methodology-for-consolidation-of-financial-information",
	"match_type": "description"
},
{
	"name": "Backup and restore operations using distributed control information",
	"summary": "",
	"abstract": "Backup and restore operations in a distributed data system are described. In one embodiment of a backup operation, a computing system includes a media server, and two or more distributed data sources. The media server is configured to establish a first connection with an agent executing on the first data source and receives control information specifying one or more additional data sources to contact to continue the backup operation. Agents on the additional data sources pass control information and/or backup data via each respective connection until the backup operation is complete. In some embodiments, two or more concurrent connections may be established between the media server and distributed data sources. In this manner, a backup operation may be performed for distributed data using control information supplied by the distributed data sources.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07831562",
	"publication_date": "2010-11-09",
	"application_number": "11761653",
	"application_date": "2007-06-12",
	"tags": null,
	"slug": "backup-and-restore-operations-using-distributed-control-information",
	"match_type": "description"
},
{
	"name": "Cache hint correction for security scanning",
	"summary": "",
	"abstract": "A computer includes a filter module providing a standardized interface for intercepting file access requests. The computer also includes a cache manager that manages the caching mode used with the requests. An application on the computer issues a file access request and explicitly or implicitly specifies a cache hint informing the cache manager of a desired caching mode. A security scanner module scans files on the computer for malicious software. The security scanner module intercepts a file access request and alters the caching mode, if necessary, to one optimized for security scanning. The security scanner module performs the file scan using the optimal caching mode, and, if necessary, resets the caching mode to its original state.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07730533",
	"publication_date": "2010-06-01",
	"application_number": "11282539",
	"application_date": "2005-11-18",
	"tags": null,
	"slug": "cache-hint-correction-for-security-scanning",
	"match_type": "description"
},
{
	"name": "Direct process access",
	"summary": "",
	"abstract": "A method, computer program product and system for obtaining notification information about the state of an operating system. The method includes the steps of receiving, by a Direct Process Access (DPA) engine, a request for the notification information from a requesting program. The notification information is obtained from a database associated with the DPA engine and the notification information is provided to the requesting program. The DPA engine receives update information indicative of changes in the notification information directly from the operating system and causes the notification information to be updated in the database.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07814549",
	"publication_date": "2010-10-12",
	"application_number": "11499463",
	"application_date": "2006-08-04",
	"tags": null,
	"slug": "direct-process-access",
	"match_type": "description"
},
{
	"name": "Executing unmanaged content in a managed execution environment",
	"summary": "",
	"abstract": "A legacy application program contains unmanaged code. Application definitions for common unmanaged applications are established. An application definition includes a manifest that describes the unmanaged code and an execution wrapper that projects the unmanaged code as a managed assembly to the execution environment. An application definition can also specify other modifications to the unmanaged code, such as modifications to cause the unmanaged code to call managed application programming interfaces (APIs). The application definition is utilized to transform the unmanaged code into a managed assembly. The manifest and wrapper are added to the managed assembly and the unmanaged code is maintained as a resource. The managed execution environment uses the manifest to compute a permissions set for the unmanaged code, and the wrapper invokes the unmanaged code. The unmanaged code uses the managed APIs, and the managed execution environment can therefore manage execution of the code.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07752242",
	"publication_date": "2010-07-06",
	"application_number": "11231681",
	"application_date": "2005-09-20",
	"tags": null,
	"slug": "executing-unmanaged-content-in-a-managed-execution-environment",
	"match_type": "abstract"
},
{
	"name": "Generic web service frontend",
	"summary": "",
	"abstract": "A publisher uses a toolbox to graphically define web forms, by selecting and configuring components such as buttons, text boxes, menus, etc. Underlying code for the web forms (such as Extensible Markup Language, or XML) is automatically generated. The publisher defines transforms (such as Extensible Stylesheet Markup Language Transforms, or XSLTs) that process the exchange of data between the front end and the backend web service. The transforms and the code underlying the web forms is automatically combined into a frontend to the web service. The web based frontend is published on a user site, such that users can access the backend web service through the frontend.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07831919",
	"publication_date": "2010-11-09",
	"application_number": "11612404",
	"application_date": "2006-12-18",
	"tags": null,
	"slug": "generic-web-service-frontend",
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting malicious code in an information handling system",
	"summary": "",
	"abstract": "A method for detecting malicious code on an information handling system includes executing malicious code detection code (MCDC) on the information handling system. The malicious code detection code includes detection routines. The detection routines are applied to executable code under investigation running on the information handling system during the execution of the MCDC. The detection routines associate weights to respective executable code under investigation in response to detections of a valid program or malicious code as a function of respective detection routines. Lastly, executable code under investigation is determined a valid program or malicious code as a function of the weights associated by the detection routines. Computer-readable media and an information handling system are also disclosed.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07748039",
	"publication_date": "2010-06-29",
	"application_number": "10231557",
	"application_date": "2002-08-30",
	"tags": null,
	"slug": "method-and-apparatus-for-detecting-malicious-code-in-an-information-handling-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting malicious code in an information handling system",
	"summary": "",
	"abstract": "Malicious code detection code is executed by an information handling system. The malicious code detection code includes detection routines. The detection routines are applied to executable code under investigation. The detection routines associate weights to respective code under investigation in response to detections of a valid program or malicious code as a function of the detection routines. It is determined whether code under investigation is a valid program or malicious code as a function of the weights associated by the detection routines.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07832011",
	"publication_date": "2010-11-09",
	"application_number": "10647644",
	"application_date": "2003-08-25",
	"tags": null,
	"slug": "method-and-apparatus-for-detecting-malicious-code-in-an-information-handling-system",
	"match_type": "description"
},
{
	"name": "Method and apparatus for filtering E-mail",
	"summary": "",
	"abstract": "A server is disclosed for filtering e-mail messages. The server receives requests to retrieve e-mail messages on behalf of a client and then retrieves e-mail messages from a mail server on behalf of the client. The server then filters the e-mail messages based on one or more rules and transfers the filtered e-mail messages to the client. In addition, the server continues to filter the e-mail messages after the client has disconnected from the server. In one embodiment of the invention the e-mail message recipient is sent a notification by the server indicating that messages have been filtered. The recipient is then able to scan the filtered messages and insure that the messages have been filtered correctly. In another embodiment, a third party scans the e-mail messages on behalf of the e-mail user to make this determination. Also disclosed is an e-mail filter comprising an application programming interface and a plurality of dynamically loaded rule modules adapted to interface with the API. The rule modules are activated and deactivated based on usage. Specifically, rule modules which have not been used for a predetermined period of time are deactivated. In addition, different rule modules are assigned different weighted values based on the probability that the rule module will accurately filter e-mail messages and/or on the content of the e-mail messages.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "RE041940",
	"publication_date": "2010-11-16",
	"application_number": "12697288",
	"application_date": "2010-01-31",
	"tags": null,
	"slug": "method-and-apparatus-for-filtering-email",
	"match_type": "abstract"
},
{
	"name": "Method and apparatus for restoring backup data to a computer",
	"summary": "",
	"abstract": "Method and apparatus for restoring backup data to a computer is described. In one example, selected resources of within the backup data to be restored are specified. An installation package is generated that provides a hierarchical archive of the selected resources and is configured for execution by an operating system of the computer. The installation package is provided to the computer for execution thereon to effect a restoration of the selected resources onto the computer.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07797285",
	"publication_date": "2010-09-14",
	"application_number": "11864875",
	"application_date": "2007-09-28",
	"tags": null,
	"slug": "method-and-apparatus-for-restoring-backup-data-to-a-computer",
	"match_type": "description"
},
{
	"name": "Method for grouping exchange 2007 journal messages",
	"summary": "",
	"abstract": "During an initial scan of a journal inbox, journal reports are modified so that the Internet Message ID in the text body appears as a custom message ID value in a new custom message ID MAPI property created on the journal reports. Further, the message class value of the message class MAPI property on the journal reports is modified to a journal part. During a secondary scan of the journal inbox, related journal parts are grouped together based on the custom message ID value and message content. Also, the message class value is modified to prevent the journal reports from being considered in subsequent initial or secondary scans. One of the journal reports of each group is selected as a master copy. A new custom related journal parts MAPI property is created on the master copy that includes a related journal parts value which is a list of identifiers that can be used to locate the other related journal parts of the group.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07836139",
	"publication_date": "2010-11-16",
	"application_number": "12126163",
	"application_date": "2008-05-23",
	"tags": null,
	"slug": "method-for-grouping-exchange-2007-journal-messages",
	"match_type": "description"
},
{
	"name": "Scanning files using direct file system access",
	"summary": "",
	"abstract": "Scanning engine (i.e. program(s) or application(s))  sends request  to direct file system access engine (i.e. program(s) or application(s)) . Direct file system access engine  receives request  and passes request  to file system(s)  as request . No filter program(s)  receive program control as request  bypasses any filter program(s) . The direct file system access engine  receives unaltered information from file system(s) . Utilising Direct File Access (DFA) allows bypass of user mode hooking-type malwares, kernel, and file system filter programs to obtain access to or communicate with the real underlying file system(s). This provides a u2018cleanu2019 view of the file system(s) in situations where user/kernel components are compromised or rootkit file system filter programs are installed.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07860850",
	"publication_date": "2010-12-28",
	"application_number": "11707342",
	"application_date": "2007-02-16",
	"tags": null,
	"slug": "scanning-files-using-direct-file-system-access",
	"match_type": "description"
},
{
	"name": "Securing executable content using a trusted computing platform",
	"summary": "",
	"abstract": "A software development system (SDS) () digitally signs software () developed on the system. The SDS () executes on a computer system () having a trusted computing platform. The platform includes protected areas () that store data and cannot be accessed by unauthorized modules. A code signing module () executing in a protected area () obtains a private/public key pair and a corresponding digital certificate. The SDS () is configured to automatically and transparently utilize the code signing module () to sign software () produced by the system. End-user systems () receive the certificate with the software and can use it to verify the signature. This verification will fail if a parasitic virus or other malicious code has altered the software (). Accordingly, the SDS () greatly reduces the risk of malicious code executing on the end-user computer system ().",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07694139",
	"publication_date": "2010-04-06",
	"application_number": "10280665",
	"application_date": "2002-10-24",
	"tags": null,
	"slug": "securing-executable-content-using-a-trusted-computing-platform",
	"match_type": "description"
},
{
	"name": "System and method for unified threat management with a relational rules methodology",
	"summary": "",
	"abstract": "A unified threat management system is provided with a uniform relational rules model. The unified relational rules model provides for the sub-setting of rules and the ability to derive a result based partially from previous security measurements. The sharing of a security check from one security implementation to another using an object-oriented methodology is facilitated. Security policy is divided into specific security features that result in a security hierarchy. The security features may be considered to be listed sequentially, from bottom to top, and form a relationship with one another. These relationships are used to build a current security measure upon a previous security measure and may be used as a pre-cursor when marshalling data content to be validated.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07735116",
	"publication_date": "2010-06-08",
	"application_number": "11277429",
	"application_date": "2006-03-24",
	"tags": null,
	"slug": "system-and-method-for-unified-threat-management-with-a-relational-rules-methodology",
	"match_type": "description"
},
{
	"name": "Techniques for time-dependent storage management with a portable application programming interface",
	"summary": "",
	"abstract": "Techniques for time-dependent storage management with a portable application programming interface are disclosed. In one particular exemplary embodiment, the techniques may be realized as a method for time-dependent storage management. The method may comprise interfacing with a host and a storage system having one or more storage devices. The method may also comprise intercepting all write commands that the host issues to the storage system. The method may additionally comprise performing a copy-on-write operation for each intercepted write command, wherein copy-on-write data and metadata associated with each intercepted write command are recorded, the metadata including at least a timestamp associated with each intercepted write command.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07849273",
	"publication_date": "2010-12-07",
	"application_number": "11549428",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "techniques-for-timedependent-storage-management-with-a-portable-application-programming-interface",
	"match_type": "name"
},
{
	"name": "Virtual OS computing environment",
	"summary": "",
	"abstract": "Multiple, semi-independent virtual operating system (OS) environments coexist within a single (OS) such that a change made in one environment does not affect the main OS or any other environment. In this way each virtual OS environment appears to be an independent OS for the applications running within it. The file system and registry information for each environment is independent of the base OS and other environments. Each of the environments can contain a group of installed applications that will run independently of each other. Although the invention is described in terms of a Windowsu00ae environment, the approach is applicable to other operating systems through appropriate modification.",
	"url": null,
	"owner": "Symantec Corporation",
	"publication_number": "07673308",
	"publication_date": "2010-03-02",
	"application_number": "10716337",
	"application_date": "2003-11-18",
	"tags": null,
	"slug": "virtual-os-computing-environment",
	"match_type": "description"
},
{
	"name": "Adaptive caching for a distributed file sharing system",
	"summary": "",
	"abstract": "A system and method for adaptively responding to update messages for a replica of a data object. A node may maintain first information regarding a replica of a data object. In various embodiments, the first information may comprise any kind of information regarding the replica of the data object. In one embodiment, the first information may comprise information indicative of accesses to the replica of the data object, e.g., may comprise access history information. In response to receiving a message for updating the replica of the data object, the node may respond to the message based on the first information. For example, the node may select one or more operations to perform based on the first information and may perform the one or more selected operations.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07734820",
	"publication_date": "2010-06-08",
	"application_number": "10750426",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": "adaptive-caching-for-a-distributed-file-sharing-system",
	"match_type": "description"
},
{
	"name": "Backup and restore techniques using inconsistent state indicators",
	"summary": "",
	"abstract": "A method for backup and restore using inconsistent state indicators comprises identifying, from among a plurality of data objects to be backed up, one or more data objects that are in an inconsistent state, and storing inconsistent state indicators (such as modified object attributes) associated with the data objects. The method may further include generating a backup aggregate such as a snapshot of the plurality of data objects, where the backup aggregate includes backup versions of the inconsistent data objects. Prior to restoring one or more data objects from the backup aggregation, the method may include using the inconsistent state indicators to identify the backup versions that correspond to the inconsistent data objects, e.g., to exclude backup versions corresponding to inconsistent data objects from a list of full restoration candidates.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07672979",
	"publication_date": "2010-03-02",
	"application_number": "11177813",
	"application_date": "2005-07-08",
	"tags": null,
	"slug": "backup-and-restore-techniques-using-inconsistent-state-indicators",
	"match_type": "description"
},
{
	"name": "Backup system and method",
	"summary": "",
	"abstract": "Backup of a production instance of an application in a production machine environment is performed by creating a snapshot image that captures the state of the production machine, and then backing up the application from a backup machine created using the snapshot image. The backup of the application can be effected by shutting down the backup machine and backing up its storage, or by using backup software to act on the backup version of the application.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07689859",
	"publication_date": "2010-03-30",
	"application_number": "11643503",
	"application_date": "2006-12-20",
	"tags": null,
	"slug": "backup-system-and-method",
	"match_type": "description"
},
{
	"name": "Bulk network transmissions using multiple connections primed to optimize transfer parameters",
	"summary": "",
	"abstract": "A system for bulk network transmissions using multiple connections primed to optimize transfer parameters includes one or more processors and memory coupled to the processors. The memory stores program instructions executable by the processors to establish a plurality of network connections designated to be used for a single bulk data transfer. The instructions are further executable to adjust the values of one or more configuration parameters of each of the connections. The adjusting includes sending one or more priming packets over each of the connections. The instructions are also executable to perform the bulk transfer as a sequence of sub-transfers. Each sub-transfer includes a transmission of a predetermined amount of application data over each connection of a selected subset of the plurality of network connections.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07765307",
	"publication_date": "2010-07-27",
	"application_number": "11364034",
	"application_date": "2006-02-28",
	"tags": null,
	"slug": "bulk-network-transmissions-using-multiple-connections-primed-to-optimize-transfer-parameters",
	"match_type": "description"
},
{
	"name": "Checkpoint service",
	"summary": "",
	"abstract": "A computer accessible medium may be encoded with instructions which, when executed: replicate a checkpoint segment from a first local storage of a first node to at least one other node; and load a copy of the checkpoint segment from the other node to a second local storage of a second node. The checkpoint segment is stored into the first local storage by an application, and comprises a state of the application. The copy of the checkpoint segment is loaded into a second local storage responsive to a request from the second node to load the copy. The second node is to execute the application. In some embodiments, the copy of the checkpoint segment may also be loaded into a global storage.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07743381",
	"publication_date": "2010-06-22",
	"application_number": "10663632",
	"application_date": "2003-09-16",
	"tags": null,
	"slug": "checkpoint-service",
	"match_type": "description"
},
{
	"name": "Coherency of replicas for a distributed file sharing system",
	"summary": "",
	"abstract": "A plurality of data objects may be replicated across a plurality of computing nodes coupled to a network. The network may include a first node operable to initiate an update operation to update a plurality of replicas of a first object. If one or more of the replicas are not reachable then the update operation may update a subset (e.g., a quorum) but not all of the replicas. For each node on which one of the replicas was updated in the update operation, the node may add the object to a list of incoherent objects. The list of incoherent objects may subsequently be used to bring the lagging replicas in sync with the replicas that were updated. In another embodiment, a plurality of replicas of an object may be stored on a plurality of nodes, similarly as described above. A first node that stores a replica of the object may store a first timestamp associated with the replica on the first node. The timestamp may be used to ensure that the replica on the first node is coherent with respect to one or more other replicas by periodically communicating with the one or more other replicas when a threshold amount of time has passed without the replica on the first node receiving an update.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07831735",
	"publication_date": "2010-11-09",
	"application_number": "12396280",
	"application_date": "2009-03-02",
	"tags": null,
	"slug": "coherency-of-replicas-for-a-distributed-file-sharing-system",
	"match_type": "description"
},
{
	"name": "Communication sessions for a computer network",
	"summary": "",
	"abstract": "A system and method supporting communication sessions for nodes in a network. A sender node may initiate a send operation to send a message to one or more receiver nodes. For each receiver node, the message may pass from the sender node to the receiver node via a path including a plurality of nodes. At each node through which the message passes, the node may store state information regarding the message. The state information may include information specifying a link via which the message was received. Each receiver node may issue one or more replies to the message. The replies from each receiver node may pass from the receiver node to the sender node via the same path by which the message reached the respective receiver node. This may be accomplished using the state information stored on each node in the path.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07653059",
	"publication_date": "2010-01-26",
	"application_number": "10403261",
	"application_date": "2003-03-31",
	"tags": null,
	"slug": "communication-sessions-for-a-computer-network",
	"match_type": "description"
},
{
	"name": "Conflict resolution for a distributed file sharing system",
	"summary": "",
	"abstract": "A distributed data object sharing system in which a plurality of data objects are replicated across computing nodes. The system may be operable to identify replica conflicts for the data objects and modify tree structures to reflect the conflicts. In one embodiment, a tree structure may represent a plurality of replica versions. Replica versions in conflict with each other may be represented as child versions at branch points in the tree.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07822711",
	"publication_date": "2010-10-26",
	"application_number": "10749260",
	"application_date": "2003-12-31",
	"tags": null,
	"slug": "conflict-resolution-for-a-distributed-file-sharing-system",
	"match_type": "description"
},
{
	"name": "Dynamic directories",
	"summary": "",
	"abstract": "A system and method for creating and utilizing dynamic directories in a computing system. A computing system includes a file system and a dynamic directory mechanism. The dynamic directory mechanism is configured to enable a user to create dynamic directories which are identifiable as having special behaviors associated with them. The user may create executable instructions for performing the special behaviors in a user space of an operating system and associate the special behaviors with selected native file system operations which may be performed on the directory. In response to detecting an operation on a directory is initiated, the mechanism determines whether the directory is a dynamic directory. If the directory is a dynamic directory, the mechanism determines whether any predetermined special behaviors have been defined for the initiated operation and if so performs the special behaviors.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07725507",
	"publication_date": "2010-05-25",
	"application_number": "11031819",
	"application_date": "2005-01-07",
	"tags": null,
	"slug": "dynamic-directories",
	"match_type": "description"
},
{
	"name": "Dynamic discovery of attributes of storage device driver configuration",
	"summary": "",
	"abstract": "A method, computer program product and system that enables dynamic determination of device attributes and dynamic configuration of device drivers for storage devices in a heterogeneous storage environment. Attributes of a device are dynamically determined by an application program, and those attributes are used by the application program to configure the device driver. The application program and the storage device being configured remain operational during the reconfiguration process.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07711677",
	"publication_date": "2010-05-04",
	"application_number": "10208763",
	"application_date": "2002-07-30",
	"tags": null,
	"slug": "dynamic-discovery-of-attributes-of-storage-device-driver-configuration",
	"match_type": "description"
},
{
	"name": "Efficient search for storage objects in a network",
	"summary": "",
	"abstract": "A system and method related to efficiently searching for an object in a network including a plurality of realms, e.g., a plurality of local area networks (LANs). The method may ensure that nodes within a LAN are able to locate objects within that LAN using only computing resources on the local LAN. Thus, expensive WAN transfers may be avoided where possible. The system may also scale to many nodes. Nodes may not be required to know about every other node in the system. Mechanisms for re-distributing object location information among nodes as nodes are added to and removed from the system are also described.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07680950",
	"publication_date": "2010-03-16",
	"application_number": "10704271",
	"application_date": "2003-11-07",
	"tags": null,
	"slug": "efficient-search-for-storage-objects-in-a-network",
	"match_type": "description"
},
{
	"name": "Encapsulation of storage object extensibility records for backup and restore",
	"summary": "",
	"abstract": "A method for encapsulation of extensibility records for backup and restore comprises determining whether a storage object to be backed up, such as a file or a directory of a primary data set, has an extensibility record associated with it. In response to determining that the storage object has an associated extensibility record, the method may include storing an encoding of at least a portion of the extensibility record, and generating a backup version of the storage object.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07822726",
	"publication_date": "2010-10-26",
	"application_number": "11190610",
	"application_date": "2005-07-27",
	"tags": null,
	"slug": "encapsulation-of-storage-object-extensibility-records-for-backup-and-restore",
	"match_type": "description"
},
{
	"name": "File system and methods for performing file create and open operations with efficient storage allocation",
	"summary": "",
	"abstract": "A client computer system of a cluster may send a request to create a file in a cluster file system. A server may create a file in response to the information and allocate space in a storage to the file. If a request to write to the file is received within a predetermined amount of time, the write may complete without requiring that additional operations be performed to allocate space to the file. If a write to the file is not received within the predetermined amount of time, the space allocated to the file when it was created may be de-allocated. The file system may additionally or alternatively perform a method for opening a file while delaying an associated truncation of space allocated to the file. If a request to write to the file is received within a predetermined amount of time, the write may be performed in the space already allocated to the file.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07797357",
	"publication_date": "2010-09-14",
	"application_number": "11714298",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "file-system-and-methods-for-performing-file-create-and-open-operations-with-efficient-storage-allocation",
	"match_type": "description"
},
{
	"name": "Granular restore of data objects from a directory service",
	"summary": "",
	"abstract": "A system and method for performing a granular restore of data objects from a directory service is disclosed. In one embodiment, at the time a backup of the directory services database is performed, a metadata file with index values for some data objects is created. The metadata file may include an index of the name and an object identifier for each included data object. During granular restore of one or more data objects selected for restoration, the corresponding object identifier is retrieved from the metadata file using the name of the data object. The object identifier is then used to restore the data object in the directory service.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07797281",
	"publication_date": "2010-09-14",
	"application_number": "11654680",
	"application_date": "2007-01-12",
	"tags": null,
	"slug": "granular-restore-of-data-objects-from-a-directory-service",
	"match_type": "description"
},
{
	"name": "Host-based virtualization optimizations in storage environments employing off-host storage virtualization",
	"summary": "",
	"abstract": "A system for host-based virtualization optimizations in storage environments employing off-host virtualization may include a host, one or more physical storage devices, and an off-host virtualizer such as a virtualizing switch. The off-host virtualizer may be configured to aggregate storage within the one or more physical storage devices into a virtual storage device such as a logical volume, and to provide control data for the virtual storage device to the host. The host may be configured to use the control data to perform a function in response to an I/O request from a storage consumer directed at the virtual storage device, and to use a result of the function to coordinate one or more I/O operations corresponding to the I/O request.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07669032",
	"publication_date": "2010-02-23",
	"application_number": "11156820",
	"application_date": "2005-06-20",
	"tags": null,
	"slug": "hostbased-virtualization-optimizations-in-storage-environments-employing-offhost-storage-virtualization",
	"match_type": "description"
},
{
	"name": "Method and system to offload archiving process to a secondary system",
	"summary": "",
	"abstract": "Procedures and systems may be used for archiving data from a secondary data set that is a stable copy of a primary data set. In one implementation, the secondary data set is a continuous data protection (CDP) copy of the primary data set. One implementation of a method includes receiving an application programming interface (API) request for archive-eligible data, gathering application data from a secondary data set, obtaining archive-eligible data from the gathered application data, and responding to the request instruction with the archive-eligible data. The gathering is performed by a gathering circuit configured to obtain information from a plurality of types of secondary data sets. The method also includes receiving API modification instructions related to the archive-eligible data, and causing the modification instruction to be performed on the primary data set.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07680843",
	"publication_date": "2010-03-16",
	"application_number": "11527027",
	"application_date": "2006-09-26",
	"tags": null,
	"slug": "method-and-system-to-offload-archiving-process-to-a-secondary-system",
	"match_type": "abstract"
},
{
	"name": "Multi-volume file support",
	"summary": "",
	"abstract": "A computer accessible medium comprises instructions which, when executed, receive a request to allocate one or more blocks for a file. At least one allocation policy is assigned to the file, wherein the allocation policy specifies one or more storage units on which the blocks are to be allocated. Additionally, if more than one storage unit is specified, the allocation policy includes a control indication indicating a mechanism for selecting among the storage units. The instructions, when executed, may also allocate blocks according to the allocation policy. In another implementation, a computer accessible medium comprises instructions which, when executed receive a request to allocate one or more blocks for a file in a filesystem and allocate blocks according to an allocation policy. Allocation policies are specifiable at two or more levels of granularity in the filesystem.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07814128",
	"publication_date": "2010-10-12",
	"application_number": "10449739",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": "multivolume-file-support",
	"match_type": "description"
},
{
	"name": "Pre-computed dynamic instrumentation",
	"summary": "",
	"abstract": "A system and method for instrumenting program instructions. A processing system includes a compiler and a profiler. The compiler is configured to notify the profiler of a compilation event corresponding to first program instructions. In response to detecting the event, the profiler is configured to intercept compilation of the first program instructions, determine whether an instrumented version of the first program instructions is currently available, instruct the compiler to compile the instrumented version of the first program instructions if available, and retrieve and instrument the first program instructions if not available. The profiler may maintain an instrumentation cache for storing instrumented versions of program instructions. The instrumentation cache may further include metadata which identifies portions of program code which have been instrumented and their location. The profiler may generally instrument program instructions once during the resident life of a corresponding application.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07805717",
	"publication_date": "2010-09-28",
	"application_number": "11252343",
	"application_date": "2005-10-17",
	"tags": null,
	"slug": "precomputed-dynamic-instrumentation",
	"match_type": "description"
},
{
	"name": "SAN simulator",
	"summary": "",
	"abstract": "Embodiments of a SAN simulator that may be used with SAN management systems to create a virtual SAN with a configurable number of various types of virtual SAN objects. The virtual SAN may be accessed in performing various SAN management tasks in a virtual environment. In one embodiment, the virtual SAN objects may be generated in accordance with SAN simulator configuration information describing the types and numbers of virtual SAN objects to be generated. In one embodiment, to enter a virtual SAN object in the virtual SAN data representation, each virtual SAN object's object type and attributes may be checked in an object schema table to verify that the specified type of virtual SAN object is supported by the SAN simulator. One embodiment may include a SAN simulator explorer that serves as an interface between a SAN management server and the virtual SAN when performing SAN management tasks.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07774444",
	"publication_date": "2010-08-10",
	"application_number": "10271492",
	"application_date": "2002-10-16",
	"tags": null,
	"slug": "san-simulator",
	"match_type": "description"
},
{
	"name": "Snapshot-based replication infrastructure for efficient logging with minimal performance effect",
	"summary": "",
	"abstract": "A method, system, computer system, and computer program product to provide an infrastructure for replicating data across multiple nodes in a network. Changes to data are written to each of a set of mirrored copies of a log on one node. When a storage area containing a portion of one of the mirrored copies of the log becomes full, the storage area is disassociated from the set of mirrored copies. After detaching the storage area, changes are no longer written to the storage area, thereby providing a stable image of that portion of the log data. Log data stored in the storage area are replicated from the storage area to another node. By replicating from a separate detached storage area, log data are replicated without disturbing the disk heads writing changes to each of the set of mirrored copies of the log.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07668876",
	"publication_date": "2010-02-23",
	"application_number": "10423291",
	"application_date": "2003-04-25",
	"tags": null,
	"slug": "snapshotbased-replication-infrastructure-for-efficient-logging-with-minimal-performance-effect",
	"match_type": "description"
},
{
	"name": "Storage paths",
	"summary": "",
	"abstract": "A method for controlling data traffic within a storage area network can be provided. The method can comprise analyzing data for a path in a storage area network to determine whether the path should be identified as a less preferred path, and controlling data traffic routing to avoid use of a path identified as a less preferred path. In some embodiments, the data can be obtained from a host bus adaptor in the path. In some embodiments, the controlling can comprise throttling traffic over a path identified as a less preferred path.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07668981",
	"publication_date": "2010-02-23",
	"application_number": "11729178",
	"application_date": "2007-03-28",
	"tags": null,
	"slug": "storage-paths",
	"match_type": "description"
},
{
	"name": "Storage resource integration layer interfaces",
	"summary": "",
	"abstract": "Storage resource integration layer interfaces are provided. Storage operations associated with interfaces of a plurality of storage resources are normalized and provided as a common set of modules accessible to a storage application. Moreover, configuration modules are provided to the storage application to acquire configuration settings associated with storage residing on the storage resources. In one embodiment, virtualization modules are provided to the storage application to permit the storage application to create and link virtual storage resources from the storage resources.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07779428",
	"publication_date": "2010-08-17",
	"application_number": "10175029",
	"application_date": "2002-06-18",
	"tags": null,
	"slug": "storage-resource-integration-layer-interfaces",
	"match_type": "description"
},
{
	"name": "System and method for detecting file content similarity within a file system",
	"summary": "",
	"abstract": "A system and method for detecting file content similarity within a file system. The system may include a storage device configured to store a plurality of files and a file system configured to manage access to the storage device. The file system may be configured to compute a compressed size of at least a portion of a given file, and to store an indication of the compressed size in a named stream corresponding to the given file. In one specific implementation of the system, the file system may be further configured to determine a value of a file harmony metric from the compressed size of the concatenation of a first and second file and the compressed sizes of the first and second files, where the compressed sizes of the first and second files may be stored in a corresponding one of a plurality of respective named streams.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07693859",
	"publication_date": "2010-04-06",
	"application_number": "11712271",
	"application_date": "2007-02-28",
	"tags": null,
	"slug": "system-and-method-for-detecting-file-content-similarity-within-a-file-system",
	"match_type": "description"
},
{
	"name": "System and method for determining file system data integrity",
	"summary": "",
	"abstract": "A system and method for determining file system data integrity. In one embodiment, the system includes a storage device configured to store data and a file system configured to manage access to the storage device, to store plurality of files, to store a respective signature of each of the plurality of files, and to compare a respective signature of a given file against a corresponding validation signature. In one specific implementation, the system further includes a validation signature inventory including a plurality of validation signatures, and the file system is further configured to validate a particular file by retrieving a corresponding particular validation signature from the validation signature inventory and comparing the corresponding particular validation signature against the respective signature of the particular file. In another specific implementation, the file system is further configured to store the corresponding validation signature of the given file in a write-once storage attribute.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07653647",
	"publication_date": "2010-01-26",
	"application_number": "10869723",
	"application_date": "2004-06-16",
	"tags": null,
	"slug": "system-and-method-for-determining-file-system-data-integrity",
	"match_type": "description"
},
{
	"name": "System and method for dynamically loadable storage device I/O policy modules",
	"summary": "",
	"abstract": "Systems, methods, apparatus and software can implement a multipathing driver using dynamically loadable device policy modules that provide device specific functionality for providing at least one of input/output (I/O) operation scheduling, path selection, and I/O operation error analysis. Because the device policy modules include device specific functionality, various different devices from different manufacturers can be more efficiently and robustly supported.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07694063",
	"publication_date": "2010-04-06",
	"application_number": "11584309",
	"application_date": "2006-10-20",
	"tags": null,
	"slug": "system-and-method-for-dynamically-loadable-storage-device-io-policy-modules",
	"match_type": "description"
},
{
	"name": "System and method for enforcing device grouping rules for storage virtualization",
	"summary": "",
	"abstract": "A system includes one or more storage devices and virtualization software configured to aggregate storage in the one or more storage devices into a virtual storage device accessible to a storage consumer. The virtualization software may include a group validation layer comprising a device-independent interface configured to validate a proposed group configuration operation on the one or more storage devices. The device-independent interface may be used to verify that the proposed configuration operation would, if completed, result in a configuration capable of supporting a desired virtualization functionality. The device-independent interface may allow an application to manage the one or more devices as a unit known as a virtual device group.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07818515",
	"publication_date": "2010-10-19",
	"application_number": "10915136",
	"application_date": "2004-08-10",
	"tags": null,
	"slug": "system-and-method-for-enforcing-device-grouping-rules-for-storage-virtualization",
	"match_type": "description"
},
{
	"name": "System and method for metering of application services in utility computing environments",
	"summary": "",
	"abstract": "A system for metering of application services in utility computing environments includes one or more meter agents and a meter aggregator. A meter agent may be configured to periodically collect usage data corresponding to one or more resources, and provide the usage data to the meter aggregator. The meter aggregator may be configured to aggregate the usage data associated with an application service, where the application service includes a plurality of application processes. In addition, the meter aggregator may be configured to compute a billing amount based on an aggregate resource usage by the application service over a specified time period.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07702779",
	"publication_date": "2010-04-20",
	"application_number": "11139229",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "system-and-method-for-metering-of-application-services-in-utility-computing-environments",
	"match_type": "description"
},
{
	"name": "System and method for profiling processes in a computing system",
	"summary": "",
	"abstract": "A system and method for managing the environment of software processes in a computer system. A computer system comprises a processor and at least one process environment comprising one or more environment variables. The processor executes one or more processes, intercepts the launch of a process, sets at least one environment variable to a first value, and continues the launch of the process. Setting the environment variable may enable a profiler process. The processor may set at least one environment variable for the process to a value which is chosen irrespective of a value of the environment variable of a parent process of the process. Further, the processor may set at least one environment variable for the process to a default value if a data repository does not contain an entry that has an identification which corresponds to the process.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07725882",
	"publication_date": "2010-05-25",
	"application_number": "11240232",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "system-and-method-for-profiling-processes-in-a-computing-system",
	"match_type": "description"
},
{
	"name": "System and method for querying file system content",
	"summary": "",
	"abstract": "A system and method for querying file system content. In one embodiment, the system may include a storage device configured to store a plurality of files and a file system configured to manage access to the storage device. The file system may be further configured to perform in-band detection of a file system content access event and to responsively generate a given metadata record. The system may further include a query system configured to query the given metadata record.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07831552",
	"publication_date": "2010-11-09",
	"application_number": "10862521",
	"application_date": "2004-06-07",
	"tags": null,
	"slug": "system-and-method-for-querying-file-system-content",
	"match_type": "description"
},
{
	"name": "System and method providing application redeployment mappings using filtered resource usage data",
	"summary": "",
	"abstract": "A system for providing application redeployment mappings using filtered resource usage data includes a meter agent and an optimizer. The meter agent may be configured to collect measurements quantifying usage of one or more source resources by one or more applications. In response to a specification of a set of constraints associated with a deployment of one or more applications to a target execution environment, the optimizer may be configured to obtain a filtered aggregation of the measurements collected by the meter agent, and use the filtered aggregation to generate a mapping of at least one application to one or more target resources of the target execution environment in accordance with the set of constraints. The optimizer may implement a mathematical model to generate the mapping based on a determination of an optimum value of an objective function.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07693983",
	"publication_date": "2010-04-06",
	"application_number": "11139230",
	"application_date": "2005-05-27",
	"tags": null,
	"slug": "system-and-method-providing-application-redeployment-mappings-using-filtered-resource-usage-data",
	"match_type": "description"
},
{
	"name": "Topology and routing model for a computer network",
	"summary": "",
	"abstract": "Various embodiments of a system and method related to a topology and routing model for a peer-to-peer network are disclosed. A plurality of nodes may be coupled to each other to form a peer-to-peer network. A routing table may be created on each node in the peer-to-peer network. Each node may be operable to route messages to other nodes in the peer-to-peer network using information stored in the routing table. Messages may be propagated among nodes in the peer-to-peer network in a decentralized manner. For example, the peer-to-peer network may not utilize centralized servers of any kind. Each node in the peer-to-peer network may perform substantially the same routing functionality.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07764681",
	"publication_date": "2010-07-27",
	"application_number": "11763247",
	"application_date": "2007-06-14",
	"tags": null,
	"slug": "topology-and-routing-model-for-a-computer-network",
	"match_type": "description"
},
{
	"name": "Updating a change track map based on a mirror recovery map",
	"summary": "",
	"abstract": "One method of updating a change track map involves resetting a mirror recovery map for a data volume. Just before the mirror recovery map is reset, a change track map for the data volume can be updated, using the mirror recovery map. The mirror recovery map can be reset by a data element of a data processing system, while the change track map can be updated by a control element of the data processing system.",
	"url": null,
	"owner": "Symantec Operating Corporation",
	"publication_number": "07707372",
	"publication_date": "2010-04-27",
	"application_number": "10882112",
	"application_date": "2004-06-30",
	"tags": null,
	"slug": "updating-a-change-track-map-based-on-a-mirror-recovery-map",
	"match_type": "description"
},
{
	"name": "Apparatus for interfacing a wireless local network and a wired voice telecommunications system",
	"summary": "",
	"abstract": "An apparatus for interfacing a wireless local area network with a wide area, cellular or public switched telephone network including the function of a wireless LAN base station or access point, and a gateway. The interface may contain one or more different types of gateways, including a PSTN voice gateway, an analog modem gateway, and others. The apparatus may also include a well designed to receive the handset or mobile computer device to recharge the battery as well as to automatically transfer data when the phone or device is secured in the well.",
	"url": null,
	"owner": "Symbol Technologies, Inc.",
	"publication_number": "07693101",
	"publication_date": "2010-04-06",
	"application_number": "11580266",
	"application_date": "2006-10-11",
	"tags": null,
	"slug": "apparatus-for-interfacing-a-wireless-local-network-and-a-wired-voice-telecommunications-system",
	"match_type": "description"
},
{
	"name": "Touch screen with user interface enhancement",
	"summary": "",
	"abstract": "The present invention is a graphical user interface in a computing device having a processor running an operating system and a display. The graphical user interface comprises a touch screen and a driver coupling the touch screen to the operating system. The driver can display a plurality of icons on the touch screen, or a plurality of screen images having at least one icon, with each of the icons associated with operations on the display and/or the touch screen. Other embodiments include the touch screen having unactivated and activated states, as well as the presence of an application programming interface that enables an application to display at least one image on the touch screen.",
	"url": null,
	"owner": "Synaptics Incorporated",
	"publication_number": "07730401",
	"publication_date": "2010-06-01",
	"application_number": "10125066",
	"application_date": "2002-04-17",
	"tags": null,
	"slug": "touch-screen-with-user-interface-enhancement",
	"match_type": "abstract"
},
{
	"name": "Integration of audio or video program with application program",
	"summary": "",
	"abstract": "An application program and an audio or video program may run on an operating system. The audio or video program is integrated with the application program. A user of the application program interacts with the audio or video program as though the audio or video program were part of the application program.",
	"url": null,
	"owner": "Talkway, Inc.",
	"publication_number": "07707591",
	"publication_date": "2010-04-27",
	"application_number": "09683706",
	"application_date": "2002-02-05",
	"tags": null,
	"slug": "integration-of-audio-or-video-program-with-application-program",
	"match_type": "description"
},
{
	"name": "Systems and methods for analog channel reuse in a cable system",
	"summary": "",
	"abstract": "A system and method is disclosed allowing a cable network provider to dynamically allocate a network resource, in the form of channel bandwidth, for conveying either analog or digital assets. Certain assets are distributed in a cable network in an analog manner but only during certain time periods. The network resources could be used for offering digital services at other times. A programmable RF switch allows network resources to be switched to convey digital assets when the analog channels are not required. The digital assets conveyed may comprise movies, games, or music and can be transferred during u2018off-hoursu2019 for local storage in the set top box in anticipation of future requests by a user. When the asset is requested, the set top box first checks if the asset is locally available, and if so, spools it out locally.",
	"url": null,
	"owner": "Tandberg Television Inc.",
	"publication_number": "07751451",
	"publication_date": "2010-07-06",
	"application_number": "11531900",
	"application_date": "2006-09-14",
	"tags": null,
	"slug": "systems-and-methods-for-analog-channel-reuse-in-a-cable-system",
	"match_type": "description"
},
{
	"name": "Local digital asset storage management technique",
	"summary": "",
	"abstract": "A technique is described for managing the local storage of digital assets, such as audio, (moving or still) pictures, text, executable code and combinations thereof, in the storage device of a user appliance, such as a personal video recorder, set top box, mobile phone or storage server. A digital asset is received that is intended for local storage in the storage device and that has been pushed down from a source. A rank order is assigned to each digital asset stored or to be stored in a storage device that has a finite capacity storage space for storing digital assets. The assigned rank orders of one or more of the digital assets are repeatedly examined and a digital asset having a rank order that is lowest among the examined rank orders may be deleted. Each rank order is assigned based on predefined default ranking rules and user instructions pertaining to one or more of the digital assets that are capable of causing a deviation from the default ranking rules, if any have been provided by the user. A signal may be provided containing executable instructions that can be executed at programmable electronic circuits for performing the above steps. Such a signal may be stored on a storage medium. A system for performing the above steps may include a receiver for receiving the digital assets and a processor for assigning ranking orders and for repeatedly examining the ranking orders and selectively deleting digital assets with low ranking orders.",
	"url": null,
	"owner": "Tandberg Television, Inc.",
	"publication_number": "07680993",
	"publication_date": "2010-03-16",
	"application_number": "11644601",
	"application_date": "2006-12-21",
	"tags": null,
	"slug": "local-digital-asset-storage-management-technique",
	"match_type": "description"
},
{
	"name": "Call flow system and method for use in a legacy telecommunication system",
	"summary": "",
	"abstract": "A method of operating a network server, such as a mobile application gateway, connect devices on a cellular or carrier network with individual networks, such as enterprise voice and data networks or residential networks. The effects of the present invention are far reaching in terms of transferring effective call control from the cellular network into the control of the individual network, such as the enterprise, and enabling new business models for the purchase of cellular service from a public cellular carrier by an enterprise.",
	"url": null,
	"owner": "Tango Networks, Inc.",
	"publication_number": "07843901",
	"publication_date": "2010-11-30",
	"application_number": "11509186",
	"application_date": "2006-08-24",
	"tags": null,
	"slug": "call-flow-system-and-method-for-use-in-a-legacy-telecommunication-system",
	"match_type": "description"
},
{
	"name": "Communications system and method for accessing a server and preventing access blocking and minimizing network traffic",
	"summary": "",
	"abstract": "A communications system and method includes a database for storing problem magnitudes relating to failed attempts at accessing servers using connection engines. An intelligent routing engine could be a server operative with the database, which queries the database and delays any further attempts at accessing the server using the first connection engine if the problem magnitude exceeds a predetermined threshold. Reattempts can be made after a sufficient delay. A plurality of connection engines can be used by a client for accessing a server. The connection engines are preferably distributed among a plurality of subnets and/or IP addresses and a different connection engine can be chosen based on a desired route with minimum problems.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07818416",
	"publication_date": "2010-10-19",
	"application_number": "10789452",
	"application_date": "2004-02-27",
	"tags": null,
	"slug": "communications-system-and-method-for-accessing-a-server-and-preventing-access-blocking-and-minimizing-network-traffic",
	"match_type": "description"
},
{
	"name": "Communications system providing extensible protocol translation features and related methods",
	"summary": "",
	"abstract": "A communications system may include a plurality of data storage devices each using at least one of a plurality of different operating protocols, and a plurality of mobile wireless communications devices for accessing the plurality of data storage devices. Each mobile wireless communications device may also use at least one of the plurality of different operating protocols. The system may further include a protocol interface device. In particular, the protocol interface device may include a protocol engine module for communicating with the plurality of data storage devices using respective operating protocols, and a front-end proxy module coupled to the protocol engine. The front-end proxy module may include a respective proxy module for communicating with the plurality of mobile wireless communications devices using each different operating protocol, and at least one common core service module connected to the proxy modules.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07644170",
	"publication_date": "2010-01-05",
	"application_number": "10777958",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": "communications-system-providing-extensible-protocol-translation-features-and-related-methods",
	"match_type": "description"
},
{
	"name": "Communications system providing multi-layered extensible protocol interface and related methods",
	"summary": "",
	"abstract": "A communications system may include data storage devices each using at least one of a plurality of different operating protocols, and mobile wireless communications devices (MWCDs) for accessing the data storage devices and each using at least one of the different operating protocols. The system may further include a protocol interface device, which may include a protocol engine module for communicating with the data storage devices using respective operating protocols. The protocol interface device may further include a front-end proxy module coupled to the protocol engine. The front-end proxy module may include a respective proxy module for communicating with the MWCDs using each different operating protocol. The front-end proxy module may also include one or more common core service modules coupled to the proxy modules and communicating therewith at a first layer, and communicating with the protocol engine module at a second layer lower than the first layer.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07774486",
	"publication_date": "2010-08-10",
	"application_number": "10778709",
	"application_date": "2004-02-12",
	"tags": null,
	"slug": "communications-system-providing-multilayered-extensible-protocol-interface-and-related-methods",
	"match_type": "description"
},
{
	"name": "System and method of polling electronic mailboxes",
	"summary": "",
	"abstract": "A communications system includes a polling agent that can be part of a mobile office platform for polling an electronic mailbox to retrieve unique identifiers (UID's) of electronic messages. A database stores the UID's resulting from the polling operation. The polling agent is operative for polling the electronic mailbox and retrieving only those UID's that are newer than the UID's from a previous polling to determine that new messages are available.",
	"url": null,
	"owner": "Teamon Systems, Inc.",
	"publication_number": "07788331",
	"publication_date": "2010-08-31",
	"application_number": "11678088",
	"application_date": "2007-02-23",
	"tags": null,
	"slug": "system-and-method-of-polling-electronic-mailboxes",
	"match_type": "description"
},
{
	"name": "Multi-protocol wireless communication apparatus and method",
	"summary": "",
	"abstract": "A scalable, multi-protocol mobile switching center in a wireless communications network provides communications control for digital and analog wireless communications devices including devices that operate according to GSM and IS-41 standards. The hardware and software architecture of the switching center is designed so that processing that is unique to a particular protocol is performed at the lowest possible level, and remaining processing can use generic procedures. The switching center incorporates a home location register and visitor location register that are used in conjunction with software applications to determine the protocol of mobile communications devices using the wireless communications network. The mobile switching center can be used to provide a large scale distributed wireless network or a small scale wireless network. The switching center can also be used as an adjunct to a private branch exchange to provide in-building wireless services and call control. Graphical user interfaces make the wireless communications network easy to maintain.",
	"url": null,
	"owner": "Tecore",
	"publication_number": "07733901",
	"publication_date": "2010-06-08",
	"application_number": "11103603",
	"application_date": "2005-04-12",
	"tags": null,
	"slug": "multiprotocol-wireless-communication-apparatus-and-method",
	"match_type": "description"
},
{
	"name": "Direct assembly of a data payload in an application memory",
	"summary": "",
	"abstract": "A system and method for direct assembly of data payload in an application memory. A transmission control protocol offloading process is applied by network interface card components on a packet header to provide a direct memory access (DMA) task with precise application memory location pointers to a DMA engine. The DMA engine uses the DMA task to place the data payload directly in the application memory.",
	"url": null,
	"owner": "Tehuti Networks Ltd.",
	"publication_number": "07813339",
	"publication_date": "2010-10-12",
	"application_number": "11743172",
	"application_date": "2007-05-02",
	"tags": null,
	"slug": "direct-assembly-of-a-data-payload-in-an-application-memory",
	"match_type": "description"
},
{
	"name": "Seamless network interface selection, handoff and management in multi-IP network interface mobile devices",
	"summary": "",
	"abstract": "A Multi-Interface Mobility Management (MIMM) client is provided on a mobile Multi-Interface Device (MID) to support seamless network connectivity and switching of the MID. The MIMM client communicates with a MIMM Server. The MIMM Server collects information from MIMM Clients and provides information to the MIMM Clients pertaining to the network(s) to which the mobile MID has access, such as information concerning the availability of a network, the quality of network connectivity, etc. The MIMM Client is responsible for determining whether and when a handoff or roaming operation should be initiated by the mobile MID, and which network interface the mobile MID should use after the handoff/roam operation has been completed. The MIMM Client also is responsible for performing mobility-related functions that are required prior and subsequent to the handoff/roam operation. The MIMM Client uses the information received from the MIMM Server in order to make these determinations.",
	"url": null,
	"owner": "Telcordia Technologies, Inc.",
	"publication_number": "07835743",
	"publication_date": "2010-11-16",
	"application_number": "11196517",
	"application_date": "2005-08-03",
	"tags": null,
	"slug": "seamless-network-interface-selection-handoff-and-management-in-multiip-network-interface-mobile-devices",
	"match_type": "description"
},
{
	"name": "System and method for using universal location referencing objects to provide geographic item information",
	"summary": "",
	"abstract": "A method and system for creating and/or using a universal location referencing object (ULRO) with electronic files including electronic maps. ULROs establish traversable links between a file-of-reference and third-party-files. In accordance with an embodiment, the ULRO comprises a universal location referencing code uniquely corresponding to the location, together with several optional components, including: a set of name information; a super-set of coordinates; a file-of-reference pointer field comprising a file-of-reference pointer; a third-party-file pointer field comprising one or more third-party-file pointers; a file-of-reference back-pointer field comprising a file-of-reference back-pointer; a third-party-file back-pointer field comprising one or more third-party-file back-pointers; and a metadata field. ULROs allow recognition of equivalence of features in different maps, and facilitate dynamic combination or linking of multiple maps into one virtual map, with traversable connectivity for a wide variety of map formats.",
	"url": null,
	"owner": "Tele Atlas North America Inc.",
	"publication_number": "07672779",
	"publication_date": "2010-03-02",
	"application_number": "11927569",
	"application_date": "2007-10-29",
	"tags": null,
	"slug": "system-and-method-for-using-universal-location-referencing-objects-to-provide-geographic-item-information",
	"match_type": "description"
},
{
	"name": "Method and system for controlling resources via a mobile terminal, related network and computer program product therefor",
	"summary": "",
	"abstract": "Access to resources is controlled via a mobile terminal operatively connected to a network operator, wherein the mobile terminal has an associated authentication module configured for authenticating the mobile terminal with the network operator. The method includes the steps of providing in the mobile terminal at least one facility having authentication capability and adapted for accessing the resources, and authenticating the authentication module with the at least one facility, whereby the at least one facility is authenticated with the network operator via the authentication module.",
	"url": null,
	"owner": "Telecom Italia S.p.A.",
	"publication_number": "07734279",
	"publication_date": "2010-06-08",
	"application_number": "10575621",
	"application_date": "2003-10-14",
	"tags": null,
	"slug": "method-and-system-for-controlling-resources-via-a-mobile-terminal-related-network-and-computer-program-product-therefor",
	"match_type": "description"
},
{
	"name": "Method and system for the controlled delivery of digital services, such as multimedia telematics services",
	"summary": "",
	"abstract": "The services delivered by a plurality of providers (SP) towards the users (U) are identified by respective streams of encoded data, for instance MPEG data. The users (U) are provided with respective receiving means (STB) of a generalised type, common to all users. Each user is provided with a user unit (), preferably embodied in the form of a smart card, incorporating a processing function (VM) able to recognize, load and execute at least one enabling algorithm embedded in the data streams sent by the providers, by exploiting a respective identifying code, also embedded in the delivered data stream, to enable to receiving means, through the user unit (), to make use of the respective service.",
	"url": null,
	"owner": "Telecom Italia S.p.A.",
	"publication_number": "07680275",
	"publication_date": "2010-03-16",
	"application_number": "09354080",
	"application_date": "1999-07-15",
	"tags": null,
	"slug": "method-and-system-for-the-controlled-delivery-of-digital-services-such-as-multimedia-telematics-services",
	"match_type": "description"
},
{
	"name": "System and method for re-directing requests from browsers for communications over non-IP based networks",
	"summary": "",
	"abstract": "A method and system for deploying content to client applications is provided. Inbound messages are accepted from a client application running on a client device via a proxy IP/port. The inbound messages are packaged into an internal message format with an HTTP redirector. The packaged message is forwarded to a back-end server via a message router. A response is received form from a web server. The response is packaged into the internal message format with the back-end server. The response is then forwarded to the HTTP redirector via a message router. The response can then be transferred to the client application running on the client device, via the proxy IP/port.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07689696",
	"publication_date": "2010-03-30",
	"application_number": "11327413",
	"application_date": "2006-01-09",
	"tags": null,
	"slug": "system-and-method-for-redirecting-requests-from-browsers-for-communications-over-nonip-based-networks",
	"match_type": "description"
},
{
	"name": "System and method to publish information from servers to remote monitor devices",
	"summary": "",
	"abstract": "To assist in monitoring the intelligent messaging network, a system and method for publishing logging and status information from the servers is provided. A list of available servers accessible for monitoring by persons, devices, and applications via a remote monitor device can be provided. The remote monitor device may forward selected servers from the list of available servers in which they are interested. Also, particular information about the selected servers can be requested. Access to certain servers and information may be restricted to those with authorization. Authorization can be verified by the use of digital certificates. The requested information can then be gathered and provided to authorized persons or devices. Typically, the information includes logging and status information from the servers. The information can be provided as an XML page and viewed using, for example, a standard web browser. Further, if the information is provided to the remote monitor device as an XML page, a standard XML parser may be used to extract particular information from the XML page.",
	"url": null,
	"owner": "TeleCommunication Systems, Inc.",
	"publication_number": "07693981",
	"publication_date": "2010-04-06",
	"application_number": "12219495",
	"application_date": "2008-07-23",
	"tags": null,
	"slug": "system-and-method-to-publish-information-from-servers-to-remote-monitor-devices",
	"match_type": "description"
},
{
	"name": "Adaptable network bridge",
	"summary": "",
	"abstract": "An adaptable network bridge such as an Ethernet bridge includes a Rule Engine that processes data frames according to a set of switching rules. Each switching rule identifies a type of frame to which the rule applies, and how the type of frame is to be processed. The bridge also includes means for dynamically adding, subtracting, or modifying the switching rules in response to changes in the bridge's state information, or changes in context information. If the bridge includes a plurality of input/output ports, the Rule Engine may include a plurality of sets of switching rules, with each set of switching rules being applicable to a different port in the bridge. In this way, different network providers can share the same equipment, but have different network behavior.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (Publ)",
	"publication_number": "07672318",
	"publication_date": "2010-03-02",
	"application_number": "10977724",
	"application_date": "2004-10-29",
	"tags": null,
	"slug": "adaptable-network-bridge",
	"match_type": "description"
},
{
	"name": "Automatic quality of service class management",
	"summary": "",
	"abstract": "To enhance quality of service management in support of application sessions running on top of bearer services, according to the present invention it is suggested to, firstly, execute a bearer service analysis in support of automatic quality of service class management. Heretofore, a bearer service carrying packet switched service traffic in support of an application session is analyzed for identification of different types of services by the application session. Related analysis information derived at an analysis unit  is then forwarded to a quality of service management unit , which is adapted to automatic quality of service class management. In particular, the quality of service management unit  determines and manages a quality of service class according to the identified quality of service class as forwarded by the bearer service analysis unit ",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (PUBL)",
	"publication_number": "07764623",
	"publication_date": "2010-07-27",
	"application_number": "11814554",
	"application_date": "2005-02-01",
	"tags": null,
	"slug": "automatic-quality-of-service-class-management",
	"match_type": "description"
},
{
	"name": "Mobile terminal application subsystem and access subsystem architecture method and system",
	"summary": "",
	"abstract": "A mobile-terminal platform system having an application subsystem and an access subsystem. The access subsystem includes hardware and software for providing connectivity services. The application subsystem includes hardware and software for providing user application services. The application subsystem and the access subsystem communicate via a defined interface. Each of the application subsystem and the access subsystem are adapted to be independently scaled.",
	"url": null,
	"owner": "Telefonaktiebolaget L M Ericsson (PUBL)",
	"publication_number": "07707592",
	"publication_date": "2010-04-27",
	"application_number": "10857522",
	"application_date": "2004-05-27",
	"tags": null,
	"slug": "mobile-terminal-application-subsystem-and-access-subsystem-architecture-method-and-system",
	"match_type": "description"
},
{
	"name": "Method and arrangement relating to messaging",
	"summary": "",
	"abstract": "An arrangement for handling control signal messaging in a distributed system comprising a number of sending nodes and a number of receiving nodes and implementing a control signaling communication protocol. The sending and/or the receiving node is adapted to send and/or receive the current message as a compressed message comprising only the difference portion between a selected or preferred previous message and the current message and the unique identity of said previous message.",
	"url": null,
	"owner": "Telefonaktiebolaget LM Ericsson (Publ)",
	"publication_number": "07746880",
	"publication_date": "2010-06-29",
	"application_number": "12093282",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "method-and-arrangement-relating-to-messaging",
	"match_type": "description"
},
{
	"name": "System and method for active configuration management",
	"summary": "",
	"abstract": "A system and method for active configuration management of the components of a data repository maintained in memory of a computer system is disclosed herein. The method includes creating a plurality of file system event objects in response to the occurrence of a corresponding plurality of events associated with ones of the components. A plurality of file system event objects are then entered into an event queue. Next, a sequence of configuration management (CM) operations involving identified ones of the components are executed on the basis of corresponding ones of the file system event objects.",
	"url": null,
	"owner": "Telelogic Technologies North America, Inc.",
	"publication_number": "07644392",
	"publication_date": "2010-01-05",
	"application_number": "10121976",
	"application_date": "2002-04-12",
	"tags": null,
	"slug": "system-and-method-for-active-configuration-management",
	"match_type": "description"
},
{
	"name": "Telecommunication system architecture for extended open service access to multiple heterogeneous networks",
	"summary": "",
	"abstract": "A telecommunication system providing extended open service access to multiple heterogeneous networks has one unique common framework for the networks and a common service capability feature (SCF) for the networks to provide a common network interface.",
	"url": null,
	"owner": "Telenor ASA",
	"publication_number": "07660881",
	"publication_date": "2010-02-09",
	"application_number": "10482813",
	"application_date": "2002-07-12",
	"tags": null,
	"slug": "telecommunication-system-architecture-for-extended-open-service-access-to-multiple-heterogeneous-networks",
	"match_type": "description"
},
{
	"name": "Virtual device",
	"summary": "",
	"abstract": "A Virtual Device is described which is composed of at least one Open device, e.g. a PDA, laptop or mobile phone that can be programmed, at least one Closed device, e.g. a camcorder or digital camera with a closed inner structure, and a number of Primitive devices, e.g. a head-set or microphone. A middleware installed on one or more Open Devices or on an external server will act as an operation system getting the devices to cooperate as one Virtual Device.",
	"url": null,
	"owner": "Telenor ASA",
	"publication_number": "07796572",
	"publication_date": "2010-09-14",
	"application_number": "10555044",
	"application_date": "2004-04-29",
	"tags": null,
	"slug": "virtual-device",
	"match_type": "description"
},
{
	"name": "Database heap management system with variable page size and fixed instruction set address resolution",
	"summary": "",
	"abstract": "A heap management system for a database uses u201csetsu201d of pages to store database information. As memory for each successive set of pages is allocated, more memory is allocated for storing rows in each page of the set. Similarly, the maximum number of rows of information storable in each page of each set is greater for each successive set of pages. The number of computer instructions needed to resolve (or calculate) the memory address for a particular row is fixed. Given a target row number, (and the number of rows in the first page, and the width of the column or column group), only a fixed number of computer instructions need to be executed to resolve the starting memory address for the target row. In addition, information of the same type (i.e., one or more columns of a table) may be stored in different pages, and these pages may be located in discontiguous memory segments. This allows space for new rows to be allocated, without requiring all pre-existing rows to be moved to a different memory segment.",
	"url": null,
	"owner": "Temporal Dynamics, Inc.",
	"publication_number": "07818346",
	"publication_date": "2010-10-19",
	"application_number": "12064549",
	"application_date": "2006-08-01",
	"tags": null,
	"slug": "database-heap-management-system-with-variable-page-size-and-fixed-instruction-set-address-resolution",
	"match_type": "description"
},
{
	"name": "Applying segment conditions to measure results",
	"summary": "",
	"abstract": "Techniques for applying segment conditions to measure results are presented. Row and column segment data is acquired from a database according to row and column definitions. A measure calculation is applied against the intersecting row and column segment data. Next, one or more combinations or conditions derived from the row and column definitions are used as a filter to produce filtered results.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07725462",
	"publication_date": "2010-05-25",
	"application_number": "11646630",
	"application_date": "2006-12-28",
	"tags": null,
	"slug": "applying-segment-conditions-to-measure-results",
	"match_type": "description"
},
{
	"name": "Automated system for identifying and dropping marginal database indexes",
	"summary": "",
	"abstract": "A method and system for managing indexes used to retrieve data from a database stored on a computer, includes determining whether any marginal indexes exist in the database, and removing one or more of the marginal indexes from the database. An index is considered marginal when: (1) it is an access path for one or more queries but the index's performance is matched or nearly matched by one or more other alternative access paths, and/or (2) its overhead has become a concern. These steps or functions are invoked by one or more statements or instructions that cause the computer to perform a Drop Index Analysis on a specified list of tables in the database for a specified workload. The Drop Index Analysis allows users to specify: (1) how many indexes to consider dropping, and/or (2) how much disk space that dropped indexes should free up.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07761445",
	"publication_date": "2010-07-20",
	"application_number": "11639715",
	"application_date": "2006-12-15",
	"tags": null,
	"slug": "automated-system-for-identifying-and-dropping-marginal-database-indexes",
	"match_type": "description"
},
{
	"name": "Parallel virtual optimization",
	"summary": "",
	"abstract": "A system and method for managing a domain comprised of a plurality of database systems, wherein each of the database systems performs database queries to retrieve data stored by the database systems. There are one or more virtual regulators for managing the domain and one or more closed-loop system management (CLSM) regulators for managing each of the database systems in the domain. Both the virtual regulators and CLSM regulators perform parallel virtual optimization of the database queries performed by the database systems.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07702676",
	"publication_date": "2010-04-20",
	"application_number": "11716892",
	"application_date": "2007-03-12",
	"tags": null,
	"slug": "parallel-virtual-optimization",
	"match_type": "description"
},
{
	"name": "Restartable database loads using parallel data streams",
	"summary": "",
	"abstract": "A method and computer program for reducing the restart time for a parallel application are disclosed. The parallel application includes a plurality of parallel operators. The method includes repeating the following: setting a time interval to a next checkpoint; waiting until the time interval expires; sending checkpoint requests to each of the plurality of parallel operators; and receiving and processing messages from one or more of the plurality of parallel operators. The method also includes receiving a checkpoint. request message on a control data stream, waiting to enter a state suitable for checkpointing, and sending a response message on the control data stream.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07689863",
	"publication_date": "2010-03-30",
	"application_number": "10983881",
	"application_date": "2004-11-08",
	"tags": null,
	"slug": "restartable-database-loads-using-parallel-data-streams",
	"match_type": "description"
},
{
	"name": "Search query generation",
	"summary": "",
	"abstract": "Methods and systems provide automatic search generation capabilities. A search constraint and a control field identifier are received. A search generating module generates a search that when executed returns records from a data store. The records satisfy the search constraint and have identical values for the control field identifier for unique customer identifications.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07822771",
	"publication_date": "2010-10-26",
	"application_number": "10668838",
	"application_date": "2003-09-23",
	"tags": null,
	"slug": "search-query-generation",
	"match_type": "description"
},
{
	"name": "Techniques for data store population",
	"summary": "",
	"abstract": "Techniques are presented for data store population. Source code of an application is parsed for instructions related to data associated with a data store. Modified instructions are suggested for the original instructions and injected into the source code of the application. When the application executes with the modified instructions, the data being dynamically produced by the application is piped to a data store interface for dynamic and real-time update to a data store.",
	"url": null,
	"owner": "Teradata US, Inc.",
	"publication_number": "07712078",
	"publication_date": "2010-05-04",
	"application_number": "11049479",
	"application_date": "2005-02-02",
	"tags": null,
	"slug": "techniques-for-data-store-population",
	"match_type": "description"
},
{
	"name": "Methods, software, and systems for knowledge base coordination",
	"summary": "",
	"abstract": "The present invention provides computer program products, systems, and related methods of coordinating a knowledge base.",
	"url": null,
	"owner": "The Board of Trustees of Leland Stanford Junior University",
	"publication_number": "07734557",
	"publication_date": "2010-06-08",
	"application_number": "11398851",
	"application_date": "2006-04-05",
	"tags": null,
	"slug": "methods-software-and-systems-for-knowledge-base-coordination",
	"match_type": "description"
},
{
	"name": "High-level database management system",
	"summary": "",
	"abstract": "A method and system for allowing end users to create a database and a user interface to interact with database data are provided. The database management system provides a database abstraction layer that hides the complexities of a database and vendor-specific implementation details from the end user, while still allowing the end user to perform powerful database tasks. The database management system allows an end user with little or no knowledge about databases to create, edit, and maintain a database without understanding the details behind the database. The database management system also provides a facility for the easy creation of web pages to access the database to provide features such as searching, data entry, and browsing data stored in the database.",
	"url": null,
	"owner": "The Board of Trustees of the University of Illinois",
	"publication_number": "07650335",
	"publication_date": "2010-01-19",
	"application_number": "11407685",
	"application_date": "2006-04-20",
	"tags": null,
	"slug": "highlevel-database-management-system",
	"match_type": "description"
},
{
	"name": "Methods and systems for monitoring structures and systems",
	"summary": "",
	"abstract": "Methods and systems for structural and component health monitoring are provided. A system includes a plurality of sensor systems positioned about an object to be monitored and a processing system communicatively coupled to at least one of said plurality of sensor systems wherein the processing system includes an ontology and reasoning module configured to model the object to be monitored, reason about the received sensor data associated with the object to be monitored and reason about the relationships between the received sensor data to fuse the data into contextual information for the overall object to be monitored and a contextual analyzer configured to transmit the received sensor data to said ontology and reasoning module and to store the information into a contextual information database.",
	"url": null,
	"owner": "The Boeing Company",
	"publication_number": "07705725",
	"publication_date": "2010-04-27",
	"application_number": "11620871",
	"application_date": "2007-01-08",
	"tags": null,
	"slug": "methods-and-systems-for-monitoring-structures-and-systems",
	"match_type": "description"
},
{
	"name": "Business platform with networked, association-based business entity access management and active content website configuration",
	"summary": "",
	"abstract": "The invention provides a business platform, a business entity management system, and a software module that can be used in conjunction with the software service framework. The invention mimics actual business relationships between business entities, and uses a software service module to configure the business entities into a network that comprises at least three generations of business entities, wherein role dependent associations mimicking real life business relationships are established between the business entities. The invention provides management of active content in a website and allows modification of the content by different business entities. Control of the active content is determined by precedence of the business entities.",
	"url": null,
	"owner": "The Cobalt Group, Inc.",
	"publication_number": "07861309",
	"publication_date": "2010-12-28",
	"application_number": "11414939",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": "business-platform-with-networked-associationbased-business-entity-access-management-and-active-content-website-configuration",
	"match_type": "description"
},
{
	"name": "Graphical tuning bar",
	"summary": "",
	"abstract": "A system and method for displaying a user interface in the form of a program guide that assists users in determining and selecting television viewing options and related services is described. The guide is a viewable display constructed at receiver stations based on data periodically received via a Direct-to-Home (DTH) satellite communication or other system. The guide display presentation can include still pictures, live video broadcasts, still graphics, moving graphics, webpages, graphics and u201cbuttonsu201d that are utilized by the viewer to perform a variety of operations, including determining program availability, selecting programming or services, and launching to related information, programming or services. A tuning bar is automatically scaled to seamlessly represent all programs that a given user subscribes to. The user moves a graphic slider along the tuning bar to quickly and intuitively select a current program.",
	"url": null,
	"owner": "The DIRECTV Group, Inc.",
	"publication_number": "07765568",
	"publication_date": "2010-07-27",
	"application_number": "10215234",
	"application_date": "2002-08-08",
	"tags": null,
	"slug": "graphical-tuning-bar",
	"match_type": "description"
},
{
	"name": "System and method for persistent storage of common user information for interactive television using a centrally located repository",
	"summary": "",
	"abstract": "For interactive television subscribers, a system () and method for persistent storage of common information relating to a user () required by multiple disparate iTV applications to be shared among said applications to ease the burden of data entry off the user. Subscribers do not have to repeatedly enter the same common user information required by multiple applications. The registration information inputted by a user () is logged, temporarily stored in the STB (), and its contents transmitted to a remote central repository () at predetermined intervals.",
	"url": null,
	"owner": "The DIRECTV Group, Inc.",
	"publication_number": "07844994",
	"publication_date": "2010-11-30",
	"application_number": "10313780",
	"application_date": "2002-12-05",
	"tags": null,
	"slug": "system-and-method-for-persistent-storage-of-common-user-information-for-interactive-television-using-a-centrally-located-repository",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for facilitating electronic communication based on a personal contact",
	"summary": "",
	"abstract": "An apparatus, system, and method are disclosed for facilitating electronic communication based on a personal contact. A token giver gives a token to a token receiver through a personal contact. The purpose of the token is to facilitate communication between the token giver and token receiver. The token includes a token identifier that is uniquely associated with the token. The apparatus includes a receiver module for receiving the token identifier from the token receiver. In response to receiving the token identifier, a channel module establishes an electronic communication channel between the token giver and the token receiver. A transfer module provides, to the token receiver, initial electronic content customized for the token identifier. In response to a request from either the token receiver or the token giver, a transfer module brokers an electronic content transfer between the token receiver and the token giver via the electronic communication channel.",
	"url": null,
	"owner": "The Galt Alliance, Inc",
	"publication_number": "07788183",
	"publication_date": "2010-08-31",
	"application_number": "11278315",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "apparatus-system-and-method-for-facilitating-electronic-communication-based-on-a-personal-contact",
	"match_type": "description"
},
{
	"name": "Method of generating a recommendation or maintaining a supply of a type of coating composition considering environmental conditions",
	"summary": "",
	"abstract": "A system and method are provided for recommending at least one coating composition for coating substrates considering the particular geographical location and the environmental conditions associated with that location. The computer based system and the method can also consider the particular performance and optionally the appearance features desired by the end user.",
	"url": null,
	"owner": "The Glidden Company",
	"publication_number": "07813971",
	"publication_date": "2010-10-12",
	"application_number": "11339345",
	"application_date": "2006-01-25",
	"tags": null,
	"slug": "method-of-generating-a-recommendation-or-maintaining-a-supply-of-a-type-of-coating-composition-considering-environmental-conditions",
	"match_type": "description"
},
{
	"name": "Wireless infrastructure and ad hoc network integration",
	"summary": "",
	"abstract": "A system and method for integrating infrastructure and ad hoc wireless networks. In one example embodiment, a plurality of nodes and access points exchange beacons and route replies which are forwarded by intervening nodes. Nodes determine whether to switch access points based on cost values contained in the received beacons. Intervening nodes store routes with weights to the source node, such that the access points maintain weights to every node in their zones.",
	"url": null,
	"owner": "The Hong Kong University of Science and Technology",
	"publication_number": "07808960",
	"publication_date": "2010-10-05",
	"application_number": "11753864",
	"application_date": "2007-05-25",
	"tags": null,
	"slug": "wireless-infrastructure-and-ad-hoc-network-integration",
	"match_type": "description"
},
{
	"name": "Handwriting regions keyed to a data receptor",
	"summary": "",
	"abstract": "Embodiments include an article of manufacture, apparatus, device, system, computer-program product, and method. In an embodiment, an article of manufacture includes a writing surface having at least two regions that accept handwriting. Each region of the at least two regions that accept handwriting respectively includes a unique user-understandable identifier and a unique machine-distinguishable identifier keyed to a data receptor.",
	"url": null,
	"owner": "The Invention Science Fund 1, Inc",
	"publication_number": "07760191",
	"publication_date": "2010-07-20",
	"application_number": "11166035",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": "handwriting-regions-keyed-to-a-data-receptor",
	"match_type": "description"
},
{
	"name": "Contextual information encoded in a formed expression",
	"summary": "",
	"abstract": "Embodiments include a method, a manual device, a handheld manual device, a handheld writing device, a system, and an apparatus. An embodiment provides a manual device operable in a context. The manual device includes a writing element operable to form a mark on a surface in response to a movement of the writing element with respect to the surface. The manual device also includes a controller operable to encode information corresponding to the context of the manual device by regulating the formation of the mark.",
	"url": null,
	"owner": "The Invention Science Fund I, LLC",
	"publication_number": "07809215",
	"publication_date": "2010-10-05",
	"application_number": "11603332",
	"application_date": "2006-11-20",
	"tags": null,
	"slug": "contextual-information-encoded-in-a-formed-expression",
	"match_type": "description"
},
{
	"name": "Information encoded in an expression",
	"summary": "",
	"abstract": "Embodiments provide a method, and a device A device includes a writing element operable to form a mark on a surface corresponding to a movement of the writing element over the surface. The device also includes a controller operable to digitally encode information in the mark.",
	"url": null,
	"owner": "The Invention Science Fund I, LLC",
	"publication_number": "07813597",
	"publication_date": "2010-10-12",
	"application_number": "11603336",
	"application_date": "2006-11-20",
	"tags": null,
	"slug": "information-encoded-in-an-expression",
	"match_type": "description"
},
{
	"name": "Machine-differentiatable identifiers having a commonly accepted meaning",
	"summary": "",
	"abstract": "Embodiments include an article of manufacture, apparatus, device, system, computer-program product, and method. In an embodiment, system is provided that includes at least two machine-differentiatable identifiers, each identifier of the at least two machine-differentiatable identifiers being respectively keyed to a data recipient and associatable with a hand-formed mark on a surface. The system also includes a commonly accepted meaning respectively associated by a group of users with each machine-differentiatable identifier of the at least two machine-differentiatable identifiers. The system may include a surface displaying the at least two machine-differentiatable identifiers. The system may include a surface displaying the at least two machine-differentiatable identifiers and the commonly accepted meaning respectively associated by a group of users with each machine-differentiatable identifier of the at least two machine-differentiatable identifiers.",
	"url": null,
	"owner": "The Invention Science Fund I, LLC",
	"publication_number": "07791593",
	"publication_date": "2010-09-07",
	"application_number": "11166780",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": "machinedifferentiatable-identifiers-having-a-commonly-accepted-meaning",
	"match_type": "description"
},
{
	"name": "Partitioning distributed arrays according to criterion and functions applied to the distributed arrays",
	"summary": "",
	"abstract": "The present invention provides a method and system for the dynamic distribution of an array in a parallel computing environment. The present invention obtains a criterion for distributing an array and performs flexible portioning based on the obtained criterion. In some embodiment analysis may be performed based on the criterion. The flexible portioning is then performed based on the analysis.",
	"url": null,
	"owner": "The Math Works, Inc.",
	"publication_number": "07743087",
	"publication_date": "2010-06-22",
	"application_number": "11387565",
	"application_date": "2006-03-22",
	"tags": null,
	"slug": "partitioning-distributed-arrays-according-to-criterion-and-functions-applied-to-the-distributed-arrays",
	"match_type": "description"
},
{
	"name": "Communication system",
	"summary": "",
	"abstract": "A communication system for linking users to control instruments. A user may send a first creation command from a user interface and establish a communication channel linking the command interpreter and the control instrument independent of the interface bus standard or interface hardware driver type. The communication system also includes providing a common communication interface between the user and the control instrument in an array-based programming environment. Embodiments provide a concise and powerful communication system for communicating with control instruments independent of the various types of supported interface bus standards, communication protocols, and driver types.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07823168",
	"publication_date": "2010-10-26",
	"application_number": "11274979",
	"application_date": "2005-11-15",
	"tags": null,
	"slug": "communication-system",
	"match_type": "description"
},
{
	"name": "Dynamic definition for concurrent computing environments",
	"summary": "",
	"abstract": "A system generates an executable process for execution by a concurrent computing environment, generates a configuration that specifies configurable properties of the concurrent computing environment, and initiates execution of the executable process, with the concurrent computing environment, to initiate configuration of the concurrent computing environment based on the configurable properties of the configuration.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07730166",
	"publication_date": "2010-06-01",
	"application_number": "11880621",
	"application_date": "2007-07-23",
	"tags": null,
	"slug": "dynamic-definition-for-concurrent-computing-environments",
	"match_type": "description"
},
{
	"name": "Dynamically sizing a collaboration of concurrent computing workers based on user inputs",
	"summary": "",
	"abstract": "A dynamic collaboration of processes in a concurrent computing environment is disclosed. A user can modify the size of collaboration or the number of processes that execute a computational job after the processes have been launched on the concurrent computing environment. A launched or running process can establish a communication channel with other processes in the collaboration so that the launched or running process can join the collaboration to execute the job. The user can also release a process from the collaboration so the released process can join a new collaboration to execute a different job. Once a job is completed, the processes can leave the collaboration, and the processes are then free to join a new collaboration subsequently.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07765561",
	"publication_date": "2010-07-27",
	"application_number": "11272307",
	"application_date": "2005-11-10",
	"tags": null,
	"slug": "dynamically-sizing-a-collaboration-of-concurrent-computing-workers-based-on-user-inputs",
	"match_type": "description"
},
{
	"name": "Obfuscation of automatically generated code",
	"summary": "",
	"abstract": "A method is provided for obfuscating code generated from a block diagram model in a graphical programming environment. The obfuscation may be removed through the use of a password. Incorporating the obfuscated code in a block diagram allows for code to be generated from the block diagram incorporating the obfuscated code.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07689969",
	"publication_date": "2010-03-30",
	"application_number": "11038608",
	"application_date": "2005-01-18",
	"tags": null,
	"slug": "obfuscation-of-automatically-generated-code",
	"match_type": "description"
},
{
	"name": "Providing graphic generating capabilities for a model based development process",
	"summary": "",
	"abstract": "A method and system for providing a block for use in a block diagram in a graphical modeling environment which is capable of rendering a parameterized graphic annotation.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07834876",
	"publication_date": "2010-11-16",
	"application_number": "11025452",
	"application_date": "2004-12-28",
	"tags": null,
	"slug": "providing-graphic-generating-capabilities-for-a-model-based-development-process",
	"match_type": "description"
},
{
	"name": "Registering rules for entity attributes for validation and inference",
	"summary": "",
	"abstract": "The present invention provides a method and system for registering rules for attributes of an entity with an entity validation and inference unit. The entity validation and inference unit can further validate input values for an entity and/or infer attributes of an entity using the associated registered rules. The entity validation and inference unit can also provide information regarding attributes, relations, and behaviors of an entity using the associated registered rules in response to a query. The present invention also provides a mechanism for a user to query an entity or the entity validation and inference unit regarding valid values for an entity. The mechanism also allows the user to query the registered rule associated with the entity.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07805398",
	"publication_date": "2010-09-28",
	"application_number": "12572041",
	"application_date": "2009-10-01",
	"tags": null,
	"slug": "registering-rules-for-entity-attributes-for-validation-and-inference",
	"match_type": "description"
},
{
	"name": "System and method for extending a programming language to include multiple dissimilar object systems",
	"summary": "",
	"abstract": "The illustrative embodiment of the present invention provides a method for extending a programming language to interact with foreign object systems. Through the use of an opaque interface, a requesting unit may interact with multiple foreign object systems. A single set of procedures written into the opaque interface and accessible by the requesting unit enable the requesting unit to interact with the foreign object systems. The foreign object systems register with the opaque interface. The registration process for the object systems includes the creation and registration of a defined set of functions, the format for which is provided by the opaque interface. The defined set of functions are called by the procedures in the opaque interface and execute in the object system. The results of the function execution are returned to the requesting unit thereby extending the foreign object system capabilities to the requesting unit.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07849470",
	"publication_date": "2010-12-07",
	"application_number": "11439331",
	"application_date": "2006-05-22",
	"tags": null,
	"slug": "system-and-method-for-extending-a-programming-language-to-include-multiple-dissimilar-object-systems",
	"match_type": "description"
},
{
	"name": "System and method for generating source code from a graphical model",
	"summary": "",
	"abstract": "A graphical user interface that enables a user to create and specify the properties of custom storage classes is disclosed. The characteristics of each storage class are specified via parameter settings accessible from the graphical interface. Each custom storage class designed through the interface is defined by a combination of parameter settings. A code preview window in the graphical interface displays salient aspects of the source code references to model data given the selected parameter settings. The display is shown dynamically and adjusted to reflect subsequent changes in parameter settings.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07689970",
	"publication_date": "2010-03-30",
	"application_number": "10698820",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": "system-and-method-for-generating-source-code-from-a-graphical-model",
	"match_type": "description"
},
{
	"name": "Test postcondition items for automated analysis and test generation",
	"summary": "",
	"abstract": "The present invention provides methods and systems for using a element in a graphical model to represent and identify a postcondition for use by a verification tool in verifying an executable form of the design represented by the graphical model. The postcondition element comprises desired result for verification without affecting the behavior of the design. The desired result is to be achieved or tested for in verifying the design. As such, the postcondition element of the present invention provides a mechanism and formalism in a model-based design approach that is used to direct automatically generated tests or verification of the design represented by the graphical model.",
	"url": null,
	"owner": "The Mathworks, Inc.",
	"publication_number": "07729894",
	"publication_date": "2010-06-01",
	"application_number": "11433611",
	"application_date": "2006-05-12",
	"tags": null,
	"slug": "test-postcondition-items-for-automated-analysis-and-test-generation",
	"match_type": "description"
},
{
	"name": "Test postcondition items for automated analysis and test generation",
	"summary": "",
	"abstract": "In one embodiment, a design is verified by creating a graphical model with a graphical modeling tool executing on a computing device. The graphical model may include a plurality of model elements. A postcondition element is coupled to a selected model element of the plurality of model elements. The postcondition element is associated with a desired result. The graphical model is employed to generate an executable form of the design. The executable form of the design and an indication of the desired result are provided to a verification tool, to instruct the verification tool to implement one or more verification scenarios.",
	"url": null,
	"owner": "The Mathworks, Inc.",
	"publication_number": "07734455",
	"publication_date": "2010-06-08",
	"application_number": "11842135",
	"application_date": "2007-08-21",
	"tags": null,
	"slug": "test-postcondition-items-for-automated-analysis-and-test-generation",
	"match_type": "description"
},
{
	"name": "Test precondition items for automated analysis and test generation",
	"summary": "",
	"abstract": "The present invention provides methods and systems for using a design element in a graphical model to represent and identify a precondition for use by a verification tool in verifying an executable form of the design represented by the graphical model. The precondition design element provides a specification of a verification constraint without affecting the behavior of the design. The constraint is to be applied by the verification tool in verifying the design. As such, the precondition design element of the present invention provides a mechanism and formalism in a model-based design approach that is used to constrain automatically generated tests or verification of the design represented by the graphical model.",
	"url": null,
	"owner": "The MathWorks, Inc.",
	"publication_number": "07680632",
	"publication_date": "2010-03-16",
	"application_number": "11096528",
	"application_date": "2005-03-31",
	"tags": null,
	"slug": "test-precondition-items-for-automated-analysis-and-test-generation",
	"match_type": "description"
},
{
	"name": "Closing in an electronic market",
	"summary": "",
	"abstract": "A method for trading a security in an electronic market includes receiving closing orders and orders for the security traded in the electronic market, disseminating an order imbalance indicator indicative of predicted trading characteristics of the security at the close of trading, determining a closing price for the security based on the closing orders and orders, and executing at least some of the closing orders at the determined closing price.",
	"url": null,
	"owner": "The Nasdaq OMX Group, Inc.",
	"publication_number": "07647264",
	"publication_date": "2010-01-12",
	"application_number": "10835510",
	"application_date": "2004-04-28",
	"tags": null,
	"slug": "closing-in-an-electronic-market",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for parallel execution of a process",
	"summary": "",
	"abstract": "In one embodiment, a process may be performed in parallel on a parallel server by defining a data type that may be used to reference data stored on the parallel server and overloading a previously-defined operation, such that when the overloaded operation is called, a command is sent to the parallel server to manipulate the data stored on the parallel server. In some embodiments, the previously-defined operation that is overloaded may be an operation of an operating system. Further, in some embodiments, when the data stored on the parallel server is no longer needed, a command may be sent to the parallel server to reallocate the memory used to store the data.",
	"url": null,
	"owner": "The Regents of the University of California",
	"publication_number": "07814462",
	"publication_date": "2010-10-12",
	"application_number": "11217114",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": "methods-and-apparatus-for-parallel-execution-of-a-process",
	"match_type": "description"
},
{
	"name": "Remote vehicle control system",
	"summary": "",
	"abstract": "An apparatus for remotely controlling the movements of a vehicle includes a user input means, such as a gamepad with a plurality of joystick-controlled and button-controlled outputs, a tracker, and optional sliding foot pedals; a processor for running a control mapping algorithm; and a remote vehicle controller. A control mapping algorithm maps the outputs to the remote-controlled vehicle's course, heading, displacement, and camera view, with the joysticks mapped to provide open loop directional control over the vehicle's course and heading, the tracker providing open loop control over the camera view, and the optional sliding foot pedals providing open loop control over the vehicle's displacement. The remote vehicle controller sends commands to on-board controls to direct the vehicle's movement. A video stream from an on-board camera is transmitted back to the operator station for viewing on a computer desktop display or a head mountable display.",
	"url": null,
	"owner": "The United States of America as represented by the Secretary of the Navy",
	"publication_number": "07731588",
	"publication_date": "2010-06-08",
	"application_number": "11528646",
	"application_date": "2006-09-28",
	"tags": null,
	"slug": "remote-vehicle-control-system",
	"match_type": "description"
},
{
	"name": "Robotic guarded motion system and method",
	"summary": "",
	"abstract": "A robot platform includes perceptors, locomotors, and a system controller. The system controller executes instructions for repeating, on each iteration through an event timing loop, the acts of defining an event horizon, detecting a range to obstacles around the robot, and testing for an event horizon intrusion. Defining the event horizon includes determining a distance from the robot that is proportional to a current velocity of the robot and testing for the event horizon intrusion includes determining if any range to the obstacles is within the event horizon. Finally, on each iteration through the event timing loop, the method includes reducing the current velocity of the robot in proportion to a loop period of the event timing loop if the event horizon intrusion occurs.",
	"url": null,
	"owner": "The United States of America as represented by the United States Department of Energy",
	"publication_number": "07668621",
	"publication_date": "2010-02-23",
	"application_number": "11428769",
	"application_date": "2006-07-05",
	"tags": null,
	"slug": "robotic-guarded-motion-system-and-method",
	"match_type": "description"
},
{
	"name": "Method and apparatus for processing data in a processing unit being a thread in a multithreading environment",
	"summary": "",
	"abstract": "A method for improving timing behavior of a processing unit in a multithreading environment is disclosed, wherein the processing unit generates data frames for an output unit by combining data from a plurality of input units, and the processed data are buffered in an output buffer between the processing unit and the output unit. The method comprises sending from the output unit to the processing unit a value corresponding to the filling of the output buffer, calculating a timer value, setting a timer with the timer value, wherein the timer calls the processing unit thread after the specified time. The timer value depends on the value corresponding to the averaged filling of the output buffer. As a result, the average filling of the output buffer is lower compared to conventional thread management, and thus the system is more flexible and reacts quicker.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07680964",
	"publication_date": "2010-03-16",
	"application_number": "11138245",
	"application_date": "2005-05-26",
	"tags": null,
	"slug": "method-and-apparatus-for-processing-data-in-a-processing-unit-being-a-thread-in-a-multithreading-environment",
	"match_type": "description"
},
{
	"name": "Method for managing objects in a communication network and implementing device",
	"summary": "",
	"abstract": "A method for distributed management of a catalogue of objects in a communication network comprising devices. The method comprises the step of registering local objects present in a device in a local registry managed at the level of the device, wherein a local object may formulate a request for a list of objects, and receive a collected response. The request is transmitted to the single local registry of the device hosting the local object and propagated through the local registry to distant registries. The responses are collected by the local registry and the collected response is transmitted to the local object that formulated the initial request. The invention applies in particular within the context of home communication networks.",
	"url": null,
	"owner": "Thomson Licensing",
	"publication_number": "07680911",
	"publication_date": "2010-03-16",
	"application_number": "09673897",
	"application_date": "1999-04-21",
	"tags": null,
	"slug": "method-for-managing-objects-in-a-communication-network-and-implementing-device",
	"match_type": "description"
},
{
	"name": "Transmitting and processing protected content",
	"summary": "",
	"abstract": "A method for transmission and storing of scrambled content in which the scrambled content is transmitted together with encrypted control words, the control words being used for descrambling the scrambled content, transmitting to a receiver/decoder the scrambled content and encrypted control words, said control words being encrypted by an exploitation key (K), decrypting said encrypted control words in a removable security module with an exploitation key (K), said removable security module being received by the receiver/decoder, characterised in that it further includes transmitting usage rules message (URM) to the receiver/decoder (), which usage rules (URM) impose usage constraints on the playback of the content stored on a mass storage device encrypting the decrypted encrypted control words and usage rules messages by a local key (K) to produce encrypted control management messages (CMM) storing said scrambled content and encrypted control management message on the mass storage device of the receiver/decoder.",
	"url": null,
	"owner": "Thomson Licensing S.A.",
	"publication_number": "07848521",
	"publication_date": "2010-12-07",
	"application_number": "10362110",
	"application_date": "2001-08-24",
	"tags": null,
	"slug": "transmitting-and-processing-protected-content",
	"match_type": "description"
},
{
	"name": "Directing data in a parallel processing environment",
	"summary": "",
	"abstract": "An apparatus comprises a plurality of processor cores, and an interconnection network to route data among the processor cores based on destination information in the data. The processor cores are configured to forward the data to a final destination if the destination information indicates that a destination processor core has been reached, or to forward the data to other processor cores if the destination information indicates that a destination processor core has not been reached. The final destination is one of a plurality of destinations indicated by the destination information, the destinations including a plurality of portions of the destination processor core.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07793074",
	"publication_date": "2010-09-07",
	"application_number": "11404281",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": "directing-data-in-a-parallel-processing-environment",
	"match_type": "description"
},
{
	"name": "Managing data forwarded between processors in a parallel processing environment based on operations associated with instructions issued by the processors",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor including a storage module, wherein the processor is configured to process multiple streams of instructions, a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles, and coupling circuitry configured to couple data resulting from processing an instruction from at least one of the streams of instructions to the storage module and to the switch.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07734894",
	"publication_date": "2010-06-08",
	"application_number": "12110871",
	"application_date": "2008-04-28",
	"tags": null,
	"slug": "managing-data-forwarded-between-processors-in-a-parallel-processing-environment-based-on-operations-associated-with-instructions-issued-by-the-processors",
	"match_type": "description"
},
{
	"name": "Managing memory access in a parallel processing environment",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor, and a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles. The integrated circuit further comprises one or more memory interface modules including circuitry to access an external memory, each memory interface module coupled to a switch of at least one tile. At least some of the tiles are configured to send a message to a memory interface module to determine whether previous memory transactions associated with a tile have been completed.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07805577",
	"publication_date": "2010-09-28",
	"application_number": "11404655",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": "managing-memory-access-in-a-parallel-processing-environment",
	"match_type": "description"
},
{
	"name": "Protection in a parallel processing environment using access information associated with each switch to prevent data from being forwarded outside a plurality of tiles",
	"summary": "",
	"abstract": "An integrated circuit comprises a plurality of tiles. Each tile comprises a processor, and a switch including switching circuitry to forward data received over data paths from other tiles to the processor and to switches of other tiles, and to forward data received from the processor to switches of other tiles. The tile is configured to control access to a resource of the tile based on access information associated with the resource.",
	"url": null,
	"owner": "Tilera Corporation",
	"publication_number": "07774579",
	"publication_date": "2010-08-10",
	"application_number": "11404461",
	"application_date": "2006-04-14",
	"tags": null,
	"slug": "protection-in-a-parallel-processing-environment-using-access-information-associated-with-each-switch-to-prevent-data-from-being-forwarded-outside-a-plurality-of-tiles",
	"match_type": "description"
},
{
	"name": "System and method for evaluating the operational status of a STB in a cable network",
	"summary": "",
	"abstract": "An STB analysis system comprises an STB checker client and an STB analysis server. The STB checker client comprises an STB query interface to communicate with the STB analysis server to acquire information indicative of the operational status of an STB and to display the information graphically. A user requests data relating to a particular STB by entering the MAC address of an STB into a query field. The STB checker client interacts with an STB analysis server to acquire information relating to the subscriber associated with the STB MAC address, the services authorized for the STB, and data indicative of the status and performance of the STB. In addition, the STB analysis server interacts with the STB operating system to retrieve diagnostic data from the STB logs. The STB checker client further is adapted to permit remotely resetting the STB regardless of its current status.",
	"url": null,
	"owner": "Time Warner Cable, Inc.",
	"publication_number": "07810127",
	"publication_date": "2010-10-05",
	"application_number": "11215943",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": "system-and-method-for-evaluating-the-operational-status-of-a-stb-in-a-cable-network",
	"match_type": "description"
},
{
	"name": "Real-time mitigation of data access insider intrusions",
	"summary": "",
	"abstract": "The present invention provides a policy specification framework to enable an enterprise to specify a given insider attack using a holistic view of a given data access, as well as the means to specify and implement one or more intrusion mitigation methods in response to the detection of such an attack. The policy specification provides for the use of u201canomalyu201d and u201csignatureu201d attributes that capture sophisticated behavioral characteristics of illegitimate data access. When the attack occurs, a previously-defined administrator (or system-defined) mitigation response (e.g., verification, disconnect, de-provision, network re-routing, or the like) is then implemented.",
	"url": null,
	"owner": "Tizor Systems, Inc.",
	"publication_number": "07673147",
	"publication_date": "2010-03-02",
	"application_number": "10950069",
	"application_date": "2004-09-24",
	"tags": null,
	"slug": "realtime-mitigation-of-data-access-insider-intrusions",
	"match_type": "description"
},
{
	"name": "Method for assessing DSL capability of telephone lines",
	"summary": "",
	"abstract": "A test system and method for performing DSL assessments of a telephone line along a prescribed test path is disclosed. The disclosed test system and method includes a loop diagnostic test unit adapted for testing said telephone line using narrow-band and mid-band frequency test signals; a test system controller and a test system server to provide the DSL assessments to a user via an appropriate interface. In addition, the disclosed analysis methods utilize primary line condition information, secondary line condition information, historical line information, together with real-time measurements and external data inputs to perform line imbalance analysis, fault identification analysis, trend analysis, and jurisdictional analysis all of which have relevance to quality, performance and assurance of DSL service through the telephone line.",
	"url": null,
	"owner": "Tollgrade Communications, Inc.",
	"publication_number": "07653180",
	"publication_date": "2010-01-26",
	"application_number": "10956170",
	"application_date": "2004-10-01",
	"tags": null,
	"slug": "method-for-assessing-dsl-capability-of-telephone-lines",
	"match_type": "description"
},
{
	"name": "Volume rendering processing distribution in a graphics processing unit",
	"summary": "",
	"abstract": "An intersection of a cut plane with a proxy geometry representing a scan volume is determined with a processor. The intersection is simplified, such as identifying a quadrilateral or triangle most closely enclosing the intersection. The vertex processor of a GPU deforms a reference grid and determines Cartesian coordinates and the texture coordinates for grid points of the reference grid as a function of the input intersection. The vertex processor provides coordinates for data for subsets of cut planes. The fragment processor inputs the texture coordinates and retrieves the data from the texture memory. The data is blended. The blended subsets are then blended together in the frame buffer of the GPU.",
	"url": null,
	"owner": "Tomtec Imaging Systems GmbH",
	"publication_number": "07852335",
	"publication_date": "2010-12-14",
	"application_number": "11903322",
	"application_date": "2007-09-20",
	"tags": null,
	"slug": "volume-rendering-processing-distribution-in-a-graphics-processing-unit",
	"match_type": "description"
},
{
	"name": "Systems and methods for software development",
	"summary": "",
	"abstract": "This invention relates to methods and a system for developing software. In one embodiment, a method for developing software includes communicating a specification for the design of a software program to a first plurality of developers, in response to the specification, receiving a design from a subset of the developers to a subset of the developers, facilitating a design review process for scoring the designs, selecting one design based on its score, communicating the selected design to a second plurality of software developers, in response to the design, receiving software programs from a subset of the second plurality of developers, facilitating a software review process for scoring the programs, and selecting one program based on its score. In another embodiment, a method for the distributed development of software includes providing a software development system to a distributed community of developers, the system including software development software that utilizes a structured development methodology, a communication server, and a review board for determining the quality of submitted software; accepting a request to create a software program; and facilitating the development of the program by a subset of the distributed community of developers using the software development system.",
	"url": null,
	"owner": "Topcoder, Inc.",
	"publication_number": "07778866",
	"publication_date": "2010-08-17",
	"application_number": "11035783",
	"application_date": "2005-01-14",
	"tags": null,
	"slug": "systems-and-methods-for-software-development",
	"match_type": "description"
},
{
	"name": "Three-dimensional image measuring apparatus and method",
	"summary": "",
	"abstract": "The present invention provides a three-dimensional image measuring apparatus and method capable of measuring projections and depressions on a surface of an object with fine precision, as well as ensuring stable convergence, even for stereo images with significant project distortion. The apparatus includes an area setting section  for setting a reference area  in one image  of a pair of stereo images  and a search area  in the other image  in a position corresponding to the reference area , a search image distortion correcting section  for applying an image distortion correction to either one of the one image  or the other image  according to the positional relationship between the reference area  and the search area  corresponding to the reference area , and an area shape measuring section  for measuring a shape of a measuring object  photographed in the stereo images  based on the reference area  in the one image  and the search area  in the other image , either one of which has been corrected by the search image distortion correcting section ",
	"url": null,
	"owner": "Topcon Corporation",
	"publication_number": "07711180",
	"publication_date": "2010-05-04",
	"application_number": "11109876",
	"application_date": "2005-04-20",
	"tags": null,
	"slug": "threedimensional-image-measuring-apparatus-and-method",
	"match_type": "description"
},
{
	"name": "Wireless controller device",
	"summary": "",
	"abstract": "A remote wireless device is provided that operates a user interface specific to a particular target application or device. The wireless device receives information regarding the status or operation of the target's application, and uses that information to determine what information and controls to present to the remote user. The remote user views information regarding the target application, and makes desired control selections using the available controls. The wireless device generates a message according to the control selections, and transmits the message to the target device. The target device acts responsive to the control message, and updated operational information may be sent to the remote wireless device.",
	"url": null,
	"owner": "Tor Anumana, Inc.",
	"publication_number": "07796982",
	"publication_date": "2010-09-14",
	"application_number": "11296077",
	"application_date": "2005-12-07",
	"tags": null,
	"slug": "wireless-controller-device",
	"match_type": "description"
},
{
	"name": "System and method for generating a composite source user interface",
	"summary": "",
	"abstract": "The subject application is directed to a system and method for generating a composite source user interface. A text query corresponding to a text element associated with a graphical element on a display of the associated user interface is first received by a backend component. The received text query data is then directed to a data document on the associated data storage. Text data is then received from the data document of the associated data storage. Thereafter, the received text data is then communicated to the associated user interface so as to generate indicia on the associated user interface. Preferably, the indicia includes a graphical element and the text data, such as, for example and without limitation, an icon and associated text, or the like.",
	"url": null,
	"owner": "Toshiba Tec Kabushiki Kaisha",
	"publication_number": "07681135",
	"publication_date": "2010-03-16",
	"application_number": "11463792",
	"application_date": "2006-08-10",
	"tags": null,
	"slug": "system-and-method-for-generating-a-composite-source-user-interface",
	"match_type": "description"
},
{
	"name": "System and method for generating a customized workflow user interface",
	"summary": "",
	"abstract": "The subject application is directed to a system and method for generating a customized workflow user interface. Predetermined graphical user interface elements are first stored in an associated data storage. The graphical user interface elements are then generated on an associated display. Each graphical user interface element is then associated with an abstraction interface. Selection data is then received corresponding to selected graphical user interface elements. User interface data is thereafter generated in accordance with the selection data and the associated abstraction interface. Workflow data is subsequently output representing document processing operations corresponding to the selected graphical user interface elements. Thereafter, the workflow data is communicated to an associated document processing device.",
	"url": null,
	"owner": "Toshiba Tec Kabushiki Kaisha",
	"publication_number": "07757178",
	"publication_date": "2010-07-13",
	"application_number": "11463878",
	"application_date": "2006-08-10",
	"tags": null,
	"slug": "system-and-method-for-generating-a-customized-workflow-user-interface",
	"match_type": "description"
},
{
	"name": "Communications method for an intelligent digital audiovisual reproduction system",
	"summary": "",
	"abstract": "Method for communication between a central server and a computerized juke-box which operates in a conference mode, including: sending a header before any transaction, which includes the identity of the destination together, the identity of the emitter, and the size of the packets; responding from the server in the form of a data packet, each packet sent by the server being encoded using the identification code of the juke-box software; and receiving a data packet by the juke-box, which decodes the packet, simultaneously performs a check on the data received by the CRC method and sends an acknowledgment of receipt to the server indicating the accuracy of the information received, to allow it to prepare and send another packet to the juke-box.",
	"url": null,
	"owner": "Touchtunes Music Corporation",
	"publication_number": "07793331",
	"publication_date": "2010-09-07",
	"application_number": "09902707",
	"application_date": "2001-07-12",
	"tags": null,
	"slug": "communications-method-for-an-intelligent-digital-audiovisual-reproduction-system",
	"match_type": "description"
},
{
	"name": "System for switching over a voice call",
	"summary": "",
	"abstract": "A system and method for switching a voice call from an Instant Messaging (IM) based voice network to a cellular voice network. A telephone adapted to switch a voice call from an Instant Messaging (IM) based voice network to a cellular voice network.",
	"url": null,
	"owner": "TP Lab Inc.",
	"publication_number": "07778630",
	"publication_date": "2010-08-17",
	"application_number": "11615636",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "system-for-switching-over-a-voice-call",
	"match_type": "description"
},
{
	"name": "Apparatus and method for a web programmable telephone",
	"summary": "",
	"abstract": "A web programmable telephone and a method for operating a web programmable telephone are disclosed. In one embodiment of the present invention, a voice module of a wireless household telephone is controlled by an internal web module that can retrieve and execute data operations from a remote portal or server thus adding data functionality to the conventional functions of a telephone. The programmable web module controls all functionality of the web programmable telephone so that every function of the telephone can be programmed and customized by a user.",
	"url": null,
	"owner": "TP Lab, Inc.",
	"publication_number": "07835765",
	"publication_date": "2010-11-16",
	"application_number": "12179269",
	"application_date": "2008-07-24",
	"tags": null,
	"slug": "apparatus-and-method-for-a-web-programmable-telephone",
	"match_type": "description"
},
{
	"name": "Method and system for music program selection",
	"summary": "",
	"abstract": "In providing a music program, a personal music player displays personal activity choices. A user selects a personal activity and provides a time duration for the activity. The player sends a request to a music program server for a music program. The request includes the personal activity and the time duration. The music program server selects a music program record from a plurality of music program records that has an activity attribute which matches the personal activity and a program duration which matches or is less than the time duration. The server extracts location information for the music program from the program entry in the music program record, and sends this to the player. The player uses the location information to obtain the music program. In this manner, a music program is provided to a user based on the personal activity of the user.",
	"url": null,
	"owner": "TP Lab, Inc.",
	"publication_number": "07700865",
	"publication_date": "2010-04-20",
	"application_number": "11714554",
	"application_date": "2007-03-05",
	"tags": null,
	"slug": "method-and-system-for-music-program-selection",
	"match_type": "description"
},
{
	"name": "Analyzing return on investment of advertising campaigns by matching multiple data sources",
	"summary": "",
	"abstract": "In various embodiments, strategies, tools and techniques are provided for processing and analyzing data in an advertising measurement system accessible through a software-as-a-service model or a client-downloaded computer program. The system may be configured to receive and process household media exposure data, product purchase data, advertising data, program data, and demographic data, wherein the data may be obtained from various sources, including from a program delivery source (e.g., a television set-top box) located in a household of a consumer. The data may be matched and cross-correlated for calculating return on advertising investment measurements and other metrics. The data may be used to optimize media placement generally or to address advertising content to specific households. Methods for storing data in the advertising measurement system by distributing the data across multiple shards are also provided. In addition, methods for protecting privacy of communicated data are disclosed.",
	"url": null,
	"owner": "TRA, Inc.",
	"publication_number": "07729940",
	"publication_date": "2010-06-01",
	"application_number": "12102388",
	"application_date": "2008-04-14",
	"tags": null,
	"slug": "analyzing-return-on-investment-of-advertising-campaigns-by-matching-multiple-data-sources",
	"match_type": "description"
},
{
	"name": "Locating a mobile station and applications therefor",
	"summary": "",
	"abstract": "A location system is disclosed for wireless telecommunication infrastructures. The system is an end-to-end solution having one or more location systems for outputting requested locations of hand sets or mobile stations (MS) based on, e.g., AMPS, NAMPS, CDMA or TDMA communication standards, for processing both local mobile station location requests and more global mobile station location requests via, e.g., Internet communication between a distributed network of location systems. The system uses a plurality of mobile station locating technologies including those based on: (1) two-way TOA and TDOA; (2) home base stations and (3) distributed antenna provisioning. Further, the system can be modularly configured for use in location signaling environments ranging from urban, dense urban, suburban, rural, mountain to low traffic or isolated roadways. The system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07812766",
	"publication_date": "2010-10-12",
	"application_number": "11069441",
	"application_date": "2005-03-01",
	"tags": null,
	"slug": "locating-a-mobile-station-and-applications-therefor",
	"match_type": "description"
},
{
	"name": "Wireless location gateway and applications therefor",
	"summary": "",
	"abstract": "A system for wirelessly locating mobile station/units (MS) and using resulting location determinations for providing a product or service is disclosed. The system is useful for routing an MS user to a plurality of desired locations, alerting an MS user to a nearby desired product or service based on satisfaction of user criteria, and providing enhanced security and 911 response. In one embodiment, the system responds to MS location requests via, e.g., Internet communication between a distributed network of location processing sites. A plurality of locating technologies including those based on: (1) TDOA; (2) pattern recognition; (3) timing advance; (5) GPS and network assisted GPS, (6) angle of arrival, (7) super resolution enhancements, and (8) supplemental information from low cost base stations can be activated, in various combinations, by system embodiments. MS location difficulties resulting from poor location accuracy/reliability and/or poor coverage are alleviated via such technologies in combination with automatically adapting and calibrating system performance according to environmental and geographical changes so that the system becomes progressively more comprehensive and accurate. Further, the system can be modularly configured for use in location signaling environments ranging from urban, dense urban, suburban, rural, mountain to low traffic or isolated roadways. Accordingly, the system is useful for 911 emergency calls, tracking, routing, people and animal location including applications for confinement to and exclusion from certain areas.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07714778",
	"publication_date": "2010-05-11",
	"application_number": "10297449",
	"application_date": "2001-06-04",
	"tags": null,
	"slug": "wireless-location-gateway-and-applications-therefor",
	"match_type": "description"
},
{
	"name": "Wireless location using multiple mobile station location techniques",
	"summary": "",
	"abstract": "A hybrid wireless location system and method is disclosed for locating mobile stations (MSs). Multiple wireless location techniques (FOMs) are provided for MS location. One or more FOMs can be activated in various combinations (serially or parallelly) for outputting one or more MS location estimates with signal protocols, e.g., CDMA, TDMA, or GSM. Resulting location estimates may be for, e.g.: 911 emergency calls, tracking, navigation, people and animal location, andJor applications for confinement to andlor exclusion from geographical areas. System components may be distributed on a network (e.g., the Internet). FOMs may be based on one or more of: TOA, TDOA, AOA, signal pattern recognitionlfingerprinting, statistical analysis, base station coverage, GPS signals received at the MS, andlor input from mobile stations. Location estimates are enhanced by adjusting MS estimates (and/or confidences therefor) according to: a past performance of the FOM providing such estimates, and/or MS geolocation or velocity constraints.",
	"url": null,
	"owner": "TracBeam LLC",
	"publication_number": "07764231",
	"publication_date": "2010-07-27",
	"application_number": "09194367",
	"application_date": "1997-09-08",
	"tags": null,
	"slug": "wireless-location-using-multiple-mobile-station-location-techniques",
	"match_type": "description"
},
{
	"name": "Authentication method and system",
	"summary": "",
	"abstract": "The present invention provides a method and apparatus for the production and labeling of objects in a manner suitable for the prevention and detection of counterfeiting. Thus, the system incorporates a variety of features that make unauthorized reproduction difficult. In addition, the present invention provides an efficient means for the production of labels and verification of authenticity, whereby a recording apparatus which includes a recording medium, having anisotrophic optical domains, along with a means for transferring a portion of the recording medium to a carrier, wherein a bulk portion of the recording medium has macroscopically detectable anisotrophic optical properties and the detecting apparatus thereon.",
	"url": null,
	"owner": "Tracer Detection Technology Corp.",
	"publication_number": "07773749",
	"publication_date": "2010-08-10",
	"application_number": "11621252",
	"application_date": "2007-01-09",
	"tags": null,
	"slug": "authentication-method-and-system",
	"match_type": "description"
},
{
	"name": "Method and system for administering prime brokerage",
	"summary": "",
	"abstract": "A Straight-Through-Processing (STP) trading platform provides a fully electronic and seamless solution to substantially all aspects of the trading cycle for fixed income instruments and other financial instruments. In an exemplary embodiment, one or more customers, one or more dealers and one or more prime brokers have access to computer software that facilitates trade order management, trade order generation, trade execution, trade allocation, allocation acknowledgement, trade confirmation, acquisition of settlement instructions, and the generation of progress reports based on specific metrics criteria. In said exemplary embodiment, the STP trading platform allows a prime broker to monitor and approve a trade where the STP trading platform includes software modules including at least an account management module and an electronic trading module to handle the various stages of executing a trade, confirming the trade, and facilitating settlement of the trade.",
	"url": null,
	"owner": "Tradeweb Markets LLC",
	"publication_number": "07756777",
	"publication_date": "2010-07-13",
	"application_number": "12125744",
	"application_date": "2008-05-22",
	"tags": null,
	"slug": "method-and-system-for-administering-prime-brokerage",
	"match_type": "description"
},
{
	"name": "Method and system for effecting straight-through-processing of trades of various financial instruments",
	"summary": "",
	"abstract": "A Straight-Through-Processing (STP) trading platform provides a fully electronic and seamless solution to all substantially aspects of the trading cycle for fixed income instruments and other financial instruments. In an exemplary embodiment, all participants to a trade transaction have access to computer software that facilitates trade order management, trade order generation, trade execution (including electronic axes), trade allocation, allocation acknowledgement, trade confirmation, and finally acquisition of settlement instructions. In said exemplary embodiment, the STP trading platform includes computer software modules including at least an account management module and an electronic trading module to handle the various stages of executing a trade, confirming the trade, and facilitating settlement of the trade.",
	"url": null,
	"owner": "Tradeweb Markets LLC",
	"publication_number": "07769678",
	"publication_date": "2010-08-03",
	"application_number": "12103267",
	"application_date": "2008-04-15",
	"tags": null,
	"slug": "method-and-system-for-effecting-straightthroughprocessing-of-trades-of-various-financial-instruments",
	"match_type": "description"
},
{
	"name": "Method and system for effecting straight-through-processing of trades of various financial instruments",
	"summary": "",
	"abstract": "A Straight-Through-Processing (STP) trading platform provides a fully electronic and seamless solution to substantially all aspects of the trading cycle for fixed income instruments and other financial instruments. In an exemplary embodiment, all participants to a trade transaction have access to computer software that facilitates trade order management, trade order generation, trade execution (including electronic axes), trade allocation, allocation acknowledgement, trade confirmation, acquisition of settlement instructions, and the generation of progress reports based on specific metrics criteria. In said exemplary embodiment, the STP trading platform includes computer software modules including at least an account management module and an electronic trading module to handle the various stages of executing a trade, confirming the trade, and facilitating settlement of the trade.",
	"url": null,
	"owner": "Tradeweb Markets, LLC",
	"publication_number": "07734518",
	"publication_date": "2010-06-08",
	"application_number": "11090763",
	"application_date": "2005-03-25",
	"tags": null,
	"slug": "method-and-system-for-effecting-straightthroughprocessing-of-trades-of-various-financial-instruments",
	"match_type": "description"
},
{
	"name": "Regulating order entry in an electronic trading environment to maintain an actual cost for a trading strategy",
	"summary": "",
	"abstract": "A system and method for regulating order entry based on an acceptable slop range for a trading strategy are described. According to one example embodiment, a trader may define an acceptable slop range for a trading strategy as a percentage. The trader may also define a variable to associate with the trading strategy. Using a spread trading algorithm, a spread price axis is generated and the trader may place an order for the trading strategy at a desired price, comprising placing an order in one leg market dependent on the market conditions of another leg market. Using the acceptable slop range, the system keep the net cost to the trader within the acceptable slop range, by regulating orders in the leg markets. Defining an acceptable slop range as a percentage allows the trader to monitor and regulate their profits and loss, regardless of the type of spread trading algorithm used or the placement of an order o the spread price axis.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07672898",
	"publication_date": "2010-03-02",
	"application_number": "11482625",
	"application_date": "2006-07-07",
	"tags": null,
	"slug": "regulating-order-entry-in-an-electronic-trading-environment-to-maintain-an-actual-cost-for-a-trading-strategy",
	"match_type": "description"
},
{
	"name": "System and method for dynamic quantity orders in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for dynamic quantity orders in an electronic trading environment are described. According to one method, a dynamic quantity order includes a price, a desired order quantity and a percentage associated with an estimated order quantity that will be filled in an order queue. When the order is received at an electronic exchange, the order is sorted into a pro-rata order queue, and the exchange may estimate a potential order quantity that will be filled in the order queue at the price based on the defined percentage. Subsequently, the exchange may then increase the order quantity of the dynamic quantity order so that if the estimated number of fills occurs, the order quantity of the dynamic quantity order will be filled.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07742977",
	"publication_date": "2010-06-22",
	"application_number": "11417516",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": "system-and-method-for-dynamic-quantity-orders-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for estimating order position",
	"summary": "",
	"abstract": "A system and method for providing order queue position information are disclosed. In this application, market updates are received for a tradeable object from at least one exchange. To the extent that the market updates do not include enough details to compute the queue position of a trader's working orders, estimation may be used. As a result, an order queue is generated to approximate a trader's order position in an exchange price order queue. An interface may be used to display the generated order queue estimation to the trader which provides valuable trading information.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07809628",
	"publication_date": "2010-10-05",
	"application_number": "10452567",
	"application_date": "2003-05-30",
	"tags": null,
	"slug": "system-and-method-for-estimating-order-position",
	"match_type": "description"
},
{
	"name": "System and method for graphically displaying market related data using fixed size bars",
	"summary": "",
	"abstract": "A system and method are provided for displaying market related data, such as traded volume at each price level, or any other trader-selected values, using one or more fixed size bars. In one preferred embodiment, a graphical display interface is provided and includes a plurality of fixed size bars that display traded volume at different price levels. In such an embodiment, the length of each bar may correspond to a predefined maximum value, and each bar may be progressively color-coded using a first graphical format to represent traded volume that is lower than the maximum value. If the traded volume exceeds the maximum value, the overflow value may be represented by progressively color-coding the bar using a second graphical format that may be used in relation to the first graphical format color-coding.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07801800",
	"publication_date": "2010-09-21",
	"application_number": "11415344",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": "system-and-method-for-graphically-displaying-market-related-data-using-fixed-size-bars",
	"match_type": "description"
},
{
	"name": "System and method for graphically displaying market related data using fixed size bars",
	"summary": "",
	"abstract": "A system and method are provided for displaying market related data, such as traded volume at each price level, or any other trader-selected values, using one or more fixed size bars. In one preferred embodiment, a graphical display interface is provided and includes a plurality of fixed size bars that display traded volume at different price levels. In such an embodiment, the length of each bar may correspond to a predefined maximum value, and each bar may be progressively color-coded using a first graphical format to represent traded volume that is lower than the maximum value. If the traded volume exceeds the maximum value, the overflow value may be represented by progressively color-coding the bar using a second graphical format that may be used in relation to the first graphical format color-coding.",
	"url": null,
	"owner": "Trading Technologies International Inc.",
	"publication_number": "07792741",
	"publication_date": "2010-09-07",
	"application_number": "10785816",
	"application_date": "2004-02-24",
	"tags": null,
	"slug": "system-and-method-for-graphically-displaying-market-related-data-using-fixed-size-bars",
	"match_type": "description"
},
{
	"name": "Method and apparatus for providing order queue information",
	"summary": "",
	"abstract": "A system and method for providing market information are disclosed. In this application, updates are received for a tradeable object at a price level from at least one exchange. To the extent that the updates do not include enough details to compute the number of orders resting at a particular price level in a market, estimation may be used to provide order queue information. As a result, the number of orders which are pending in the market at various price levels may be determined using the techniques described herein. The interface disclosed herein may be used to display the number and/or quantity of the orders in the order queue.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07769656",
	"publication_date": "2010-08-03",
	"application_number": "11415872",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "method-and-apparatus-for-providing-order-queue-information",
	"match_type": "description"
},
{
	"name": "System and method for calculating and displaying volume to identify buying and selling in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for calculating and displaying volume to identify aggressive buying or selling activity. In a preferred embodiment, market information such as the inside market, last traded price, and last traded quantity is received from the electronic exchange and is used to assist a trader in determining the initiative side of a trade, either bid side or ask side. Once a determination is made, the result may be used to assist a trader analyzing the market volume. Other features and advantages are described herein.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07797228",
	"publication_date": "2010-09-14",
	"application_number": "12490049",
	"application_date": "2009-06-23",
	"tags": null,
	"slug": "system-and-method-for-calculating-and-displaying-volume-to-identify-buying-and-selling-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for changing order priority levels in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for fee-based order priority level modification in an electronic trading environment are described. When an order reaches an exchange, a priority level of the order may be changed to a higher priority level, and the priority level of the order initially at the higher priority level may be changed to a lower priority level of the received order. In one embodiment, a trader who is gaining a higher priority level will be preferably charged a fee for having his order moved to the higher priority level, and at least a portion of that fee may be paid to a trader who is giving up his high priority level.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07747493",
	"publication_date": "2010-06-29",
	"application_number": "11416462",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "system-and-method-for-changing-order-priority-levels-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for changing order priority levels in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for fee-based order priority level modification in an electronic trading environment are described. When an order reaches an exchange, a priority level of the order may be changed to a higher priority level, and the priority level of the order initially at the higher priority level may be changed to a lower priority level of the received order. In one embodiment, a trader who is gaining a higher priority level will be preferably charged a fee for having his order moved to the higher priority level, and at least a portion of that fee may be paid to a trader who is giving up his high priority level.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07769652",
	"publication_date": "2010-08-03",
	"application_number": "10652180",
	"application_date": "2003-08-29",
	"tags": null,
	"slug": "system-and-method-for-changing-order-priority-levels-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for chart pattern recognition and analysis in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for chart pattern recognition and analysis. In one embodiment, a graphical interface is provided to enable a trader to select a portion of a chart to be used in the chart pattern analysis. The pattern of the selected portion of the chart could then be used to find one or more similar chart patterns in a user-defined timeframe, such as any future time period or a time period in the past. When a reoccurring chart pattern is found in any future time period, an alert signal can be generated to alert a user of a possibility of the chart pattern reoccurrence. Alternatively, chart pattern matches can be found in a time period in the past, and a set of studies can be applied to the found matches to generate a set of reoccurring indicator values. The reoccurring indicator values can be used in combination with the chart pattern to detect any similar chart patterns in the future.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07685042",
	"publication_date": "2010-03-23",
	"application_number": "11417933",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": "system-and-method-for-chart-pattern-recognition-and-analysis-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for communicating with an electronic exchange in an electronic trading environment",
	"summary": "",
	"abstract": "System and methods for a connection proxy server are described. According to an example method described herein, a connection proxy server stores subscription, product tables as well as other downloads that are provided to a client terminal during initialization stage as well as later during a trading session. Upon detecting that a connection between the client terminal and a gateway is lost, the connection proxy maintains a communication session created for the client terminal at the gateway and receives data intended for the client terminal. If the connection is re-established between the client terminal and the gateway during a predetermined period of time, the connection proxy provides the stored data to the client terminal thus avoiding a surge in processing resources at the gateway due to the necessary downloads.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07809841",
	"publication_date": "2010-10-05",
	"application_number": "11693312",
	"application_date": "2007-03-29",
	"tags": null,
	"slug": "system-and-method-for-communicating-with-an-electronic-exchange-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for displaying market information and order placement in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for displaying a trading screen and placing an order in an electronic trading environment. The system and method may be used to assist a trader in selecting an item of interest, such as the inside market (best bid and best ask) to be displayed relative to a user configured location on the trading screen, such as the center of the trading screen. In a preferred embodiment, the inside market will stay located relative to center of the trading screen and the price levels associated to the inside market will move as the market conditions fluctuate. Other features and advantages are described herein.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07848990",
	"publication_date": "2010-12-07",
	"application_number": "12490940",
	"application_date": "2009-06-24",
	"tags": null,
	"slug": "system-and-method-for-displaying-market-information-and-order-placement-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for dynamic quantity orders in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for dynamic quantity orders in an electronic trading environment are described. According to one method, a dynamic quantity order includes a price, a desired order quantity and a percentage associated with an estimated order quantity that will be filled in an order queue. When the order is received at an electronic exchange, the order is sorted into a pro-rata order queue, and the exchange may estimate a potential order quantity that will be filled in the order queue at the price based on the defined percentage. Subsequently, the exchange may then increase the order quantity of the dynamic quantity order so that if the estimated number of fills occurs, the order quantity of the dynamic quantity order will be filled.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07668767",
	"publication_date": "2010-02-23",
	"application_number": "10676641",
	"application_date": "2003-10-01",
	"tags": null,
	"slug": "system-and-method-for-dynamic-quantity-orders-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for dynamic quantity orders in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for dynamic quantity orders in an electronic trading environment are described. According to one method, a dynamic quantity order includes a price, a desired order quantity and a percentage associated with an estimated order quantity that will be filled in an order queue. When the order is received at an electronic exchange, the order is sorted into a pro-rata order queue, and the exchange may estimate a potential order quantity that will be filled in the order queue at the price based on the defined percentage. Subsequently, the exchange may then increase the order quantity of the dynamic quantity order so that if the estimated number of fills occurs, the order quantity of the dynamic quantity order will be filled.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07844525",
	"publication_date": "2010-11-30",
	"application_number": "12754736",
	"application_date": "2010-04-06",
	"tags": null,
	"slug": "system-and-method-for-dynamic-quantity-orders-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for dynamically changing an electronic trade order quantity",
	"summary": "",
	"abstract": "A system and methods for dynamically changing a trade order quantity in an electronic trading environment are described herein. According to one example embodiment, an automated trading tool determines if a leaned on quantity of a trading strategy has increased or decreased and if so, dynamically changing a desired order quantity to reflect the change in the leaned on quantity. Dynamically changing an order quantity may be more profitable for a trader as order queue position may be maintained and portion of the desired order quantity may get filled; rather than a trader losing their order queue position and/or taking a chance of not getting any of their order quantity filled.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07729978",
	"publication_date": "2010-06-01",
	"application_number": "11692284",
	"application_date": "2007-03-28",
	"tags": null,
	"slug": "system-and-method-for-dynamically-changing-an-electronic-trade-order-quantity",
	"match_type": "description"
},
{
	"name": "System and method for dynamically determining quantity for risk management",
	"summary": "",
	"abstract": "A system and method for dynamically determining quantity for risk management are described. According to one example embodiment, as a trader positions an order icon at a desired price or price-derivative value on a graphical interface, an order quantity for the order is dynamically determined based on the order price and a selected risk management formula. A trader can change the price or the price-related value for one or more orders by moving the order icons relative to a price axis on a graphical interface. In such an embodiment, the initially calculated order quantity for each order will be dynamically recalculated based on the modified orders for the trading strategy.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07861185",
	"publication_date": "2010-12-28",
	"application_number": "11409346",
	"application_date": "2006-04-21",
	"tags": null,
	"slug": "system-and-method-for-dynamically-determining-quantity-for-risk-management",
	"match_type": "description"
},
{
	"name": "System and method for dynamically regulating order entry in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method are provided for trading a trading strategy defined for at least one tradeable object in an electronic trading environment. More specifically, one example method includes using a first pay-up tick value to determine a first acceptable price level for an order associated with the trading strategy, automatically modifying the first pay-up tick to a second pay-up tick value in response to detecting a predefined condition, and using the second pay-up tick value to determine a second acceptable price level for the order associated with the trading strategy.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07831505",
	"publication_date": "2010-11-09",
	"application_number": "12549067",
	"application_date": "2009-08-27",
	"tags": null,
	"slug": "system-and-method-for-dynamically-regulating-order-entry-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for event driven virtual workspace",
	"summary": "",
	"abstract": "A system and method for an event driven virtual workspace are described. According to one example method, a trader can define a plurality of windows to be associated with a virtual workspace. Also, the trader could define one or more triggering events, the combination of which may be used to activate the virtual workspace. In such an embodiment, when the system detects the one or more triggers, the system can attempt to activate the virtual workspace. According to the example method, the trader may place a number of limiting conditions before any states of the currently displayed windows are modified such that the triggered virtual workspace could be displayed. If no limiting conditions are detected, the system can display the triggered virtual workspace.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07805361",
	"publication_date": "2010-09-28",
	"application_number": "12579156",
	"application_date": "2009-10-14",
	"tags": null,
	"slug": "system-and-method-for-event-driven-virtual-workspace",
	"match_type": "description"
},
{
	"name": "System and method for event driven virtual workspace",
	"summary": "",
	"abstract": "A system and method for an event driven virtual workspace are described. According to one example method, a trader can define a plurality of windows to be associated with a virtual workspace. Also, the trader could define one or more triggering events, the combination of which may be used to activate the virtual workspace. In such an embodiment, when the system detects the one or more triggers, the system can attempt to activate the virtual workspace. According to the example method, the trader may place a number of limiting conditions before any states of the currently displayed windows are modified such that the triggered virtual workspace could be displayed. If no limiting conditions are detected, the system can display the triggered virtual workspace.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07765143",
	"publication_date": "2010-07-27",
	"application_number": "10701235",
	"application_date": "2003-11-04",
	"tags": null,
	"slug": "system-and-method-for-event-driven-virtual-workspace",
	"match_type": "description"
},
{
	"name": "System and method for event-based trading",
	"summary": "",
	"abstract": "A system and method for news-based trading are developed. According to one method, a trader can pre-define a trading strategy including a number of trading rules to be applied based on a comparison of one or more estimated event values to the respective actual event values to be released at some later time. The example method further includes, upon receiving one or more actual event values via a user input or directly from outside sources, executing one or more predefined trading rules selected based on the comparison of the received actual event values to the respective estimated indicator values.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07734528",
	"publication_date": "2010-06-08",
	"application_number": "10734862",
	"application_date": "2003-12-12",
	"tags": null,
	"slug": "system-and-method-for-eventbased-trading",
	"match_type": "description"
},
{
	"name": "System and method for icon oriented representation of trading strategies",
	"summary": "",
	"abstract": "A system and method for visually establishing a trading strategy are described. According to one method, a trader can position a first icon corresponding to a first order and a second icon corresponding to a second order in relation to a first value axis displayed on a graphical interface. A graphical means can also be used in relation to the icons to show that the icons correspond to a trading strategy. The graphical means can include lines, numbers, or any other user-configurable graphical representation illustrating order precedence, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07702568",
	"publication_date": "2010-04-20",
	"application_number": "11415888",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "system-and-method-for-icon-oriented-representation-of-trading-strategies",
	"match_type": "description"
},
{
	"name": "System and method for icon oriented representation of trading strategies",
	"summary": "",
	"abstract": "A system and method for visually establishing a trading strategy are described. According to one method, a trader can position a first icon corresponding to a first order and a second icon corresponding to a second order in relation to a first value axis displayed on a graphical interface. A graphical means can also be used in relation to the icons to show that the icons correspond to a trading strategy. The graphical means can include lines, numbers, or any other user-configurable graphical representation illustrating order precedence, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07702569",
	"publication_date": "2010-04-20",
	"application_number": "11416399",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "system-and-method-for-icon-oriented-representation-of-trading-strategies",
	"match_type": "description"
},
{
	"name": "System and method for order placement in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for intelligent placement and movement of orders in an electronic trading environment. According to one example method, in addition to submitting a leg order at a calculated price level, additional orders, queue holder orders, are submitted for the leg order at prices either below or above the calculated price level. Based on this configuration, if the conditions change such that it is necessary to re-price the leg order, there will be already an order resting in the exchange order book at the re-calculated price that can be used in the strategy. Upon re-pricing the leg order, one or more additional queue holder orders will be placed in the market. Other tools are provided as well.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07644030",
	"publication_date": "2010-01-05",
	"application_number": "11416471",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "system-and-method-for-order-placement-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for order placement in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for intelligent placement and movement of orders in an electronic trading environment. According to one example method, in addition to submitting a leg order at a calculated price level, additional orders, queue holder orders, are submitted for the leg order at prices either below or above the calculated price level. Based on this configuration, if the conditions change such that it is necessary to re-price the leg order, there will be already an order resting in the exchange order book at the re-calculated price that can be used in the strategy. Upon re-pricing the leg order, one or more additional queue holder orders will be placed in the market. Other tools are provided as well.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07672896",
	"publication_date": "2010-03-02",
	"application_number": "11241168",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "system-and-method-for-order-placement-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for price-based annotations in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for generating and displaying annotations in relation to one or more prices corresponding to trader-related or market related events are described. In one embodiment, a trader may enter an annotation to be displayed in relation to one or more price levels. Alternatively, a trader may configure a dynamic annotation to be dynamically displayed in relation to some price level(s) upon detecting a predetermined event related to one or more tradeable objects. Also, a trader may configure one or more alarms to be displayed or played in combination with the annotations.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07835981",
	"publication_date": "2010-11-16",
	"application_number": "12645739",
	"application_date": "2009-12-23",
	"tags": null,
	"slug": "system-and-method-for-pricebased-annotations-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for price-based annotations in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for generating and displaying annotations in relation to one or more prices corresponding to trader-related or market related events are described. In one embodiment, a trader may enter an annotation to be displayed in relation to one or more price levels. Alternatively, a trader may configure a dynamic annotation to be dynamically displayed in relation to some price level(s) upon detecting a predetermined event related to one or more tradeable objects. Also, a trader may configure one or more alarms to be displayed or played in combination with the annotations.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07716112",
	"publication_date": "2010-05-11",
	"application_number": "10634415",
	"application_date": "2003-08-05",
	"tags": null,
	"slug": "system-and-method-for-pricebased-annotations-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for risk grid display in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for displaying and controlling risk related information in an electronic trading environment are described. One method includes creating a display interface including a data structure and a display grid. The data structure may be a tree-based data structure with a plurality of data nodes associated with trader-related risk information, where the data in the data nodes is automatically updated based on fill information being received from at least one electronic exchange. Also, the data structure includes the ability to select, manipulate, and group the data nodes based on user preferences. The method further includes selecting data nodes to be mapped to the at least one data grid, and displaying trader-related risk information corresponding to the selected data nodes on the at least one data grid.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07752118",
	"publication_date": "2010-07-06",
	"application_number": "10680455",
	"application_date": "2003-10-07",
	"tags": null,
	"slug": "system-and-method-for-risk-grid-display-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for risk grid display in an electronic trading environment",
	"summary": "",
	"abstract": "A system and method for displaying and controlling risk related information in an electronic trading environment are described. One method includes creating a display interface including a data structure and a display grid. The data structure may be a tree-based data structure with a plurality of data nodes associated with trader-related risk information, where the data in the data nodes is automatically updated based on fill information being received from at least one electronic exchange. Also, the data structure includes the ability to select, manipulate, and group the data nodes based on user preferences. The method further includes selecting data nodes to be mapped to the at least one data grid, and displaying trader-related risk information corresponding to the selected data nodes on the at least one data grid.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07774249",
	"publication_date": "2010-08-10",
	"application_number": "11417532",
	"application_date": "2006-05-03",
	"tags": null,
	"slug": "system-and-method-for-risk-grid-display-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for smart hedging in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for smart hedging in an electronic trading environment. According to one example method, a first order for a first tradeable object and a second order for a second tradeable object are placed based on a spread strategy. Upon receiving an indication that a quantity of the first order is filled, the method involves determining if the second order can be used to offset the quantity filled of the first order by determining if a price of the second order would result in achieving a desired spread price defined for the spread strategy. If the price results in the desired price, the second order is used to offset the quantity filled for the first order in an attempt to achieve the desired spread price. Other tools are provided as well.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07742976",
	"publication_date": "2010-06-22",
	"application_number": "11415351",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": "system-and-method-for-smart-hedging-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for smart hedging in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for smart hedging in an electronic trading environment. According to one example method, a first order for a first tradeable object and a second order for a second tradeable object are placed based on a spread strategy. Upon receiving an indication that a quantity of the first order is filled, the method involves determining if the second order can be used to offset the quantity filled of the first order by determining if a price of the second order would result in achieving a desired spread price defined for the spread strategy. If the price results in the desired price, the second order is used to offset the quantity filled for the first order in an attempt to achieve the desired spread price. Other tools are provided as well.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07747510",
	"publication_date": "2010-06-29",
	"application_number": "11241716",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "system-and-method-for-smart-hedging-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for timed order entry and modification",
	"summary": "",
	"abstract": "A system and method for defining and processing timed orders are defined. According to one embodiment, a trader may define a timed order by defining an intra-day time trigger or a time period when the timed order should be automatically modified, such as deleted or cancelled/replaced with a new order. In one embodiment, the intra-day time trigger or time period may be dynamically changed to a later time, for example, upon receiving a predetermined user input. Also, the time trigger and time period may be configured to dynamically vary based on any user configurable formula. Also, the timed order may be associated with one or more actions to be taken once the order is deleted, such as sending a new order, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07856392",
	"publication_date": "2010-12-21",
	"application_number": "12337401",
	"application_date": "2008-12-17",
	"tags": null,
	"slug": "system-and-method-for-timed-order-entry-and-modification",
	"match_type": "description"
},
{
	"name": "System and method for timed order entry and modification",
	"summary": "",
	"abstract": "A system and method for defining and processing timed orders are defined. According to one embodiment, a trader may define a timed order by defining an intra-day time trigger or a time period when the timed order should be automatically modified, such as deleted or cancelled/replaced with a new order. In one embodiment, the intra-day time trigger or time period may be dynamically changed to a later time, for example, upon receiving a predetermined user input. Also, the time trigger and time period may be configured to dynamically vary based on any user configurable formula. Also, the timed order may be associated with one or more actions to be taken once the order is deleted, such as sending a new order, for example.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07856393",
	"publication_date": "2010-12-21",
	"application_number": "12337415",
	"application_date": "2008-12-17",
	"tags": null,
	"slug": "system-and-method-for-timed-order-entry-and-modification",
	"match_type": "description"
},
{
	"name": "System and method for use of fractional pay-up ticks in relation to trading strategies in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for use of fractional pay-up ticks in relation to offset orders being sent for a trading strategy that involves trading a first tradeable object and at least a second tradeable object. According to one example method, when an indication is received that a quantity at a first price for the first tradeable object is filled, a plurality of offset orders for the second tradeable object is sent to an electronic order book of the second tradeable object. The plurality of offset orders is placed at a plurality of price levels determined based on at least one fractional pay-up tick value, the first price, and the desired spread price. A quantity for each order is determined based on a quantity divider rule that is applied to an offset quantity to offset the fill.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07774261",
	"publication_date": "2010-08-10",
	"application_number": "11240684",
	"application_date": "2005-09-30",
	"tags": null,
	"slug": "system-and-method-for-use-of-fractional-payup-ticks-in-relation-to-trading-strategies-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "System and method for use of fractional pay-up ticks in relation to trading strategies in an electronic trading environment",
	"summary": "",
	"abstract": "A system and associated methods are provided for use of fractional pay-up ticks in relation to offset orders being sent for a trading strategy that involves trading a first tradeable object and at least a second tradeable object. According to one example method, when an indication is received that a quantity at a first price for the first tradeable object is filled, a plurality of offset orders for the second tradeable object is sent to an electronic order book of the second tradeable object. The plurality of offset orders is placed at a plurality of price levels determined based on at least one fractional pay-up tick value, the first price, and the desired spread price. A quantity for each order is determined based on a quantity divider rule that is applied to an offset quantity to offset the fill.",
	"url": null,
	"owner": "Trading Technologies International, Inc.",
	"publication_number": "07774262",
	"publication_date": "2010-08-10",
	"application_number": "11415851",
	"application_date": "2006-05-02",
	"tags": null,
	"slug": "system-and-method-for-use-of-fractional-payup-ticks-in-relation-to-trading-strategies-in-an-electronic-trading-environment",
	"match_type": "description"
},
{
	"name": "Methods and systems for an alternative payment platform",
	"summary": "",
	"abstract": "Methods and systems are provided for providing an alternative payment platform, including method and systems for providing a platform for presenting an alternate offer to a user who is engaged with a primary offer and receiving an indication of the user's engagement with the alternate offer, wherein the user's engagement with the alternate offer serves as an alternative form of payment for an item associated with the primary offer. Such methods and systems may further include methods and systems for selecting one or more alternate offers engagement with which serves as an alternative form of payment for an item associated with a primary offer, presenting the selected alternate payment offers to a user, receiving an indication of engagement with at least one of the alternate offers, receiving payment in exchange for presenting the accepted offer and providing payment to the offeror of the primary offer.",
	"url": null,
	"owner": "TrailPay, Inc.",
	"publication_number": "07788139",
	"publication_date": "2010-08-31",
	"application_number": "11924429",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "methods-and-systems-for-an-alternative-payment-platform",
	"match_type": "description"
},
{
	"name": "Gift card services for mobile devices",
	"summary": "",
	"abstract": "Methods and apparatus, including computer program products, for gift card services. In general, data characterizing a request to provide a merchant credit service to an intended recipient is received and a message to be sent to the intended recipient is generated, where the message characterizes a phone number to call to activate the merchant credit service. Data characterizing authentication by a call to the phone number to activate the merchant credit service from the mobile phone number of the intended recipient is received, where the authentication includes checking caller identification of the call to ensure the call is from the mobile phone number of the intended recipient. The merchant credit service is activated. Credit associated with an account of a merchant credit service may be redeemed by providing an account number of the service. Redemption may be authorized based on caller identification of a mobile phone number associated with an account.",
	"url": null,
	"owner": "Transaction Wireless, Inc.",
	"publication_number": "07711620",
	"publication_date": "2010-05-04",
	"application_number": "11843598",
	"application_date": "2007-08-22",
	"tags": null,
	"slug": "gift-card-services-for-mobile-devices",
	"match_type": "description"
},
{
	"name": "Apparatus, system, and method for automated call initiation",
	"summary": "",
	"abstract": "A method for automated call initiation includes initiating a call to a destination using a first communication line. The method also includes initiating a call status determination that determines when a person answers the call at the destination. Furthermore, the method includes during the call status determination, sending audio information from the destination to an agent. In addition, the method includes assigning the call to the agent, in response to the call status determination determining that the person answered the call at the destination. Therefore, the agent is able to monitor the call and assume a natural response to the person, thus eliminating delay as the conversation begins.",
	"url": null,
	"owner": "Transcend Products, LLC",
	"publication_number": "07734029",
	"publication_date": "2010-06-08",
	"application_number": "12406021",
	"application_date": "2009-03-17",
	"tags": null,
	"slug": "apparatus-system-and-method-for-automated-call-initiation",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for implementing multiple types of network tunneling in a uniform manner",
	"summary": "",
	"abstract": "A uniform method for implementing multiple tunneling protocols in a switch or router is disclosed. The method is based on the realization that although the tunneling protocols are very different, they do share a similar overall structure which can be exploited to create a unified method of dealing with multiple protocols. By using similar data structures to implement multiple protocols, the invention makes data management and programming simple and, therefore, cost effective. According to the invention, all tunneling protocols are abstracted as the mapping of input L2 or L3 streams with output L2 or L3 streams. Mapping is provided by a finite set of tunnel interfaces. The tunnel interfaces map the input streams to output interfaces. As traffic streams flow through these interfaces, they are processed according to defined attributes of these interfaces.",
	"url": null,
	"owner": "Transwitch Corporation",
	"publication_number": "07680943",
	"publication_date": "2010-03-16",
	"application_number": "10691109",
	"application_date": "2003-10-20",
	"tags": null,
	"slug": "methods-and-apparatus-for-implementing-multiple-types-of-network-tunneling-in-a-uniform-manner",
	"match_type": "description"
},
{
	"name": "System and method for authentication",
	"summary": "",
	"abstract": "A system and method for authentication including verifying a password is disclosed. In one embodiment, the authentication system includes a first storage unit to store an authentication sequence and a read-only memory unit to store an authentication algorithm. A microcontroller is coupled to the first storage unit, the read-only memory unit, and is configured to be coupled to and uncoupled from a host. The microcontroller is configured to execute the authentication algorithm to verify a password with the authentication sequence, and to send an access request to a web server via the host if the authentication algorithm has verified the password with the authentication sequence.",
	"url": null,
	"owner": "Trek 2000 International Ltd.",
	"publication_number": "07797736",
	"publication_date": "2010-09-14",
	"application_number": "12197843",
	"application_date": "2008-08-25",
	"tags": null,
	"slug": "system-and-method-for-authentication",
	"match_type": "description"
},
{
	"name": "Systems and methods for implementing source transparent email gateways",
	"summary": "",
	"abstract": "Methods and arrangements for implementing new email handling policies in gateway logic that is inserted upstream of the existing email system (which may or may not have an existing email gateway). By inserting the gateway logic upstream of the existing email system, it is unnecessary to reconfigure existing email handling logic since the remainder of the email system downstream of the newly inserted gateway logic is substantially undisturbed. Techniques and arrangements are proposed to ensure the remainder of the email system continues to function correctly after the insertion of the new gateway logic.",
	"url": null,
	"owner": "Trend Micro Inc.",
	"publication_number": "07814540",
	"publication_date": "2010-10-12",
	"application_number": "11318361",
	"application_date": "2005-12-23",
	"tags": null,
	"slug": "systems-and-methods-for-implementing-source-transparent-email-gateways",
	"match_type": "description"
},
{
	"name": "Method and apparatus for detecting and removing kernel rootkits",
	"summary": "",
	"abstract": "In one embodiment, an anti-rootkit module compares operating system kernel binary files to their loaded kernel file image in memory to find a difference between them. The difference may be scanned for telltale signs of rootkit modification. To prevent rootkits from interfering with memory access of the kernel file image, a pre-scan may be performed to ensure that paging functions and the interrupt dispatch table are in known good condition. If the difference is due to a rootkit modification, the kernel file image may be restored to a known good condition to disable the rootkit. A subsequent virus scan may be performed to remove remaining traces of the rootkit and other malicious codes from the computer.",
	"url": null,
	"owner": "Trend Micro Incorporated",
	"publication_number": "07802300",
	"publication_date": "2010-09-21",
	"application_number": "11702965",
	"application_date": "2007-02-06",
	"tags": null,
	"slug": "method-and-apparatus-for-detecting-and-removing-kernel-rootkits",
	"match_type": "description"
},
{
	"name": "Method and apparatus for performing antivirus tasks in a mobile wireless device",
	"summary": "",
	"abstract": "Disclosed are techniques for performing an antivirus task in a mobile wireless device running an embedded operating system. In one embodiment, calls intended for an application programming interface (API) function code is redirected to an antivirus function code. The redirection to the antivirus function code may be performed by modifying a kernel structure to point to a modified entry list instead of an API entry list. The redirection to the antivirus function code may also be performed by modifying the API function code to allow the antivirus function code to execute before the API function code. The kernel structure or the API function code may be properly restored back to its original form. Software implementations of these techniques may be readily loaded and unloaded, and may not require re-installation of the embedded operating system.",
	"url": null,
	"owner": "Trend Micro Incorporated",
	"publication_number": "07735138",
	"publication_date": "2010-06-08",
	"application_number": "11126476",
	"application_date": "2005-05-10",
	"tags": null,
	"slug": "method-and-apparatus-for-performing-antivirus-tasks-in-a-mobile-wireless-device",
	"match_type": "abstract"
},
{
	"name": "Application behavior based malware detection",
	"summary": "",
	"abstract": "An executable file is loaded into a virtual machine arranged to emulate the instructions of said executable file. The virtual machine keeps track of application programming interfaces (APIs) used by the executable file during emulation. The executable file is scanned to determine names of (APIs) used. Behavior flags are set if certain conditions occur within the executable file. The APIs determined during emulation and during scanning are compared with a set of known behaviors. A match of the APIs and the known behaviors indicates a high risk of malware. A determination of malware being present is based upon any matches and any behavior flags that are set.",
	"url": null,
	"owner": "Trend Micro, Inc.",
	"publication_number": "07779472",
	"publication_date": "2010-08-17",
	"application_number": "11247349",
	"application_date": "2005-10-11",
	"tags": null,
	"slug": "application-behavior-based-malware-detection",
	"match_type": "abstract"
},
{
	"name": "Backup and restore of user data for mobile telephone",
	"summary": "",
	"abstract": "A mobile telephone includes an application processor, internal memory, an external memory card, a backup software module and a restore software module. User data is stored in the internal memory. The backup software module detects changes in the user data, resulting in modified user data. The modified user data is stored onto the external memory card. When the user data is erased from the internal drive or the wireless device needs to be reset the restore software module reads the modified user data from the external memory card and writes the modified user data back onto the internal memory. In this fashion, any modified user data is not lost when the wireless device is reset.",
	"url": null,
	"owner": "Trend Micro, Inc.",
	"publication_number": "07729690",
	"publication_date": "2010-06-01",
	"application_number": "11355846",
	"application_date": "2006-02-15",
	"tags": null,
	"slug": "backup-and-restore-of-user-data-for-mobile-telephone",
	"match_type": "description"
},
{
	"name": "Detection of key logging software",
	"summary": "",
	"abstract": "Installing a detection hook function aids in the detection of keylogger software on a computer. A request to install a hook procedure via the system service function is intercepted by the detection hook function. The detection hook function determines whether the request indicates that the hook procedure is keylogger software. If so, an action is taken such as denying the request or alerting the user. A detection hook function also intercepts a request to remove a hook procedure. A dynamic detection function intercepts a call to a hook chain function attempting to pass an event to a hook procedure.",
	"url": null,
	"owner": "Trend Micro, Inc.",
	"publication_number": "07823201",
	"publication_date": "2010-10-26",
	"application_number": "11394791",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "detection-of-key-logging-software",
	"match_type": "description"
},
{
	"name": "Methods and systems for an alternative payment platform",
	"summary": "",
	"abstract": "Methods and systems are provided for providing an alternative payment platform, including method and systems for providing a platform for presenting an alternate offer to a user who is engaged with a primary offer and receiving an indication of the user's engagement with the alternate offer, wherein the user's engagement with the alternate offer serves as an alternative form of payment for an item associated with the primary offer. Such methods and systems may further include methods and systems for selecting one or more alternate offers engagement with which serves as an alternative form of payment for an item associated with a primary offer, presenting the selected alternate payment offers to a user, receiving an indication of engagement with at least one of the alternate offers, receiving payment in exchange for presenting the accepted offer and providing payment to the offeror of the primary offer.",
	"url": null,
	"owner": "TrialPay, Inc.",
	"publication_number": "07647252",
	"publication_date": "2010-01-12",
	"application_number": "11924443",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "methods-and-systems-for-an-alternative-payment-platform",
	"match_type": "description"
},
{
	"name": "Methods for an alternative payment platform",
	"summary": "",
	"abstract": "Methods and systems are provided for providing an alternative payment platform, including method and systems for providing a platform for presenting an alternate offer to a user who is engaged with a primary offer and receiving an indication of the user's engagement with the alternate offer, wherein the user's engagement with the alternate offer serves as an alternative form of payment for an item associated with the primary offer. Such methods and systems may further include methods and systems for selecting one or more alternate offers engagement with which serves as an alternative form of payment for an item associated with a primary offer, presenting the selected alternate payment offers to a user, receiving an indication of engagement with at least one of the alternate offers, receiving payment in exchange for presenting the accepted offer and providing payment to the offeror of the primary offer.",
	"url": null,
	"owner": "TrialPay, Inc.",
	"publication_number": "07848960",
	"publication_date": "2010-12-07",
	"application_number": "11924410",
	"application_date": "2007-10-25",
	"tags": null,
	"slug": "methods-for-an-alternative-payment-platform",
	"match_type": "description"
},
{
	"name": "System and method for determining a prediction of average speed for a segment of roadway",
	"summary": "",
	"abstract": "The present invention provides a system and method for determining the necessary departure time to allow for an on-time or desired arrival time at a particular location over a particular route based on the evaluation of historic, present, and predicted road conditions.",
	"url": null,
	"owner": "Triangle Software LLC",
	"publication_number": "07702452",
	"publication_date": "2010-04-20",
	"application_number": "12283748",
	"application_date": "2008-09-12",
	"tags": null,
	"slug": "system-and-method-for-determining-a-prediction-of-average-speed-for-a-segment-of-roadway",
	"match_type": "description"
},
{
	"name": "Policy-driven mobile forms applications",
	"summary": "",
	"abstract": "A system for capturing data via an extensible markup language form is disclosed comprising a policy-based mobile content engine, a mobile-forms application client, and a transport engine. The policy-based mobile content engine is adapted to process a plurality of definitions from one or more mobile-forms application definition files. The policy-based mobile content engine translates the mobile-forms application definitions into policies and actions enforced by the policy-based mobile content engine. The mobile-forms application client has a plurality of rendering engines targeted for a mobile user device to render form controls and to process the forms-based application. The mobile-forms application client is operable on a mobile user device and is adapted to capture the data as an extensible-markup-language document. The transport engine is adapted to transport the mobile-forms application definition files and captured data through a transport layer between the policy-based mobile content engine and the mobile-forms application client.",
	"url": null,
	"owner": "TrueContext Corporation",
	"publication_number": "07774504",
	"publication_date": "2010-08-10",
	"application_number": "11335898",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": "policydriven-mobile-forms-applications",
	"match_type": "description"
},
{
	"name": "Enterprise-wide security system for computer devices",
	"summary": "",
	"abstract": "A system and method for securing data in mobile devices includes a computing node and a plurality of mobile devices. A node security program executed in the computing node interfaces with a device security program executed at a mobile device. The computing node is responsible for managing the security based on a node security profile interpreted by a node security program executed in the computing node. A device discovery method and arrangement also detects and locates various information about the mobile devices based on a scan profile.",
	"url": null,
	"owner": "Trust Digital, LLC",
	"publication_number": "07669237",
	"publication_date": "2010-02-23",
	"application_number": "10527235",
	"application_date": "2003-08-27",
	"tags": null,
	"slug": "enterprisewide-security-system-for-computer-devices",
	"match_type": "description"
},
{
	"name": "System and method for enhancing the experience of participant in a massively multiplayer game",
	"summary": "",
	"abstract": "Methods and systems are provided for transforming music played by characters, objects and non-player characters in order to produce an enhanced audio experience for players within a massively multiplayer game.",
	"url": null,
	"owner": "Turbine, Inc.",
	"publication_number": "07828657",
	"publication_date": "2010-11-09",
	"application_number": "10441958",
	"application_date": "2003-05-20",
	"tags": null,
	"slug": "system-and-method-for-enhancing-the-experience-of-participant-in-a-massively-multiplayer-game",
	"match_type": "description"
},
{
	"name": "Application programming interface combining asset listings",
	"summary": "",
	"abstract": "A system, method and API for processing and providing a unified list of the content offerings of multiple content sources.",
	"url": null,
	"owner": "TVWorks, LLC",
	"publication_number": "07849064",
	"publication_date": "2010-12-07",
	"application_number": "11103297",
	"application_date": "2005-04-11",
	"tags": null,
	"slug": "application-programming-interface-combining-asset-listings",
	"match_type": "name"
},
{
	"name": "Determination of graph connectivity metrics using bit-vectors",
	"summary": "",
	"abstract": "Determination of a connectivity-metrics for graphs representative of networks of interest. A graph that represents a network of interest is accessed. The graph includes nodes representing points in the network of interest, and edges corresponding to the nodes. Bit-vectors are generated corresponding to the nodes and/or edges, wherein individual bits in the bit-vectors respectively provide a logical indication of connectedness. The connectivity-metric is then determined by applying a logical bit operation to the plurality of bit-vectors. Examples of connectivity metrics include a connected components, shortest paths, betweenness, clustering, and tree-based determinations.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07672919",
	"publication_date": "2010-03-02",
	"application_number": "11498024",
	"application_date": "2006-08-02",
	"tags": null,
	"slug": "determination-of-graph-connectivity-metrics-using-bitvectors",
	"match_type": "description"
},
{
	"name": "Methods and apparatus for clustering templates in non-metric similarity spaces",
	"summary": "",
	"abstract": "Clustering biometric templates is performed by determining fiduciary templates and cluster seed templates, both from a gallery of biometric templates. Similarity vectors are formed by comparing members of the cluster seed templates to the fiduciary templates. The gallery is then partitioned into clusters based upon the similarity vectors, and the clusters are populated from the remainder of the gallery. Partitioning may be performed by a classifier that implements a supervised machine learning algorithm that is trained with the similarity vectors, such as a multi-decision tree classification system. Matching may be accommodated by accessing a probe template, determining a cluster neighborhood for the probe template, and searching the cluster neighborhood to determine whether the gallery includes a match corresponding to the probe template. The same similarity metric is used both to partition a gallery into clusters, and in matching a probe template to the so-clustered gallery.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07813531",
	"publication_date": "2010-10-12",
	"application_number": "11416503",
	"application_date": "2006-05-01",
	"tags": null,
	"slug": "methods-and-apparatus-for-clustering-templates-in-nonmetric-similarity-spaces",
	"match_type": "description"
},
{
	"name": "Optimizing the size of an interlocking tree datastore structure for KStore",
	"summary": "",
	"abstract": "A method for optimizing the construction of a KStore includes providing a data set having a plurality of records with a plurality of fields, providing an optimization structure from a sample of the data set and analyzing the optimization structure to determine a field order for the records contained in the data set. A KStore is provided from the data set in accordance with the field order. The sample of the data set can include the entire data set, a random sample of the data set or a predetermined number of records from the data set. The data set has an initial order having earlier records and later records and the sample can include a plurality of the earlier records. The sample of the data set includes a user determined number of records from the data set. The optimization structure can be a KStore.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07689571",
	"publication_date": "2010-03-30",
	"application_number": "11388740",
	"application_date": "2006-03-24",
	"tags": null,
	"slug": "optimizing-the-size-of-an-interlocking-tree-datastore-structure-for-kstore",
	"match_type": "description"
},
{
	"name": "Utilities for deriving values and information from within an interlocking trees data store",
	"summary": "",
	"abstract": "A method for accessing a KStore including at least one K path having at least one subcomponent node and at least one root node includes providing a utility routine and accessing the KStore using the utility routine. The accessing may include traversing the at least one K path. The at least one K path includes a further node and bidirectional links between the at least one subcomponent node and the further node. The method includes traversing between the at least one subcomponent node and the further node by way of the bidirectional links. The further node can be a beginning of thought node, an end of thought node, root node, or a subcomponent node. A location may be determined within the KStore. The K Store may be queried. Searches for information within the KStore may be performed. The KStore may be traversed to constrain and focus the KStore. The KStore may be updated.",
	"url": null,
	"owner": "Unisys Corporation",
	"publication_number": "07676477",
	"publication_date": "2010-03-09",
	"application_number": "11258293",
	"application_date": "2005-10-24",
	"tags": null,
	"slug": "utilities-for-deriving-values-and-information-from-within-an-interlocking-trees-data-store",
	"match_type": "description"
},
{
	"name": "System and method for financial transactions",
	"summary": "",
	"abstract": "Disclosed are systems and methods for providing a financial transaction. The systems and methods provide techniques for providing an automated teller machine (ATM) and allowing a customer to operate the ATM at the ATM to complete the transaction. In addition, the customer, while at the ATM, can communicate with a representative at a centralized hub that is remote from the ATM and the representative can take control of the ATM to complete the transaction.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07857207",
	"publication_date": "2010-12-28",
	"application_number": "11739412",
	"application_date": "2007-04-24",
	"tags": null,
	"slug": "system-and-method-for-financial-transactions",
	"match_type": "description"
},
{
	"name": "Systems and methods for insurance coverage",
	"summary": "",
	"abstract": "A user may use a financial card to make a purchase at a merchant. An institution system may receive and analyze transaction data associated with the purchase. The institution system may send a notice to the user asking if the user would like insurance coverage for the item(s) pertaining to the purchase. The notice may request the user send a photo of the item(s) or documentation pertaining to the item(s) to the institution system.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07729930",
	"publication_date": "2010-06-01",
	"application_number": "12145648",
	"application_date": "2008-06-25",
	"tags": null,
	"slug": "systems-and-methods-for-insurance-coverage",
	"match_type": "description"
},
{
	"name": "Systems and methods for insurance coverage",
	"summary": "",
	"abstract": "A user may use a financial card to make a purchase at a merchant. An institution system may receive and analyze transaction data associated with the purchase. The institution system may send a notice to the user asking if the user would like insurance coverage for the item(s) pertaining to the purchase. The notice may request the user send a photo of the item(s) or documentation pertaining to the item(s) to the institution system.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07734485",
	"publication_date": "2010-06-08",
	"application_number": "12253642",
	"application_date": "2008-10-17",
	"tags": null,
	"slug": "systems-and-methods-for-insurance-coverage",
	"match_type": "description"
},
{
	"name": "Systems and methods for insurance coverage",
	"summary": "",
	"abstract": "A user may use a financial card to make a purchase at a merchant. An institution system may receive and analyze transaction data associated with the purchase. The institution system may send a notice to the user asking if the user would like insurance coverage for the item(s) pertaining to the purchase. The notice may request the user send a photo of the item(s) or documentation pertaining to the item(s) to the institution system.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07765118",
	"publication_date": "2010-07-27",
	"application_number": "12253611",
	"application_date": "2008-10-17",
	"tags": null,
	"slug": "systems-and-methods-for-insurance-coverage",
	"match_type": "description"
},
{
	"name": "Systems and methods for providing dynamic integration and access to disparate data sources",
	"summary": "",
	"abstract": "Systems and methods for providing dynamic integration and access to disparate data sources are described. The apparatus may include an internal data source access engine, an external data source access engine, an integration engine and a user interface module. The method may comprise receiving a request for bill-pay services from a user, first retrieving internal bill-pay information, second retrieving external bill-pay information, integrating the first retrieved and second retrieved information into a single unified graphical presentation, presenting the unified graphical presentation to the user.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07774251",
	"publication_date": "2010-08-10",
	"application_number": "11464147",
	"application_date": "2006-08-11",
	"tags": null,
	"slug": "systems-and-methods-for-providing-dynamic-integration-and-access-to-disparate-data-sources",
	"match_type": "description"
},
{
	"name": "Video financial deposit",
	"summary": "",
	"abstract": "A video of a negotiable instrument may be provided from a user to a financial institution so that an image of the negotiable instrument may be obtained from the video and deposited in a user's bank account. In an implementation, a user may use a device such as a video camera, a web camera, or a video-enabled phone to convert an endorsed check into a video data file by making a video of the check and storing the video in a video data file. The user may send the video data file to the financial institution, where it may be processed and deposited in an account associated with the user. Any technique for sending a video data file to the financial institution may be used.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07856402",
	"publication_date": "2010-12-21",
	"application_number": "12098619",
	"application_date": "2008-04-07",
	"tags": null,
	"slug": "video-financial-deposit",
	"match_type": "description"
},
{
	"name": "Video financial deposit",
	"summary": "",
	"abstract": "A video of a negotiable instrument may be provided from a user to a financial institution so that an image of the negotiable instrument may be obtained from the video and deposited in a user's bank account. In an implementation, a user may use a device such as a video camera, a web camera, or a video-enabled phone to convert an endorsed check into a video data file by making a video of the check and storing the video in a video data file. The user may send the video data file to the financial institution, where it may be processed and deposited in an account associated with the user. Any technique for sending a video data file to the financial institution may be used.",
	"url": null,
	"owner": "United Services Automobile Association (USAA)",
	"publication_number": "07792752",
	"publication_date": "2010-09-07",
	"application_number": "12098609",
	"application_date": "2008-04-07",
	"tags": null,
	"slug": "video-financial-deposit",
	"match_type": "description"
},
{
	"name": "Methods and systems for proofing identities using a certificate authority",
	"summary": "",
	"abstract": "A digital certificate is provided to a customer having an electronic account linked to the customer's physical address. Using the digital certificate, the customer performs electronic transactions with a third party. A proofing workstation receives a request from a third party to validate the digital certificate. The proofing workstation communicates with a proofing server that maintains a list of valid certificates and a list of revoked certificates. The proofing server sends a response to the proofing workstation, where it is received by the third party.",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07802093",
	"publication_date": "2010-09-21",
	"application_number": "12219269",
	"application_date": "2008-07-18",
	"tags": null,
	"slug": "methods-and-systems-for-proofing-identities-using-a-certificate-authority",
	"match_type": "description"
},
{
	"name": "Systems and methods for authenticating an electronic message",
	"summary": "",
	"abstract": "Systems and methods are disclosed for authenticating electronic messages. A data structure is generated by a computer server which allows for the authentication of the contents and computer server identity of a received electronic message and provides a trusted stamp to authenticate when the message was sent. Data which can authenticate the message, the computer server identity, and the time the message was sent is included into a data structure which is called an Electronic PostMark (EPM).",
	"url": null,
	"owner": "United States Postal Service",
	"publication_number": "07797543",
	"publication_date": "2010-09-14",
	"application_number": "09675677",
	"application_date": "2000-09-29",
	"tags": null,
	"slug": "systems-and-methods-for-authenticating-an-electronic-message",
	"match_type": "description"
},
{
	"name": "Methods and systems for establishing an electronic account for a customer",
	"summary": "",
	"abstract": "Registration information is sent form a customer to a registration system over a network. The registration system creates an electronic account for the customer and facilitates the validation of the customer's identity. When the customer's identity is validated, the registration system activates the electronic account. The electronic account includes a unique electronic account number, a physical address of the customer, and an electronic address of the customer.",
	"url": null,
	"owner": "United States Postal Services",
	"publication_number": "07711950",
	"publication_date": "2010-05-04",
	"application_number": "09809328",
	"application_date": "2001-03-16",
	"tags": null,
	"slug": "methods-and-systems-for-establishing-an-electronic-account-for-a-customer",
	"match_type": "description"
},
{
	"name": "Virtual blasting system for removal of coating and/or rust from a virtual surface",
	"summary": "",
	"abstract": "A computer simulation and virtual reality system simulates the use of a blasting nozzle to remove one or more coatings and/or rust from a virtual surface. The user operates an electronic controller in the form of a blasting nozzle that outputs a signal indicating whether the blasting nozzle controller is in an u201conu201d position or in an u201coffu201d position. The system also has a motion tracking system that tracks the position and orientation of the blasting nozzle controller with respect to the virtual surface defined on the display screen. Simulation software in a computer generates virtual blast pattern data, and the removal of the virtual coating(s) and/or rust image from the virtual surface is displayed in real time on the display screen.",
	"url": null,
	"owner": "University of Northern Iowa Research Foundation",
	"publication_number": "07817162",
	"publication_date": "2010-10-19",
	"application_number": "12028917",
	"application_date": "2008-02-11",
	"tags": null,
	"slug": "virtual-blasting-system-for-removal-of-coating-andor-rust-from-a-virtual-surface",
	"match_type": "description"
},
{
	"name": "Virtual coatings application system",
	"summary": "",
	"abstract": "A virtual coatings application system has several features to enhance the realism of simulated spray painting. The system generally includes a display screen on which is defined a virtual surface (such as a truck door) that is intended to be virtually painted or coated by the user. The user operates an instrumented spray gun controller that outputs one or more signals representing data as to the status of the controls on the spray gun controller. The system also has a motion tracking system that tracks the position and orientation of the spray gun controller with respect to the virtual surface defined on the display screen. Simulation software generates virtual spray pattern data in response to at least the data from the spray gun controller and the position and orientation data received from the tracking system. Virtual spray pattern images are displayed in real time on the display screen in accordance with the accumulation of virtual spray pattern data at each location on the virtual surface.",
	"url": null,
	"owner": "University of Northern Iowa Research Foundation",
	"publication_number": "07839416",
	"publication_date": "2010-11-23",
	"application_number": "11372714",
	"application_date": "2006-03-10",
	"tags": null,
	"slug": "virtual-coatings-application-system",
	"match_type": "description"
},
{
	"name": "Virtual coatings application system",
	"summary": "",
	"abstract": "A virtual coatings application system has several features to enhance the realism of simulated spray painting. The system generally includes a display screen on which is defined a virtual surface (such as a truck door) that is intended to be virtually painted or coated by the user. Alternatively, the system includes a head-mounted display unit that displays a virtual spray painting environment in which the virtual surface is defined. The user operates an instrumented spray gun controller that outputs one or more signals representing data as to the status of the controls on the spray gun controller. The system also has a motion tracking system that tracks the position and orientation of the spray gun controller with respect to the virtual surface. Simulation software generates virtual spray pattern data in response to at least the data from the spray gun controller and the position and orientation data received from the tracking system. Virtual spray pattern images are displayed in real time on the virtual surface in accordance with the accumulation of virtual spray pattern data at each location on the virtual surface.",
	"url": null,
	"owner": "University of Northern Iowa Research Foundation",
	"publication_number": "07839417",
	"publication_date": "2010-11-23",
	"application_number": "11539352",
	"application_date": "2006-10-06",
	"tags": null,
	"slug": "virtual-coatings-application-system",
	"match_type": "description"
},
{
	"name": "Reconfiguration management architectures for mobile communication systems",
	"summary": "",
	"abstract": "A reconfiguration management architecture for a mobile communications system which includes a network and at least one software-definable terminal comprises a configuration management part () within the or each terminal and a configuration control part (). The configuration management part () implements a proposed configuration to reconfigure the terminal provided the configuration control part () validates the proposed configuration.",
	"url": null,
	"owner": "University of Surrey",
	"publication_number": "07707278",
	"publication_date": "2010-04-27",
	"application_number": "10432293",
	"application_date": "2001-11-20",
	"tags": null,
	"slug": "reconfiguration-management-architectures-for-mobile-communication-systems",
	"match_type": "description"
},
{
	"name": "Anesthesia drug monitor",
	"summary": "",
	"abstract": "A method, system and apparatus for the monitoring, diagnosis and evaluation of the state of a dynamic drug display system is disclosed. This invention provides for the rapid cognitive grasp of the overall state of drug combination effects with respect to a dynamic system. The system provides for displayed objects, which change in real-time to show the changes of the functions of the system. In particular, this invention is directed to the processing and display of drug data for the use of doctors in the process of monitoring or administering drugs to patients.",
	"url": null,
	"owner": "University of Utah Research Foundation",
	"publication_number": "07693697",
	"publication_date": "2010-04-06",
	"application_number": "10269422",
	"application_date": "2002-10-11",
	"tags": null,
	"slug": "anesthesia-drug-monitor",
	"match_type": "description"
},
{
	"name": "Programmable 3D graphics pipeline for multimedia applications",
	"summary": "",
	"abstract": "A programmable graphics pipeline and method for processing multiple partitioned multimedia data, such as graphics data, image data, video data, or audio data. A preferred embodiment of the programmable graphics pipeline includes an instruction cache, a register file, and a vector functional unit that perform partitioned instructions. In addition, an enhanced rasterization unit is used to generate inverse-mapped source coordinates in addition to destination output coordinates for graphics and other media processing. An enhanced texture address unit generates corresponding memory addresses of source texture data for graphics processing and source media data for media processing. Data retrieved from memory are stored in an enhanced texture cache for use by the vector functional unit. A vector output unit includes a blending unit for graphics data and an output buffer for wide media data.",
	"url": null,
	"owner": "University of Washington",
	"publication_number": "07777749",
	"publication_date": "2010-08-17",
	"application_number": "11560630",
	"application_date": "2006-11-16",
	"tags": null,
	"slug": "programmable-3d-graphics-pipeline-for-multimedia-applications",
	"match_type": "description"
},
{
	"name": "Method and apparatus for increasing performance of HTTP over long-latency links",
	"summary": "",
	"abstract": "The invention increases performance of HTTP over long-latency links by pre-fetching objects concurrently via aggregated and flow-controlled channels. An agent and gateway together assist a Web browser in fetching HTTP contents faster from Internet Web sites over long-latency data links. The gateway and the agent coordinate the fetching of selective embedded objects in such a way that an object is ready and available on a host platform before the resident browser requires it. The seemingly instantaneous availability of objects to a browser enables it to complete processing the object to request the next object without much wait. Without this instantaneous availability of an embedded object, a browser waits for its request and the corresponding response to traverse a long delay link.",
	"url": null,
	"owner": "Venturi Wireless",
	"publication_number": "07694008",
	"publication_date": "2010-04-06",
	"application_number": "11122868",
	"application_date": "2005-05-04",
	"tags": null,
	"slug": "method-and-apparatus-for-increasing-performance-of-http-over-longlatency-links",
	"match_type": "description"
},
{
	"name": "Method and apparatus for optimized flow control to increase the performance over long-latency links",
	"summary": "",
	"abstract": "The invention increases performance of HTTP over long-latency links by pre-fetching objects concurrently via aggregated and flow-controlled channels. An agent and gateway together assist a Web browser in fetching HTTP contents faster from Internet Web sites over long-latency data links. The gateway and the agent coordinate the fetching of selective embedded objects in such a way that an object is ready and available on a host platform before the resident browser requires it. The seemingly instantaneous availability of objects to a browser enables it to complete processing the object to request the next object without much wait. Without this instantaneous availability of an embedded object, a browser waits for its request and the corresponding response to traverse a long delay link.",
	"url": null,
	"owner": "Venturi Wireless",
	"publication_number": "07860997",
	"publication_date": "2010-12-28",
	"application_number": "12684826",
	"application_date": "2010-01-08",
	"tags": null,
	"slug": "method-and-apparatus-for-optimized-flow-control-to-increase-the-performance-over-longlatency-links",
	"match_type": "description"
},
{
	"name": "Methods and apparatus to increase the efficiency of simultaneous web object fetching over long-latency links",
	"summary": "",
	"abstract": "The invention increases performance of HTTP over long-latency links by pre-fetching objects concurrently via aggregated and flow-controlled channels. An agent and gateway together assist a Web browser in fetching HTTP contents faster from Internet Web sites over long-latency data links. The gateway and the agent coordinate the fetching of selective embedded objects in such a way that an object is ready and available on a host platform before the resident browser requires it. The seemingly instantaneous availability of objects to a browser enables it to complete processing the object to request the next object without much wait. Without this instantaneous availability of an embedded object, a browser waits for its request and the corresponding response to traverse a long delay link.",
	"url": null,
	"owner": "Venturi Wireless",
	"publication_number": "07860998",
	"publication_date": "2010-12-28",
	"application_number": "12749305",
	"application_date": "2010-03-29",
	"tags": null,
	"slug": "methods-and-apparatus-to-increase-the-efficiency-of-simultaneous-web-object-fetching-over-longlatency-links",
	"match_type": "description"
},
{
	"name": "Managed distribution of digital assets",
	"summary": "",
	"abstract": "A technique for establishing usage control over digital assets such as computer files. The system model not only tracks authorized users' access to files, but monitors passage of such files to uncontrollable removable storage media or through network connections and the like which may indicate possible abuse of access rights. In accordance with a preferred embodiment, an autonomous independent agent process running at a point of use, such a background process in a client operating system kernel, interrupts requests for access to resources. The agent process senses low level system events, filters, and aggregates them. A policy engine analyzes sequences of aggregate events to determine when policy violations occur.",
	"url": null,
	"owner": "Verdasys, Inc.",
	"publication_number": "07814021",
	"publication_date": "2010-10-12",
	"application_number": "10706871",
	"application_date": "2003-11-12",
	"tags": null,
	"slug": "managed-distribution-of-digital-assets",
	"match_type": "description"
},
{
	"name": "System and method for authenticating a payment instrument transaction originating from a non-internet channel",
	"summary": "",
	"abstract": "A system and method for use in the authentication of payment instrument non-Internet transactions. A server transmits the transaction information to the authentication network associated with the issuer of the cardholder's card to determine whether the cardholder is enrolled in the card issuer's authentication program, and if so, will transmit a notification to the cardholder which includes instructions on how the cardholder can use an Internet connection to complete the authentication process for the transaction. When the cardholder accesses the server website and inputs the verification code previously generated by the server, the cardholder is automatically redirected by the server to the specific Internet link provided by the authentication network, which corresponds to the cardholder's transaction, so that the cardholder may complete the authentication of the transaction.",
	"url": null,
	"owner": "Verifi, Inc.",
	"publication_number": "07761380",
	"publication_date": "2010-07-20",
	"application_number": "11906441",
	"application_date": "2007-09-28",
	"tags": null,
	"slug": "system-and-method-for-authenticating-a-payment-instrument-transaction-originating-from-a-noninternet-channel",
	"match_type": "description"
},
{
	"name": "Resource access manager for controlling access to a limited-access resource",
	"summary": "",
	"abstract": "Methods and devices utilizing operating system semaphores are described for managing access to limited-access resources by clients.",
	"url": null,
	"owner": "Verigy (Singapore) Pte. Ltd.",
	"publication_number": "07644213",
	"publication_date": "2010-01-05",
	"application_number": "11810510",
	"application_date": "2007-06-05",
	"tags": null,
	"slug": "resource-access-manager-for-controlling-access-to-a-limitedaccess-resource",
	"match_type": "description"
},
{
	"name": "Method and system for implementing a databus in a global ecosystem of interrelated services",
	"summary": "",
	"abstract": "In accordance with an exemplary embodiment of the present invention, a DataBus data management architecture is presented for the NewWave service platform. It presents an architecture for creating a consistent, enterprise-wide data persistence layer which allows clients to access shared enterprise data. The DataBus achieves this enterprise-wide look by decoupling shared enterprise data from specific applications (breaking down the stovepipes) and opening up the data layer to across-the-enterprise access (given proper authorization). The DataBus architecture is designed from the ground up for global scalability and accommodation of evolving business data models in a highly-distributed physical deployment. Scaling is realized predominantly through the partitioning, while individual partitions are mapped to logical data domains that are defined along more relevant dimensions than entity-type dimensions (e.g., geography, line of business, etc.) and cut across traditional entity boundaries. Central to the DataBus data model is the notion that a data layer represents a shared asset of the corporation that is decoupled from the separate production applications requiring access to this data. The DataBus data architecture combines several main features or facets, such as partitioning, multi-hop finder strategies, externalized associations, object layer mediating access to underlying data storage, support for logical domains and transaction management.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07802264",
	"publication_date": "2010-09-21",
	"application_number": "10110000",
	"application_date": "2002-03-29",
	"tags": null,
	"slug": "method-and-system-for-implementing-a-databus-in-a-global-ecosystem-of-interrelated-services",
	"match_type": "description"
},
{
	"name": "Method and system for managing partitioned data resources",
	"summary": "",
	"abstract": "In a computing environment, a method for forming an association between a first data object and a second data object includes forming a first association fragment, where the first association fragment includes information relevant to accessing the first data object. The method also includes forming a second association fragment. The second association fragment may include information relevant to accessing the second data object. The first association fragment and the second association fragment cause an association to be effectively formed between the first data object and the second data object.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07822781",
	"publication_date": "2010-10-26",
	"application_number": "11165326",
	"application_date": "2005-06-24",
	"tags": null,
	"slug": "method-and-system-for-managing-partitioned-data-resources",
	"match_type": "description"
},
{
	"name": "Method and system for providing interdomain traversal in support of packetized voice transmissions",
	"summary": "",
	"abstract": "An approach provides interdomain traversal to support packetized voice transmissions. A request for establishing a voice call is received from a source endpoint behind a first network address translator of a first domain, wherein the request specifies a directory number of a destination endpoint within a second domain. A network address is determined for communicating with the destination endpoint based on the directory number. Additionally, existence of a second network address translator within the second domain is determined. If the network address can be determined, a media path is established between the source endpoint and the destination endpoint based on the network address to support the voice call.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07706401",
	"publication_date": "2010-04-27",
	"application_number": "11202647",
	"application_date": "2005-08-12",
	"tags": null,
	"slug": "method-and-system-for-providing-interdomain-traversal-in-support-of-packetized-voice-transmissions",
	"match_type": "description"
},
{
	"name": "Secure transaction card using biometrical validation",
	"summary": "",
	"abstract": "A validation scheme for use with a transaction card such as a calling card, et cetera, using personalized biometric profile data that is inherently coupled to the card owner/user. A configuration process is used for populating a profile database with sample voice or other biometric responses elicited from the owner/user in response to a plurality of questions relating to information uniquely linked to the user such as, e.g., name, age, hobbies, et cetera, or biometric responses such as fingerprints, retinal scans, and palm prints, or implanted ID chips. When a transaction is attempted using the transaction card, a determination is made if a voice profile validation is required for authentication. If so, a question from the plurality of questions used in the configuration process is randomly selected and directed to the user for a response. Access is provided only if a match between the response and corresponding sample is found. In a passive mode, the validation scheme may be utilized as an auxiliary fraud prevention scheme in addition to existing authentication systems.",
	"url": null,
	"owner": "Verizon Business Global LLC",
	"publication_number": "07721109",
	"publication_date": "2010-05-18",
	"application_number": "09627558",
	"application_date": "2000-07-28",
	"tags": null,
	"slug": "secure-transaction-card-using-biometrical-validation",
	"match_type": "description"
},
{
	"name": "Methods and systems for providing a data access layer",
	"summary": "",
	"abstract": "A preferred system for providing data access comprises an application program interface configured to delegate a request to at least one service providers also included in the system. The service providers may include a synchronization manager configured to maintain, based upon the request, data consistency between a first server containing the service providers and a second server and a cache manager configured to cache, based upon the request, a portion of a database query. In addition, the service providers may include a pre-fetch service configured to anticipate a database query, perform the anticipated query, and cache the results of the anticipated query, and a security manager configured to determine a restriction on the request based upon a role of a user associated with the request.",
	"url": null,
	"owner": "Verizon Data Services LLC",
	"publication_number": "07680797",
	"publication_date": "2010-03-16",
	"application_number": "10897744",
	"application_date": "2004-07-23",
	"tags": null,
	"slug": "methods-and-systems-for-providing-a-data-access-layer",
	"match_type": "description"
},
{
	"name": "Screen scraping interface",
	"summary": "",
	"abstract": "An interface can serve as a client-mainframe interface, enabling clients to develop applications without a need to understand mainframe processes and screen flows. Extended Tool Command Language (Tcl) can define services that can include a series of interactions with a mainframe system and service definitions can be added or updated on the interface during operation of the interface without disrupting processing. The service definitions can enable the interface to receive XML requests from a client, parse the XML requests, execute the service scripts to interact with the mainframe systems, generate the result in a XML format and send the XML file back to the client. Fundamental Mainframe Interactions (FMI) commands can interact with the mainframe systems and enable the specification of the XML structure of the request and response. The interface can provide efficient connection pooling management and connection life cycle control to improve the performance of the mainframe system interactions.",
	"url": null,
	"owner": "Verizon Data Services LLC",
	"publication_number": "07647370",
	"publication_date": "2010-01-12",
	"application_number": "10693706",
	"application_date": "2003-10-24",
	"tags": null,
	"slug": "screen-scraping-interface",
	"match_type": "description"
},
{
	"name": "Application service invocation",
	"summary": "",
	"abstract": "An Internet Protocol Multimedia Subsystem (IMS) includes a Serving-Call Session Control Function (S-CSCF). The S-CSCF includes a Service Capability Interaction Manager (SCIM) configured to invoke one or more application services in response to a message being received by the S-CSCF.",
	"url": null,
	"owner": "Verizon Patent and Licensing Inc.",
	"publication_number": "07792275",
	"publication_date": "2010-09-07",
	"application_number": "11564984",
	"application_date": "2006-11-30",
	"tags": null,
	"slug": "application-service-invocation",
	"match_type": "description"
},
{
	"name": "Method and system for protocol embedded automated test control",
	"summary": "",
	"abstract": "A method and system of an embodiment may include designing two or more test cases for a network, creating one or more test records comprising data and configuration data for the two or more test cases, provisioning a user record on the network, running a first test case using the user record provisioned on the network, the first test case comprising, transmitting at least a first portion of the data to a network element being tested, and receiving a response from the network element based at least in part on the configuration data for the first test case contained in the data transmitted, running a second test case using the user record provisioned on the network, the second test case comprising, transmitting at least a second portion of the data to a network element being tested, and receiving a response from a network element based at least in part on configuration data for the second test case contained in the data transmitted.",
	"url": null,
	"owner": "Verizon Patent and Licensing Inc.",
	"publication_number": "07787599",
	"publication_date": "2010-08-31",
	"application_number": "11956091",
	"application_date": "2007-12-13",
	"tags": null,
	"slug": "method-and-system-for-protocol-embedded-automated-test-control",
	"match_type": "description"
},
{
	"name": "System and method for multi-layer network analysis and design",
	"summary": "",
	"abstract": "Techniques for providing a method and system for multi-layer network analysis and design are disclosed. In one particular exemplary embodiment, the techniques may be realized as a method, comprising determining, using a computer model of a network, a minimum probability of failure path between a pair of network nodes at a first network layer for one or more pairs of network nodes, calculating, using a processor and stored network data, a value for the minimum probability of failure for the identified minimum probability of failure path between the pair of network nodes at the first network layer for the one or more pairs of network nodes. The method may include identifying a maximum of the determined minimum probability of failure values for the one or more pairs of network nodes for the first network layer. The method may include probability of failure calculations for one or more secondary network layers.",
	"url": null,
	"owner": "Verizon Patent and Licensing Inc.",
	"publication_number": "07839789",
	"publication_date": "2010-11-23",
	"application_number": "12334681",
	"application_date": "2008-12-15",
	"tags": null,
	"slug": "system-and-method-for-multilayer-network-analysis-and-design",
	"match_type": "description"
},
{
	"name": "Automated software robot generator",
	"summary": "",
	"abstract": "A system and a method for using a computer program to automate the process of searching and or retrieving data from a particular data pool for introduction to a user is provided. More specifically, a program is used that may robotically manipulate existing web sites using computer source codes that are generated all or in part by the computer program and/or software. The system may trace, monitor and analyze a browser or network application to produce transactions and manipulate the data retrieved to automatically access previously un-accessible data from a web site.",
	"url": null,
	"owner": "Vertafore, Inc.",
	"publication_number": "07716632",
	"publication_date": "2010-05-11",
	"application_number": "10698694",
	"application_date": "2003-10-31",
	"tags": null,
	"slug": "automated-software-robot-generator",
	"match_type": "description"
},
{
	"name": "System and method for scheduling harvesting of personal information",
	"summary": "",
	"abstract": "This invention is a system and method for a system and method for scheduling the harvesting of information associated with one or more end users from one or more information providers. A host computer, including a processor, is in communication with a user data store for storing data associated with users and an information provider store for storing data associated with information providers. For each end user, a profile of past access times, login times, is maintained in the user data store. For each information provider, a profile of update times and criteria are maintained in the information provider store. For a selected information provider, the host computer processor determines an update time for information stored by the selected information provider and a set of end users whose information could be modified by an update at that update time. The host computer processor generates a predicted login time for each end user in the determined set of end users and each generated login time back a predetermined time interval. The host computer processor sorts the determined set of end users according to the predicted login time or shifted login time and assigns a harvesting time for each end user based on each end user's shifted or predicted login time.",
	"url": null,
	"owner": "VerticalOne Corporation",
	"publication_number": "07765279",
	"publication_date": "2010-07-27",
	"application_number": "09427811",
	"application_date": "1999-10-27",
	"tags": null,
	"slug": "system-and-method-for-scheduling-harvesting-of-personal-information",
	"match_type": "description"
},
{
	"name": "Transaction management system",
	"summary": "",
	"abstract": "The systems and methods described herein relate to a system for documenting transactions. A filter is provided that captures content associated with transactions. The filter may be configured to start and stop the capture at predetermined times, and may be further configured to specify what content is to be captured during a transaction. The system may store any documents or data associated with a transaction, including dynamic content and user selections and inputs. A document repository may be provided for storing unstructured data representing data, text, forms, and so forth presented to a party during a transaction. A viewer may be provided for displaying data stored in the document repository.",
	"url": null,
	"owner": "Vignette Software, LLC",
	"publication_number": "07792958",
	"publication_date": "2010-09-07",
	"application_number": "11903373",
	"application_date": "2007-09-21",
	"tags": null,
	"slug": "transaction-management-system",
	"match_type": "description"
},
{
	"name": "Operating system arrangement for flexible computer system design",
	"summary": "",
	"abstract": "A programmable logic device with an embedded operating system is disclosed. The programmable logic device includes a bus, memory, a number of bidirectional communication ports, a switching mechanism. The operating system embedded in the programmable logic device responds to input received through the ports by either sending data to a device connected to one such port, or by instructing the switching mechanism to establish a direct connection between two such ports. This device may be included as part of a larger computer system.",
	"url": null,
	"owner": "Virinci Technologies, Inc.",
	"publication_number": "07660939",
	"publication_date": "2010-02-09",
	"application_number": "11189153",
	"application_date": "2005-07-25",
	"tags": null,
	"slug": "operating-system-arrangement-for-flexible-computer-system-design",
	"match_type": "description"
},
{
	"name": "Systems and methods for consumer-generated media reputation management",
	"summary": "",
	"abstract": "TruCast is a method for management, by way of gathering, storing, analyzing, tracking, sorting, determining the relevance of, visualizing, and responding to all available consumer generated media. Some examples of consumer generated media include web logs or u201cblogsu201d, mobile phone blogs or u201cmo-blogsu201d, forums, electronic discussion messages, Usenet, message boards, BBS emulating services, product review and discussion web sites, online retail sites that support customer comments, social networks, media repositories, and digital libraries. Any web hosted system for the persistent public storage of human commentary is a potential target for this method. The system is comprised of a coordinated software and hardware system designed to perform management, collection, storage, analysis, workflow, visualization, and response tasks upon this media. This system permits a unified interface to manage, target, and accelerate interactions within this space, facilitating public relations, marketing, advertising, consumer outreach, political debate, and other modes of directed discourse.",
	"url": null,
	"owner": "Visible Technologies LLC",
	"publication_number": "07720835",
	"publication_date": "2010-05-18",
	"application_number": "11745390",
	"application_date": "2007-05-07",
	"tags": null,
	"slug": "systems-and-methods-for-consumergenerated-media-reputation-management",
	"match_type": "description"
},
{
	"name": "Method and system for coordinated multiple cluster failover",
	"summary": "",
	"abstract": "Hyperclusters are a cluster of clusters. Each cluster has associated with it one or more resource groups, and independent node failures within the clusters are handled by platform specific clustering software. The management of coordinated failovers across dependent or independent resources running on heterogeneous platforms is contemplated. A hypercluster manager running on all of the nodes in a cluster communicates with platform specific clustering software regarding any failure conditions, and utilizing a rule-based decision making system, determines actions to take on the node. A plug-in extends exit points definable in non-hypercluster clustering technologies. The failure notification is passed to other affected resource groups in the hypercluster.",
	"url": null,
	"owner": "Vision Solutions, Inc.",
	"publication_number": "07757116",
	"publication_date": "2010-07-13",
	"application_number": "11732670",
	"application_date": "2007-04-04",
	"tags": null,
	"slug": "method-and-system-for-coordinated-multiple-cluster-failover",
	"match_type": "description"
},
{
	"name": "Method for analyzing a network environment",
	"summary": "",
	"abstract": "A method for analyzing a network environment, is provided. First acquiring a plurality of connection data of all network cards of a terminal device is performed. Then, according to connection data, determining whether or not a terminal device uses a PPPoE connection to connect to a network system. Finally, determining whether or not an IP address of the terminal device is a public IP address and determining whether or not the terminal device uses DHCP to acquire a target IP address.",
	"url": null,
	"owner": "Vivotek Inc.",
	"publication_number": "07643432",
	"publication_date": "2010-01-05",
	"application_number": "12054737",
	"application_date": "2008-03-25",
	"tags": null,
	"slug": "method-for-analyzing-a-network-environment",
	"match_type": "description"
},
{
	"name": "System and method for searching, formulating, distributing and monitoring usage of predefined internet search queries",
	"summary": "",
	"abstract": "A user interface aids in creation of customized pre-defined queries that can be used for identifying particular search results relevant to a topic. Provision can be made to allow express inclusion or exclusion of certain results. Metrics relating to how much the pre-defined query focuses the search can be provided. A pre-defined query can be referenced by a URL, which can be distributed or referenced in content available in any number of locations. When results of the pre-defined search change, a contact associated with the search query can be notified. When a URL is activated, a redirect to the search engine with the customized query can occur, and the contact associated with the query can be notified of the usage of the pre-defined query. Metrics concerning sources of query usage can be produced, based on data gathered while serving the pre-defined query requests.",
	"url": null,
	"owner": "Vizibility Inc.",
	"publication_number": "07831609",
	"publication_date": "2010-11-09",
	"application_number": "12795034",
	"application_date": "2010-06-07",
	"tags": null,
	"slug": "system-and-method-for-searching-formulating-distributing-and-monitoring-usage-of-predefined-internet-search-queries",
	"match_type": "description"
},
{
	"name": "Dynamic driver substitution",
	"summary": "",
	"abstract": "An agent loaded in a computer's operating system (OS) simulates disconnection and reconnection of a device, with no need to actually disconnect the device logically from a computer. During simulated reconnection, when the OS requests the hardware ID of the device, the agent returns a substitute ID, which causes the OS to load a substitute driver. Substitution of the ID also allows driver substitution for a not yet logically connected device; in this cases, no simulated disconnection or reconnection is needed. Driver substitution is dynamic and reversible, with no need to restart the system or reboot the OS and substitution of a driver for one device of a type does not disturb other devices of the same type. The invention may be implemented entirely in software, with no need for hardware modifications or device customization.",
	"url": null,
	"owner": "VMware, Inc",
	"publication_number": "07793279",
	"publication_date": "2010-09-07",
	"application_number": "11491852",
	"application_date": "2006-07-24",
	"tags": null,
	"slug": "dynamic-driver-substitution",
	"match_type": "description"
},
{
	"name": "Method and system for providing virtualized application workspaces",
	"summary": "",
	"abstract": "Methods and systems for providing virtual workspaces are provided. Example embodiments provide a Application Workspace System u201cAWS,u201d which enables users to access remote server-based applications (e.g., thin client applications, terminal server applications, applications on hosted operating systems, etc.) using the same interface that they use to access local applications, without needing to know where the application is being accessed. The AWS automatically determines which applications the user is entitled to use, and then figures out automatically, based upon a variety of parameters, which applications are to be made available to the user (resolved to version, particular package etc.), and whether they are to be installed locally, or accessed remotely. This abstract is provided to comply with rules requiring an abstract, and it is submitted with the intention that it will not be used to interpret or limit the scope or meaning of the claims.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07779091",
	"publication_date": "2010-08-17",
	"application_number": "11642990",
	"application_date": "2006-12-19",
	"tags": null,
	"slug": "method-and-system-for-providing-virtualized-application-workspaces",
	"match_type": "description"
},
{
	"name": "Method of universal file access for a heterogeneous computing environment",
	"summary": "",
	"abstract": "An architecture and system are described that provide a unified file access service within in a managed computing environment composed of diverse networks, computing devices, and storage devices. The service provides mechanisms for remotely accessing the file systems of any managed computer or disk snapshot, independently of the computer's current state (powered on, suspended or powered off), its location within the environment, its hardware type (virtual vs. physical), its operating system type, and its file system formats. The system isolates centralized FPAs from the details of clients, proxies and storage elements by providing a service that decomposes offloaded file system access into two steps. A FPA or a requester acting on behalf of the FPA first expresses the disk set or the computer containing the file systems it wishes to access, along with requirements and preferences about the access method. The service figures out an efficient data path satisfying the FPA's needs; and then automatically configures a set of storage and computing resources to provide the data path. The service then replies with information about the resources and instructions for using them. The FPA then accesses the requested file systems using the returned information.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07774391",
	"publication_date": "2010-08-10",
	"application_number": "11395081",
	"application_date": "2006-03-30",
	"tags": null,
	"slug": "method-of-universal-file-access-for-a-heterogeneous-computing-environment",
	"match_type": "description"
},
{
	"name": "On-access anti-virus mechanism for virtual machine architecture",
	"summary": "",
	"abstract": "A tangible medium embodying instructions usable by a computer system to protect a plurality of guest virtual machines (VMs), which execute via virtualization software on a common host platform, from malicious code is described. A scan engine is configured to scan data for malicious code and determine a result of the scanning, wherein the result indicates whether malicious code is present in the data. A driver portion is configured for installation in an operating system of a target VM, which is one of the guest VMs. The driver portion intercepts an access request to a file, that originates within the target VM. The driver portion communicates information identifying a location of the data to be scanned by the scan engine without sending a copy of the data to the scan engine. The scan engine executes within the virtualization layer outside a context of the target VM.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07797748",
	"publication_date": "2010-09-14",
	"application_number": "11955265",
	"application_date": "2007-12-12",
	"tags": null,
	"slug": "onaccess-antivirus-mechanism-for-virtual-machine-architecture",
	"match_type": "description"
},
{
	"name": "Updating software on dormant disks",
	"summary": "",
	"abstract": "In a method of updating software on a dormant disk, exposed files are accessed. The exposed files are exposed by mounting the dormant disk. The exposed files are scanned to determine the status of software residing on the dormant disk. The scanning is achieved without requiring booting of the dormant disk. It is determined whether an update is available for the software residing on the dormant disk.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07823145",
	"publication_date": "2010-10-26",
	"application_number": "11395431",
	"application_date": "2006-03-31",
	"tags": null,
	"slug": "updating-software-on-dormant-disks",
	"match_type": "description"
},
{
	"name": "Utilizing cache information to manage memory access and cache utilization",
	"summary": "",
	"abstract": "A method and system of managing data access in a shared memory cache of a processor are disclosed. The method includes probing one or more memory addresses that map to a subset of the shared memory cache and sensing a plurality of events in the one or more memory addresses. Cache utilization information is then obtained by reading a hardware performance counter of the processor. The hardware performance counter is incremented based on the occurrence of the plurality of events. Based upon the cache utilization information, an occurrence of one of the plurality of events is reduced.",
	"url": null,
	"owner": "VMware, Inc.",
	"publication_number": "07831773",
	"publication_date": "2010-11-09",
	"application_number": "12199671",
	"application_date": "2008-08-27",
	"tags": null,
	"slug": "utilizing-cache-information-to-manage-memory-access-and-cache-utilization",
	"match_type": "description"
},
{
	"name": "Mobile telephone device and data-management method",
	"summary": "",
	"abstract": "The invention also refers to a method for managing data in arrays of applications stored in a card of a mobile telephony subscriber equipment.",
	"url": null,
	"owner": "Vodafone Group PLC",
	"publication_number": "07715833",
	"publication_date": "2010-05-11",
	"application_number": "10522859",
	"application_date": "2003-07-31",
	"tags": null,
	"slug": "mobile-telephone-device-and-datamanagement-method",
	"match_type": "description"
},
{
	"name": "Device, system and method of UDP communication",
	"summary": "",
	"abstract": "Device, system and method of UDP communication. For example, an apparatus in accordance with an embodiment of the invention includes a non-kernel UDP protocol handler adapted to perform a UDP operation of a user mode application by bypassing the operating system kernel and directly accessing a communication adapter having an operating system bypass capability.",
	"url": null,
	"owner": "Voltaire Ltd.",
	"publication_number": "07848322",
	"publication_date": "2010-12-07",
	"application_number": "11727221",
	"application_date": "2007-03-26",
	"tags": null,
	"slug": "device-system-and-method-of-udp-communication",
	"match_type": "description"
},
{
	"name": "Personalization content sharing system and method",
	"summary": "",
	"abstract": "A method includes enabling a user to define his/her buddies from among members of a community and enabling the user to select media content to be played on devices of his/her buddies. Another method includes providing media content chosen by a first user to be played by a media player on a device of a second user in response to an identification of the first user.",
	"url": null,
	"owner": "Vringo, Inc.",
	"publication_number": "07761816",
	"publication_date": "2010-07-20",
	"application_number": "11544938",
	"application_date": "2006-10-10",
	"tags": null,
	"slug": "personalization-content-sharing-system-and-method",
	"match_type": "description"
},
{
	"name": "Method and system for creating a concept-object database",
	"summary": "",
	"abstract": "Embodiments of the present invention are directed to acquiring information from the worldwide web, organizing information acquired from the worldwide web, and using the acquired and organized information to facilitate web-page searching, web-page browsing, and other worldwide-web-based activities. In one embodiment of the present invention, a database of concept objects is created from an initial set of semantic objects and from hyperlink information obtained from web pages by one or more web crawlers. The initial set of semantic objects is processed using hyperlink based objects created by the web crawler. The processed semantic objects are then associated with additional hyperlink-based objects to create a concept-object database. In certain embodiments of the present invention, the concept-object database can be further refined and supplemented in an automated fashion by additional web crawling, subsequent association of hyperlink-based objects with concept objects, and creation of new concept objects as well as by user input to, and editing of, the concept-object database. The concept-object database may be employed, in various embodiments of the present invention, to facilitate web browsing, web-page searching, and other worldwide-web-base activities.",
	"url": null,
	"owner": "Vulcan Labs LLC",
	"publication_number": "07707161",
	"publication_date": "2010-04-27",
	"application_number": "11489243",
	"application_date": "2006-07-18",
	"tags": null,
	"slug": "method-and-system-for-creating-a-conceptobject-database",
	"match_type": "description"
},
{
	"name": "Radiocommunication module executing a main software and a client software comprising several client applications",
	"summary": "",
	"abstract": "The invention concerns a radiocommunication module, of the type hosting and executing a main software providing in particular radiocommunication functions and comprising means for executing drive controls, sent to it by at least a driver client software. The invention is characterised in that the radiocommunication module further hosts and executes at least a client software comprising a main client application and at least a secondary (slave) client application. The processing operations carried out by the onboard client software are distributed between the main and secondary client applications. The onboard client application acts: as a driver client software, sending drive controls to the main software, and receiving from it responses, resulting from the execution of some of the drive controls; and/or as a supervising client software, managing the execution of the drive controls sent by an (external) driver client software hosted and executed by a third party equipment co-operating with the radiocommunication module.",
	"url": null,
	"owner": "Wavecom",
	"publication_number": "07653382",
	"publication_date": "2010-01-26",
	"application_number": "10472333",
	"application_date": "2002-03-22",
	"tags": null,
	"slug": "radiocommunication-module-executing-a-main-software-and-a-client-software-comprising-several-client-applications",
	"match_type": "description"
},
{
	"name": "Real-time streaming protocol gateway and proxy for serving and caching static media over a low bandwidth connection",
	"summary": "",
	"abstract": "A system and method to support the transmission of static media, originating from an HTTP source, as a Real-Time Streaming Protocol (RTSP) stream to a caching proxy. A server-side gateway accepts RTSP requests, loads a requested resource from the HTTP source, and streams requested portions of a file via RTSP. A RTSP proxy caches received portions of media to avoid re-requesting those portions. The RTSP proxy may receive a RTSP TEARDOWN command to trigger removal of cached media and passes the RTSP TEARDOWN command to the server-side gateway. Further, the server-side gateway may receive a RTSP TEARDOWN command to trigger the server-side gateway to remove media loaded from the HTTP source.",
	"url": null,
	"owner": "West Corporation",
	"publication_number": "07814221",
	"publication_date": "2010-10-12",
	"application_number": "12138473",
	"application_date": "2008-06-13",
	"tags": null,
	"slug": "realtime-streaming-protocol-gateway-and-proxy-for-serving-and-caching-static-media-over-a-low-bandwidth-connection",
	"match_type": "description"
},
{
	"name": "Appliance and accessory for controlling a cycle of operation",
	"summary": "",
	"abstract": "An appliance configured to perform an operation cycle to effect a physical operation on an article, the appliance includes at least one component configured to effect the physical operation, and a cycle engine on the component. The cycle engine can build a cycle structure for the operation cycle to enable the component to perform the physical operation.",
	"url": null,
	"owner": "Whirlpool Corporation",
	"publication_number": "07831321",
	"publication_date": "2010-11-09",
	"application_number": "11930295",
	"application_date": "2007-10-31",
	"tags": null,
	"slug": "appliance-and-accessory-for-controlling-a-cycle-of-operation",
	"match_type": "description"
},
{
	"name": "Software architecture system and method for operating an appliance in multiple operating modes",
	"summary": "",
	"abstract": "In one embodiment, a system for controlling a plurality of devices having at least two operating modes comprises a first software operating layer configured to control the operation of at least one of the devices in a first operational mode and a second software operating layer configured to control the operation of at least one of the devices in a second operational mode. In another embodiment, a control system for controlling a plurality of devices connected by a communications network comprises a user interface configured to receive the selection of a cycle of operation; a first system element isolated from the network and configured to implement the selected cycle of operation to define a first control state; and a second system element exposed to the network and configured to implement the selected cycle of operation to define a second control state.",
	"url": null,
	"owner": "Whirlpool Corporation",
	"publication_number": "07813831",
	"publication_date": "2010-10-12",
	"application_number": "11571454",
	"application_date": "2006-12-29",
	"tags": null,
	"slug": "software-architecture-system-and-method-for-operating-an-appliance-in-multiple-operating-modes",
	"match_type": "description"
},
{
	"name": "Systems and methods for dynamically linking application software into a running operating system kernel",
	"summary": "",
	"abstract": "The present invention provides systems and methods for dynamically linking modules into a running operating system kernel. Systems and methods described herein have the following advantages: (1) they permit an application programmer to write, compile, execute, and terminate application code that is to be loaded into a kernel as if the application code was an ordinary application program, (2) they allow a standard programming environment to be used to encapsulate application software in a familiar environment, and (3) they permit automatic cleanup of errors and freeing of program resources when the application terminates.",
	"url": null,
	"owner": "Wind River Systems, Inc.",
	"publication_number": "07725888",
	"publication_date": "2010-05-25",
	"application_number": "10670802",
	"application_date": "2003-09-26",
	"tags": null,
	"slug": "systems-and-methods-for-dynamically-linking-application-software-into-a-running-operating-system-kernel",
	"match_type": "description"
},
{
	"name": "Architecture for master data management in an enterprise",
	"summary": "",
	"abstract": "Master data management and information exchange (MIX) architecture includes a technology agnostic framework that unifies sharing and management of master data across repositories, data formats and applications in an enterprise. The MIX architecture comprises at least one master data store which stores and updates master data for said enterprise; a management parameter store which assists in providing technology agnostic architecture for an adaptive extensible framework for unified master data; and, a unified interface for enabling master data discovery, sharing and use across the enterprise, wherein the unified interface comprises management interface, inbound interface and outbound interface. The MIX architecture might additionally include a data integration component, data quality component, and an abstraction layer. The present architecture enables extended MDM enterprise deployment and can be implemented as a stand alone solution or as an MDM veneer over existing applications without affecting overall system behavior and is technology independent.",
	"url": null,
	"owner": "WIPRO Limited",
	"publication_number": "07660782",
	"publication_date": "2010-02-09",
	"application_number": "11867686",
	"application_date": "2007-10-05",
	"tags": null,
	"slug": "architecture-for-master-data-management-in-an-enterprise",
	"match_type": "description"
},
{
	"name": "Method and system of teleconferencing",
	"summary": "",
	"abstract": "A telecommunication system and method for communicating between at least two end users over a telecommunication network, where the communication is defined by a set of parameters. At least two entities, such as one or both of the end users and/or the service providers negotiate an agreed set of values for said parameters that define the desired communication. The entities also negotiate a warranty agreement with the network service provider defining at least one of the agreed parameters to be warranted including a compensation method to be applied should said at least one monitored parameter fail to meet the corresponding one of said agreed values. The agreed warranted parameters are monitored once the communication is established and, in the event of a failure of the monitored parameters to meet agreed values, at least one of the entities is compensated in accordance with the agreed compensation method. When more than two entities are involved in a communication, the compensation from an entity can be divided amongst the other entities according to an agreed scheme.",
	"url": null,
	"owner": "Wireless Systems Technologies, Inc.",
	"publication_number": "07839803",
	"publication_date": "2010-11-23",
	"application_number": "09787758",
	"application_date": "1999-09-24",
	"tags": null,
	"slug": "method-and-system-of-teleconferencing",
	"match_type": "description"
},
{
	"name": "System and method for executing distributed software",
	"summary": "",
	"abstract": "A system for executing distributed software under hard real-time conditions comprises a plurality of nodes and a communication channel. Nodes are allowed to transmit data across the communication channel within time windows relative to repetitive communication time intervals of the communication channel, wherein a number of bytes transmitted within the communication time windows may vary from communication time window to communication time window. The data may be transmitted as a message comprising a representation of an identifying tag and a representation of the data. Also a number of bytes representing respective tags may vary from communication time interval to communication time interval.",
	"url": null,
	"owner": "Wolfgang Pree GmbH",
	"publication_number": "07848359",
	"publication_date": "2010-12-07",
	"application_number": "11820479",
	"application_date": "2007-06-19",
	"tags": null,
	"slug": "system-and-method-for-executing-distributed-software",
	"match_type": "description"
},
{
	"name": "Method of dynamically linking objects operated on by a computational system",
	"summary": "",
	"abstract": "In a method for presenting to a user information operated on by a computational software application, a relationship between states of a user interface mechanism located on a workspace associated with the computational software application and an underlying object operated on by the computational software application may be determined. The relationship may be defined at least in part by configuration data capable of being interpreted by the computational software application. A change in a value of the underlying object may be detected, and a current state of the user interface mechanism may be changed based on the detected change in the value of the underlying object and according to the relationship. Additionally, a change in the current state of the user interface mechanism caused by a user may be detected, and the current value of the underlying object may be changed based on the detected change in the current state of the user interface mechanism and according to the relationship.",
	"url": null,
	"owner": "Wolfram Research, Inc.",
	"publication_number": "07747981",
	"publication_date": "2010-06-29",
	"application_number": "11234550",
	"application_date": "2005-09-23",
	"tags": null,
	"slug": "method-of-dynamically-linking-objects-operated-on-by-a-computational-system",
	"match_type": "description"
},
{
	"name": "Computing device deployment using mass storage device",
	"summary": "",
	"abstract": "Computing device deployment and configuration using a mass storage device is provided. A generic computing device is provided to a customer or end user. A mass storage device is used to distribute configuration information to the generic computing device. The configuration information includes customer-specified or ordered software applications or other features. The configuration information can also include updates to the computing device system software. The customer or end user couples the mass storage device to the generic computing device in order to load the configuration information into the computing device. After the configuration information is loaded, the computing device is configured for the customer's use. Further features, such as creating customized images, are also provided.",
	"url": null,
	"owner": "Wyse Technology Inc.",
	"publication_number": "07797527",
	"publication_date": "2010-09-14",
	"application_number": "11798984",
	"application_date": "2007-05-18",
	"tags": null,
	"slug": "computing-device-deployment-using-mass-storage-device",
	"match_type": "description"
},
{
	"name": "Client dependent image processing for browser-based image document viewer for handheld client devices",
	"summary": "",
	"abstract": "Methods and systems that dynamically control and/or direct document image processing based on one or more of client device display capabilites, image formats supported by the client device, network bandwidth, document file format, document content and user hints.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07721204",
	"publication_date": "2010-05-18",
	"application_number": "10901240",
	"application_date": "2004-07-29",
	"tags": null,
	"slug": "client-dependent-image-processing-for-browserbased-image-document-viewer-for-handheld-client-devices",
	"match_type": "description"
},
{
	"name": "Device model agent",
	"summary": "",
	"abstract": "The Device Model Agent (DMA), the device side technology module in Device Centric Services (DCS) system, is the main focus of this invention. DMA is a thin, efficient applications/services execution environment. DMA provides an embedded services platform for enabling system management applications and services. This allows a flexible, extensible, dynamic services management module allowing networked services to be designed, added, and managed within the system without modifications to devices, DCS system, or DMA itself. While this invention specifically describes the integration of benefits from DMA into document system devices, the concepts are equally applicable in other domains. The DMA runtime environment is a thin software interface layer that resides on a document system device between the Java runtime environment and embedded web server.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07734749",
	"publication_date": "2010-06-08",
	"application_number": "10686844",
	"application_date": "2003-10-16",
	"tags": null,
	"slug": "device-model-agent",
	"match_type": "description"
},
{
	"name": "Device model agent",
	"summary": "",
	"abstract": "The Device Model Agent (DMA), the device side technology module in Device Centric Services (DCS) system, is the main focus of this invention. DMA is a thin, efficient applications/services execution environment. DMA provides an embedded services platform for enabling system management applications and services. This allows a flexible, extensible, dynamic services management module allowing networked services to be designed, added, and managed within the system without modifications to devices, DCS system, or DMA itself. While this invention specifically describes the integration of benefits from DMA into document system devices, the concepts are equally applicable in other domains. The DMA runtime environment is a thin software interface layer that resides on a document system device between the Java runtime environment and embedded web server.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07647392",
	"publication_date": "2010-01-12",
	"application_number": "10687244",
	"application_date": "2003-10-16",
	"tags": null,
	"slug": "device-model-agent",
	"match_type": "description"
},
{
	"name": "Integrated server platform for the autonomous provisioning of device services",
	"summary": "",
	"abstract": "A provisioning services platform automatically and remotely regulates service subscription and supplies replenishment. The platform comprises a provisioning server running a service consumer interface, an entity management module comprising information on machines usable with the platform such as electroreprographic marking machines, a policy and preferences module, and an order processing module, among others. The provisioned services include automated meter reads, automated supplies ordering, productivity reporting, assisted user self-help, remote diagnostics, and prognostics, among others.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07644145",
	"publication_date": "2010-01-05",
	"application_number": "10686842",
	"application_date": "2003-10-16",
	"tags": null,
	"slug": "integrated-server-platform-for-the-autonomous-provisioning-of-device-services",
	"match_type": "description"
},
{
	"name": "Method and apparatus for dynamically delivering service profiles to clients",
	"summary": "",
	"abstract": "One embodiment of the present invention provides a system that facilitates dynamic delivery of service profiles to a client. During operation, the system performs a discovery operation to allow the client to discover new services on a network. If a new service is discovered for which the client does not possess a service profile, the client to obtains the service profile from the new service and subsequently installs it, thereby enabling the client to interact with the new service.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07668903",
	"publication_date": "2010-02-23",
	"application_number": "10616049",
	"application_date": "2003-07-07",
	"tags": null,
	"slug": "method-and-apparatus-for-dynamically-delivering-service-profiles-to-clients",
	"match_type": "description"
},
{
	"name": "Method and system for characterizing elements of a print production queuing model",
	"summary": "",
	"abstract": "Methods and systems for characterizing performance of resources in a production environment are disclosed. Timing information for a plurality of print jobs may be received at a resource characterization system from one or more resources. A service time distribution may be determined based on the timing information. Resource performance for the one or more resources may be characterized based on the service time distribution using a queuing model. One or more performance characteristics may be provided for the one or more resources based on the characterized resource performance.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07810095",
	"publication_date": "2010-10-05",
	"application_number": "11854113",
	"application_date": "2007-09-12",
	"tags": null,
	"slug": "method-and-system-for-characterizing-elements-of-a-print-production-queuing-model",
	"match_type": "description"
},
{
	"name": "System, method, and program for stacking multi-thickness sheets of media",
	"summary": "",
	"abstract": "Systems, methods, and programs for adjusting an output orientation of multi-thickness media input marking data, determine a number of sheets of the multi-thickness media that is to be alternated within an output stack, and adjust the output orientation of at least one sheet of multi-thickness media to be output based on the determined number of sheets of the multi-thickness media to be alternated.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07651088",
	"publication_date": "2010-01-26",
	"application_number": "11214911",
	"application_date": "2005-08-31",
	"tags": null,
	"slug": "system-method-and-program-for-stacking-multithickness-sheets-of-media",
	"match_type": "description"
},
{
	"name": "Systems and methods for compensating for streaks in images",
	"summary": "",
	"abstract": "Defects in an image forming system may give rise to visible streaks, or one-dimensional defects in an image that run parallel to the process direction. One known method for compensating for streaks introduces a separate tone reproduction curve for each pixel column in the process direction. A compensation pattern according to this invention has alignment marks before and after a halftone compensation region. The alignment marks provide alignment between the printer pixel grid and a scanning pixel grid. The line width of each alignment mark and the gray level in each pixel column of each gray level portion is measured and analyzed to produce a local tone reproduction curve for each pixel column and associated line width. The line widths of the alignment marks can be remeasured to adjust the local tone reproduction curves to compensate for the streak defect when printing.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07758146",
	"publication_date": "2010-07-20",
	"application_number": "12023758",
	"application_date": "2008-01-31",
	"tags": null,
	"slug": "systems-and-methods-for-compensating-for-streaks-in-images",
	"match_type": "description"
},
{
	"name": "Systems and methods for generating document distribution confirmation sheets with multi-destination status and/or multi-service status information",
	"summary": "",
	"abstract": "Confirmation sheets would be more useful if they provided status information for each service, for each destination or recipient and/or images of each page of a multi-service and/or multi-destination job. A confirmation sheet provides the status of multi-destination and/or multi-service document distribution jobs. The services that can be included in a multi-service document distribution job include sending the documents as a facsimile, scanning the documents to a file or to a file repository, e-mailing the documents to an individual or other address, and/or printing the documents. Thumbnail images of one or more pages of the multi-destination and/or multi-service job can also be included on the confirmation sheet. In various exemplary embodiments, when elements of a multi-destination or multi-service job are not completed at the time the confirmation sheet is requested, the confirmation sheet can include various structures or information usable to obtain job status at a later time.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07852495",
	"publication_date": "2010-12-14",
	"application_number": "10248391",
	"application_date": "2003-01-15",
	"tags": null,
	"slug": "systems-and-methods-for-generating-document-distribution-confirmation-sheets-with-multidestination-status-andor-multiservice-status-information",
	"match_type": "description"
},
{
	"name": "Systems and methods for reducing process direction registration errors of a printhead using a linear array sensor",
	"summary": "",
	"abstract": "Systems and methods are provided for detecting process direction registration errors in a printer. The errors are detected by analyzing a metric of a dash minimum response obtained from a test pattern. The test pattern contains dashes. At least one dash is shifted in the process direction in relation to another dash.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07794042",
	"publication_date": "2010-09-14",
	"application_number": "12471924",
	"application_date": "2009-05-26",
	"tags": null,
	"slug": "systems-and-methods-for-reducing-process-direction-registration-errors-of-a-printhead-using-a-linear-array-sensor",
	"match_type": "description"
},
{
	"name": "Systems and methods for streamlined interactions with document services from mobile computing applications",
	"summary": "",
	"abstract": "A document-services dialog window, accessible from all applications of a mobile computing device (MID), interacts with other applications on the MID, and with remote document services on a document access server. The applications on the MID are linked to the document access server and to the document references stored in a document reference repository on the MID. The document references can be beamed to another MID. The document services interface is invoked to access a desired document reference and enables a user of a MID to execute actions on a selected document via the selected document reference.",
	"url": null,
	"owner": "Xerox Corporation",
	"publication_number": "07644353",
	"publication_date": "2010-01-05",
	"application_number": "10270618",
	"application_date": "2002-10-16",
	"tags": null,
	"slug": "systems-and-methods-for-streamlined-interactions-with-document-services-from-mobile-computing-applications",
	"match_type": "description"
},
{
	"name": "Compile-time dispatch of operations on type-safe heterogeneous containers",
	"summary": "",
	"abstract": "Implementing a type-safe heterogeneous containers in a memory arrangement of a computing system. In one embodiment, a main object of a class is specified in program source code. The class has a variant type, and the variant type provides at least two different data types, at least one of which is a linear array of objects of one of the data types. The class includes methods for putting and getting a variant object of the variant type in and from the main object. An application of a visitor method, which includes a respective operator for each of the different data types, is specified in the program source code for each method for getting a variant object from the main object. Compilation of the source code results in code that executes the one of the operators corresponding to the data type of a referenced variant object of the main object.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07669191",
	"publication_date": "2010-02-23",
	"application_number": "11152631",
	"application_date": "2005-06-14",
	"tags": null,
	"slug": "compiletime-dispatch-of-operations-on-typesafe-heterogeneous-containers",
	"match_type": "description"
},
{
	"name": "Direct memory access-based multi-processor array",
	"summary": "",
	"abstract": "A direct memory access (u201cDMAu201d)-based multi-processor array architecture that may be implemented in a single integrated circuit is described. The integrated circuit includes a plurality of processing units. A first processing unit and a second processing unit of the plurality of processing units are topologically coupled via a first DMA block. The first DMA block includes a first dual-ported random access memory and a first decoder. A multiple-processor array is provided by topologically coupling the first processing unit and the second processing unit via the first direct memory access block.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07831801",
	"publication_date": "2010-11-09",
	"application_number": "11513575",
	"application_date": "2006-08-30",
	"tags": null,
	"slug": "direct-memory-accessbased-multiprocessor-array",
	"match_type": "description"
},
{
	"name": "Memory arrangement for message processing by a plurality of threads",
	"summary": "",
	"abstract": "Various approaches for preparing a system for multi-thread processing of messages are disclosed. In one approach, respective portions of a message accessed by a plurality of threads are determined from a high-level language programming specification of the threads. A plurality of input elements are generated and respectively coupled to the plurality of threads. Each input element is configured to select from the message received by the input element the portion of the message accessed by the respective thread and provide each selected portion to the respective thread. A plurality of output elements are generated and configured with storage for data output by a respective thread. From a definition of an output message, a concentrator element is generated and is configured to read data from the output elements and assemble the data into an output message according to the definition of the output message.",
	"url": null,
	"owner": "XILINX, Inc.",
	"publication_number": "07653895",
	"publication_date": "2010-01-26",
	"application_number": "11336211",
	"application_date": "2006-01-20",
	"tags": null,
	"slug": "memory-arrangement-for-message-processing-by-a-plurality-of-threads",
	"match_type": "description"
},
{
	"name": "Method and apparatus for multithreading on a programmable logic device",
	"summary": "",
	"abstract": "Programmable architecture for implementing a message processing system using an integrated circuit is described. In an example, configurable logic of the integrated circuit is configured to have a plurality of thread circuits and an interconnection topology amongst the plurality of thread circuits. Messages are concurrently processed using the plurality of thread circuits. Operation of at least one thread circuit of the plurality of thread circuits is controlled in accordance with control data received via the interconnection topology from at least one other thread circuit of the plurality of thread circuits.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07770179",
	"publication_date": "2010-08-03",
	"application_number": "10769330",
	"application_date": "2004-01-30",
	"tags": null,
	"slug": "method-and-apparatus-for-multithreading-on-a-programmable-logic-device",
	"match_type": "description"
},
{
	"name": "Thread circuits and a broadcast channel in programmable logic",
	"summary": "",
	"abstract": "Embodiments of a message processing circuit are disclosed. In one embodiment, a high-level language is used to specify a broadcast channel and first and second thread circuits. The first thread circuit outputs messages to the broadcast channel, each message having units of data, and starts the second thread circuit, indicating position in a message at which the second thread circuit is to commence reading data. The broadcast channel receives messages from the first thread circuit and outputs data of each message along with a position code indicating position in the message of current output data. The second thread reads data from the broadcast channel at a specified position in a message. The high-level language specification is translated into a hardware description language (HDL) specification, and the HDL specification is used to generate configuration data for programmable logic. Programmable logic is configured to implement the thread circuits and broadcast channel.",
	"url": null,
	"owner": "Xilinx, Inc.",
	"publication_number": "07823162",
	"publication_date": "2010-10-26",
	"application_number": "11067431",
	"application_date": "2005-02-25",
	"tags": null,
	"slug": "thread-circuits-and-a-broadcast-channel-in-programmable-logic",
	"match_type": "description"
},
{
	"name": "Processing structured data",
	"summary": "",
	"abstract": "The present invention provides a fast and efficient way of processing structured data by utilizing an intermediate file to store the structural information. The structured data may be processed into a Binary mask Format (BMF) file which may serve as a starting point for post-processing. A tree structure built on top of the BMF file may be constructed very quickly, and also takes up less space than a DOM tree. Additionally, BMF records may reside entirely in the memory and contain structural information, allowing SAX-like sequential data access.",
	"url": null,
	"owner": "XimpleWare, Inc.",
	"publication_number": "07761459",
	"publication_date": "2010-07-20",
	"application_number": "11581211",
	"application_date": "2006-10-13",
	"tags": null,
	"slug": "processing-structured-data",
	"match_type": "description"
},
{
	"name": "Systems and methods for communicating documents via an autonomous multiple-function peripheral device",
	"summary": "",
	"abstract": "A multiple-function peripheral device includes a packet-switched network interface and an autonomous application programming interface. The application programming interface requests image information from a remote server via the packet-switched network interface in a first mode of operation. The application programming interface sends image information to a remote device via the packet-switched network interface in a second mode of operation.",
	"url": null,
	"owner": "Xpedite Systems, LLC",
	"publication_number": "07804823",
	"publication_date": "2010-09-28",
	"application_number": "12207310",
	"application_date": "2008-09-09",
	"tags": null,
	"slug": "systems-and-methods-for-communicating-documents-via-an-autonomous-multiplefunction-peripheral-device",
	"match_type": "abstract"
},
{
	"name": "System and method for flexible physical-logical mapping raid arrays",
	"summary": "",
	"abstract": "A system, method and computer program for allocating physical memory from a group of N memory devices to logical volumes. A group of N memory devices are partitioned into a plurality of bands, each of the group of N memory devices sharing a portion of each of the plurality of bands. A cluster map for each of the plurality of bands is generated. The cluster maps indicate the physical address for each of a plurality of clusters. Each of the plurality of clusters are distributed equally over two or more of the N memory devices to ensure a specified level of redundancy for each of the plurality of bands. Each of the N memory devices share an approximately equal number of clusters. Available bands are determined and are allocated to a logical volume.",
	"url": null,
	"owner": "Xyratex Technology Limited",
	"publication_number": "07694072",
	"publication_date": "2010-04-06",
	"application_number": "11662745",
	"application_date": "2005-09-22",
	"tags": null,
	"slug": "system-and-method-for-flexible-physicallogical-mapping-raid-arrays",
	"match_type": "description"
},
{
	"name": "Bandwidth and cost management for ad hoc networks",
	"summary": "",
	"abstract": "A system and method is described herein for managing bandwidth and cost in connection with a plurality of sensors in an ad hoc network. The system and method receives sensor data that is provided from a plurality of sensors and constructs an ad hoc network among the plurality of sensors based on the sensor data. The system and method also receives and analyzes bandwidth information from each sensor in a group of sensors in the ad hoc network. Based on the analysis, the system and method then modifies a manner in which at least one sensor in the group exchanges data, including sensor data and multimedia content.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07792040",
	"publication_date": "2010-09-07",
	"application_number": "12182878",
	"application_date": "2008-07-30",
	"tags": null,
	"slug": "bandwidth-and-cost-management-for-ad-hoc-networks",
	"match_type": "description"
},
{
	"name": "Bitmask access for managing blog content",
	"summary": "",
	"abstract": "Methods, devices, and systems are directed towards managing a database using moderator determined attributes, and a contributor employable bitmask. In one embodiment, the database is employable for use in managing a weblog (blog). The bitmask is configured to enable contributors of a content item to modify selected options of an attribute for the provided content item. In one embodiment the bitmask is stored in the database and is associated with the content item in the database. By enabling a contributor to directly control options associated with an attribute for the content item, changes to selected attributes of the database's content may be made with minimum interaction with a database administrator. For example, in one embodiment, the contributor may directly control anonymity associated with the provided content item, access to the provided content item, and how the provided content items is displayed.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07689575",
	"publication_date": "2010-03-30",
	"application_number": "11027208",
	"application_date": "2004-12-29",
	"tags": null,
	"slug": "bitmask-access-for-managing-blog-content",
	"match_type": "description"
},
{
	"name": "Clustered query support for a database query engine",
	"summary": "",
	"abstract": "A device, system, and method are directed towards combining a plurality of queries to a database into a combined execution plan. The plurality of queries is received. The queries may be Structured Query Language (SQL) statements. The database may be a relational database. The plurality of queries is transformed into a plurality of parse trees. A determination is made whether the plurality of queries operates on at least the same portion of the same table. If so, then the plurality of query trees is query-optimized. The plurality of query trees are combined into a master query tree based on similar nodes in the plurality of query trees. A split node in the master query tree represents non-similarities between the plurality of query trees. The master query tree is transformed into an execution plan. The execution plan is applied to a database to return at least one result.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07844608",
	"publication_date": "2010-11-30",
	"application_number": "11615899",
	"application_date": "2006-12-22",
	"tags": null,
	"slug": "clustered-query-support-for-a-database-query-engine",
	"match_type": "description"
},
{
	"name": "Creating and viewing private events in an events repository",
	"summary": "",
	"abstract": "Techniques for accessing an events information repository are provided. An events repository contains event records defining real world events. A programmatic interface is exposed to third-party applications for accessing the event records within the repository. Specifically, the programmatic interface provides a set of routines that perform operations on the repository. Using the programmatic interface, third-party applications may call the set of routines to cause operations to be executed on the repository. Further, techniques are provided for creating and viewing private events within an events repository and also for associating user-defined tags with events using the events repository.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07676449",
	"publication_date": "2010-03-09",
	"application_number": "11391933",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": "creating-and-viewing-private-events-in-an-events-repository",
	"match_type": "description"
},
{
	"name": "Job categorization system and method",
	"summary": "",
	"abstract": "A computer system and method for capture, managing and presenting data obtained from various often unrelated postings via the Internet for examination by a user. This system includes a scraping module having one or more scraping engines operable to scrape information data sets from listings on the corporate sites and web sites, direct feeds, and other sources, wherein the scraping module receives and stores the scraped listing information data sets in a database. The system also has a management platform coordinating all operation of and communication between the sources, system administrators and processing modules. The processing modules in the platform include scraping management module analyzing selected scraped data stored in the database, and a categorization module that examines and categorizes each data set stored in the database into one or more of a predetermined set of categories and returns categorized data sets to the database.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07702674",
	"publication_date": "2010-04-20",
	"application_number": "11173470",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "job-categorization-system-and-method",
	"match_type": "description"
},
{
	"name": "Job seeking system and method for managing job listings",
	"summary": "",
	"abstract": "A computer system and method for capture, managing and presenting data obtained from various often unrelated postings via the Internet for examination by a user. This system includes a scraping module having one or more scraping engines operable to scrape information data sets from listings on the corporate sites and web sites, direct feeds, and other sources, wherein the scraping module receives and stores the scraped listing information data sets in a database. The system also has a management platform coordinating all operation of and communication between the sources, system administrators and processing modules. The processing modules in the platform include scraping management module analyzing selected scraped data stored in the database, and a categorization module that examines and categorizes each data set stored in the database into one or more of a predetermined set of categories and returns categorized data sets to the database.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07707203",
	"publication_date": "2010-04-27",
	"application_number": "11173656",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "job-seeking-system-and-method-for-managing-job-listings",
	"match_type": "description"
},
{
	"name": "Learned upload time estimate module",
	"summary": "",
	"abstract": "A learned upload time estimate is derived from historical uploading information. This involves reviewing historical uploading information for previous uploads. To determine if there is a match or likeness between information of files presently selected for uploading and the historical uploading information for any of the previous uploads, the size of these files is combined to produce an upload size. The size and timestamp of the current upload is compared against the size and timestamp of each of the previous uploads. If a match with a previous upload is found its actual time is used as the learned estimate upload time. If a match or likeness is not found, an average transfer rate is computed from the historical uploading information for the previous uploads. From the average transfer rate and upload size a learned upload time estimate is derived and provided to a client for display to a user.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07840646",
	"publication_date": "2010-11-23",
	"application_number": "10682636",
	"application_date": "2003-10-08",
	"tags": null,
	"slug": "learned-upload-time-estimate-module",
	"match_type": "description"
},
{
	"name": "Method and a communication platform for packet communication between a service provider in a first network and a radio communication device in a second network",
	"summary": "",
	"abstract": "The present invention relates to a communication platform for packet communication between at least one service provider in a first network and a radio communication device in a second network, the second network comprises a first network node provided to, at least partly, handle communication between the radio communication device and a gateway located in the second network. The gateway is provided to handle communication between the second network and the communication platform, and the communication platform comprises an application programming interface provided to handle two-way communication between the service provider and the radio communication device.",
	"url": null,
	"owner": "YAHOO! Inc.",
	"publication_number": "07848233",
	"publication_date": "2010-12-07",
	"application_number": "11571391",
	"application_date": "2005-06-15",
	"tags": null,
	"slug": "method-and-a-communication-platform-for-packet-communication-between-a-service-provider-in-a-first-network-and-a-radio-communication-device-in-a-second-network",
	"match_type": "abstract"
},
{
	"name": "Method and system for enabling a script on a first computer to exchange data with a script on a second computer over a network",
	"summary": "",
	"abstract": "A method and system for enabling a script on a first computer to communicate and exchange data with a script on a second computer so as to provide access by the script to data typically inaccessible by a script. The method and system enable a first computer to control the Internet navigation of a second computer, and also enable instant messaging between a first computer and a member of a synchronization group. The computers may be connectable with each other over any type of network (e.g., LAN, WAN, intranet, Internet, cellular, etc.).",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07650378",
	"publication_date": "2010-01-19",
	"application_number": "11337128",
	"application_date": "2006-01-19",
	"tags": null,
	"slug": "method-and-system-for-enabling-a-script-on-a-first-computer-to-exchange-data-with-a-script-on-a-second-computer-over-a-network",
	"match_type": "description"
},
{
	"name": "Method and system of controlling a context menu",
	"summary": "",
	"abstract": "An embodiment of the invention, for controlling a context menu, used with a Web page, wherein the Web page is divided into regions, can comprise downloading additional menu items that are not part of the context menu prior to download, and monitoring for when a user calls for a context menu. Upon detecting a context menu call, it is determined what region was selected by the user, and at least one of the additional menu items is made available to the user as part of the context menu interface. At least one of the additional menu items is chosen based on the region selected by the user.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07721228",
	"publication_date": "2010-05-18",
	"application_number": "10805668",
	"application_date": "2004-03-18",
	"tags": null,
	"slug": "method-and-system-of-controlling-a-context-menu",
	"match_type": "description"
},
{
	"name": "Method and system of facilitating automatic login to a web site using an Internet browser",
	"summary": "",
	"abstract": "A method and system of adding functionality to an Internet browser interface. In one embodiment of the present invention, the added functionality may facilitate automatic login to a web site using an Internet browser. In another embodiment, the added functionality may enable the user to perform various tasks using the Internet browser such as, by way of non-limiting example, performing various tasks required to navigate one or more web pages, or to retrieve information desired by the user from one or more web pages or web sites.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07788603",
	"publication_date": "2010-08-31",
	"application_number": "11322469",
	"application_date": "2005-12-30",
	"tags": null,
	"slug": "method-and-system-of-facilitating-automatic-login-to-a-web-site-using-an-internet-browser",
	"match_type": "description"
},
{
	"name": "Method of controlling an Internet browser interface and a controllable browser interface",
	"summary": "",
	"abstract": "The present invention is directed to a method of dynamically controlling and displaying an Internet browser interface, and to a dynamically controllable Internet browser interface. In accordance with the present invention, a browser interface may be customized using a controlling software program that may be provided by an Internet content provider, an ISP, or that may reside on an Internet user's computer. The controlling software program enables the Internet user, the content provider, or the ISP to customize and control the information and/or functionality of a user's browser and browser interface.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07712033",
	"publication_date": "2010-05-04",
	"application_number": "11347149",
	"application_date": "2006-02-02",
	"tags": null,
	"slug": "method-of-controlling-an-internet-browser-interface-and-a-controllable-browser-interface",
	"match_type": "description"
},
{
	"name": "Method of controlling an Internet browser interface and a controllable browser interface",
	"summary": "",
	"abstract": "The present invention is directed to a method of dynamically controlling and displaying an Internet browser interface, and to a dynamically controllable Internet browser interface. In accordance with the present invention, a browser interface may be customized using a controlling software program that may be provided by an Internet content provider, an ISP, or that may reside on an Internet user's computer. The controlling software program enables the Internet user, the content provider, or the ISP to customize and control the information and/or functionality of a user's browser and browser interface.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07676762",
	"publication_date": "2010-03-09",
	"application_number": "11362237",
	"application_date": "2006-02-24",
	"tags": null,
	"slug": "method-of-controlling-an-internet-browser-interface-and-a-controllable-browser-interface",
	"match_type": "description"
},
{
	"name": "Power management for proximity-based ad hoc networks",
	"summary": "",
	"abstract": "A system and method is described herein for managing power consumption by a plurality of sensors in a proximity-based ad hoc network. The system and method receives sensor data that is provided from a plurality of sensors and constructs a proximity-based ad hoc network among the plurality of sensors based on the sensor data. The system and method also receives and analyzes power status information from each sensor in a group of spatially and temporally proximate sensors in the proximity-based ad hoc network. Based on the analysis, the system and method then modifies a manner in which at least one sensor in the group provides sensor data.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07822564",
	"publication_date": "2010-10-26",
	"application_number": "12028579",
	"application_date": "2008-02-08",
	"tags": null,
	"slug": "power-management-for-proximitybased-ad-hoc-networks",
	"match_type": "description"
},
{
	"name": "Providing event information to third party event applications",
	"summary": "",
	"abstract": "Techniques for accessing an events repository are provided. An event information repository contains event records defining real world events. A programmatic interface is exposed to third-party applications for accessing the event records within the repository. Specifically, the programmatic interface provides a set of routines that perform operations on the repository. Using the programmatic interface, third-party applications may call the set of routines to cause operations to be executed on the repository. Further, techniques are provided for controlling the display of private events within a first-party event application and also for associating user-defined tags with events using the events repository.",
	"url": null,
	"owner": "YAHOO! Inc.",
	"publication_number": "07668838",
	"publication_date": "2010-02-23",
	"application_number": "11392092",
	"application_date": "2006-03-28",
	"tags": null,
	"slug": "providing-event-information-to-third-party-event-applications",
	"match_type": "description"
},
{
	"name": "System and method for enhanced messaging including a displayable status indicator relating to another user and an associated playlist or webpage",
	"summary": "",
	"abstract": "A system and method for enhancing the experience of a user using a communication program over the Internet or other network. The system and method according to one embodiment utilizes a user's status indicator in a communication program to share content such as music or videos among users, and provides access to an electronic commerce application through which content may be obtained. One system and method according to the present invention allows a user to display an indicator and to set an actionable status message which indicates to other users the media content that the first user is experiencing. In another embodiment, a user is given the ability to access content that other users are listening to or viewing at that time. The system and method in an alternate embodiment broadcast metadata about the user's content to other users and the other users are able to utilize that metadata to receive and experience the same or similar content that the first user is experiencing. Access to an electronic commerce application through which content may be obtained is also facilitated.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07725533",
	"publication_date": "2010-05-25",
	"application_number": "11937324",
	"application_date": "2007-11-08",
	"tags": null,
	"slug": "system-and-method-for-enhanced-messaging-including-a-displayable-status-indicator-relating-to-another-user-and-an-associated-playlist-or-webpage",
	"match_type": "description"
},
{
	"name": "System and method for managing listings",
	"summary": "",
	"abstract": "A computer system and method for capture, managing and presenting data obtained from various often unrelated postings via the Internet for examination by a user. This system includes a scraping module having one or more scraping engines operable to scrape information data sets from listings on the corporate sites and web sites, direct feeds, and other sources, wherein the scraping module receives and stores the scraped listing information data sets in a database. The system also has a management platform coordinating all operation of and communication between the sources, system administrators and processing modules. The processing modules in the platform include scraping management module analyzing selected scraped data stored in the database, and a categorization module that examines and categorizes each data set stored in the database into one or more of a predetermined set of categories and returns categorized data sets to the database.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07680855",
	"publication_date": "2010-03-16",
	"application_number": "11174393",
	"application_date": "2005-06-30",
	"tags": null,
	"slug": "system-and-method-for-managing-listings",
	"match_type": "description"
},
{
	"name": "Systems and methods for indexing content for fast and scalable retrieval",
	"summary": "",
	"abstract": "Systems and methods for query processing and indexing of documents in connection with a content store in a computing system are provided. In various embodiments, an indexing model is provided that is optimized for fast, efficient and scalable retrieval of documents satisfying a query, including the mixed use of forward and inverted indexing representations, including algorithms for achieving a balance between the two representations. When processing queries, fast and efficient generation of reverse chronologically ordered posting lists is enabled for efficient execution of logical operators on query result sets. A term expand index is also provided wherein the overall terms included in the term expand index are decomposed into a plurality of lexicon files, which are combined when convenient for fast, scalable efficiency when performing queries of the content in the content store.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07849063",
	"publication_date": "2010-12-07",
	"application_number": "10966566",
	"application_date": "2004-10-15",
	"tags": null,
	"slug": "systems-and-methods-for-indexing-content-for-fast-and-scalable-retrieval",
	"match_type": "description"
},
{
	"name": "Systems and methods for updating query results based on query deltas",
	"summary": "",
	"abstract": "Systems and methods for automatically updating queries on a data store, such as a personal content database (PCDB), are provided. A query engine runs queries against two indexes: a first index that represents a previous state of documents and a second index that represents a current state of documents. The query is run twice and a delta analysis is performed, i.e., a determination is made as to which documents have changed in some respect from the previous state to the current state, and a view or a count associated with at least one query changes in accordance with the delta analysis. Transactions may be batched dynamically by a transaction manager until an optimal number of documents have changed or a certain amount of time has passed prior to re-running the query and performing the delta analysis.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07720845",
	"publication_date": "2010-05-18",
	"application_number": "10917742",
	"application_date": "2004-08-13",
	"tags": null,
	"slug": "systems-and-methods-for-updating-query-results-based-on-query-deltas",
	"match_type": "description"
},
{
	"name": "Tracking and blocking of spam directed to clipping services",
	"summary": "",
	"abstract": "A method and apparatus tracks and blocks content requested by a first remote device for forwarding over a network to a second remote device. For a given content item, one or more usage identities are tracked. Usage identities may include any combination of one or more of a source identity, a content identity, and/or a destination identity. One or more thresholds associated with the tracked usage identities are applied to determine whether a request to forward content should be blocked; a threshold is a limit on the number of times a content item having a particular usage identity may be forwarded within a time period. Misuse of content-forwarding messaging services by spammers and the like may thereby be discouraged. In one embodiment, the invention may be employed as part of a content clipping service for forwarding content to mobile devices by way of SMS or another mobile messaging technology.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07706263",
	"publication_date": "2010-04-27",
	"application_number": "11303318",
	"application_date": "2005-12-15",
	"tags": null,
	"slug": "tracking-and-blocking-of-spam-directed-to-clipping-services",
	"match_type": "description"
},
{
	"name": "Voice integrated VOIP system",
	"summary": "",
	"abstract": "An integrated VoIP unified message processing system includes a voice platform that processes data in native VoIP format. There is no use of hardware telephone interface cards (TICs) or software transcoding to transform data to PCM or other formats. Cost reductions are achieved by the elimination of expensive dedicated hardware and scalability is achieved by obviating the need for software transcoding.",
	"url": null,
	"owner": "Yahoo! Inc.",
	"publication_number": "07760705",
	"publication_date": "2010-07-20",
	"application_number": "10954982",
	"application_date": "2004-09-29",
	"tags": null,
	"slug": "voice-integrated-voip-system",
	"match_type": "description"
},
{
	"name": "Node repair in a mesh network",
	"summary": "",
	"abstract": "In embodiments of the present invention improved capabilities are described for sensing a change in a network topology using a discovery node in a mesh network; transmitting an explore frame, based at least in part on the sensed change, from the discovery node to a destination node using an intermediate node; receiving a response to the explore frame from the destination node; determining at least one functional network route from the discovery node to the destination node based at least in part on route information received in association with the response to the explore frame, wherein the route information includes a node path; and transmitting an instruction to the destination node from the discovery node based on a reverse node path.",
	"url": null,
	"owner": "Zensys A/S",
	"publication_number": "07680041",
	"publication_date": "2010-03-16",
	"application_number": "11684430",
	"application_date": "2007-03-09",
	"tags": null,
	"slug": "node-repair-in-a-mesh-network",
	"match_type": "description"
},
{
	"name": "Distributed database",
	"summary": "",
	"abstract": "A technique for storing a plurality of data records in a database. Client processes link to the database to access the data records of the database. Each client process has a specified scope. The scope defines to which of the data records within the database each of the client processes has access.",
	"url": null,
	"owner": "Zeugma Systems Inc.",
	"publication_number": "07761485",
	"publication_date": "2010-07-20",
	"application_number": "11586770",
	"application_date": "2006-10-25",
	"tags": null,
	"slug": "distributed-database",
	"match_type": "description"
},
{
	"name": "Method and system of promptly processing real-time media stream data packet",
	"summary": "",
	"abstract": "A method and system for fast transporting real-time media stream data package is based on the Real-time Transport Protocol/Real-time Transport Control Protocol of User Datagram Protocol for network nodes such as media gateway, Integrated Access Device (IAD) and multimedia terminal. The improvement of the system lies in the adding of an IP data package fast filter module, a UDP fast sending module and a policy ARP table process module based on local UDP port. The method involves: fast receiving the real-time media stream data package transmitted on the basis of RTP/RTCP protocol; fast sending the real-time media stream data package transmitted on the basis of RTP/RTCP protocol; and a policy ARP table based on UDP port and its refurbishing system.",
	"url": null,
	"owner": "ZTE Corporation",
	"publication_number": "07742429",
	"publication_date": "2010-06-22",
	"application_number": "10585698",
	"application_date": "2004-06-04",
	"tags": null,
	"slug": "method-and-system-of-promptly-processing-realtime-media-stream-data-packet",
	"match_type": "description"
}]